I want you to create 100 example prompt and reponses for finetunning a langauge model to generate stilts commands.

Return the results as a list of json of the following format:
[
    {
    "prompt": "prompt goes in here...",
    "response": "response goes here..."
    },
    ..
]

The command I want you to generate examples for is the cone command. The documentation of this is as follows:

B.4.1 Usage
The usage of cone is

   stilts <stilts-flags> cone serviceurl=<url-value> lon=<degrees>
                              lat=<degrees> radius=<degrees>
                              skysys=icrs|fk5|fk4|galactic|supergalactic|ecliptic
                              servicetype=cone|ssa|sia1|sia2|sia verb=1|2|3
                              compress=true|false dataformat=<value>
                              ocmd=<cmds>
                              omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui
                              out=<out-table> ofmt=<out-format>
If you don't have the stilts script installed, write "java -jar stilts.jar" instead of "stilts" - see Section 3. The available <stilts-flags> are listed in Section 2.1. For programmatic invocation, the Task class for this command is uk.ac.starlink.ttools.task.TableCone.
Parameter values are assigned on the command line as explained in Section 2.3. They are as follows:


compress = true|false       (Boolean)
If true, the service is requested to provide HTTP-level compression for the response stream (Accept-Encoding header is set to "gzip", see RFC 2616). This does not guarantee that compression will happen but if the service honours this request it may result in a smaller amount of network traffic at the expense of more processing on the server and client.
[Default: true]

dataformat = <value>       (String)
Indicates the format of data objects described in the returned table. The meaning of this is dependent on the value of the servicetype parameter:
servicetype=cone: not used
servicetype=ssa: gives the MIME type of spectra referenced in the output table, also special values "votable", "fits", "compliant", "graphic", "all", and others (value of the SSA FORMAT parameter).
servicetype=sia1: gives the MIME type required for images/resources referenced in the output table, corresponding to the SIA FORMAT parameter. The special values "GRAPHIC" (all graphics formats) and "ALL" (no restriction) as defined by SIAv1 are also permissible. For SIA version 1 only, this defaults to"image/fits".
servicetype=sia2: gives the MIME type required for images/resources referenced in the output table, corresponding to the SIA FORMAT parameter. The special values "GRAPHIC" (all graphics formats) and "ALL" (no restriction) as defined by SIAv1 are also permissible.
servicetype=sia: gives the MIME type required for images/resources referenced in the output table, corresponding to the SIA FORMAT parameter. The special values "GRAPHIC" (all graphics formats) and "ALL" (no restriction) as defined by SIAv1 are also permissible. For SIA version 1 only, this defaults to"image/fits".
lat = <degrees>       (Double)
Central latitude position for cone search. By default this is the Declination, but depending on the value of the skysys parameter it may be in a different sky system.
lon = <degrees>       (Double)
Central longitude position for cone search. By default this is the Right Ascension, but depending on the value of the skysys parameter it may be in a different sky system.
ocmd = <cmds>       (ProcessingStep[])
Specifies processing to be performed on the output table, after all other processing has taken place. The value of this parameter is one or more of the filter commands described in Section 6.1. If more than one is given, they must be separated by semicolon characters (";"). This parameter can be repeated multiple times on the same command line to build up a list of processing steps. The sequence of commands given in this way defines the processing pipeline which is performed on the table.
Commands may alternatively be supplied in an external file, by using the indirection character '@'. Thus a value of "@filename" causes the file filename to be read for a list of filter commands to execute. The commands in the file may be separated by newline characters and/or semicolons, and lines which are blank or which start with a '#' character are ignored. A backslash character '\' at the end of a line joins it with the following line.

ofmt = <out-format>       (String)
Specifies the format in which the output table will be written (one of the ones in Section 5.1.2 - matching is case-insensitive and you can use just the first few letters). If it has the special value "(auto)" (the default), then the output filename will be examined to try to guess what sort of file is required usually by looking at the extension. If it's not obvious from the filename what output format is intended, an error will result.
This parameter must only be given if omode has its default value of "out".

[Default: (auto)]

omode = out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui       (ProcessingMode)
The mode in which the result table will be output. The default mode is out, which means that the result will be written as a new table to disk or elsewhere, as determined by the out and ofmt parameters. However, there are other possibilities, which correspond to uses to which a table can be put other than outputting it, such as displaying metadata, calculating statistics, or populating a table in an SQL database. For some values of this parameter, additional parameters (<mode-args>) are required to determine the exact behaviour.
Possible values are

out
meta
stats
count
checksum
cgi
discard
topcat
samp
plastic
tosql
gui
Use the help=omode flag or see Section 6.4 for more information.
[Default: out]

out = <out-table>       (TableConsumer)
The location of the output table. This is usually a filename to write to. If it is equal to the special value "-" (the default) the output table will be written to standard output.
This parameter must only be given if omode has its default value of "out".

[Default: -]

radius = <degrees>       (Double)
Search radius in degrees.
servicetype = cone|ssa|sia1|sia2|sia       (ConeServiceType)
Selects the type of data access service to contact. Most commonly this will be the Cone Search service itself, but there are one or two other possibilities:
cone: Cone Search protocol - returns a table of objects found near each location. See Cone Search standard.
ssa: Simple Spectral Access protocol - returns a table of spectra near each location. See SSA standard.
sia1: Simple Image Access protocol version 1 - returns a table of images near each location. See SIA 1.0 standard.
sia2: Simple Image Access protocol version 2 - returns a table of images near each location. See SIA 2.0 standard.
sia: alias for sia
[Default: cone]

serviceurl = <url-value>       (URL)
The base part of a URL which defines the query to be made. Additional parameters will be appended to this using CGI syntax ("name=value", separated by '&' characters). If this value does not end in either a '?' or a '&', one will be added as appropriate.
skysys = icrs|fk5|fk4|galactic|supergalactic|ecliptic       (SkySystem)
Sky coordinate system used to interpret the lon and lat parameters. If the value is ICRS (the default) the provided values are assumed to be Right Ascension and Declination and are sent unchanged; for other values they will be converted from the named system into RA and Dec first.
[Default: icrs]

verb = 1|2|3       (String)
Verbosity level of the tables returned by the query service. A value of 1 indicates the bare minimum and 3 indicates all available information.

B.4.2 Examples
Here are some examples of cone:

stilts cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search
            lon=56.75 lat=24.12 radius=0.8
            out=pleiades.fits
Queries the ARI-Gaia cone search service for sources within 0.8 of the given sky position, and writes the result to a file.
stilts cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search
            lon=56.75 lat=24.12 radius=0.8
            verb=1
            ocmd='sorthead 10 phot_g_mean_mag'
            ocmd='keepcols "source_id ra dec phot_g_mean_mag"'
This does the same basic query as the previous example, but post-processes the result so that a limited amount of data (source identifier, position and magnitude) for only the ten brightest sources is written to the console. Since most of the columns are discarded, we specify verb=1 which indicates to the service that only a minimal column set is required in the query result.
stilts -verbose
       cone servicetype=ssa serviceurl='http://archive.eso.org/ssap'
            lon=0 lat=90 radius=1.0 skysys=galactic
            omode=count
Queries the ESO Simple Spectral Access service for spectra within one degree of the northern galactic pole. The omode=count parameter means that it just counts the rows and columns and prints the numbers to the console. The -verbose flag means that (amongst other things) the full URL that the command used to make the query will be logged to the console.

Ensure that a range of question prompt style and a range of parameters are asked.