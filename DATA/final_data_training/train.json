[
    {
        "prompt": "Convert a local FITS file to a VOTable format version 1.1.",
        "response": "stilts tcopy in=file_1.fits ofmt='votable(version=V11)' out=file_1_v11.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read an ECSV file and output it as a FITS file, explicitly requesting the **column-oriented FITS** convention.",
        "response": "stilts tcopy in=data.ecsv ifmt=ecsv ofmt=colfits-plus out=colfits_output.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Group match five catalogs (C1-C5). Output only the total count of matched groups found.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=4 values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA DEC' in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits in5=C5.fits omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T3 contains proper motion error (PM_ERR). Only include T3 rows where PM_ERR < 0.1 mas/yr.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='select \"PM_ERR < 0.1\"' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=low_pm_error_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PM_ERR < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate tables, and add a column that contains the full path/URL of the originating table, but ensures that input files are read lazily.",
        "response": "stilts tcat in='set*.fits' loccol=SourceUrl lazy=true out=lazy_tracked.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I need to get data from a TAP service and make sure the output table name is `MyQuery`.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM ivoa.obscore' ocmd='tablename MyQuery' maxrec=10",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Join two tables exactly on 'ID'. Output should include all rows from T1 (left outer join). Output statistics only.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID join=all1 omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge FITS files, and then apply a statistical filter to calculate the population standard deviation of 'VELOCITY' across the entire dataset.",
        "response": "stilts tcat in='v1.fits v2.fits' ocmd='keepcols VELOCITY' omode=stats ocmd='keepcols StDev_pop'",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot vectors representing proper motion (in mas/yr) using the 'medium_open_dart' shape.",
        "response": "stilts plot2sky in=pm_cat.fits layer=skyvector lon=RA lat=DEC dlon=PMRA dlat=PMDEC unit=mas arrow=medium_open_dart out=open_dart_pm.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Crossmatch three tables on 3D spatial separation (RA, DEC, DISTANCE_PC) within 1 Mpc.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky3d params=1 values1='RA DEC DISTANCE_PC' values2='RA DEC DISTANCE_PC' values3='RA DEC DISTANCE_PC' in1=d1.fits in2=d2.fits in3=d3.fits out=sky_3d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plotting KDE estimate with Epanechnikov kernel and area normalization.",
        "response": "stilts plot2plane in=dist.fits layer=kde x=DIST kernel=epanechnikov normalise=area out=kde_area_norm.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"DIST\"\n    (The name \"DIST\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'MAG_K' derived by converting flux in mJy from 'FLUX_MJY' to magnitudes, assuming Vega zeropoint 18.5.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol MAG_K \"18.5 - 2.5 * log10(FLUX_MJY)\"' out=mags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '2.5' '*' 'log10(FLUX_MJY)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_K 18.5 - 2.5 * log10(FLUX_MJY)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '2.5' '*' 'log10(FLUX_MJY)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine three tables. In T3.fits, calculate a new column 'COLOR' based on 'MAG_B - MAG_R' before merging.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='addcol COLOR MAG_B-MAG_R' out=color_calculated.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Group match three tables (D1, D2, D3) on 2D coordinates (X, Y). Apply geometric rotation (90 degrees clockwise) to D3's coordinates before matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=2d params=5 in1=D1.fits in2=D2.fits in3=D3.fits icmd3='replacecol X \"X*cosDeg(-90) - Y*sinDeg(-90)\"; replacecol Y \"X*sinDeg(-90) + Y*cosDeg(-90)\"' values1='X Y' values2='X Y' values3='X Y' out=rotated_2d_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'Y*sinDeg(-90)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol X X*cosDeg(-90) - Y*sinDeg(-90)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' 'Y*sinDeg(-90)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "From the simulated sky catalog `:skysim:1e6`, select all stars with gmag < 12 and count them.",
        "response": "stilts tpipe in=:skysim:1e6 cmd='select \"gmag < 12\"' omode=count",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select gmag < 12\n\nUsage: select <expr>\n    (Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a histogram and overlay a KDE estimate, both colored green.",
        "response": "stilts plot2plane in=data.fits layer_h=histogram x_h=VALUE color_h=green layer_k=kde x_k=VALUE color_k=green out=hist_kde_green.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve a list of unique data product types (e.g., 'spectrum', 'image') available in the HREDA archive ObsCore table.",
        "response": "stilts tapquery tapurl=https://hreda.esac.esa.int/hreda-sl-tap/tap adql='SELECT DISTINCT dataproduct_type FROM ivoa.ObsCore' out=hreda_types.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query SIMBAD TAP near RA 30, Dec 30, with a radius equivalent to 5 arcminutes, and count the resultant rows.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=30.0 lat=30.0 radius='5.0 / 60.0' omode=count",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Submit an asynchronous query to the PADC planetary server searching for Mars observations and display continuous status updates on the console.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT * FROM epn_core.epn_core WHERE target_name = ''Mars''' progress=true",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How to concatenate two tables and then add a column `InputTableID` with the input table sequence number and `InputFileName` with the input table file name?",
        "response": "stilts tcat in=first.fits in=second.fits seqcol=InputTableID loccol=InputFileName out=combined_with_provenance.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Find the maximum and minimum radial velocity (`HRV`) recorded in the RAVE DR4 catalogue (GAVO DC service).",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT HRV FROM rave.dr4' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "My radius is in arcminutes in the `RAD_MIN` column. How do I use that?",
        "response": "stilts pixfoot in=data.fits radius='RAD_MIN/60.0' out=arcmin_radius_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Add a boolean column 'IS_HIGH_SNR' which is true if SNR is greater than 10.0.",
        "response": "stilts tpipe in=data.fits cmd='addcol IS_HIGH_SNR \"SNR > 10.0\"' out=high_snr_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_HIGH_SNR SNR > 10.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert an ASCII catalogue where columns are separated by multiple spaces (default ASCII behavior) into a standard FITS table.",
        "response": "stilts tcopy in=raw_data.txt ifmt=ascii out=raw_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 using 2D coordinates (X, Y) where match tolerance is anisotropic (10 units X, 1 unit Y). T1 is reference.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=2d_anisotropic params='10 1' values1='X Y' values2='X Y' values3='X Y' in1=T1.fits in2=T2.fits in3=T3.fits out=aniso_2d_pair.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the XMM-Newton data and catalogues service for ObsCore entries, allowing a maximum execution duration of 30 minutes (1800 seconds).",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore' executionduration=1800 out=xmm_max_runtime.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'TIME_BESSELIAN_EPOCH' converting MJD to Besselian Epoch, explicitly setting its unit to 'yr'.",
        "response": "stilts tpipe in=time.fits cmd='addcol -units yr TIME_BESSELIAN_EPOCH mjdToBesselian(MJD_TIME)' out=besselian_epoch_unit.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to include only those where both magnitude 'MAG_A' and 'MAG_B' are non-null.",
        "response": "stilts tpipe in=phot.fits cmd='select \"!NULL_MAG_A && !NULL_MAG_B\"' out=phot_complete.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_MAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_MAG_A && !NULL_MAG_B\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_MAG_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw lines showing the 25th and 75th percentile range (quartiles) for data binned by X.",
        "response": "stilts plot2plane in=noisy_data.fits layer=quantile x=X y=Y quantiles='0.25,0.75' color=darkgreen transparency=0.4 out=quartile_band.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find all objects in targets.fits that are NOT matched in survey.fits, based on an exact match on string column 'SOURCE_NAME'.",
        "response": "stilts tmatch2 in1=targets.fits in2=survey.fits matcher=exact values1=SOURCE_NAME values2=SOURCE_NAME join=1not2 out=unmatched_by_name.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine three tables, one of which is at a URL.",
        "response": "stilts tcatn nin=3 in1=local1.fits in2=http://example.com/remote.fits in3=local2.fits out=combined_remote.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve metadata (column definitions) for the table structure provided by the MAST MissionMAST service for HST Science Data.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/missionmast/ adql='SELECT * FROM TAP_SCHEMA.columns WHERE table_name = ''hst.summary''' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 XMM XCATDB sources and output the result in LaTeX table format.",
        "response": "stilts tapquery tapurl=https://xcatdb.unistra.fr/xtapdb adql='SELECT TOP 10 * FROM dbo.xcat_source' ofmt=latex out=xcatdb_sample.tex",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need the MOC of a list of UNIQ values at order 10.",
        "response": "stilts mocshape in=uniqs.fits shape=uniq coords=UNIQ_COL order=10 out=uniq_moc_o10.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column 'MAG_I_AB' converting Johnson I magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_I_AB \"MAG_I + JOHNSON_AB_I\"' out=i_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_I'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_I_AB MAG_I + JOHNSON_AB_I\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_I'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find resources in the Euclid TAP service around RA 50, Dec 50, using 15 arcseconds, and output to a compressed FITS file.",
        "response": "stilts cone serviceurl=https://eas.esac.esa.int/tap-server/tap lon=50.0 lat=50.0 radius='15.0 / 3600.0' compress=true out=euclid_15as.fits.gz",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"15.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 83.1289 and latitude 88.0967. Please use a search radius of 1.0687 degrees. Save the results to a ascii file called query_results_95.ascii. After the query, please run this processing command: 'sorthead 20 MAG'. The coordinates are in the galactic system.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=83.1289 lat=88.0967 radius=1.0687 skysys=galactic omode=out ofmt=ascii out=query_results_95.ascii ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine three tables where the input format is FITS, outputting the rows that have a final magnitude (MAG) less than 15, and keeping only the first 50 rows of that selection.",
        "response": "stilts tcat in='f1.fits f2.fits f3.fits' ocmd='select \"MAG < 15\"; head \"50\"' out=bright_head50.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "How do I create a MOC from an ECSV file and output it in ASCII format?",
        "response": "stilts pixfoot in=my_cat.ecsv ifmt=ecsv mocfmt=ascii out=my_cat_coverage.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Extract the third table extension from a FITS file and save it as a VOTable.",
        "response": "stilts tcopy in=multi_extension.fits#3 out=ext3.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I need to perform a 3D match between `local_stars.fits` (columns `RA`, `DEC`, `DISTANCE_PC`) and `nearby_galaxies.vot` (columns `RA`, `DEC`, `DIST_MPC`). The maximum separation should be 0.5 Mpc.",
        "response": "stilts tmatch2 in1=local_stars.fits in2=nearby_galaxies.vot matcher=sky3d params=0.5 values1='RA DEC DISTANCE_PC/1e6' values2='RA DEC DIST_MPC' out=3d_spatial_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Copy a table and output the resulting human-readable text to standard error (using `stilts -stderr`).",
        "response": "stilts -stderr - tcopy in=input.fits ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Map a set of points into a MOC where the radius is calculated based on the square root of the 'AREA' column in square degrees divided by PI.",
        "response": "stilts mocshape in=areas.vot shape=circle coords='array(RA, DEC, sqrt(AREA/PI))' out=derived_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot error ellipses defined by X and Y errors and a correlation coefficient (CORR) column, using the crosshair_ellipse shape.",
        "response": "stilts plot2plane in=errors.fits layer=xycorr x=X y=Y xerr=X_ERR yerr=Y_ERR xycorr=CORR ellipse=crosshair_ellipse out=crosshair_xycorr.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I'm matching two very large tables on a multi-core machine. How do I tell stilts to use parallel processing?",
        "response": "stilts tmatch2 in1=massive_1.colfits in2=massive_2.colfits matcher=sky params=1 values1='RA DEC' values2='RA DEC' runner=parallel out=parallel_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine two ASCII tables, and then replace all null values in the final 'FLUX' column with a specific bad value, -99.0.",
        "response": "stilts tcat ifmt=ascii in='a1.txt a2.txt' ocmd='replaceval null -99.0 FLUX' out=nulls_to_badval.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate `a.csv`, `b.csv`, and `c.csv`. The output should be an HTML table written to `report.html`.",
        "response": "stilts tcat ifmt=csv in=\"a.csv b.csv c.csv\" ofmt=html out=report.html",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Calculate the checksum of the resulting table after querying ARI Gaia for the top 100 sources brighter than G=15.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 100 * FROM gaiadr3.gaia_source WHERE phot_g_mean_mag < 15' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find XMM-Newton XCATDB sources near the center of the Pleiades cluster (RA 56.7, Dec 24.1) within 0.5 degrees.",
        "response": "stilts tapquery tapurl=https://xcatdb.unistra.fr/xtapdb adql='SELECT * FROM dbo.xcat_source WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 56.7, 24.1, 0.5))' out=xcat_pleiades.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a list of all objects from `catalog1.fits`, `catalog2.fits`, and `catalog3.fits` that were part of any match group.",
        "response": "This requires multiple steps. First, run `tmatchn` to identify groups. Then, for each catalog, select rows whose IDs appear in the matched output, and finally use `tcat` to combine these lists.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot the X and Y columns, ensuring the plot has a 1:1 aspect ratio.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y aspect=1 out=isotropic_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a plot using the KDE layer with a fixed smoothing width of 0.1 units.",
        "response": "stilts plot2plane in=data.fits layer=kde x=VALUE smooth=0.1 out=kde_fixed_smooth.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot markers, constraining the aux color range using auxclip=0.5, 1.0 (only showing the upper half of the color map range).",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=aux aux=MAG auxclip=0.5,1.0 out=aux_upper_clip.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a plot and save it as an EPS file for a publication.",
        "response": "stilts plot2plane in=final_data.fits layer=mark x=X y=Y out=figure1.eps",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "My input has STC-S strings, but some are invalid. Will `mocshape` fail?",
        "response": "It will likely produce warnings for the invalid rows and skip them, but continue processing the valid ones. You should check the output on standard error for any messages.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 141.2839 and latitude 8.9701. Please use a search radius of 0.9248 degrees. Save the results to a fits file called query_results_191.fits. The coordinates are in the fk4 system. Don't use compression for the download.",
        "response": "stilts cone servicetype=sia2 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=141.2839 lat=8.9701 radius=0.9248 skysys=fk4 compress=false omode=out ofmt=fits out=query_results_191.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Run a synchronous query against the PADC Heliophysics server for records with start times after MJD 59000, and output the results in ECSV format.",
        "response": "stilts tapquery tapurl=http://voparis-tap-he.obspm.fr/tap adql='SELECT * FROM some_heliophysics_table WHERE t_start > 59000.0' sync=true ofmt=ecsv out=padc_recent_solar.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate two tables and replace the value -999 with null in the 'FLUX' column of the final table.",
        "response": "stilts tcatn nin=2 in1=d1.fits in2=d2.fits ocmd='badval -999 FLUX' out=cleaned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Calculate the difference between RA and DEC in degrees and assert that the difference is always less than 10 degrees.",
        "response": "stilts tpipe in=data.fits cmd='addcol DIFF \"abs(RA-DEC)\"' cmd='assert \"DIFF < 10.0\"' out=diff_checked.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert DIFF < 10.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need the MOC for sources within 0.0001 arcminutes.",
        "response": "stilts pixfoot in=ultrafine.fits ra=RA dec=DEC radius='0.0001 / 60.0' out=ultra_fine_am.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find the statistical distribution (min, max, mean) of R-band flux values for all non-null sources available in the 4XMM XMM-Newton Catalogue.",
        "response": "stilts tapquery tapurl=https://xcatdb.unistra.fr/xtapdb adql='SELECT RFLUX FROM dbo.xcat_source WHERE RFLUX IS NOT NULL' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 ULLYSES HLSP records, selecting only RA, DEC, and maximum wavelength, and output the result as a CSV file to standard output.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT TOP 10 ra, dec, em_max FROM ivoa.ObsCore' ofmt=csv out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T_MAIN against T2, T3. T2 has a string column 'DATE_STR' that needs converting to MJD (isoToMjd) for a simultaneous match on position and time (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='1 0.1' in1=T_MAIN.fits in2=T2.fits icmd2='addcol MJD isoToMjd(DATE_STR)' in3=T3.fits values1='RA DEC MJD' values2='RA DEC MJD' values3='RA DEC MJD' out=datetime_converted_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match four tables using Cartesian 2D error (2d_err). Scale parameter is 1.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=2d_err params=1 values1='X Y E' values2='X Y E' values3='X Y E' values4='X Y E' in1=d1.fits in2=d2.fits in3=d3.fits in4=d4.fits out=cartesian_2d_err.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve 50 TESS Input Catalog sources with complex proper motion constraints (PM_RA < -10 AND PM_DEC > 10).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 50 * FROM tic.v8 WHERE pmra < -10 AND pmdec > 10' out=tic_high_pm.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query ARI Gaia for 1000 sources and only output the row count of the resulting query.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT * FROM gaiadr3.gaia_source' maxrec=1000 omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the MOC for a $0.0000001$ radian radius (ultra-fine search).",
        "response": "stilts pixfoot in=ultra_rad.fits ra=RA dec=DEC radius='radiansToDegrees(1.0e-7)' out=ultra_rad_search.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a JSON MOC (order 18) for $0.5$ arcsecond radius circles, converted from Ecliptic Lon/Lat.",
        "response": "stilts pixfoot in=ecl_data5.fits icmd='addskycoords ecliptic icrs ELON ELAT RA DEC' ra=RA dec=DEC radius='0.5 / 3600.0' order=18 mocfmt=json out=ecl_0p5as_json.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "How do I use `tcatn` to create a table with a header from one file and data from another?",
        "response": "This is not what `tcatn` is for. You might be able to achieve this with system commands piped into `tpipe`, for instance: `cat header.txt data.txt | stilts tpipe in=- ifmt=ascii out=table.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find the coverage for objects within 10 arcseconds, converted from 10000 mas.",
        "response": "stilts pixfoot in=as_mas_conv.fits ra=RA dec=DEC radius='10000.0 / 3600000.0' out=as_mas_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find all Gaia DR3 sources within a 10x10 arcmin box around RA=120, Dec=30.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, ra, dec FROM gaiadr3.gaia_source WHERE 1=CONTAINS(POINT(\"ICRS\", ra, dec), BOX(\"ICRS\", 120, 30, 10.0/60.0, 10.0/60.0))'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate two tables. T2 uses an array column 'FLUX_MEASUREMENTS'; replace it with the maximum value found in the array.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='replacecol FLUX_MEASUREMENTS maximum(FLUX_MEASUREMENTS)' out=max_value_replaced.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate tables, filtering each input to only include sources where $\\text{G-R}$ color is positive.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='select \"G-R > 0\"' out=positive_color_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G-R > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "I need the MOC for sources with a magnitude of exactly 17.0.",
        "response": "stilts pixfoot in=catalog.fits icmd='select \"MAGNITUDE == 17.0\"' ra=RA dec=DEC out=mag17_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '17.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAGNITUDE == 17.0\n\nUsage: select <expr>\n    (Unused arguments: '==' '17.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine two tables, removing duplicate rows based only on the 'NAME' column.",
        "response": "stilts tcatn nin=2 in1=R1.fits in2=R2.fits ocmd='sort NAME' ocmd='uniq NAME' out=name_unique_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine a table containing positions (ra, dec) with a synthetic table that simply loops from 1 to 1000, adding the resulting loop index column.",
        "response": "stilts tcatn nin=2 in1=pos.fits in2=:loop:1,1001 out=pos_with_index.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (group mode). Filter the entire output to remove duplicate rows based on all column values.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=D1.fits in2=D2.fits in3=D3.fits ocmd='uniq' out=deduped_group_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot vectors showing proper motion (in mas/yr) using the 'large_open_dart' shape.",
        "response": "stilts plot2sky in=pm_cat.fits layer=skyvector lon=RA lat=DEC dlon=PMRA dlat=PMDEC unit=mas arrow=large_open_dart out=pm_large_open_dart.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find all table names in the DaCHS Server for LMD TAP service and output the result as an HTML table.",
        "response": "stilts tapquery tapurl=http://vo.lmd.jussieu.fr/tap adql='SELECT table_name FROM TAP_SCHEMA.tables' ofmt=html out=lmd_tables.html",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create an order 21 MOC for targets that are within 5 mas/yr in proper motion space (requires filtering prior to positional generation).",
        "response": "stilts mocshape in=pm.fits icmd='select \"hypot(PMRA, PMDEC) < 5.0\"' shape=point coords='array(RA, DEC)' order=21 out=pm_filtered_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '<' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) < 5.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '<' '5.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot the density of points using a transparent shading mode, where 20 points make the marker fully opaque.",
        "response": "stilts plot2plane in=crowded.fits layer=mark x=X y=Y shading=transparent opaque=20 out=transparent_o20.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I need the MOC for the coverage of 5 micro-arcsecond (\u00b5as) fixed radii.",
        "response": "stilts pixfoot in=ultrap.fits ra=RA dec=DEC radius='5.0 / (3600.0 * 1000000.0)' out=fixed_5uas.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "For every row, compute the luminosity distance (Mpc) for a given redshift (Z) using cosmological constants (H0=70, OmegaM=0.3, OmegaLambda=0.7).",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol L_DIST \"luminosityDistance(Z, 70.0, 0.3, 0.7)\"' out=galaxies_dist.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol L_DIST luminosityDistance(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find all J-PLUS DR3 sources with a `z_median` redshift between 0.1 and 0.5, and send the result directly to TOPCAT.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jplus-dr3 adql='SELECT * FROM jplus_dr3.master WHERE z_median BETWEEN 0.1 AND 0.5' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a KDE estimate using a Gaussian smoothing kernel, smoothed adaptively (KDE layer).",
        "response": "stilts plot2plane in=data.fits layer=kde x=VALUE kernel=gauss3 smooth='-50' out=gaussian_kde.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'MAG_U_AB' converting Johnson U magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB \"MAG_U + JOHNSON_AB_U\"' out=u_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a new table containing all unique rows based on the 'ID' column, preserving the order of appearance.",
        "response": "stilts tpipe in=list.fits cmd='sort ID' cmd='uniq ID' out=unique_entries.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine spectroscopic data sets (spec*.vot). After merging, rename the column 'FLUX_ENSITY' to 'F_LAMBDA'.",
        "response": "stilts tcat in='spec*.vot' ocmd='colmeta -name F_LAMBDA FLUX_DENSITY' out=renamed_flux.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Copy a Feather file, explicitly identifying the input format.",
        "response": "stilts tcopy in=results.feather ifmt=feather out=results.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate a MOC for sources within a fixed radius calculated as $30 / (3600 \times 10)$ degrees.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 30.0 / 36000.0)' out=tiny_fraction_arcsec.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Sort the entire table by 'TIME_MJD' and output the checksum of the sorted table.",
        "response": "stilts tpipe in=time_series.fits cmd='sort TIME_MJD' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Synchronously fetch data from the ArVO Byurakan TAP service and pipe the output directly to TOPCAT.",
        "response": "stilts tapquery tapurl=http://arvo-registry.sci.am/tap adql='SELECT TOP 10 * FROM TAP_SCHEMA.tables' sync=true omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve the distinct exposure times of the primary observations in the MAST Hubble Source Catalog (HSCv3), but only output the resulting column definitions.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT DISTINCT t_exptime FROM hsc_v3.point' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match A.fits and B.fits exactly on 'NAME'. After joining, drop the original 'NAME' columns from both tables, retaining only 'ID' columns and the match score.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=NAME values2=NAME fixcols=dups suffix1=_A suffix2=_B ocmd='delcols NAME_*' out=name_dropped_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a plot showing density using the KNN layer, symmetrical search, with 50 neighbors (knn=50).",
        "response": "stilts plot2plane in=data.fits layer=knn x=VALUE knn=50 symmetric=true out=knn_s50.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 50 bright sources (F606W magnitude < 20) from MAST HSCv3, selecting only the ID and magnitude columns.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 50 hst_id, f606w_mag FROM hsc_v3.point WHERE f606w_mag < 20' out=hsc_f606w.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create an order 18 MOC for all unique celestial identifiers (ID) in the input table.",
        "response": "stilts mocshape in=id_list.fits icmd='uniq ID' shape=point coords='array(RA, DEC)' order=18 out=unique_ids_o18.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Crossmatch T1 and T2 using position. Output result in IPAC format.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' ofmt=ipac out=ipac_match.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Copy a VOTable to a CSV file, setting the output cell width limit to 100 characters.",
        "response": "stilts tcopy in=input.vot ofmt='csv(maxCell=100)' out=width_limited.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Draw a plot where markers are shaded using the 'translucent' mode with a low opacity level (translevel=0.8).",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=translucent translevel=0.8 out=high_trans_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 10 table names from the ESO Catalogue TAP service and output them in simple ASCII text format.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT TOP 10 table_name FROM TAP_SCHEMA.tables' ofmt=ascii out=eso_cat_list.txt",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need a very coarse MOC (order 2) of my all-sky survey.",
        "response": "stilts pixfoot in=all_sky_survey.fits order=2 out=coarse_allsky.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create an order 7 MOC, converting the input coordinates from Galactic (GLON, GLAT) to ICRS in an initial filter step.",
        "response": "stilts pixfoot in=gal_cat.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC order=7 out=converted_gal_o7.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query MAST TESS Input Catalog (TIC) for 10 rows and locally calculate the log10 of the TESS magnitude (TMAG).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 10 tid, tmag FROM tic.v8' ocmd='addcol LOG_TMAG log10(tmag)' out=tic_logmag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T1 contains magnitude in Janskys; convert to AB magnitude before using it in a combined match (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='2 0.5' in1=T1.fits icmd1='addcol MAG_AB janskyToAb(FLUX_JY)' in2=T2.fits in3=T3.fits values1='RA DEC MAG_AB' values2='RA DEC MAG_AB' values3='RA DEC MAG_AB' out=flux_preconverted_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 347.3629 and latitude -73.0561. Please use a search radius of 0.9812 degrees. Save the results to a votable file called query_results_108.votable. Don't use compression for the download.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=347.3629 lat=-73.0561 radius=0.9812 compress=false omode=out ofmt=votable out=query_results_108.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match sloan.dat (ASCII) and panstarrs.vot. Sloan coordinates are in radians (ra_rad, dec_rad). Convert them to degrees for a 5 arcsec sky match.",
        "response": "stilts tmatch2 ifmt1=ascii in1=sloan.dat in2=panstarrs.vot matcher=sky params=5 values1='radiansToDegrees(ra_rad) radiansToDegrees(dec_rad)' values2='RA DEC' out=sloan_ps_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine two tables, T_POS and T_FLUX. T_FLUX rows should only be included if 'FLAG_MEASURE' equals 1.",
        "response": "stilts tcatn nin=2 in1=T_POS.fits in2=T_FLUX.fits icmd2='select \"FLAG_MEASURE == 1\"' out=flagged_flux_combined.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG_MEASURE == 1\n\nUsage: select <expr>\n    (Unused arguments: '==' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 343.8396 and latitude -12.4611. Please use a search radius of 1.493 degrees. Save the results to a votable file called query_results_123.votable.",
        "response": "stilts cone servicetype=sia2 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=343.8396 lat=-12.4611 radius=1.493 compress=true omode=out ofmt=votable out=query_results_123.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot the analytic function $y = \\exp(x)$ from $x=0$ to $x=5$, saving the output as PDF.",
        "response": "stilts plot2plane layer=function fexpr='exp(x)' xmin=0 xmax=5 out=exp_curve.pdf",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Filter rows to keep those where the proper motion error (PM_ERR) is zero, asserting the condition is met.",
        "response": "stilts tpipe in=data.fits cmd='assert \"PM_ERR == 0.0\"' out=zero_error_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert PM_ERR == 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot X vs Y, applying the asinh scaling option to the Y axis with the default linear width.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y yscale=asinh out=asinh_y.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "What does a MOC look like in ASCII format?",
        "response": "An ASCII MOC is a space-separated list of HEALPix orders and pixel indices, like '4/1 2 3 5/10-15 ...'. You can generate one with `mocfmt=ascii`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Crossmatch T1 and T2 using 3D Cartesian coordinates (X, Y, Z). The match radius is the sum of the distance errors (E_D) of both objects (3d_err).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=3d_err params=1 values1='X Y Z E_D' values2='X Y Z E_D' out=cartesian_3d_err_sum.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query ESO TAP_OBS for DIT and NDIT parameters where DIT is calculated and save as a FITS file.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT DISTINCT ndit, dit, ndit * dit AS total_exposure FROM raw.vircam WHERE ndit > 1' out=vircam_exp.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 ObsCore entries from MAST CAOM, explicitly filtering for observations made by the 'Chandra' facility.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT TOP 10 * FROM ivoa.ObsCore WHERE facility_name = ''Chandra''' out=caom_chandra.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate two tables and write the entire table contents to standard output in simple text format, including metadata.",
        "response": "stilts tcat in='s1.fits s2.fits' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Crossmatch Survey X and Y using position, PMRA, and PMDEC (sky+2d). Tolerances 3 arcsec, 8 mas/yr (anisotropic).",
        "response": "stilts tmatch2 in1=Survey_X.fits in2=Survey_Y.fits matcher=sky+2d_anisotropic params='3 8 8' values1='RA DEC PMRA PMDEC' values2='RA DEC PMRA PMDEC' out=sky_pm_aniso_match_3.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits. A contains magnitude 99.0 for nulls. Replace 99.0 with NULL in A before matching on a 1D magnitude (0.1 tolerance).",
        "response": "stilts tmatch2 in1=A.fits icmd1='badval 99.0 MAG' in2=B.fits matcher=1d params=0.1 values1=MAG values2=MAG out=mag_badval_clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Read data from CDF format and convert it to Parquet.",
        "response": "stilts tcopy in=cdf_input.cdf ifmt=cdf out=cdf_to_parquet.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Concatenate two tables, applying the 'fixcolnames' filter to both inputs to standardize names before joining.",
        "response": "stilts tcatn nin=2 in1=messy_a.fits icmd1='fixcolnames' in2=messy_b.fits icmd2='fixcolnames' out=fixed_names_concat.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "How to query for sources from Gaia DR3 that are flagged as duplicates?",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id FROM gaiadr3.gaia_source WHERE duplicated_source = ''true''' out=duplicate_sources.txt",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC at a very coarse level (order 1) from circle regions with a fixed 10 degree radius.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 10.0)' order=1 out=coarse_10deg_o1.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a histogram with filled red bars that are 50% transparent.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE color=red barform=filled transparency=0.5",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge two Parquet files, filtering them first to keep only columns named 'ID' and 'Z'.",
        "response": "stilts tcat ifmt=parquet in='p1.parquet p2.parquet' icmd='keepcols \"ID Z\"' out=id_z_parquet.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Z'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID Z\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Z'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine files A and B. In B, rename all columns named 'FLUX*' with the prefix 'F_'.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits icmd2='colmeta -name F_* FLUX*' out=flux_prefixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match T_A and T_B. T_A has coordinates in FK4 B1950. Convert T_A coordinates to ICRS J2000 before matching T_B (2 arcsec tolerance).",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='addskycoords fk4 icrs RA_B1950 DEC_B1950 RA DEC' in2=T_B.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' out=fk4_preprocessed_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find objects around RA 20, Dec 20, with a radius of 1 arcminute, ensuring the output is a single table VOTable (VOTable 1.3 preferred).",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=20.0 lat=20.0 radius='1.0 / 60.0' ofmt='votable(version=V13)' out=gaia_v13.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read a table and check that the row index ($0) is always less than the total number of rows ($nrow).",
        "response": "stilts tpipe in=data.fits cmd='assert \"$0 <= $nrow\"' omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '$nrow'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $0 <= $nrow\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '$nrow'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Run a standard cone search query against the Gaia TAP server for sources within 0.01 degrees of RA 150.0, Dec 10.0, saving the output as a FITS file.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=150.0 lat=10.0 radius=0.01 servicetype=cone out=gaia_cone_results.fits ofmt=fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Run a synchronous query against the CSIRO ASKAP service to count the number of ObsCore entries.",
        "response": "stilts tapquery tapurl=https://casda.csiro.au/casda_vo_tools/tap adql='SELECT COUNT(*) FROM obs_core' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find all rows in catA.fits that have NO match in catB.fits, based on an exact match on string column 'NAME'.",
        "response": "stilts tmatch2 in1=catA.fits in2=catB.fits matcher=exact values1=NAME values2=NAME join=1not2 out=unmatched_names.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a MOC (order 15) for sources with 10 arcsecond radius. Input coordinates are in radians and must be converted.",
        "response": "stilts pixfoot in=rad_input.fits ra='radiansToDegrees(RA_R)' dec='radiansToDegrees(DEC_R)' radius='10.0 / 3600.0' order=15 mocfmt=json out=rad_10as.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "After combining tables, I want to see the result as a LaTeX table.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ofmt=latex out=table.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve 10 stellar abundance records from the Subaru SAGA database and locally convert the proper motion in RA (pmra) from mas/yr to degrees/yr.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 10 pmra FROM saga.stellar_abundances' ocmd='replacecol PMRA \"pmra / 3600000.0\"' out=saga_pm_deg.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PMRA pmra / 3600000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Extract the proper motion vector (PMRA, PMDEC) and convert it to the Galactic coordinate system.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_ICRS \"astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\"' cmd='addcol PM_GAL \"icrsToGal(PM_ICRS)\"' out=pm_galactic.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_ICRS astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the Infra ISO TAP service for ObsCore entries and set the polling delay to 30 seconds (30000ms) for status checks.",
        "response": "stilts tapquery tapurl=http://nida.esac.esa.int/nida-sl-tap/tap adql='SELECT obs_id, t_min FROM ivoa.ObsCore' poll=30000 out=iso_slow_poll_job.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Perform a query for all Gaia sources in a polygon region on the sky.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, ra, dec FROM gaiadr3.gaia_source WHERE 1=CONTAINS(POINT(\"ICRS\",ra,dec), POLYGON(\"ICRS\", 10,10, 10,20, 20,20, 20,10))' out=polygon_search.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query Gaia, add a magnitude column using a post-processing command, and rename the source ID column locally.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 10 source_id, ra, dec, parallax FROM gaiadr3.gaia_source' ocmd='addcol R_MAG phot_rp_mean_mag; colmeta -name GAIA_ID source_id' out=gaia_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot the maximum and minimum values of an array column FLUX_A vs WAVELENGTH using the statline layer.",
        "response": "stilts plot2plane in=spectra.fits layer_max=statline xs=WAVELENGTH ys=FLUX_A ycombine_max=max color_max=red layer_min=statline xs_min=WAVELENGTH ys_min=FLUX_A ycombine_min=min color_min=blue out=max_min_statline.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVELENGTH\"\n    (The name \"WAVELENGTH\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Search MAST HSCv3 near RA 300, Dec 30, with a radius of $1.5 \times 30$ arcseconds.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=300.0 lat=30.0 radius='(1.5 * 30.0) / 3600.0' out=hsc_45as.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"(1.5 * 30.0) / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge tables, and then explode a pre-existing 3-element array column ('VEC_3D') into three scalar columns ('VX', 'VY', 'VZ').",
        "response": "stilts tcat in='vector1.fits vector2.fits' ocmd='explodecols VEC_3D; colmeta -name VX VEC_3D_1; colmeta -name VY VEC_3D_2; colmeta -name VZ VEC_3D_3' out=vector_exploded.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Search MAST CAOM (SIAv2) near RA 130, Dec 10, using 60 arcseconds, explicitly requesting JPEG images.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=130.0 lat=10.0 radius='60.0 / 3600.0' servicetype=sia2 dataformat=image/jpeg out=sia2_jpeg.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"60.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a column 'KCORR_J' using the KCF_J filter at Z=0.08, leveraging the J-H color (KCC_JH).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_J \"kCorr(KCF_J, 0.08, KCC_JH, MAG_J-MAG_H)\"' out=kcorr_j.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.08,' 'KCC_JH,' 'MAG_J-MAG_H)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_J kCorr(KCF_J, 0.08, KCC_JH, MAG_J-MAG_H)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.08,' 'KCC_JH,' 'MAG_J-MAG_H)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a MOC from an ASCII file containing coordinate pairs, where RA and DEC columns are unnamed (use column indices $1, $2).",
        "response": "stilts mocshape in=raw_coords.txt ifmt=ascii shape=point coords='array($1, $2)' out=raw_coord_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "How do I take two tables, match them, and output the result to standard output as a text file?",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine tables, and then enforce that the resulting table is sorted by 'TIME' in descending order.",
        "response": "stilts tcat in='t1.fits t2.fits' ocmd='sort -down TIME' out=time_sorted_down.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot markers at the center of polygon regions (central layer), using a size proportional to AREA.",
        "response": "stilts plot2sky in=regions.fits layer=central area=VERTICES areatype=POLYGON size=AREA autoscale=true out=area_sized_centers.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VERTICES\"\n    (The name \"VERTICES\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find targets in the MAST TESS Input Catalog (TIC) around RA 340, Dec -80, using a radius of 0.05 degrees, and eliminate duplicate rows based on their primary ID.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic lon=340.0 lat=-80.0 radius=0.05 ocmd='sort TIC_ID' ocmd='uniq TIC_ID' out=tic_unique.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the AIP DaCHS service requesting the use of the proprietary PQL (PostgreSQL Query Language) for a small table search.",
        "response": "stilts tapquery tapurl=http://gavo.aip.de/tap adql='SELECT TOP 10 * FROM some_custom_table' language=PQL out=aip_pql_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find targets around RA 90, Dec 0, within 0.00001 degrees, ensuring verbose logging (level 3).",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=90.0 lat=0.0 radius=0.00001 verb=3 out=verbose_test.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate a summary report for a dense catalog, calculating the MOC coverage at order 17.",
        "response": "stilts mocshape in=dense_cat.fits shape=point coords='array(RA, DEC)' order=17 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine two ECSV files, `edr3_zone1.ecsv` and `edr3_zone2.ecsv`, into a single FITS file.",
        "response": "stilts tcat ifmt=ecsv in=edr3_zone1.ecsv in=edr3_zone2.ecsv ofmt=fits out=edr3_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a MOC (order 12) for points where the error in RA (RA_ERR) is positive, using RA_ERR as the radius.",
        "response": "stilts pixfoot in=err_cat.fits icmd='select \"RA_ERR > 0\"' ra=RA dec=DEC radius=RA_ERR out=ra_err_radius.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA_ERR > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the Subaru MOIRCS data service and stream the results of the query directly to TOPCAT.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/moircs adql='SELECT TOP 50 * FROM moircs.summary' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC where the radius is fixed at 1 degree divided by 3.",
        "response": "stilts pixfoot in=wide_cat.fits ra=RA dec=DEC radius='1.0 / 3.0' out=third_degree.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need a MOC for sources where the error radius is fixed at 20 mas, outputting the CDS FITS format.",
        "response": "stilts mocshape in=high_err.fits shape=circle coords='array(RA, DEC, 20.0 / 3600000.0)' mocfmt=cds_fits out=mas_cds_fits.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "What does `ofmt=(auto)` mean?",
        "response": "It means STILTS will try to guess the desired output format from the filename extension of the `out` file, for example, `.fits` for FITS or `.csv` for CSV. This is the default behavior [12, 13].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert a table from FITS to the obsolete **Mirage format**.",
        "response": "stilts tcopy in=table.fits ofmt=mirage out=output.mirage",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'VEL_GAL_Y' containing the Y component of the Galactic velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_Y \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_y_vel.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_Y icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a CSV file into a LaTeX tabular environment for use in a document.",
        "response": "stilts tcopy in=report.csv ifmt=csv ofmt=latex out=report_table.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 306.7329 and latitude -31.2138. Please use a search radius of 1.7943 degrees. Save the results to a votable file called query_results_160.votable.",
        "response": "stilts cone servicetype=sia2 serviceurl=http://irsa.ipac.caltech.edu/sia lon=306.7329 lat=-31.2138 radius=1.7943 omode=out ofmt=votable out=query_results_160.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "My file `coords_sex.txt` has RA and Dec in sexagesimal format. How do I convert them to decimal degrees in new columns?",
        "response": "stilts tpipe ifmt=ascii in=coords_sex.txt cmd='addcol RA_DEG hmsToDegrees(RA_SEX)' cmd='addcol DEC_DEG dmsToDegrees(DEC_SEX)' out=coords_deg.txt",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Set the table parameter 'VERSION' to the integer value 3.",
        "response": "stilts tpipe in=meta.fits cmd='setparam -type int VERSION 3' out=meta_v3.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Join T_A and T_B. T_A is a simulated Henon attractor table (:attractor:10000,henon). Match on X, Y coordinates (2D, 1 unit tolerance).",
        "response": "stilts tmatch2 in1=:attractor:10000,henon in2=T_B.fits matcher=2d params=1 values1='x y' values2='X Y' out=henon_attractor_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge tables, converting the output to the TST (Tab-Separated Table) format.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=tst out=tst_output.tst",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the MAST CAOM service for all ObsCore records related to the facility 'Chandra' and output the checksum of the resulting table.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT * FROM ivoa.ObsCore WHERE facility_name = ''Chandra''' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need the MOC for a fixed radius of 1 degree divided by 50.",
        "response": "stilts pixfoot in=div_50.fits ra=RA dec=DEC radius='1.0 / 50.0' out=div_50_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the MAST CAOM service for observations near RA 250.0, Dec -10.0, restricted to a 45 arcsecond cone.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=250.0 lat=-10.0 radius='45.0 / 3600.0' out=mast_45arcsec.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"45.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Retrieve 100 sources from ARI Gaia and locally filter the resulting table to keep only those with proper motion in RA greater than 5 mas/yr.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 100 * FROM gaiadr3.gaia_source' ocmd='select pmra>5' out=ari_pmra_gt5.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve ObsCore data from Chandra CXC and filter the output locally to keep only the sources identified as matched (m_match_flag = 1).",
        "response": "stilts tapquery tapurl=https://cda.cfa.harvard.edu/csctap adql='SELECT TOP 100 * FROM csc.master_source' ocmd='select \"m_match_flag == 1\"' out=csc_matched.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select m_match_flag == 1\n\nUsage: select <expr>\n    (Unused arguments: '==' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve metadata columns about Right Ascension and Declination columns from the ARI Gaia TAP service.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT column_name, ucd, unit FROM TAP_SCHEMA.columns WHERE column_name IN (''ra'', ''dec'')' out=ari_radec_meta.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 95.0339 and latitude 4.7362. Please use a search radius of 1.7382 degrees. Instead of a file, just give me the stats. The coordinates are in the supergalactic system. Use verbosity level 2. Don't use compression for the download.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=95.0339 lat=4.7362 radius=1.7382 skysys=supergalactic verb=2 compress=false omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match five tables using 1D matching on 'MJD' with 0.1 day tolerance.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=1d params=0.1 values1=MJD values2=MJD values3=MJD values4=MJD values5=MJD in1=t1.fits in2=t2.fits in3=t3.fits in4=t4.fits in5=t5.fits out=time_1d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot error ellipses using columns for major axis, minor axis, and position angle.",
        "response": "stilts plot2plane in=galaxy_shapes.fits layer=xyellipse x=X_CEN y=Y_CEN ra=MAJOR_AXIS rb=MINOR_AXIS posang=POS_ANGLE",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_CEN\"\n    (The name \"X_CEN\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find all matches (find=all) between A.fits and B.fits (exact ID match). Output to an HTML table.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID find=all ofmt=html out=all_exact_html.html",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot points in Galactic coordinates, filtering to include only those outside the Galactic plane (abs(B) > 10).",
        "response": "stilts plot2sky in=gal_cat.fits viewsys=galactic icmd='select \"abs(B) > 10.0\"' layer=mark lon=L lat=B out=off_plane_gal.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"abs(B) > 10.0\" (The name \"B\" is unknown.)\n        (The name \"B\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "In the table `stellar_data.vot`, rename the column `Vmag` to `V_MAG` and set its units to 'mag'.",
        "response": "stilts tpipe in=stellar_data.vot cmd='colmeta -name V_MAG -units mag Vmag' out=stellar_data_renamed.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Count the total number of Chandra ObsCore entries that specifically used the ACIS-I detector, running the query synchronously.",
        "response": "stilts tapquery tapurl=https://cda.harvard.edu/cxctap adql='SELECT COUNT(*) FROM ivoa.ObsCore WHERE instrument_name = ''ACIS-I''' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate data in files D1 and D2. D2 uses Galactic coordinates (GLON, GLAT); rename these to 'RA' and 'DEC' for consistent output.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits icmd2='colmeta -name RA GLON; colmeta -name DEC GLAT' out=gal_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot polygons defined by coordinate arrays, using the 'border' drawing mode (thick border, thick=3).",
        "response": "stilts plot2sky in=regions.fits layer=polygon coords=VERTICES polymode=border thick=3 out=thick_border_poly.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 198.1602 and latitude 65.9808. Please use a search radius of 0.0917 degrees. Save the results to a fits file called query_results_24.fits.",
        "response": "stilts cone servicetype=sia2 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=198.1602 lat=65.9808 radius=0.0917 omode=out ofmt=fits out=query_results_24.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Retrieve 10 records from the Subaru MOIRCS data service and locally add a constant column named 'new_col' with value 1.0.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/moircs adql='SELECT TOP 10 * FROM moircs.summary' ocmd='addcol new_col 1.0' out=moircs_add_col.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate three tables and write the final result to a compressed VOTable using BINARY serialization.",
        "response": "stilts tcatn nin=3 in1=A.fits in2=B.fits in3=C.fits ofmt='votable(format=BINARY)' out=compressed_binary.vot.gz",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "What's the command to combine three tables (`t1.fits`, `t2.fits`, `t3.fits`) and then display the metadata of the final table?",
        "response": "stilts tcat in=t1.fits in=t2.fits in=t3.fits omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I'm matching two photometric catalogs. I want to find pairs within 1 arcsec that also have a G-band magnitude difference of less than 0.1, AND an R-band magnitude difference of less than 0.1.",
        "response": "stilts tmatch2 in1=phot_a.fits in2=phot_b.fits matcher=sky+2d_anisotropic params='1 0.1 0.1' values1='RA DEC MAG_G MAG_R' values2='RA DEC MAG_G MAG_R' out=photometric_pairs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate tables, converting the output format to VOTable BINARY serialization.",
        "response": "stilts tcat in='t1.fits t2.fits' ofmt='votable(format=BINARY)' out=binary_output.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Replace all numerical values 99.0 with null in the entire table, and then output only the metadata.",
        "response": "stilts tpipe in=full_table.fits cmd='replaceval 99.0 NULL *' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Search MAST CAOM near Ecliptic Lon 15, Lat 15, with a radius of $0.005$ degrees, specifically requiring FITS images in the output table.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=15.0 lat=15.0 radius=0.005 servicetype=sia dataformat=image/fits out=sia_ecliptic_fits_0p005.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate two tables and just show the first 10 rows of the result on the terminal.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='head 10' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find all rows where the total flux (F_G + F_R + F_I) is greater than 1.0, and calculate the checksum of the resulting table.",
        "response": "stilts tpipe in=phot.fits cmd='select \"F_G + F_R + F_I > 1.0\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'F_R' '+' 'F_I' '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select F_G + F_R + F_I > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '+' 'F_R' '+' 'F_I' '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Extract the third extension (#3) from a multi-extension FITS file 'archive.fits' and save it as an IPAC table.",
        "response": "stilts tcopy in=archive.fits#3 out=ext3.tbl ifmt=ipac",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine a local CSV file with a CSV file from a URL.",
        "response": "stilts tcatn nin=2 ifmt1=csv in1=local.csv ifmt2=csv in2=http://example.com/remote.csv out=combined_csv.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Run a cone search against Gaia TAP near RA 10, Dec 5, with radius defined by 10/3600 degrees, and add a column that converts 'FLUX_G' to logarithmic flux.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=10.0 lat=5.0 radius='10.0 / 3600.0' ocmd='addcol LOG_FLUX log10(FLUX_G)' out=gaia_logflux.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Draw a plot where markers are sized by the column 'ERROR' and colored by the column 'TYPE', using paux shading (private aux map).",
        "response": "stilts plot2plane in=data.fits layer=size x=X y=Y size=ERROR shading=paux aux=TYPE pmap=set1 out=paux_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T_A and T_B on a 1D color index (C_IDX) with tolerance 0.1. T_A only includes rows where C_IDX > 0.3.",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='select \"C_IDX > 0.3\"' in2=T_B.fits matcher=1d params=0.1 values1=C_IDX values2=C_IDX out=color_filtered_1d.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select C_IDX > 0.3\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.3'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 67.0666 and latitude -35.1821. Please use a search radius of 1.7321 degrees. Save the results to a fits file called query_results_33.fits.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=67.0666 lat=-35.1821 radius=1.7321 omode=out ofmt=fits out=query_results_33.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create a MOC (order 13) for objects within a radius defined by the geometric mean of two error columns ($\text{sqrt}(\text{E1} \times \text{E2})$) in degrees.",
        "response": "stilts mocshape in=geometric_errors.fits shape=circle coords='array(RA, DEC, sqrt(E1 * E2))' order=13 out=geometric_mean_rad.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "What ADQL function can I use for a sky crossmatch in `tapquery`?",
        "response": "You can use geometric functions like `CONTAINS`, `INTERSECTS`, and `DISTANCE`. A common pattern is `1=CONTAINS(POINT(...), CIRCLE(...))` in the WHERE clause, where 1 is the ADQL boolean for 'true'.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tapquery"
    },
    {
        "prompt": "My radius column is in radians. How to use it for circles?",
        "response": "stilts mocshape in=rad_radius.fits shape=circle coords='array(RA,DEC,radiansToDegrees(RADIUS_RAD))' out=rad_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Crossmatch T1 and T2. T2 positions are in sexagesimal strings (RA_H:M:S, DEC_D:M:S). Convert T2 coordinates to degrees inline.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='hmsToDegrees(RA_H) dmsToDegrees(DEC_D)' out=inline_sex_convert.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T3 contains coordinate RA_HMS/DEC_DMS in sexagesimal strings. Convert T3 coordinates to degrees inline.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='hmsToDegrees(RA_HMS) dmsToDegrees(DEC_DMS)' in1=T1.fits in2=T2.fits in3=T3.fits out=inline_sexagesimal_match_3way.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a table using the generic scheme `:class:` pointing to a simple LoopTable and save the result as FITS.",
        "response": "stilts tcopy in=:class:uk.ac.starlink.table.LoopTableScheme:200 out=class_test.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Copy a table read from a Parquet file, ensuring the output Parquet file uses **gzip** compression.",
        "response": "stilts tcopy in=input.parquet ofmt='parquet(compression=gzip)' out=gzipped.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Pair match T_MAIN against T2, T3. T3 columns should be suffixed '_III'. Only output the unmatched rows from T_MAIN.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=T_MAIN.fits in2=T2.fits in3=T3.fits suffix3=_III join1=nomatch out=T_MAIN_only_singles_III.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot points with variable size determined by the expression 'PARALLAX * 10' (unit=mas), ensuring the image size is 700x350.",
        "response": "stilts plot2sky in=gaia.fits layer=size lon=RA lat=DEC size='PARALLAX * 10' unit=mas xpix=700 ypix=350 out=parallax_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Can I plot multiple histograms with different colors on the same axes?",
        "response": "stilts plot2plane layer_1=histogram in_1=sample1.fits x_1=MASS color_1=blue layer_2=histogram in_2=sample2.fits x_2=MASS color_2=red",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MASS\"\n    (The name \"MASS\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find all table schemas in the MAST PanSTARRS 1 DR1 service and output the result in HTML table format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT * FROM TAP_SCHEMA.schemas' ofmt=html out=ps1_schemas.html",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "My friend wants me to match our star lists. His is `friends_stars.txt`, mine is `my_stars.csv`. We need to find stars closer than 1 arcsec. For each of my stars, just find the single best match from his list.",
        "response": "stilts tmatch2 ifmt1=csv in1=my_stars.csv ifmt2=ascii in2=friends_stars.txt matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=best1 out=our_best_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find Gaia sources that have a radial velocity measurement.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, ra, dec, radial_velocity FROM gaiadr3.gaia_source WHERE radial_velocity IS NOT NULL' out=rv_sources.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch four tables in group mode, filtering the final output to keep only groups where GroupSize is exactly 4.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=sky params=1 in1=c1.fits in2=c2.fits in3=c3.fits in4=c4.fits ocmd='select GroupSize==4' values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' out=group_size_4.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Remove the column 'VEL_ERR' if the table parameter 'ERROR_CORRECTED' is present and true.",
        "response": "stilts tpipe in=data.fits cmd='select \"!NULL_ERROR_CORRECTED && ERROR_CORRECTED\"' cmd='delcols \"VEL_ERR\"' out=vel_cleaned.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'ERROR_CORRECTED'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_ERROR_CORRECTED && ERROR_CORRECTED\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'ERROR_CORRECTED'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a parameter named 'OBS_DATE' with the ISO-8601 value corresponding to MJD 56000.",
        "response": "stilts tpipe in=meta.fits cmd='setparam OBS_DATE mjdToIso(56000.0)' out=param_added.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query VizieR for a sample of the NOMAD catalogue (I/297/out) and send the result directly to TOPCAT.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT TOP 100 * FROM \"I/297/out\"' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to draw a filled area under a curve. My table has X and Y columns.",
        "response": "stilts plot2plane in=curve.fits layer=fill x=X y=Y color=skyblue",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plotting X vs Y, coloring points based on the 'Z' column using the private aux shading mode ('paux').",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=paux aux=Z pmap=cubehelix out=paux_cubehelix.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'RA_DMS_5' converting RA in degrees to DMS string format with 5 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_5 \"degreesToDms(RA, 5)\"' out=dms_ra_5s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_5 degreesToDms(RA, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Get the top 10 brightest stars (lowest G magnitude) from Gaia DR3.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 10 source_id, ra, dec, phot_g_mean_mag FROM gaiadr3.gaia_source ORDER BY phot_g_mean_mag ASC'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_OLD_3' converting Johnson U magnitude to AB, using the deprecated V-band constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB_OLD_3 \"MAG_U + JOHNSON_AB_V\"' out=u_ab_old_conv_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB_OLD_3 MAG_U + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the mean of the array column 'FLUX_ARRAY' element-wise, but only for the first 10 elements.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol MEAN_FLUX_10 \"mean(slice(FLUX_ARRAY, 0, 10))\"' out=sliced_mean.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0,' '10))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MEAN_FLUX_10 mean(slice(FLUX_ARRAY, 0, 10))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0,' '10))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "How can I run a query and have the result sent to a running SAMP client?",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 100 * FROM ivoa.obscore' omode=samp",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the SuperCOSMOS Science Archive (SSA) for sources, and locally rename the coordinate columns 'ra' to 'RA_DEG' and 'dec' to 'DEC_DEG' after retrieval.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/ssa adql='SELECT TOP 10 ra, dec FROM sas_ir.atlas_point_source' ocmd='colmeta -name RA_DEG ra; colmeta -name DEC_DEG dec' out=ssa_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate an order 12 MOC from circle regions where the radius is determined by $RADIUS \times 0.5$.",
        "response": "stilts mocshape in=radii.fits shape=circle coords='array(RA, DEC, RADIUS * 0.5)' order=12 out=scaled_radii_o12.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Join T1 and T2, displaying the row count only. Use the sky matcher.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 330.3143 and latitude 63.3391. Please use a search radius of 0.5932 degrees. Save the results to a ascii file called query_results_63.ascii. The coordinates are in the fk4 system.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=330.3143 lat=63.3391 radius=0.5932 skysys=fk4 omode=out ofmt=ascii out=query_results_63.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate a 2D binned histogram (grid plot) of X vs Y.",
        "response": "stilts plot2plane in=large_survey.fits layer=grid x=RA y=DEC xbinsize=-100 ybinsize=-100 combine=count",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a plot and save the output to standard output as a GIF file.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y ofmt=gif out=-",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Read a catalogue, calculate the statistical summary (mean, min, max, etc.) of 'TEMP' for rows where the error 'ERR_TEMP' is less than 0.1.",
        "response": "stilts tpipe in=measurements.fits cmd='select \"ERR_TEMP < 0.1\"' cmd='keepcols \"TEMP\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ERR_TEMP < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge ECSV files and output the combined table in VOTable format using the recommended BINARY2 serialization.",
        "response": "stilts tcat ifmt=ecsv in='e1.ecsv e2.ecsv' ofmt='votable(format=BINARY2)' out=ecsv_to_binary2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Use the `constcol` filter to identify constant columns and promote their values to table parameters.",
        "response": "stilts tpipe in=const_data.fits cmd=constcol out=data_with_params.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "List catalogue names in ESO TAP_CAT where the description contains 'VISTA' and save the output as VOTable.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT table_name, description FROM TAP_SCHEMA.tables WHERE description LIKE ''%VISTA%''' out=eso_vista_tables.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you show me the quantile range (25% to 75%) for my noisy dataset as a shaded region?",
        "response": "stilts plot2plane in=noisy_data.fits layer_pts=mark x_pts=TIME y_pts=FLUX layer_q=quantile x_q=TIME y_q=FLUX quantiles_q='0.25,0.75' color_q=blue transparency_q=0.5",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TIME\"\n    (The name \"TIME\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match A.fits and B.fits (exact ID). Include all rows from B (right outer join), and rename duplicate columns using automatic numeric suffixing.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID join=all2 fixcols=dups out=right_outer_numbered.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Run a quick query on the ARI Gaia service and set the job destruction time policy to immediately delete the job upon command exit.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 10 source_id FROM gaiadr3.gaia_source' delete=always out=gaia_delete.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter the input catalog to include only rows with positive distance modulus, then generate a point MOC.",
        "response": "stilts mocshape in=dist_mod.fits icmd='select \"DM > 0\"' shape=point coords='array(RA, DEC)' out=positive_dm_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DM > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Pair match T1 (ref) against T2 and T3. T2 has coordinates in FK4 B1950. Convert them to ICRS J2000 before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=5 in1=T1.fits in2=T2.fits icmd2='addskycoords fk4 icrs RA_B1950 DEC_B1950 RA DEC' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=fk4_preprocessed_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query MAST HSCv3 near RA 150, Dec 50, with a radius of $0.02$ degrees, and enforce maximum verbosity.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=150.0 lat=50.0 radius=0.02 verb=3 out=hsc_0p02_verbose.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Filter rows to keep only those where 'RA' and 'DEC' are not null and within 1 degree of M31 (RA=10.68, DEC=41.27).",
        "response": "stilts tpipe in=cat.fits cmd='select \"!NULL_RA && !NULL_DEC && skyDistanceDegrees(RA, DEC, 10.68, 41.27) < 1.0\"' out=m31_vicinity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_DEC' '&&' 'skyDistanceDegrees(RA,' 'DEC,' '10.68,' '41.27)' '<' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_RA && !NULL_DEC && skyDistanceDegrees(RA, DEC, 10.68, 41.27) < 1.0\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_DEC' '&&' 'skyDistanceDegrees(RA,' 'DEC,' '10.68,' '41.27)' '<' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a local FITS file to a VOTable, ensuring XML character encoding is UTF-16.",
        "response": "stilts tcopy in=table.fits ofmt='votable(encoding=UTF-16)' out=utf16.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert a VOTable to a FITS file, forcing the use of the **column-oriented FITS-plus** format.",
        "response": "stilts tcopy in=input.vot out=output.colfits ofmt=colfits-plus",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read a FITS file and replace the string 'GALAXY' with 'GAL' in the 'TYPE' column.",
        "response": "stilts tpipe in=objects.fits cmd='replaceval \"GALAXY\" \"GAL\" TYPE' out=type_abbreviated.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine two Parquet files into a single output file, ensuring the total row count is computed upfront.",
        "response": "stilts tcat in='p1.parquet p2.parquet' countrows=true out=merged_parquet.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a plot with X axis scale set to symlog, threshold 5, and scaling factor 1.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xscale='symlog(5,1)' out=symlog_x_5_1.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a table of 100 rows using the `:loop:` scheme and save it as a simple ASCII file.",
        "response": "stilts tcopy in=:loop:100 ofmt=ascii out=loop.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Join table_A (all rows) and table_B (matched rows only). Use exact match on 'KEY'. T_B is IPAC format.",
        "response": "stilts tmatch2 in1=table_A.fits in2=table_B.tbl ifmt2=ipac matcher=exact values1=KEY values2=KEY join=all1 out=ipac_left_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot velocity (V) vs distance (D), restricting the range to only objects where V is less than 500 km/s.",
        "response": "stilts plot2plane in=galaxies.fits icmd='select \"V < 500\"' layer=mark x=D y=V out=filtered_hubble.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"V < 500\" (The name \"V\" is unknown.)\n        (The name \"V\" is unknown.))\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a line of `y=0` across the entire plot.",
        "response": "stilts plot2plane layer=function fexpr=0 color=black",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Group match five tables (D1-D5). Output the checksum of the resulting table.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID values5=ID in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits in5=D5.fits omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match T_A and T_B using a cuboid match on position (X, Y) with 5 units in X and 1 unit in Y.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=2d_cuboid params='5 1' values1='X Y' values2='X Y' out=cuboid_2d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create an order 11 MOC for all objects observed in 2020 (DATE_OBS between MJD 58849 and MJD 59214).",
        "response": "stilts mocshape in=obs_dates.fits icmd='select \"MJD >= 58849 && MJD <= 59214\"' shape=point coords='array(RA, DEC)' order=11 out=2020_obs_o11.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '58849' '&&' 'MJD' '<=' '59214'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MJD >= 58849 && MJD <= 59214\n\nUsage: select <expr>\n    (Unused arguments: '>=' '58849' '&&' 'MJD' '<=' '59214'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a JSON MOC for objects within a 3 arcminute radius, forcing the use of the 'cds' implementation.",
        "response": "stilts mocshape in=circles.fits shape=circle coords='array(RA, DEC, 3.0 / 60.0)' mocimpl=cds mocfmt=json out=cds_json_3am.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot error ellipses using the skyellipse layer, explicitly setting the orientation (POSANG) to 90 degrees.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra=A rb=B posang=90 out=ellipse_pa90.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Get 100 random objects from the VizieR 2MASS catalog.",
        "response": "stilts tapquery tapurl=http://tapvizier.u-strasbg.fr/tap adql='SELECT TOP 100 * FROM \"II/246/out\" ORDER BY RAND()'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine all tables listed in `my_tables.list` and after combining, add a column `is_faint` that is true if `magnitude` > 22.",
        "response": "stilts tcat in=@my_tables.list ocmd='addcol is_faint magnitude>22' out=faint_objects.fits",
        "chat.jar": "fixed",
        "error": "Error: my_tables.list (No such file or directory)\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Submit an ADQL query to find all sources from Gaia with parallax measurements and save to `parallax_sources.fits`.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, parallax FROM gaiadr3.gaia_source WHERE parallax IS NOT NULL' out=parallax_sources.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter the table to keep rows where the absolute value of RA is less than 10 degrees.",
        "response": "stilts tpipe in=coords.fits cmd='select \"abs(RA) < 10.0\"' out=central_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(RA) < 10.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "My `csv` file has columns ra_sex and dec_sex. Make me a MOC.",
        "response": "stilts mocshape in=data.csv ifmt=csv shape=point coords='array(hmsToDegrees(ra_sex),dmsToDegrees(dec_sex))' out=data_sex.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Count the number of records in the Subaru SAGA stellar abundances table, running synchronously.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT COUNT(*) FROM saga.stellar_abundances' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Please show me the metadata of the table that would result from concatenating `header_info.fits` and `main_data.fits`.",
        "response": "stilts tcat in=header_info.fits in=main_data.fits omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a JSON MOC from a simulated catalog of 500,000 stars.",
        "response": "stilts pixfoot in=:skysim:500000 ra=ra dec=dec mocfmt=json out=simulated_sky.moc.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Merge tables, and then remove any row where the adjacent predecessor row has the exact same content across all columns.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='uniq *' out=fully_unique_rows.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Match five tables using 3D spherical polar coordinates (sky3d, 1 Mpc tolerance). Columns: RA, DEC, DISTANCE_MPC.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky3d params=1 values1='RA DEC DISTANCE_MPC' values2='RA DEC DISTANCE_MPC' values3='RA DEC DISTANCE_MPC' values4='RA DEC DISTANCE_MPC' values5='RA DEC DISTANCE_MPC' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits in5=D5.fits out=sky_3d_5way.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need a high-resolution MOC (order 15) for all sources in deep_field.fits brighter than magnitude 20.",
        "response": "stilts mocshape in=deep_field.fits icmd='select \"MAG < 20\"' shape=point coords='array(RA, DEC)' order=15 out=bright_coverage_o15.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 20\n\nUsage: select <expr>\n    (Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). T2 contains magnitude in AB units; T3 in Vega units. Convert T3 magnitude (MAG_V) to AB (MAG_V - 0.04) before matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.1 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='replacecol MAG_V \"MAG_V - 0.04\"' values1=MAG_AB values2=MAG_AB values3=MAG_V out=ab_vega_aligned_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '0.04'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_V MAG_V - 0.04\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '0.04'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve the top 500 Gaia DR3 sources from MAST and pipe the resulting table directly into TOPCAT.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT * FROM gaiadr3.gaia_source' maxrec=500 omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert the input table to ECSV format, preserving rich metadata, and stream it to the terminal.",
        "response": "stilts tpipe in=data.fits ofmt=ecsv out=-",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Copy a FITS table to FITS, ensuring the output is written in the **column-oriented FITS** format (colfits).",
        "response": "stilts tcopy in=input.fits ofmt=colfits-plus out=output.colfits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine tables, performing a sophisticated normalization on the magnitude: MAG_NORM = MAG - MJD*0.01 + 10.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='addcol MAG_NORM \"MAG - MJD*0.01 + 10\"' out=normalized_mag_output.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MJD*0.01' '+' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_NORM MAG - MJD*0.01 + 10\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MJD*0.01' '+' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Join T_MAIN and T_SUPP (exact ID). T_MAIN columns suffixed '_M'. Only include rows from T_MAIN that are unmatched in T_SUPP (1not2).",
        "response": "stilts tmatch2 in1=T_MAIN.fits in2=T_SUPP.fits matcher=exact values1=ID values2=ID join=1not2 fixcols=all suffix1=_M out=T_MAIN_anti_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match two time series tables on MJD time, 0.00001 day tolerance. Use parallel execution and output the result in FITS format using variable-length arrays.",
        "response": "stilts tmatch2 in1=TS1.fits in2=TS2.fits matcher=1d params=1e-5 values1=MJD values2=MJD runner=parallel ofmt=fits-var out=time_parallel_var.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 249.5854 and latitude -10.1319. Please use a search radius of 1.999 degrees. Save the results to a fits file called query_results_72.fits. The coordinates are in the fk5 system.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=249.5854 lat=-10.1319 radius=1.999 skysys=fk5 omode=out ofmt=fits out=query_results_72.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read a table, use `colmeta` to change the unit of 'FLUX' from Jy to 'mJy', and change the unit of 'TIME' to 's'.",
        "response": "stilts tpipe in=data.fits cmd='colmeta -units mJy FLUX' cmd='colmeta -units s TIME' out=units_adjusted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an output column 'RA_DEG' by calculating degrees from an array of three string components (HH, MM, SS) stored in 'RA_HMS_ARRAY'.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_DEG \"hmsToDegrees(RA_HMS_ARRAY, RA_HMS_ARRAY, RA_HMS_ARRAY)\"' out=array_hms_conversion.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA_HMS_ARRAY,' 'RA_HMS_ARRAY)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DEG hmsToDegrees(RA_HMS_ARRAY, RA_HMS_ARRAY, RA_HMS_ARRAY)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA_HMS_ARRAY,' 'RA_HMS_ARRAY)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot the 25th percentile line of Y data binned by X, coloring it darkred and using dashed lines.",
        "response": "stilts plot2plane in=data.fits layer=quantile x=X y=Y quantiles=0.25 color=darkred thick=2 join=lines dash=dash out=q1_line_dash.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine two Parquet files and output as a single Parquet file.",
        "response": "stilts tcatn nin=2 in1=data1.parquet in2=data2.parquet out=combined.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Calculate the distance modulus (DM) from parallax (PLX) in mas, assuming DM = 5 * log10(100 / PLX) - 5, and filter out all rows where PLX is non-positive.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PLX > 0.0\"' cmd='addcol DIST_MOD \"5 * log10(100.0 / PLX) - 5\"' out=dist_mod_positive.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PLX > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 23.5189 and latitude 43.3915. Please use a search radius of 1.9034 degrees. Save the results to a ascii file called query_results_129.ascii. The coordinates are in the fk4 system.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=23.5189 lat=43.3915 radius=1.9034 skysys=fk4 omode=out ofmt=ascii out=query_results_129.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find the best match (best1) for T1 from T2. T2 coordinates are provided in an array column 'COORDS' of size 2. Explode the array inline in values2.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='COORDS COORDS[4]' find=best1 out=inline_array_index_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a MOC using a very fine resolution (order 20) for 1 arcsecond circles around my faint radio sources.",
        "response": "stilts mocshape in=radio_sources.vot shape=circle coords='array(RA, DEC, 1.0 / 3600.0)' order=20 out=radio_circles_o20.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find all entries in VizieR's General Catalogue of Variable Stars (B/gcvs/gcvs_cat) that are of type 'RR'.",
        "response": "stilts tapquery tapurl=http://tapvizier.u-strasbg.fr/tap adql='SELECT Name, RAJ2000, DEJ2000, VarType FROM \"B/gcvs/gcvs_cat\" WHERE VarType LIKE ''%RR%''' out=rr_lyrae_stars.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine four input tables. For the first table, apply a head filter to keep only the initial 100 rows.",
        "response": "stilts tcatn nin=4 in1=I1.fits icmd1='head 100' in2=I2.fits in3=I3.fits in4=I4.fits out=head100_merged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Identify constant columns, promote their value to table parameters, and save the result.",
        "response": "stilts tpipe in=survey.fits cmd='constcol' out=survey_clean_params.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Copy a CSV file to an ECSV file, sampling only the first 50 rows to guess column types for fast initialization.",
        "response": "stilts tcopy in=big.csv ifmt='csv(maxSample=50)' out=quick_check.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot a 2D grid plot where the color indicates the standard deviation of 'MAG_ERR' in each bin.",
        "response": "stilts plot2plane in=errors.fits layer=grid x=RA y=DEC weight=MAG_ERR combine=stdev out=stdev_mag_err_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match `cat1.fits`, `cat2.fits`, and `cat3.fits` using `cat2.fits` as the reference table.",
        "response": "stilts tmatchn nin=3 in1=cat1.fits in2=cat2.fits in3=cat3.fits multimode=pairs iref=2 matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' out=cat2_reference_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate tables and add a row index column 'RowIndex' starting from 1.",
        "response": "stilts tcat in='data_x.fits data_y.fits' ocmd='addcol RowIndex $0' out=row_indexed_output_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, and add a column that tracks the absolute path of the originating table, labeling it 'FullPath'.",
        "response": "stilts tcat in='local/a.fits remote/b.fits' loccol=FullPath out=full_path_records.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Copy data from a test table scheme (:test:10,is) and save it as a text file.",
        "response": "stilts tcopy in=':test:10,is' ofmt=text out=test_data.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plotting a constant horizontal line $y=5$ using the function layer.",
        "response": "stilts plot2plane layer=function fexpr=5 color=black out=horizontal_line_5.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine `data_part_1.fits` and `data_part_2.fits`. After combining, show me the statistics of the `FLUX` column.",
        "response": "stilts tcat in=data_part_1.fits in=data_part_2.fits ocmd='keepcols FLUX' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query ESO TAP_CAT around Ecliptic Lon 180, Lat 0, using a radius of $0.001$ degrees, and then view statistics on the output table.",
        "response": "stilts cone serviceurl=http://archive.eso.org/tap_cat lon=180.0 lat=0.0 radius=0.001 skysys=ecliptic omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Join T_main and T_aux exactly on ID. T_aux columns should be prefixed '_AUX' to resolve duplication.",
        "response": "stilts tmatch2 in1=T_main.fits in2=T_aux.fits matcher=exact values1=ID values2=ID fixcols=dups suffix2=_AUX out=exact_match_prefixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create a MOC from the positions in `my_data.fits`, but give me an error if any of the coordinates are null.",
        "response": "stilts pixfoot in=my_data.fits icmd='assert \"!NULL_RA && !NULL_DEC\"' out=asserted_coords.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert !NULL_RA && !NULL_DEC\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot polygons defined by coordinate arrays, coloring them based on the standard deviation of FLUX (weighted shading, combine=stdev).",
        "response": "stilts plot2sky in=regions.fits layer=polygon coords=VERTICES polymode=fill shading=weighted weight=FLUX combine=stdev out=stdev_flux_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Merge `cat1.fits` and `cat2.fits`, and name the output `merged.vot` using the VOTable binary serialization.",
        "response": "stilts tcat in=cat1.fits in=cat2.fits ofmt='votable(format=BINARY)' out=merged.vot",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: Syntax error: \"(\" unexpected\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge time series data from three sources. The second source, TS2.dat, uses IPAC format, so specify it explicitly.",
        "response": "stilts tcatn nin=3 in1=TS1.fits in2=TS2.dat ifmt2=ipac in3=TS3.fits out=time_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Check the ADQL syntax of a complex selection query against the Subaru SXDS service without executing it.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/sxds_v1 adql='SELECT COUNT(phot_g_mag) FROM sxds.point_source WHERE RA > 180' parse=true omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plotting a Gaussian fit over a histogram, Gaussian curve colored blue and thick.",
        "response": "stilts plot2plane in=data.fits layer_h=histogram x_h=VALUE layer_g=gaussian x_g=VALUE color_g=blue thick_g=3 out=gaussian_blue_thick.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Draw a filled region between a curve (Y_LINE) and the axis origin (Y=0) using semi-transparent blue.",
        "response": "stilts plot2plane in=curve.fits layer=fill x=X y=Y_LINE y0=0 color=blue transparency=0.5 out=filled_under_curve.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a MOC, but first remove all rows that have a null value in the FLUX column.",
        "response": "stilts pixfoot in=survey.fits icmd='select !NULL_FLUX' ra=RA dec=DEC out=clean_flux_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine three tables, then keep only unique rows based on identical content across all columns.",
        "response": "stilts tcat in='d1.fits d2.fits d3.fits' ocmd='uniq *' out=fully_deduplicated.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "My input has STC-S strings, but some are invalid. Will `mocshape` fail?",
        "response": "It will likely produce warnings for the invalid rows and skip them, but continue processing the valid ones. You should check the output on standard error for any messages.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Convert the input FITS table directly into a remote SQL database table named 'UPLOAD_TEMP' using the 'tosql' mode.",
        "response": "stilts tpipe in=local.fits omode=tosql protocol=mysql host=remote_db db=db1 dbtable=UPLOAD_TEMP write=create user=user1 password=pw1",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the MAST ULLYSES HLSP service and filter the retrieved table to select the 10 rows with the longest exposure times.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT * FROM ivoa.ObsCore' ocmd='sorthead 10 T_EXPTIME' out=ullyses_long_exp.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Overlay the Galactic grid (red lines) onto a plot showing Equatorial positions.",
        "response": "stilts plot2sky viewsys=equatorial layer_m=mark lon_m=RA lat_m=DEC layer_g=skygrid gridsys_g=galactic gridcolor_g=red out=gal_grid_overlay.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter in_m: null value not allowed\nUsage: in_m=<table>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate a table with itself to double its length.",
        "response": "stilts tcatn nin=2 in1=my_table.fits in2=my_table.fits out=doubled.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch T1 and T2 using sky position (1 arcsec). T1 columns must retain original names, T2 duplicates suffixed '_T2'. Run in parallel mode.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=dups suffix2=_T2 runner=parallel out=t1_priority_parallel.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Display a scatter plot in a temporary GUI window.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y",
        "chat.jar": "fixed",
        "error": "Error: Bad value for parameter omode: Unknown value \"gui\" - must be one of swing, out, cgi, discard, auto\nUsage: omode=swing|out|cgi|discard|auto\n\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Concatenate tables, and then add a column 'IS_NEGATIVE' that is true if 'FLUX' is negative.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol IS_NEGATIVE \"FLUX < 0\"' out=negative_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_NEGATIVE FLUX < 0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a MOC from the positions in a Parquet file.",
        "response": "stilts mocshape in=data.parquet shape=point coords='array(ra,dec)' out=parquet_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a plot where the x-axis label is 'RA (deg)' and y-axis is 'Dec (deg)'.",
        "response": "stilts plot2plane in=coords.fits layer=mark x=RA y=DEC xlabel='RA (deg)' ylabel='Dec (deg)'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert the MJD time 'TIME' to seconds since Unix Epoch and add it as 'TIME_UNIX_SEC'.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_UNIX_SEC mjdToUnixSec(TIME)' out=unix_time.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve all column metadata for the smallest table available on the FAI archives TAP service.",
        "response": "stilts tapquery tapurl=https://dachs.fai.kz/tap adql='SELECT * FROM TAP_SCHEMA.columns WHERE table_name = (SELECT TOP 1 table_name FROM TAP_SCHEMA.tables)' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 202.7666 and latitude 50.6182. Please use a search radius of 1.9002 degrees. Instead of a file, just give me the stats.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=202.7666 lat=50.6182 radius=1.9002 compress=true omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match A.fits and B.fits using position error quadrature (skyerr_q). A error (E_A) is in arcminutes; convert to arcseconds before matching.",
        "response": "stilts tmatch2 in1=A.fits icmd1='replacecol E_A E_A*60' in2=B.fits matcher=skyerr_q params=1 values1='RA DEC E_A' values2='RA DEC E_B' out=arcmin_error_quad_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'LOG_FLUX' that is automatically typed as double, and then convert the result to ECSV format.",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_FLUX log10(FLUX)' ofmt=ecsv out=log_flux.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Join T1 and T2 using a Cartesian 2D match (X, Y). Use tuning=8 to adjust the bin factor for performance.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=2d params=10 values1='X Y' values2='X Y' tuning=8 out=tuned_cartesian_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Filter rows to keep only those where the integer 'ID' column has an even value.",
        "response": "stilts tpipe in=data.fits cmd='select \"ID % 2 == 0\"' out=even_ids_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need the footprint for a 30 arcsecond radius around each source in my `sources.ecsv` file.",
        "response": "stilts pixfoot in=sources.ecsv ifmt=ecsv radius=30.0/3600.0 out=thirty_arcsec_regions.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Add a column 'TIME_JULIAN' converting MJD to Julian Epoch.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_JULIAN mjdToJulian(MJD_TIME)' out=julian_time.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Select VIRCAM observations from ESO TAP_OBS with the 'J' filter and airmass less than 1.2.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT ra, dec, filter_id, airmass FROM raw.vircam WHERE filter_id = ''J'' AND airmass < 1.2' out=vircam_lowair.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate tables, and then assert that every row in the output table has a positive 'MASS' value, failing if not.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='assert \"MASS > 0\"' out=positive_mass.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MASS > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Convert a table to ASCII format and show the table parameters.",
        "response": "stilts tcopy in=data.fits ofmt='ascii(params=true)' out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a boolean column 'IS_BRIGHT_G' which is true if G_MAG is defined and less than 15.",
        "response": "stilts tpipe in=phot.fits cmd='addcol IS_BRIGHT_G \"!NULL_G_MAG && G_MAG < 15.0\"' out=g_bright_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'G_MAG' '<' '15.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT_G !NULL_G_MAG && G_MAG < 15.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '&&' 'G_MAG' '<' '15.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the ratio of 'FLUX_A' to 'FLUX_B' is never infinite.",
        "response": "stilts tpipe in=data.fits cmd='assert \"isFinite(FLUX_A / FLUX_B)\"' out=ratio_finite.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert isFinite(FLUX_A / FLUX_B)\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine three tables, and then output only the metadata of the combined result.",
        "response": "stilts tcat in='t1.fits t2.fits t3.fits' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Calculate the statistical summary of the redshift column for point sources in the Subaru SXDS catalogue.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/sxds_v1 adql='SELECT redshift FROM sxds.point_source' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T3 uses a custom angular error column 'ANG_ERR_MAS'. Match using skyerr (1 mas scale).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=skyerr params=1 values1='RA DEC ANG_ERR_MAS' values2='RA DEC ANG_ERR_MAS' values3='RA DEC ANG_ERR_MAS' in1=T_REF.fits in2=T2.fits in3=T3.fits out=mas_skyerr_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine tables, writing the result as a simple plain text table to standard output.",
        "response": "stilts tcat in='t1.fits t2.fits' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the J-PLUS DR1 Catalogue for a small sample of rows, displaying only the column metadata of the result.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jplus-dr1 adql='SELECT TOP 5 * FROM jplus_dr1.master' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch T1, T2, T3. T1 is reference. Output rows from T2 and T3 should be included ONLY if they are NOT matched to T1.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits join2=nomatch in3=T3.fits join3=nomatch out=T2_T3_anti_join_ref.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find the maximum and minimum magnitudes recorded in the MAST CANDELS HLSP photometry table.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT MAX(f160w_mag), MIN(f160w_mag) FROM candels.photometry' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine tables, adding a column 'LOG_FLUX_E' calculated as $\\ln(\\text{FLUX} + \\text{ERROR})$.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol LOG_FLUX_E \"ln(FLUX + ERROR)\"' out=log_flux_error_sum.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'ERROR)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_FLUX_E ln(FLUX + ERROR)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'ERROR)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (group mode). Filter the output to keep only groups where the size is greater than 2.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits ocmd='select \"GroupSize > 2\"' out=size_gt_2_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GroupSize > 2\n\nUsage: select <expr>\n    (Unused arguments: '>' '2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine two FITS files, ensuring that the combined table is sorted by the 'MJD' column in ascending order.",
        "response": "stilts tcat in=obs_log1.fits in=obs_log2.fits ocmd='sort MJD' out=mjd_sorted_log.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create an order 21 MOC, forcing the use of the slower, sequential 'lists' implementation to handle a challenging geometry.",
        "response": "stilts mocshape in=complex.fits shape=polygon coords=VERTICES order=21 mocimpl=lists out=lists_o21_poly.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match T1 and T2. T1 only includes rows with a positive parallax (PLX > 0) before matching.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='select \"PLX > 0\"' in2=T2.fits matcher=sky params=3 values1='RA DEC' values2='RA DEC' out=positive_parallax_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PLX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Convert a VOTable with many columns to FITS, relying on **Wide FITS** support to encode columns beyond 999.",
        "response": "stilts tcopy in=wide_vot.vot out=wide_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the ESO TAP_OBS service and locally rename the remote column 's_ra' to 'RA_DEG' in the result table.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 s_ra, s_dec FROM ivoa.ObsCore' ocmd='colmeta -name RA_DEG s_ra' out=eso_renamed_col.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the Subaru MOIRCS data service and only retrieve the first 20 records after the data is streamed to the local machine.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/moircs adql='SELECT * FROM moircs.summary' ocmd='head 20' out=moircs_head.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a plot and save it as an EPS file for publication.",
        "response": "stilts plot2plane in=final_data.fits layer=mark x=X y=Y out=figure1.eps",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Crossmatch T1 and T2 using elliptical regions (skyellipse). T2 has errors in degrees; convert to arcsec (multiply by 3600) for matching.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='replacecol R_ARCSEC R_DEG*3600' matcher=skyellipse params=1 values1='RA DEC R_ARCSEC B PA' values2='RA DEC R_ARCSEC B PA' out=deg_to_arcsec_ellipse.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Upload a local FITS file 'positions.fits' and join it against the GAVO SDSS DR16 QSO table on position within 3 arcseconds.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT t.*, u.id FROM sdss.dr16qso AS t JOIN TAP_UPLOAD.targets AS u ON 1=CONTAINS(POINT(''ICRS'', t.ra, t.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.00083333))' nupload=1 upload1=positions.fits upname1=targets out=gavo_qso_xmatch.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge tables, and then calculate the final result's minimum and maximum values for all numeric columns.",
        "response": "stilts tcat in='d1.fits d2.fits' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a circle MOC using a very large radius of 20 degrees, primarily covering the entire hemisphere.",
        "response": "stilts mocshape in=hemisphere.fits shape=circle coords='array(RA, DEC, 20.0)' out=wide_hemisphere.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query MAST GOODS HLSP for objects in the B-V color range [0.5, 1.0].",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/goods/ adql='SELECT ra, dec, B_MAG, V_MAG FROM goods.photometry WHERE B_MAG - V_MAG BETWEEN 0.5 AND 1.0' out=goods_color_cut.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find rows in T_B that are unmatched in T_A (join=2not1). Filter T_A first to remove null magnitudes.",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='select !NULL_MAG' in2=T_B.fits matcher=exact values1=ID values2=ID join=2not1 out=T_B_unmatched_clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Filter a table to include only the first 50 rows, then assert that the table is still readable randomly (cache filter implies random access).",
        "response": "stilts tpipe in=huge.fits cmd='head 50' cmd=cache out=small_random.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the input table to remove duplicates based on their primary ID before generating the MOC.",
        "response": "stilts pixfoot in=dirty_ids.fits icmd='uniq ID' ra=RA dec=DEC out=unique_id_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot a filled region between two lines, defined by columns Y_UPPER and Y_LOWER.",
        "response": "stilts plot2plane in=data.fits layer=fill x=X y=Y_UPPER y0=Y_LOWER color=lightblue",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can you convert my CSV file to a FITS BINTABLE?",
        "response": "Yes, that's the default FITS output format. The command is simply: `stilts tcopy in=my.csv out=my.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "How do I make a MOC from circles where the radius depends on magnitude, e.g., `5.0/phot_g_mean_mag`?",
        "response": "stilts mocshape in=gaia.fits shape=circle coords='array(ra,dec, 5.0/phot_g_mean_mag)' out=mag_dependent_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match table A against B and C (A is reference). Output should contain A rows matched with B, but exclude rows matched with C.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=5 in1=A.fits in2=B.fits join2=match in3=C.fits join3=nomatch values1='RA DEC' values2='RA DEC' values3='RA DEC' out=A_match_B_nomatch_C.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a scatter plot and use the transparency shading mode with an opaque limit of 4, saving the output with a transparent PNG background.",
        "response": "stilts plot2plane in=crowded.fits layer=mark x=X y=Y shading=transparent opaque=4 out=transp_bg.png ofmt=png-transp",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert galactic coordinates (GLON, GLAT) to ICRS (RA, DEC), with the input coordinates in radians.",
        "response": "stilts tpipe in=galactic_rad.fits cmd='addskycoords -inunit rad galactic icrs GLON GLAT RA_ICRS DEC_ICRS' out=icrs_rad_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "My radius is given by column `R_MAS` in milliarcseconds. How do I use that?",
        "response": "stilts pixfoot in=mas_radii.fits radius='R_MAS/3600000.0' out=mas_radii_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match two catalogs. T1 has fixed error 0.1 arcsec. T2 error is in column ERR_T2. Match using skyerr.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=skyerr params=1 values1='RA DEC 0.1/3600.0' values2='RA DEC ERR_T2' out=fixed_variable_error_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Run a very quick asynchronous job against the ESA Integral Science Archive TAP to fetch 5 rows, and immediately delete the job upon command exit.",
        "response": "stilts tapquery tapurl=https://isla.esac.esa.int/tap/tap adql='SELECT TOP 5 source_name, ra, dec FROM isv.scw' delete=now out=integral_delete.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC for circles where the radius is determined by $\text{hypot}(\text{ERR}_A, \text{ERR}_B)$ degrees.",
        "response": "stilts pixfoot in=multi_err.fits ra=RA dec=DEC radius='hypot(ERR_A, ERR_B)' out=hypot_radius_moc2.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot a histogram where the bar style is drawn as 'spikes'.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE barform=spikes out=spikes_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Read a table, calculate the proper motion vector magnitude (PM_MAG) using hypot, and assert that PM_MAG is never negative.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_MAG \"hypot(PMRA, PMDEC)\"' cmd='assert \"PM_MAG >= 0\"' out=pm_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_MAG hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Collapse the columns 'X_POS', 'Y_POS', 'Z_POS' into a 3-element array column 'POS_3D'.",
        "response": "stilts tpipe in=coords.fits cmd='collapsecols POS_3D X_POS 3' out=3d_pos_array.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot data using the symlog scale on the Y-axis, with a linear threshold of 1.0 and a logarithmic scaling factor of 0.5.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y yscale='symlog(1.0, 0.5)' out=custom_symlog.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge a simulated table of 10 stars with a simulated table using a rampe strange attractor model (2000 points).",
        "response": "stilts tcatn nin=2 in1=:skysim:10 in2=:attractor:2000,rampe out=mixed_sim_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "From `galaxy_types.txt`, find all unique values in the `MORPHOLOGY` column.",
        "response": "stilts tpipe ifmt=ascii in=galaxy_types.txt cmd='keepcols MORPHOLOGY' cmd='sort MORPHOLOGY' cmd=uniq ofmt=text",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the coverage for sources within a 1.5 arcsecond radius, saving the output as a JSON MOC at order 14.",
        "response": "stilts pixfoot in=targets.fits ra=RA dec=DEC radius='1.5 / 3600.0' order=14 mocfmt=json out=targets_1p5as.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Copy a multi-table VOTable file, but explicitly specify the output format to be FITS, which will automatically combine extensions.",
        "response": "stilts tcopy in=multi_tab.vot out=combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'LOG_FLUX' and force all operations downstream to treat the table as random access.",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_FLUX log10(FLUX)' cmd=randomview out=random_log_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve J-PLUS DR1 catalogue entries and calculate the statistical summary of the column `MAG_F660`.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jplus-dr1 adql='SELECT MAG_F660 FROM jplus_dr1.master WHERE MAG_F660 IS NOT NULL' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query JWST for observations in 2010 (MJD > 55197.0) and discard the output, using the discard output mode.",
        "response": "stilts tapquery tapurl=https://jwst.esac.esa.int/server/tap adql='SELECT * FROM ivoa.ObsCore WHERE obs_collection = ''JWST'' AND t_min > 55197.0' omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate tables and add a new column 'LOG_LUM' defined by the algebraic expression '10 + MAG * -0.4'.",
        "response": "stilts tcat in='l1.fits l2.fits' ocmd='addcol LOG_LUM \"10 + MAG * -0.4\"' out=absolute_lum.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'MAG' '*' '-0.4'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_LUM 10 + MAG * -0.4\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'MAG' '*' '-0.4'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 342.8388 and latitude 32.4481. Please use a search radius of 1.1874 degrees. Save the results to a fits file called query_results_149.fits. After the query, please run this processing command: 'sorthead 20 MAG'.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=342.8388 lat=32.4481 radius=1.1874 omode=out ofmt=fits out=query_results_149.fits ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Group match four tables (C1-C4) using position error 'ERR' quadrature (skyerr_q). Exclude C4 rows that were matched.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=skyerr_q params=1 in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits join4=nomatch values1='RA DEC ERR' values2='RA DEC ERR' values3='RA DEC ERR' values4='RA DEC ERR' out=C4_unmatched_skyerr_q.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find rows in T1 that are NOT matched in T2. T1 coordinates are in degrees, T2 coordinates are in radians. Convert T2 inline.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=5 values1='RA_DEG DEC_DEG' values2='radiansToDegrees(RA_RAD) radiansToDegrees(DEC_RAD)' join=1not2 out=rad_anti_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate tables, adding a column 'OBS_TIME' by converting Julian Date (JD) column to Modified Julian Date (MJD).",
        "response": "stilts tcat in='log_a.fits log_b.fits' ocmd='addcol OBS_TIME jdToMjd(JD)' out=mjd_log.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Copy a remote FITS file via HTTPS and output its content to the terminal using the simple text format.",
        "response": "stilts tcopy in=https://data.archive/big.fits ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find objects around RA 30, Dec 30 (radius 0.001 deg) and append a constant column named 'Survey' with value 'DeepField'.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=30.0 lat=30.0 radius=0.001 ocmd='addcol Survey \"DeepField\"' out=hsc_with_const_col.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create a footprint of the northern celestial hemisphere from a simulated all-sky catalog.",
        "response": "stilts pixfoot in=:skysim:1e6 icmd='select dec>=0' ra=ra dec=dec out=north_hemi.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find planetary data from the FUB service within 0.1 degree of RA 90, Dec -10, saving the result to a FITS file.",
        "response": "stilts tapquery tapurl=http://dachs.planet.fu-berlin.de/tap adql='SELECT * FROM epn_core.epn_core WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 90, -10, 0.1))' out=fub_cone_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the MAST SkyMapper DR4 service for 10 sources, filtering the output locally to keep only the source ID and coordinates.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/skymapperdr4/ adql='SELECT TOP 10 * FROM smssdr4.master' ocmd='keepcols \"source_id ra dec\"' out=smss_minimal.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ra' 'dec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols source_id ra dec\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ra' 'dec'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Use an astronomical survey catalog, convert ICRS coordinates (RA, DEC) to Ecliptic coordinates (ECL_LON, ECL_LAT) in place, and save as a VOTable.",
        "response": "stilts tpipe in=cat.fits cmd='addskycoords icrs ecliptic RA DEC RA ECL_LAT' cmd='colmeta -name ECL_LON RA' out=ecliptic_coords.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot density contours on an all-sky plot, setting the level scaling to 'log' and using 10 levels.",
        "response": "stilts plot2sky in=data.fits projection=aitoff layer=contour lon=RA lat=DEC scaling=log nlevel=10 out=aitoff_log_n10.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "My ASCII file `data.dat` has no header. How do I convert it to CSV with a header?",
        "response": "stilts tcopy ifmt=ascii in=data.dat ofmt='csv(header=true)' out=data.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert an IPAC table to a CSV file, ensuring that the output CSV uses a **tab delimiter**.",
        "response": "stilts tcopy in=input.tbl ifmt=ipac ofmt='csv(delimiter=tab)' out=tab_delimited.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "What's the shortest way to view the second HDU of a FITS file on the terminal?",
        "response": "stilts tcopy multi.fits#2",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Start an asynchronous job on the ESA Euclid Archive, requesting continuous progress updates.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT TOP 100 * FROM ivoa.ObsCore' progress=true out=euclid_progress.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the PADC TAP Astro server for tables that have 'ObsCore' in their description, retrieving maximum 10 results.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT TOP 10 table_name, description FROM TAP_SCHEMA.tables WHERE description LIKE ''%ObsCore%''' out=padc_obscore_tables.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Calculate the checksum for a query retrieving the list of tables from the Europlanet Telescope Network Database.",
        "response": "stilts tapquery tapurl=http://parsec-europlanet.eu:81/tap adql='SELECT * FROM TAP_SCHEMA.tables' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "In `data.fits`, find rows where `ID_A` and `ID_B` are identical.",
        "response": "stilts tpipe in=data.fits cmd='select equals(ID_A,ID_B)' out=self_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query ESO TAP_CAT using Ecliptic coordinates (Lon=45, Lat=-45), with a search cone of 90 arcseconds.",
        "response": "stilts cone serviceurl=http://archive.eso.org/tap_cat lon=45.0 lat=-45.0 radius='90.0 / 3600.0' skysys=ecliptic out=eso_ecliptic_90as.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"90.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Retrieve all table metadata from the MAST PanSTARRS 1 DR1 service.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT * FROM TAP_SCHEMA.tables' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine two tables, adding a column 'PARALLAX_PC' calculated from 'PARALLAX' (in mas) using the expression '1.0 / (PARALLAX * 0.001)'.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol PARALLAX_PC \"1.0 / (PARALLAX * 0.001)\"' out=parallax_pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '(PARALLAX' '*' '0.001)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_PC 1.0 / (PARALLAX * 0.001)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '(PARALLAX' '*' '0.001)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a MOC from points, but only for the northern hemisphere.",
        "response": "stilts mocshape in=all_sky.fits icmd='select \"DEC >= 0\"' shape=point coords='array(RA, DEC)' out=north_sky.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve data from PanSTARRS 1 DR1 and inspect the full structural metadata of the output table (column definitions, units, etc.).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 1 * FROM dbo.detection_object' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "My `csv` file has columns ra_sex and dec_sex. Make me a MOC.",
        "response": "stilts mocshape in=data.csv ifmt=csv shape=point coords='array(hmsToDegrees(ra_sex),dmsToDegrees(dec_sex))' out=data_sex.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Join T1.fits and T2.fits using a full outer join (include all rows from both). Match on position within 5 arcsec and sort the output by the calculated separation.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' join=1or2 scorecol=Separation ocmd='sort Separation' out=full_outer_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query GAVO for a small list of tables and output as a CSV file using a pipe (|) character as a delimiter.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 10 * FROM TAP_SCHEMA.tables' ofmt='csv(delimiter=|)' out=gavo_tables.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the GAVO Data Center for tables containing the string 'quasar' and output the list in CSV format.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT table_name FROM TAP_SCHEMA.tables WHERE description LIKE ''%quasar%''' ofmt=csv out=gavo_quasar_list.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match `a.fits` and `b.fits`. Then select only the rows from the output where the magnitude from `a` is brighter than the magnitude from `b`.",
        "response": "stilts tmatch2 in1=a.fits in2=b.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=all suffix1=_a suffix2=_b ocmd='select \"MAG_a < MAG_b\"' out=brighter_matches.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' 'MAG_b'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_a < MAG_b\n\nUsage: select <expr>\n    (Unused arguments: '<' 'MAG_b'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create a plot showing the 5th and 95th percentile range as a filled polygon using the arrayquantile layer.",
        "response": "stilts plot2plane in=spectra.fits layer=arrayquantile xs=WAVE ys=FLUX quantiles='0.05,0.95' join=polygon color=lightgreen transparency=0.4 out=array_90pct_fill.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVE\"\n    (The name \"WAVE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I have several files with different extensions, e.g. `data.fits` and `more_data.csv`. Can I concatenate them if they have the same column structure?",
        "response": "Yes, you can use tcatn. For tcat, all input tables are assumed to have the same format specified by a single `ifmt` parameter. `tcatn` is more flexible for heterogeneous inputs.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcat"
    },
    {
        "prompt": "Find sources near Ecliptic Lon 270, Lat 60, using 10 arcseconds as the search radius, and retrieve only the table metadata structure.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=270.0 lat=60.0 radius='10.0 / 3600.0' skysys=ecliptic omode=meta",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine two tables, adding a column that flags if the 'FLUX' value is greater than the mean flux of the entire combined dataset.",
        "response": "stilts tcatn nin=2 in1=a.fits in2=b.fits ocmd='addcol IS_HIGH_FLUX \"FLUX > mean(FLUX)\"' out=high_flux_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_HIGH_FLUX FLUX > mean(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Perform a search with a verbose output but discard the result table immediately after generation.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=15.0 lat=15.0 radius=0.001 verb=3 omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). T2 coordinates (GLON, GLAT) are Galactic. Convert them to ICRS before matching T1 and T3 (5 arcsec tolerance).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=5 in1=T1.fits in2=T2.fits icmd2='addskycoords galactic icrs GLON GLAT RA DEC' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=gal_to_icrs_group_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 86.6614 and latitude 83.1566. Please use a search radius of 1.2678 degrees. Save the results to a votable file called query_results_127.votable.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=86.6614 lat=83.1566 radius=1.2678 omode=out ofmt=votable out=query_results_127.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "How can I convert a table into a simple text representation with table parameters included?",
        "response": "stilts tcopy in=data.fits ofmt='text(params=true)' out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Explode all array columns in the input table and rename the output table.",
        "response": "stilts tpipe in=arrays.fits cmd='explodeall' cmd='tablename exploded_scalars' out=exploded.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an all-sky plot using the Aitoff projection, ensuring the text labels (coordinates) use a serif font.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC projection=aitoff fontstyle=serif out=aitoff_serif.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve 50 sources from the MUSE-Wide survey deep field with redshift confidence (`z_conf`) greater than 0.9.",
        "response": "stilts tapquery tapurl=https://musewide.aip.de/tap adql='SELECT TOP 50 ra, dec, redshift FROM mwide.deep_field WHERE z_conf > 0.9' out=muse_high_conf.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge tables and write the output as an HTML table fragment.",
        "response": "stilts tcat in='web_parts*.fits' ofmt=html out=web_output.html",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate two tables, but only keep rows where the absolute difference between 'MAG1' and 'MAG2' is less than 0.5.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='select \"abs(MAG1 - MAG2) < 0.5\"' out=small_mag_diff.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG2)' '<' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(MAG1 - MAG2) < 0.5\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG2)' '<' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate a FITS table with an IPAC table. Output the resulting table to TOPCAT.",
        "response": "stilts tcatn nin=2 in1=fits_data.fits in2=ipac_data.tbl ifmt2=ipac omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot a Gaussian curve and explicitly set the histogram bin size to 0.01 units for the underlying calculation.",
        "response": "stilts plot2plane in=data.fits layer=gaussian x=VALUE binsize=0.01 out=gaussian_0p01_bins.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot the nominal centers of STC-S regions (central layer) and label them with 'ID'.",
        "response": "stilts plot2sky in=footprints.fits layer_c=central area_c=S_REGION areatype_c=STC-S layer_l=arealabel area_l=S_REGION areatype_l=STC-S label_l=ID out=labeled_centers.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"S_REGION\"\n    (The name \"S_REGION\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'VELOCITY_GAL' containing the full 3-component galactic velocity vector (UVW).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VELOCITY_GAL \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=full_galactic_vel.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VELOCITY_GAL icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Group match three tables. One table is provided via standard input (VOTable format).",
        "response": "cat stream.vot | stilts tmatchn nin=3 multimode=group matcher=sky params=2 in1=t1.fits in2=t2.fits in3=- ifmt3=votable values1='RA DEC' values2='RA DEC' values3='RA DEC' out=piped_group_match.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find the total number of sources available in the MAST Hubble Source Catalog Version 3 (HSCv3).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT COUNT(*) FROM hsc_v3.point' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate tables and, before final output, keep only rows where the calculated column 'COLOR' (MAG_R - MAG_I) is positive.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='addcol COLOR \"MAG_R - MAG_I\"' ocmd='select \"COLOR > 0\"' out=positive_color.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_I'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COLOR MAG_R - MAG_I\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_I'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Run a search using Galactic coordinates (l=40.0, b=0.5) with a 0.05 degree radius and pipe the output directly to TOPCAT.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=40.0 lat=0.5 radius=0.05 skysys=galactic omode=topcat",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "My table has supergalactic coordinates `SGL`, `SGB`. Create a MOC.",
        "response": "stilts pixfoot in=supergalactic_data.fits icmd='addskycoords supergalactic icrs SGL SGB RA_ICRS DEC_ICRS' ra=RA_ICRS dec=DEC_ICRS out=supergalactic_to_icrs.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine tables and add two columns: the numerical sequence ID ('Idx') and the originating filename ('File').",
        "response": "stilts tcat in='d1.fits d2.fits' seqcol=Idx loccol=File out=indexed_provenance.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Can `pixfoot` produce a MOC in XML format?",
        "response": "No, `pixfoot` does not directly support XML output for MOCs. The available formats are `fits`, `json`, and `ascii`. While VOTable is an XML format, `pixfoot`'s output is a MOC file, not a standard table.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the ESO TAP_CAT for the top 10 rows of the VISTA Hemisphere Survey (VHS) catalog structure, outputting the result as a raw TSV (Text) stream to the terminal.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT TOP 10 * FROM tap_schema.tables' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Group match four tables (S1-S4) on 1D magnitude (MAG) within a 0.5 tolerance. Use TST format for input S1.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=1d params=0.5 values1=MAG values2=MAG values3=MAG values4=MAG in1=S1.tst ifmt1=tst in2=S2.fits in3=S3.fits in4=S4.fits out=mag_tst_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1 and T2. T1 is a simulated Henon attractor table (:attractor:1e5,henon). Match on X, Y coordinates (2d, 1 unit tolerance).",
        "response": "stilts tmatch2 in1=:attractor:1e5,henon in2=T2.fits matcher=2d params=1 values1='x y' values2='X Y' out=henon_attractor_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot a KDE with a Gaussian smoothing kernel.",
        "response": "stilts plot2plane in=data.fits layer=kde x=VALUE kernel=gauss3",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 10 ObsCore entries from the EVN Data Archive and save the output in the Parquet columnar format.",
        "response": "stilts tapquery tapurl=http://evn-vo.jive.eu/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' ofmt=parquet out=evn_obs.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a circle MOC using a radius defined by 300 mas (milli-arcseconds).",
        "response": "stilts mocshape in=stars.fits shape=circle coords='array(RA, DEC, 300.0 / 3600000.0)' out=mas_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "How do I match two catalogs where the match radius is the quadrature sum of their individual errors (`pos_err_1`, `pos_err_2`)?",
        "response": "stilts tmatch2 in1=cat_A.fits in2=cat_B.fits matcher=skyerr_q params=3 values1='RA DEC pos_err_1' values2='RA DEC pos_err_2' out=quadrature_error_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query SIMBAD TAP near RA 190, Dec -20, with a radius of 2 arcminutes, keeping only rows where 'MAG_V' is less than 14.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=190.0 lat=-20.0 radius='2.0 / 60.0' ocmd='select MAG_V < 14.0' out=simbad_bright_filter.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"2.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T3 has its errors in degrees. Convert these to arcseconds before matching using `skyerr`.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=skyerr params=1 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='replacecol ERR ERR*3600.0' values1='RA DEC ERR' values2='RA DEC ERR' values3='RA DEC ERR' out=deg_err_to_arcsec_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate a MOC for objects where the `OBS_TYPE` column is 'SPECTROSCOPY'.",
        "response": "stilts pixfoot in=obs_log.fits icmd='select OBS_TYPE==\"SPECTROSCOPY\"' out=spectroscopy_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate three tables, and then calculate the standard deviation of 'TEFF' for the combined result.",
        "response": "stilts tcat in='s1.fits s2.fits s3.fits' ocmd='keepcols TEFF' omode=stats ocmd='keepcols StDev'",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Add a column 'DEC_DMS_2' converting DEC in degrees to DMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_2 \"degreesToDms(DEC, 2)\"' out=dms_dec_2s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_2 degreesToDms(DEC, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Group match three tables on 'MJD' time coordinate within 0.01 day tolerance. T1 uses a string ISO 8601 column ('TIME_STR'); convert to MJD before matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.01 in1=T1.fits icmd1='addcol MJD isoToMjd(TIME_STR)' in2=T2.fits in3=T3.fits values1=MJD values2=MJD values3=MJD out=time_string_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot multiple lines from an array column FLUX_A vs WAVE_A using the lines layer, ensuring the background is transparent.",
        "response": "stilts plot2plane in=spectra.fits layer=lines xs=WAVE_A ys=FLUX_A ofmt=png-transp out=transparent_lines.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVE_A\"\n    (The name \"WAVE_A\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Overlay density contours on a scatter plot, applying a Square Root function to the density values.",
        "response": "stilts plot2sky in=data.fits layer_m=mark lon_m=RA lat_m=DEC layer_c=contour lon_c=RA lat_c=DEC scaling_c=linear densefunc_c=sqrt out=sqrt_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert a FITS file to a Feather file using the `.fea` extension.",
        "response": "stilts tcopy in=input.fits out=output.fea",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I want to match three photometric catalogs (`u_band.fits`, `g_band.fits`, `r_band.fits`) on sky position (2 arcsec) and magnitude (within 0.2 mag).",
        "response": "stilts tmatchn nin=3 in1=u_band.fits in2=g_band.fits in3=r_band.fits multimode=group matcher=sky+1d params='2 0.2' values1='RA DEC UMAG' values2='RA DEC GMAG' values3='RA DEC RMAG' out=multi_color_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "How to query the GAVO TAP service and save the output as an ECSV file?",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 100 * FROM ivoa.obscore' ofmt=ecsv out=query_result.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How to convert the Modified Julian Date in column `MJD` to an ISO-8601 string in a new column `ISO_DATE`?",
        "response": "stilts tpipe in=time_data.fits cmd='addcol ISO_DATE mjdToIso(MJD)' out=time_data_iso.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "What does a negative radius in a `shape=circle` coordinate mean?",
        "response": "A negative radius is physically meaningless for a circle. `mocshape` will likely ignore rows where the radius expression evaluates to a negative number, so they will not contribute to the final MOC.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "How do I make a MOC from circles where the radius depends on magnitude, e.g., `5.0/phot_g_mean_mag`?",
        "response": "stilts mocshape in=gaia.fits shape=circle coords='array(ra,dec, 5.0/phot_g_mean_mag)' out=mag_dependent_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve 5 ObsCore entries from the ESO TAP_OBS and explicitly request TAP 1.1 protocol handling.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 5 * FROM ivoa.ObsCore' interface=tap1.1 out=eso_tap11.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find rows in T_MAIN that are NOT matched in T_SUPP (2 arcsec sky radius). Output the result in ECSV format.",
        "response": "stilts tmatch2 in1=T_MAIN.fits in2=T_SUPP.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' join=1not2 ofmt=ecsv out=unmatched_ecsv.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch four tables using the `skyellipse` matcher (10 arcsec scale). Parameters: RA, DEC, A_MAJ, B_MIN, PA.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=skyellipse params=10 values1='RA DEC A_MAJ B_MIN PA' values2='RA DEC A_MAJ B_MIN PA' values3='RA DEC A_MAJ B_MIN PA' values4='RA DEC A_MAJ B_MIN PA' in1=E1.fits in2=E2.fits in3=E3.fits in4=E4.fits out=elliptical_4way_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert a column of degrees, minutes, and seconds (DEG, MIN, SEC) into a single decimal degree column, replacing the original columns.",
        "response": "stilts tpipe in=dms.fits cmd='replacecol DEG \"dmsToDegrees(DEG, MIN, SEC)\"' cmd='delcols \"MIN SEC\"' out=decimal_dms.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MIN,' 'SEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol DEG dmsToDegrees(DEG, MIN, SEC)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'MIN,' 'SEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the checksum of the entire EPN core table from the PADC Planetary server.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT * FROM epn_core.epn_core' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the coverage for targets with a fixed radius of 0.1 degrees, stored in targets.ecsv.",
        "response": "stilts pixfoot in=targets.ecsv ifmt=ecsv ra=RA dec=DEC radius=0.1 out=targets_0p1deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I want to merge `survey1.fits` and `survey2.fits`. Before merging, for each file, please convert the 'RA_RAD' column from radians to degrees and name it 'RA_DEG'.",
        "response": "stilts tcat in=survey1.fits in=survey2.fits icmd='addcol RA_DEG degreesToRadians(RA_RAD)' out=survey_deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I need targets from VizieR TAP around 20h 30m 00s, +50d 00m 00s, using $120$ arcseconds as the cone radius.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon='hmsToDegrees(20.5, 0, 0)' lat='dmsToDegrees(50.0, 0, 0)' radius='120.0 / 3600.0' out=vizier_120as.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(20.5, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the ESO TAP_OBS for ObsCore entries and locally assert that the minimum time `T_MIN` is greater than MJD 50000.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 T_MIN FROM ivoa.ObsCore' ocmd='assert \"T_MIN > 50000\"' out=eso_assert_time.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '50000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert T_MIN > 50000\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '50000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the AIP DaCHS TAP service near Ecliptic Lon 100, Lat 20, using 0.5 arcminutes.",
        "response": "stilts cone serviceurl=http://gavo.aip.de/tap lon=100.0 lat=20.0 radius='0.5 / 60.0' skysys=ecliptic out=aip_0p5am_ecl.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.5 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the PADC TAP Planetary server for Mars observations and calculate the statistical summary of its coordinates.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT ra, dec FROM epn_core.epn_core WHERE target_name = ''Mars''' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a FITS file to HTML output, specifying that long cells should be truncated at 500 characters.",
        "response": "stilts tcopy in=long_fields.fits ofmt='html(maxCell=500)' out=truncated_html.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine tables T1 and T2. T2 requires conversion of its string-based right ascension 'RA_STR' into numeric degrees.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='replacecol RA hmsToDegrees(RA_STR)' out=hms_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the Pollux Synthetic Spectra service for available models, explicitly using the VQL (VOTable Query Language) interface language.",
        "response": "stilts tapquery tapurl=https://pollux.oreme.org/vo/datalink/speconvol? adql='SELECT * FROM tap_schema.tables WHERE description LIKE ''%model%''' language=VQL out=pollux_models.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the GAVO Data Center around RA 220, Dec -40, using $50$ mas, and convert a column 'FLUX_ERR' from linear to log space.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=220.0 lat=-40.0 radius='50.0 / 3600000.0' ocmd='replacecol LOG_FLUX_ERR log10(FLUX_ERR)' out=gavo_log_error.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"50.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plotting two layers: marks colored by Z, and vectors showing DX/DY, both using translucent shading.",
        "response": "stilts plot2plane in=data.fits layer_m=mark x_m=X y_m=Y shading_m=translucent aux_m=Z layer_v=xyvector x_v=X y_v=Y xdelta_v=DX ydelta_v=DY shading_v=translucent out=dual_translucent.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Collapse four magnitude columns (M1, M2, M3, M4) into a single 4-element array column named 'M_ARRAY' and remove the originals.",
        "response": "stilts tpipe in=phot.fits cmd='collapsecols M_ARRAY M1 4' out=phot_collapsed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an all-sky plot using the Plate Carr\u00e9e projection (CAR), ensuring the plot title is 'All Sky Survey'.",
        "response": "stilts plot2sky in=survey.fits layer=mark lon=RA lat=DEC projection=car title='All Sky Survey' out=car_titled.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the GAVO Data Center for metadata on columns in the SDSS DR16 QSO table, retaining only the UCD and Description fields.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT column_name, ucd, description FROM TAP_SCHEMA.columns WHERE table_name = ''sdss.dr16qso''' out=gavo_qso_meta.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XY_LOG' containing the natural log of the quadrature sum of X_ERR and Y_ERR.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XY_LOG \"ln(hypot(X_ERR, Y_ERR))\"' out=xy_quad_error_log.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Y_ERR))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XY_LOG ln(hypot(X_ERR, Y_ERR))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_ERR))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Take a table and show me the median, first, and third quartiles for every numeric column.",
        "response": "stilts tpipe in=my_data.fits cmd='stats Name Median Quartile1 Quartile3' ofmt=text",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a MOC for the galactic anti-center region from a simulated all-sky catalog.",
        "response": "stilts pixfoot in=:skysim:1e6 icmd='addskycoords icrs galactic ra dec l b' icmd='select skyDistance(l,b,180,0)<10' ra=ra dec=dec out=anti_center.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot markers sized by distance (DIST) and colored by density, using the Asinh scaling function.",
        "response": "stilts plot2sky in=sources.fits layer=size lon=RA lat=DEC size=DIST shading=density densefunc=asinh out=asinh_density_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve 10 entries of raw VIRCAM data from ESO TAP_OBS, filtering the remote table to include only records marked as 'RAW' data products.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 ra, dec FROM raw.vircam WHERE dp_type = ''RAW''' out=eso_raw.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine `table_1.fits`, `table_2.fits`. Before joining, for each, add a column `LOG_E` which is the natural log of the `ENERGY` column.",
        "response": "stilts tcat in=table_1.fits in=table_2.fits icmd='addcol LOG_E ln(ENERGY)' out=tables_with_log.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot a histogram where the count values are aggregated per unit of bin size (combine=count-per-unit).",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE combine=count-per-unit out=per_unit_hist_1d.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T_MAIN against T2, T3. T2 has coordinates in FK4 B1950. Convert T2 coordinates to ICRS J2000 before matching T_MAIN and T3.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T_MAIN.fits in2=T2.fits icmd2='addskycoords fk4 icrs RA_B1950 DEC_B1950 RA DEC' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=fk4_converted_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match `a.fits` and `b.fits`. If there are multiple matches for a row in `a.fits`, I want all of them. But for `b.fits`, each row should only be matched once (to its best partner in `a.fits`).",
        "response": "This requires two separate matches. First find best matches for b: `stilts tmatch2 in1=a.fits in2=b.fits find=best2 ...`. Then use that result to get all matches for a.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Group match three tables (P1, P2, P3). P1 has an array column 'FLUX_VEC'. Explode it into scalars before matching on FLUX_0.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.1 in1=P1.fits icmd1='explodecols FLUX_VEC' in2=P2.fits in3=P3.fits values1=FLUX_VEC_0 values2=FLUX_VEC_0 values3=FLUX_VEC_0 out=array_exploded_1d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read data from a system command pipeline that returns ASCII data, and save it as VOTable.",
        "response": "cat raw_data.txt | stilts tcopy in=- ifmt=ascii out=piped_ascii.vot",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve the list of available tables from the KIS Science Data Centre and output the result in VOTable BINARY serialization format.",
        "response": "stilts tapquery tapurl=http://dachs.sdc.leibniz-kis.de/tap adql='SELECT * FROM TAP_SCHEMA.tables' ofmt='votable(format=BINARY)' out=kis_tables.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge `catalog_a.vot` and `catalog_b.vot` and then calculate a checksum on the resulting table.",
        "response": "stilts tcat in=catalog_a.vot in=catalog_b.vot omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Filter to keep only rows where the integer column 'STATUS' has the 6th bit set (0x20).",
        "response": "stilts tpipe in=flags.fits cmd='select \"hasBit(STATUS, 5)\"' out=bit_5_set.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(STATUS, 5)\n\nUsage: select <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine tables, converting the output format to VOTable with the less efficient, but highly portable, TABLEDATA serialization.",
        "response": "stilts tcat in='v1.fits v2.fits' ofmt='votable(format=TABLEDATA)' out=tabledata_merge.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I have coordinates in degrees, minutes, seconds (DEC_D, DEC_M, DEC_S). Convert them to decimal degrees before creating a point MOC.",
        "response": "stilts pixfoot in=dms_data.fits ra=RA dec='dmsToDegrees(DEC_D, DEC_M, DEC_S)' radius=0 out=dms_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the Laurino 2011 Catalogue (INAF) for the 10 brightest sources (r_mag < 18) and output the results using the VOTable 1.4 schema.",
        "response": "stilts tapquery tapurl=http://ia2-tap.oats.inaf.it:8080/wgetap adql='SELECT TOP 10 * FROM laurino2011.master WHERE r_mag < 18' ofmt='votable(version=V14)' out=laurino_vot14.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 350.1211 and latitude -17.0337. Please use a search radius of 0.337 degrees. Save the results to a ascii file called query_results_98.ascii.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=350.1211 lat=-17.0337 radius=0.337 omode=out ofmt=ascii out=query_results_98.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I want to see the last 20 rows of my observation log `obslog.dat`.",
        "response": "stilts tpipe ifmt=ascii in=obslog.dat cmd='tail 20' ofmt=text",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot error ellipses derived from Gaia correlation parameters (mas unit), using a crosshair shape and scale factor 1e6.",
        "response": "stilts plot2sky in=gaia_err.fits layer=skycorr lon=RA lat=DEC lonerr=RA_ERR laterr=DEC_ERR corr=CORR unit=mas scale=1e6 ellipse=crosshair_ellipse out=gaia_corr_1e6.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Stack `log_day1.txt`, `log_day2.txt`, and `log_day3.txt`, which are ASCII tables. The final result should be sent to TOPCAT.",
        "response": "stilts tcat ifmt=ascii in=\"log_day1.txt log_day2.txt log_day3.txt\" omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot markers sized by MAG, ensuring the scale factor is 0.5 (smaller markers).",
        "response": "stilts plot2sky in=sources.fits layer=size lon=RA lat=DEC size=MAG scale=0.5 out=half_scale_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match three tables using 2D Cartesian error combined in quadrature (2d_err_q) on X, Y pixel coordinates (1 unit scale).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=2d_err_q params=1 values1='X Y E_POS' values2='X Y E_POS' values3='X Y E_POS' in1=I1.fits in2=I2.fits in3=I3.fits out=image_error_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "How can I generate the footprint for circular regions of 30 arcseconds around each object in my `clusters_list.fits` catalog?",
        "response": "stilts pixfoot in=clusters_list.fits radius=30./3600. out=cluster_regions.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Retrieve 100 sources from the WiggleZ Final Data Release and save the output in ECSV format.",
        "response": "stilts tapquery tapurl=http://wiggleztap.asvo.nci.org.au/ncitap//tap adql='SELECT TOP 100 * FROM wigglez_final.sources' ofmt=ecsv out=wigglez_sample.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Join T_A and T_B. Only rows present in ONE table (symmetric difference, 1xor2) should be included. Match exactly on ID.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=exact values1=ID values2=ID join=1xor2 out=exact_symmetric_diff.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a plot and show it in the `omode=swing` window.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y omode=swing",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the VSA (VISTA) Science Archive and locally sort the resulting table by the J_MAG column in descending order.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/vsa adql='SELECT TOP 100 * FROM vsa.catalogue' ocmd='sort -down J_MAG' out=vsa_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find top 100 entries in Chandra Source Catalog Release 2.1 with soft band flux above 1e-13, running the query synchronously.",
        "response": "stilts tapquery tapurl=https://cda.cfa.harvard.edu/csc21tap adql='SELECT TOP 100 * FROM csc.master_source WHERE flux_s > 1e-13' sync=true out=csc_soft_bright.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 100 entries from the SIMBAD database, filtering for objects classified as 'G' (Galaxies).",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT TOP 100 * FROM basic WHERE otype = ''G''' out=simbad_galaxies.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a histogram where the bar style is just the top line (`tops`).",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE barform=tops",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a raw binary MOC stream (order 20) for coordinates read from a pipe-fed CSV stream.",
        "response": "cat stream_data.csv | stilts mocshape in=- ifmt=csv shape=point coords='array(RA, DEC)' order=20 mocfmt=raw out=piped_moc_o20.bin",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need to combine an ASCII table (headerless) with a FITS table.",
        "response": "stilts tcatn nin=2 in1=data.txt ifmt1=ascii icmd1='colmeta -name C1 $1; colmeta -name C2 $2' in2=data.fits ocmd='keepcols \"C1 C2\"' out=combined_ascii.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate an all-sky plot using Plate Carr\u00e9e projection, centered at Lon=180 (CAR0), saving as PNG (default white background).",
        "response": "stilts plot2sky in=data.fits projection=car0 layer=mark lon=RA lat=DEC ofmt=png out=car0_white_bg.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Group match four tables (M1-M4) on a combination of 2D position (X, Y, 5 units) and 1D color index (C, 0.1 unit).",
        "response": "stilts tmatchn nin=4 multimode=group matcher=2d+1d params='5 0.1' values1='X Y C' values2='X Y C' values3='X Y C' values4='X Y C' in1=M1.fits in2=M2.fits in3=M3.fits in4=M4.fits out=cartesian_color_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I want to create a column `DISTANCE_PC` which is 1000 divided by the parallax in milliarcseconds (`parallax` column).",
        "response": "stilts tpipe in=gaia_data.fits cmd='addcol DISTANCE_PC 1000./parallax' out=gaia_with_distances.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I have ecliptic coordinates in radians. How do I make the MOC?",
        "response": "stilts mocshape in=ecliptic_rad.fits icmd='addskycoords ecliptic icrs radiansToDegrees(ELON_RAD) radiansToDegrees(ELAT_RAD) RA_ICRS DEC_ICRS' shape=point coords='array(RA_ICRS,DEC_ICRS)' out=ecliptic_rad_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a new column 'LOG_MASS' which is the base-10 logarithm of 'MASS', explicitly setting its type as double.",
        "response": "stilts tpipe in=stars.fits cmd='addcol -type \"double LOG_MASS log10(MASS)\"' out=double_log_stars.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'LOG_MASS' 'log10(MASS)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type double LOG_MASS log10(MASS)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'LOG_MASS' 'log10(MASS)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query ESO TAP_OBS for VIRCAM raw data and output the result using the Verbose VOTable serialization (TABLEDATA).",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 * FROM raw.vircam' ofmt='votable(format=TABLEDATA)' out=eso_vircam_ascii.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter out rows where the boolean column 'VALID_FLAG' is false and calculate the total size of the resultant data stream in bytes, discarding the output.",
        "response": "stilts tpipe in=data.fits cmd='select VALID_FLAG' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table `galaxy_catalog.fits` to only include rows where the redshift `z` is greater than 0.5. Save the result to a new file `high_z_galaxies.fits`.",
        "response": "stilts tpipe in=galaxy_catalog.fits cmd='select \"z > 0.5\"' out=high_z_galaxies.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select z > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table containing an array column 'FLUX_ARRAY' and calculate the array's sum and mean into two new scalar columns.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol SUM_FLUX sum(FLUX_ARRAY)' cmd='addcol MEAN_FLUX mean(FLUX_ARRAY)' out=spectral_moments.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "In a table with proper motions, filter out sources where the total proper motion (hypot(PMRA, PMDEC)) is less than 10 mas/yr.",
        "response": "stilts tpipe in=gaia_pm.fits cmd='select \"hypot(PMRA, PMDEC) >= 10.0\"' out=high_pm.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>=' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) >= 10.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>=' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a FITS file to VOTable, explicitly setting VOTable version 1.4.",
        "response": "stilts tcopy in=latest.fits ofmt='votable(version=V14)' out=latest.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find rows in T1 that match T2. After matching, add a boolean column 'IS_CLOSE' if Separation < 0.5 arcsec.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' scorecol=Separation ocmd='addcol IS_CLOSE \"Separation < 0.5/3600.0\"' out=close_flagged_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.5/3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_CLOSE Separation < 0.5/3600.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '0.5/3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match four tables using Cartesian 2D coordinates (X, Y) where tolerance is 10 units. T4 output columns prefixed '_IV'.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=2d params=10 values1='X Y' values2='X Y' values3='X Y' values4='X Y' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits fixcols=dups suffix4=_IV out=d4_suffixed_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Upload a table with RA and DEC to AIP Gaia, ensuring the uploaded table uses VOTable BINARY serialization.",
        "response": "stilts tapquery tapurl=https://gaia.aip.de/tap adql='SELECT g.* FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.up_data AS u ON 1=CONTAINS(POINT(''ICRS'', g.ra, g.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.001))' nupload=1 upload1=local_file.fits upname1=up_data upvotformat=BINARY out=aip_binary_upload.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC (order 13) for all unique identifier strings in the input catalogue (requires coordinate assignment).",
        "response": "stilts mocshape in=unique_ids.fits icmd='uniq ID_STRING; addcol RA 0.0; addcol DEC 0.0' shape=point coords='array(RA, DEC)' order=13 out=unique_id_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Concatenate four different CSV files into one.",
        "response": "stilts tcatn nin=4 ifmt1=csv in1=q1.csv ifmt2=csv in2=q2.csv ifmt3=csv in3=q3.csv ifmt4=csv in4=q4.csv out=full_year.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match two tables on position, using quadrature error (skyerr_q). T1 error in arcmin; convert to arcsec (multiply by 60).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='replacecol E_ARCSEC E_ARCMIN*60' in2=T2.fits matcher=skyerr_q params=1 values1='RA DEC E_ARCSEC' values2='RA DEC E_ARCSEC' out=arcmin_to_arcsec_q.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a JSON MOC for the footprint of objects in `object_cat.fits` that have a non-zero parallax.",
        "response": "stilts pixfoot in=object_cat.fits icmd='select \"PARALLAX != 0\"' mocfmt=json out=parallax_objects.moc",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PARALLAX != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'PM_XYZ_GAL_X' containing the X (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_XYZ_GAL_X \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_x_vel_comp.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_XYZ_GAL_X icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Extract the best distance estimate (parsec) using the EDSD prior (L=1350pc) given 'PARALLAX' and 'PARALLAX_ERR'.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol DIST_EDSD \"distanceEstimateEdsd(PARALLAX, PARALLAX_ERR, 1350.0)\"' out=edsd_distance.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DIST_EDSD distanceEstimateEdsd(PARALLAX, PARALLAX_ERR, 1350.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables T1 and T2. T2 is a very wide FITS file (>999 columns). Output the combined result to FITS that supports all columns.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits out=wide_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert a local file to VOTable, overriding the default XML encoding to **ISO-8859-1**.",
        "response": "stilts tcopy in=data.fits ofmt='votable(encoding=ISO-8859-1)' out=iso_vot.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch five deep survey tiles using sky position (4 arcsec). Use parallel execution and log progress.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=4 values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA DEC' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits in5=D5.fits runner=parallel progress=log out=deep_field_parallel.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query ASI SSDC ObsCore for Fermi observations near RA 10, Dec 20, filtering the records to ensure they cover the gamma-ray energy band (em_min > 1e4 eV).",
        "response": "stilts tapquery tapurl=https://tools.ssdc.asi.it/TAPSSDC/tap adql='SELECT * FROM ivoa.ObsCore WHERE 1=CONTAINS(POINT(''ICRS'', s_ra, s_dec), CIRCLE(''ICRS'', 10.0, 20.0, 0.1)) AND em_min > 1E4' out=fermi_cone.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match four catalogs using anisotropic sky matching (sky+2d_anisotropic) on position and proper motion. Tolerances 2 arcsec, 10 mas/yr, 5 mas/yr.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=sky+2d_anisotropic params='2 10 5' values1='RA DEC PMRA PMDEC' values2='RA DEC PMRA PMDEC' values3='RA DEC PMRA PMDEC' values4='RA DEC PMRA PMDEC' in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits out=spacetime_anisotropic_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge tables and then randomly select every 50th row from the combined table.",
        "response": "stilts tcat in='r1.fits r2.fits' ocmd='every 50' out=every_50th_row.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Filter the table to keep only the second hundred rows (index 101 to 200).",
        "response": "stilts tpipe in=data.fits cmd='rowrange 101 200' out=second_hundred.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a boolean column 'IS_BRIGHT' only if MAG is defined (not null) and less than 18.",
        "response": "stilts tpipe in=cat.fits cmd='addcol IS_BRIGHT \"!NULL_MAG && MAG < 18.0\"' out=flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'MAG' '<' '18.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT !NULL_MAG && MAG < 18.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '&&' 'MAG' '<' '18.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Count the number of Gaia sources where the parallax error is less than 0.1 mas.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT COUNT(*) FROM gaiadr3.gaia_source WHERE parallax_error < 0.1' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find rows in T_Main that are NOT matched in T_Sup (exact ID match). T_Main only includes sources with 'FLAG' = true.",
        "response": "stilts tmatch2 in1=T_Main.fits icmd1='select FLAG' in2=T_Sup.fits matcher=exact values1=ID values2=ID join=1not2 out=flagged_unmatched.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate `a.fits`, `b.fits`, `c.fits`. After joining, keep only the columns named `ID`, `RA_DEG`, `DEC_DEG`.",
        "response": "stilts tcat in=\"a.fits b.fits c.fits\" ocmd='keepcols \"ID RA_DEG DEC_DEG\"' out=radec_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Start an asynchronous query on the MAST PanSTARRS 1 DR2 catalogue and request the job destruction time be set to an explicit date in 2026.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT * FROM dbo.detection_object WHERE g_mag < 22' destruction='2026-06-01T00:00:00' out=ps1dr2_long_job.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB_OLD_3' converting J magnitude to AB and then to absolute magnitude using distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_OLD_3 \"MAG_J + VEGA_AB_J\"' cmd='addcol MAG_ABS_J_AB_OLD_3 \"MAG_J_AB_OLD_3 - distanceToModulus(DISTANCE_PC)\"' out=j_abs_ab_old_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_OLD_3 MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_QUAD_SUM' containing the quadrature sum of the elements of array column 'ERR_ARRAY'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol ERROR_QUAD_SUM hypot(ERR_ARRAY)' out=array_quad_sum_hypot.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column containing the squared value of the hyperbolic cosine of 'VELOCITY'.",
        "response": "stilts tpipe in=data.fits cmd='addcol VEL_COSH_SQ square(cosh(VELOCITY))' out=hyperbolic_vel_sq.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "How do I convert a table into a very compact FITS file?",
        "response": "You can try converting it to a column-oriented FITS file, which can be more efficient for some access patterns: `stilts tcopy in=data.vot ofmt=colfits out=data.colfits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find all pairs (all) between A.fits and B.fits (exact ID match). After matching, calculate a checksum of the output table.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID find=all omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query MAST HSCv3 and exclude sources where the `f814w_mag` is null, using a local filter.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 100 * FROM hsc_v3.point' ocmd='select !NULL_f814w_mag' out=hsc_clean_f814w.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert the coordinates in `old_catalog.fits` from FK4 B1950 (`RA_B1950`, `DEC_B1950`) to FK5 J2000, naming the new columns `RA_J2000` and `DEC_J2000`.",
        "response": "stilts tpipe in=old_catalog.fits cmd='addskycoords fk4 fk5 RA_B1950 DEC_B1950 RA_J2000 DEC_J2000' out=new_catalog.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an MOC (order 10) for sources with a radius given by $\text{hypot}(\text{PMRA}, \text{PMDEC})$ in mas, converted to degrees.",
        "response": "stilts pixfoot in=pm_mas.fits ra=RA dec=DEC radius='hypot(PMRA, PMDEC) / 3600000.0' out=pm_mas_hypot.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I have multiple FITS extensions, each containing point data. Concatenate them and generate a single MOC (order 8).",
        "response": "You need to do two commands for this: ```stilts tcat in=multi_ext.fits multi=true``` followed by ```stilts mocshape in=- shape=point coords='array(RA, DEC)' order=8 out=multi_ext_moc.fits```",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: mocshape: not found\nError: No file, URL or command \"multi_ext.fits\"\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'Z_ASINH' applying inverse hyperbolic sine scaling to redshift (Z).",
        "response": "stilts tpipe in=data.fits cmd='addcol Z_ASINH asinh(Z)' out=asinh_z_simple.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "My polygon vertices are in an array-valued column `VERT_ARRAY`. How do I use it?",
        "response": "stilts mocshape in=polygons.fits shape=polygon coords=VERT_ARRAY out=polygon_arrays.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match T1 and T2. T2 contains parallax (PLX) in mas. Only include T2 rows where PLX is positive before performing any match.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='select \"PLX > 0\"' matcher=exact values1=ID values2=ID out=positive_parallax_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PLX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch T1 (ref) against T2 and T3. T3 contains an array column 'POS_ARRAY' that needs to be exploded into scalar RA/DEC columns before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='explodecols POS_ARRAY; colmeta -name RA POS_ARRAY_0; colmeta -name DEC POS_ARRAY_1' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=exploded_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need data from VizieR TAP near Galactic L=90, B=20, with radius 10 arcminutes, keeping the first 100 rows.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=90.0 lat=20.0 radius='10.0 / 60.0' skysys=galactic ocmd='head 100' out=vizier_head100.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find the maximum and minimum values of the `J_M` magnitude from the 2MASS Point Source Catalogue (II/246/out) hosted by VizieR CDSARC endpoint.",
        "response": "stilts tapquery tapurl=http://cdsarc.cds.unistra.fr/saadavizier.tap/tap adql='SELECT J_M FROM \"II/246/out\" WHERE J_M IS NOT NULL' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine tables, and add a column 'JD' by converting the existing 'MJD' column to Julian Date.",
        "response": "stilts tcat in='t1.fits t2.fits' ocmd='addcol JD \"MJD + 2400000.5\"' out=mjd_to_jd.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol JD MJD + 2400000.5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Find all MUSE-Wide survey deep field sources with a high signal-to-noise ratio (SNR > 100) on their continuum measurement.",
        "response": "stilts tapquery tapurl=https://musewide.aip.de/tap adql='SELECT * FROM mwide.deep_field WHERE snr_continuum > 100' out=muse_high_snr.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter rows to keep only those where the proper motion magnitude is less than 5 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"hypot(PMRA, PMDEC) < 5.0\"' out=low_pm.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '<' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) < 5.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '<' '5.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot points with a variable size given by $\\text{FLUX} \times 10^5$, coloring by density, and setting the background to transparent PNG.",
        "response": "stilts plot2plane in=data.fits layer=size x=X y=Y size='FLUX*1e5' shading=density out=size_density_transp.png ofmt=png-transp",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Check the validity of an ADQL query to the European HST Archive selecting ObsCore data by target name, without executing the query.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore WHERE target_name = ''M31''' parse=true omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need the footprint for sources that are not saturated (`SATURATED==false`).",
        "response": "stilts mocshape in=photometry.fits icmd='select !SATURATED' shape=point coords='array(RA,DEC)' out=unsaturated.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Read a compressed FITS file from a remote URL, remove the 'MAG_ERROR' column, and save it locally.",
        "response": "stilts tpipe in=http://example.com/cat.fits.gz cmd='delcols MAG_ERROR' out=local_cat.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot vectors showing velocity components (km/s) using the scaled unit, with the arrow shape set to 'medium_filled_dart'.",
        "response": "stilts plot2sky in=flow.fits layer=skyvector lon=RA lat=DEC dlon=VX dlat=VY unit=scaled arrow=medium_filled_dart out=scaled_filled_dart.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Merge `data1.fits`, `data2.fits`, `data3.fits`. After they are merged, I only want to see the last 10 rows.",
        "response": "stilts tcat in=\"data1.fits data2.fits data3.fits\" ocmd='tail 10' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I'm joining many files. What's the difference between `lazy=true` and `istream=true`?",
        "response": "The `lazy=true` parameter defers accessing each table until its rows are needed, which is useful when concatenating a very large number of files to avoid resource issues like running out of file handles [2]. The `istream=true` parameter forces a table to be read as a stream, which can use less resources for certain formats but may fail if the data needs to be read more than once [2, 3].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot two markers from the same row (mark2 layer), hiding the legend.",
        "response": "stilts plot2sky in=pairs.fits layer=mark2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 legend=false out=mark2_no_legend.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate an ASCII MOC at order 8, with a 1 arcmin radius for each point.",
        "response": "stilts pixfoot in=points.vot radius=1.0/60.0 order=8 mocfmt=ascii out=points_arcmin.moc.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Run a synchronous query against the ESA XMM-Newton archive for the top 5 ObsCore entries, ensuring the output is a verbose VOTable (TABLEDATA format).",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT TOP 5 * FROM ivoa.ObsCore' sync=true ofmt='votable(format=TABLEDATA)' out=xmm_verbose.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers sized independently in X (WID) and Y (LEN) directions, using 'filled_rectangle' shape.",
        "response": "stilts plot2plane in=blobs.fits layer=sizexy x=X_CEN y=Y_CEN xsize=WID ysize=LEN shape=filled_rectangle out=sizexy_rect.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_CEN\"\n    (The name \"X_CEN\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Concatenate three files and output statistics, specifically mean and standard deviation for the magnitude column.",
        "response": "stilts tcatn nin=3 in1=c1.fits in2=c2.fits in3=c3.fits ocmd='keepcols MAG' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "What does an order of 29 mean?",
        "response": "An order of 29 is the highest resolution for a MOC, corresponding to an extremely fine grid of pixels on the sky. It is suitable only for very small regions. Example: `stilts mocshape in=small.fits order=29 ...`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Read a PDS4 file, restricting the read only to observational tables.",
        "response": "stilts tcopy in=pds_obs.xml ifmt='pds4(observational=true)' out=obs_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot a Gaussian curve fitted to my 'velocity' data distribution.",
        "response": "stilts plot2plane in=velocities.fits layer_h=histogram x_h=velocity layer_g=gaussian x_g=velocity",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"velocity\"\n    (The name \"velocity\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Give me a list of objects that are in either `cat1.fits` or `cat2.fits` but not in both, based on a 2 arcsec sky match.",
        "response": "stilts tmatch2 in1=cat1.fits in2=cat2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' join=1xor2 out=symmetric_difference.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve the names of all tables available from the VSA (VISTA Science Archive) TAP service, displaying the column metadata.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/vsa adql='SELECT table_name FROM TAP_SCHEMA.tables' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to query a TAP service that requires authentication.",
        "response": "stilts tapquery tapurl=https://my.secure.service/tap adql='SELECT * FROM secret_table' auth=true",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine catalogue parts A and B. A uses Galactic coordinates (GLON, GLAT). Convert A's coordinates to Ecliptic (ELON, ELAT) before combining.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='addskycoords galactic ecliptic GLON GLAT ELON ELAT' in2=B.fits out=ecliptic_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the MAST CLASSY HLSP service for 50 observations and locally keep only columns whose names contain 'WAVE' or 'FLUX'.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/classy/ adql='SELECT TOP 50 * FROM ivoa.ObsCore' ocmd='keepcols \"ucd$em.wl ucd$phot.flux\"' out=classy_flux_wave.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find all matches (all) between A.fits and B.fits (sky 5 arcsec). After matching, calculate the magnitude difference MAG_DIFF = MAG_A - MAG_B.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' find=all fixcols=dups suffix1=_A suffix2=_B ocmd='addcol MAG_DIFF \"MAG_A - MAG_B\"' out=mag_diff_all_pairs.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_DIFF MAG_A - MAG_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot position vectors (unit=uas) using the large filled dart shape.",
        "response": "stilts plot2sky in=pm_high_res.fits layer=skyvector lon=RA lat=DEC dlon=PMRA dlat=PMDEC unit=uas arrow=large_filled_dart out=uas_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the IRSA TAP Service near Galactic L=270, B=5, using a 5 arcminute radius, and filter the result to keep only sources with detection flag=1.",
        "response": "stilts cone serviceurl=https://irsa.ipac.caltech.edu/TAP lon=270.0 lat=5.0 radius='5.0 / 60.0' skysys=galactic ocmd='select DETECT_FLAG == 1' out=irsa_detect1.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "My second table's columns are all uppercase. Can I convert them to lowercase before concatenating?",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits icmd2=fixcolnames out=lower_case.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine multiple daily log files (log_day*.txt, ASCII format) and add a column that contains the absolute row index starting from 1 in the final combined table.",
        "response": "stilts tcat ifmt=ascii in='log_day*.txt' ocmd='addcol RowNumber $0+1' out=indexed_logs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Synchronously retrieve 10 HST ObsCore entries and output as VOTable using the verbose TABLEDATA format.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' sync=true ofmt='votable(format=TABLEDATA)' out=hst_sample_ascii.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 sources from MAST SkyMapper DR4 and locally add a constant column named 'Survey' with value 'SMSS DR4'.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/skymapperdr4/ adql='SELECT TOP 10 ra, dec FROM smssdr4.master' ocmd='addcol Survey \"SMSS DR4\"' out=smss_with_tag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Replace null values in the 'FLUX_I' column with the numeric value 0.0.",
        "response": "stilts tpipe in=phot.fits cmd='replaceval NULL 0.0 FLUX_I' out=flux_zero_nulls.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables and write the final result as an HTML table snippet suitable for insertion into a webpage.",
        "response": "stilts tcat in='web_d1.fits web_d2.fits' ofmt=html out=web_snippet.html",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Replace the column 'RA' with its corresponding value in radians.",
        "response": "stilts tpipe in=data.fits cmd='replacecol RA degreesToRadians(RA)' out=ra_radians_meta.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_DMS_5' converting DEC in degrees to DMS string format with 5 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_5 \"degreesToDms(DEC, 5)\"' out=dms_dec_5s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_5 degreesToDms(DEC, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match T1, T2, T3 (T1 ref). T2 is an ECSV file, T3 is Parquet. Ensure formats are explicitly specified.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits in2=T2.ecsv ifmt2=ecsv in3=T3.parquet ifmt3=parquet values1='RA DEC' values2='RA DEC' values3='RA DEC' out=hetero_format_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve data from the Europlanet Telescope Network Database and locally filter out rows where the minimum time stamp (t_min) is null.",
        "response": "stilts tapquery tapurl=http://parsec-europlanet.eu:81/tap adql='SELECT TOP 100 * FROM TAP_SCHEMA.tables' ocmd='select !NULL_t_min' out=europlanet_clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Execute a high-precision search with radius 100 milli-arcseconds (0.1 arcsec) and output in ECSV format.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=1.0 lat=1.0 radius='0.1 / 3600.0' ofmt=ecsv out=hires_ecsv.ecsv",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.1 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find sources in the ESA Herschel TAP within $150$ mas of RA 10, Dec 0, outputting results as a compressed VOTable.",
        "response": "stilts cone serviceurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap lon=10.0 lat=0.0 radius='150.0 / 3600000.0' compress=true out=herschel_comp.vot.gz",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"150.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Search MAST PS1 DR1 near RA 300, Dec -20, with a radius of 0.0003 degrees, and output statistics of columns named FLUX*.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 lon=300.0 lat=-20.0 radius=0.0003 ocmd='keepcols FLUX*' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Filter out duplicate rows based on RA/DEC values before creating a point MOC (order 13).",
        "response": "stilts mocshape in=raw.fits icmd='uniq \"RA DEC\"' shape=point coords='array(RA, DEC)' order=13 out=unique_points_o13.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 145.3945 and latitude -39.5529. Please use a search radius of 0.7283 degrees. Save the results to a fits file called query_results_37.fits.",
        "response": "stilts cone servicetype=sia2 serviceurl=http://irsa.ipac.caltech.edu/sia lon=145.3945 lat=-39.5529 radius=0.7283 omode=out ofmt=fits out=query_results_37.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I need the separation distance (scorecol) and RA/DEC for cone results near RA 10, Dec 5, with radius 1 arcminute, discarding all other columns.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=10.0 lat=5.0 radius='1.0 / 60.0' scorecol=SepArcmin ocmd='keepcols \"RA DEC SepArcmin\"' out=min_sep.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read an ASCII file, and automatically fix messy column names (e.g., those containing spaces or symbols) to be syntactically legal.",
        "response": "stilts tpipe in=messy.txt ifmt=ascii cmd='fixcolnames' out=clean_names.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an order 8 MOC for sources where the magnitude 'R' is within the range 14 to 16.",
        "response": "stilts mocshape in=mag_range.fits icmd='select \"R_MAG >= 14.0 && R_MAG <= 16.0\"' shape=point coords='array(RA, DEC)' order=8 out=mag_filtered_o8.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '14.0' '&&' 'R_MAG' '<=' '16.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select R_MAG >= 14.0 && R_MAG <= 16.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '14.0' '&&' 'R_MAG' '<=' '16.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot a density map (skydensity, level 9) showing the minimum magnitude per square degree.",
        "response": "stilts plot2sky in=survey.fits layer=skydensity lon=RA lat=DEC level=9 weight=MAG combine=min perunit=degree2 out=hpx9_min_mag_sqdeg.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I want to join `table1.fits` with every 100th row of `table2.fits`.",
        "response": "stilts tcatn nin=2 in1=table1.fits in2=table2.fits icmd2='every 100' out=sparse_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "In `measurements.fits`, I need to replace the `FLUX` column with its square root.",
        "response": "stilts tpipe in=measurements.fits cmd='replacecol FLUX sqrt(FLUX)' out=sqrt_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Remove the parameter 'OBS_DATE_START' and set the table name to 'Observed Data'.",
        "response": "stilts tpipe in=meta.fits cmd='clearparams OBS_DATE_START' cmd='tablename \"Observed Data\"' out=renamed_and_cleared.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the Subaru HDS Spectrum data service for 10 records and require user authentication.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/hds/ adql='SELECT TOP 10 * FROM hds.spectrum' auth=true out=hds_auth_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query ESO TAP_OBS for 10 rows of VIRCAM raw data and locally rename the columns `s_ra` to `RA` and `s_dec` to `DEC`.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 s_ra, s_dec FROM raw.vircam' ocmd='colmeta -name RA s_ra; colmeta -name DEC s_dec' out=eso_vircam_rename.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Show me the metadata of the resulting table if I match `t1.fits` and `t2.fits` on sky position.",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 145.096 and latitude -39.7877. Please use a search radius of 1.8452 degrees. Instead of a file, just give me the checksum. The coordinates are in the supergalactic system.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=145.096 lat=-39.7877 radius=1.8452 skysys=supergalactic omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Draw lines connecting points sorted by their TIME column.",
        "response": "stilts plot2plane in=timeseries.fits layer=line x=TIME y=FLUX sortaxis=X out=sorted_line.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TIME\"\n    (The name \"TIME\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'HEALPIX_META' by setting coordinate system metadata (level 6, Galactic, RING scheme) for the current table.",
        "response": "stilts tpipe in=data.fits cmd='healpixmeta -level 6 -csys G -ring' out=hpx_meta_table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plotting polygons defined by STC-S strings, filled mode, darkgreen.",
        "response": "stilts plot2plane in=footprints.fits layer=area area=STC_REGION areatype=STC-S polymode=fill color=darkgreen out=stcs_filled.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"STC_REGION\"\n    (The name \"STC_REGION\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Please find all objects from `table2.fits` that have no counterpart in `table1.fits` within a 10 arcsecond radius.",
        "response": "stilts tmatch2 in1=table1.fits in2=table2.fits matcher=sky params=10 values1='RA DEC' values2='RA DEC' join=2not1 out=table2_unmatched.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match A.fits and B.fits exactly on 'ID'. After joining, retain only the 'ID' and 'FLUX' columns from both tables.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID fixcols=all suffix1=_A suffix2=_B ocmd='keepcols \"ID_A ID_B FLUX_A FLUX_B\"' out=id_flux_subset.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ID_B' 'FLUX_A' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID_A ID_B FLUX_A FLUX_B\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ID_B' 'FLUX_A' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a MOC (order 13) using the coordinates RA, DEC which are implicitly the first two floating point columns found.",
        "response": "stilts mocshape in=implicit_coords.fits shape=point coords='array(RA, DEC)' order=13 out=implicit_coords_o13.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve the top 10 rows from the MAST STScI Registry and output the result in IPAC format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/registry adql='SELECT TOP 10 * FROM reg.resource' ofmt=ipac out=registry_sample.ipac",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "For my table `object_classes.fits`, I want to group by the `CLASS` column and count how many objects are in each class.",
        "response": "stilts tpipe in=object_classes.fits cmd='group CLASS' omode=out ofmt=text",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a JSON MOC (order 11) for objects observed after MJD 56000.",
        "response": "stilts mocshape in=obs_log.fits icmd='select \"MJD > 56000\"' shape=point coords='array(RA, DEC)' order=11 mocfmt=json out=recent_obs_o11",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '56000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MJD > 56000\n\nUsage: select <expr>\n    (Unused arguments: '>' '56000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Use a system command to generate input for `tcopy`. For instance, combine two text files first.",
        "response": "stilts tcopy in='<cat header.txt data.txt' ifmt=ascii ofmt=fits out=combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate an MOC for the coverage of 0.0000001 degree radius circles around all points.",
        "response": "stilts pixfoot in=tiny_rad.fits ra=RA dec=DEC radius=1.0e-7 out=ultratiny_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the MAST CANDELS HLSP for photometry and locally add a column `FLUX_RATIO` (F160W_FLUX / F140W_FLUX).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT TOP 10 F160W_FLUX, F140W_FLUX FROM candels.photometry' ocmd='addcol FLUX_RATIO \"F160W_FLUX / F140W_FLUX\"' out=candels_flux_ratio.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'F140W_FLUX'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_RATIO F160W_FLUX / F140W_FLUX\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'F140W_FLUX'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a table from a compressed URL, convert the proper motion (PM) from mas/yr to degrees/yr, and save the checksum.",
        "response": "stilts tpipe in=http://example.com/gaia.fits.gz cmd='replacecol PMRA \"PMRA / 3600000.0\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PMRA PMRA / 3600000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Group match three tables (E1, E2, E3) using sky error quadrature (skyerr_q). Input parameters RA, DEC, and POS_ERR.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=skyerr_q params=1 values1='RA DEC POS_ERR' values2='RA DEC POS_ERR' values3='RA DEC POS_ERR' in1=E1.fits in2=E2.fits in3=E3.fits out=skyerr_quad_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_V' converting Johnson U magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB_V \"MAG_U + JOHNSON_AB_V\"' out=u_ab_v_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB_V MAG_U + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve 50 unique quasars from GAVO DC using distinct selection, filtering by proximity to RA 0, Dec 0.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT DISTINCT ra, dec FROM sdss.dr16qso WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 0.0, 0.0, 0.5))' maxrec=50 out=gavo_unique_qso.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine three deep field catalogues (DF1, DF2, DF3). In DF1, convert RA/DEC from radians to degrees before merging.",
        "response": "stilts tcatn nin=3 in1=DF1.fits icmd1='replacecol RA radiansToDegrees(RA); replacecol DEC radiansToDegrees(DEC)' in2=DF2.fits in3=DF3.fits out=rad_to_deg_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate tables, but drop all columns except those with UCDs related to photometry (`phot.mag*`).",
        "response": "stilts tcat in='full1.fits full2.fits' ocmd='keepcols ucd$phot_mag*' out=phot_only_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Find the average, minimum, and maximum redshift (`Z_KUG`) for the Kiso UV-X Galaxies Catalogue (KUG2000).",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/kug2000 adql='SELECT Z_KUG FROM kug2000.table_main' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot error ellipses (skycorr), units in micro-arcseconds (uas).",
        "response": "stilts plot2sky in=uas_data.fits layer=skycorr lon=RA lat=DEC lonerr=ER_L laterr=ER_B corr=C unit=uas out=uas_corr_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate four files. After merging, display the final table directly in TOPCAT.",
        "response": "stilts tcatn nin=4 in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate four CSV files that use a pipe '|' delimiter and ensure the final table name is 'Survey_Parts'.",
        "response": "stilts tcat ifmt='csv(delimiter=|)' in='p1.csv p2.csv p3.csv p4.csv' ocmd='tablename Survey_Parts' out=pipe_csv_titled.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot data from a table where the CSV delimiter is a semicolon.",
        "response": "stilts plot2plane in=data.csv ifmt='csv(delimiter=;)' layer=mark x=col1 y=col2 out=semicolon_csv.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"col1\"\n    (The name \"col1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Select every 1000th row, starting from the beginning, using the 'every' filter.",
        "response": "stilts tpipe in=huge_data.fits cmd='every 1000' out=sparse_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Change the marker size for only one of two layers.",
        "response": "stilts plot2plane layer_1=mark in_1=d1.fits x_1=X y_1=Y size_1=5 layer_2=mark in_2=d2.fits x_2=X y_2=Y size_2=2",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I have a lot of files (`file_*.csv`). I want to concatenate them lazily and just see the row count.",
        "response": "stilts tcat ifmt=csv in=file_*.csv lazy=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match two tables on X, Y, Z, and Time (4D). Use a strict, multiplicative match (4d*). Tolerance 1.0.",
        "response": "stilts tmatch2 in1=D1.fits in2=D2.fits matcher=4d params=1.0 values1='X Y Z T' values2='X Y Z T' out=strict_4d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Read a CSV file where the header line is explicitly indicated as absent (`header=false`), and output as FITS.",
        "response": "stilts tcopy in=no_header.csv ifmt='csv(header=false)' out=forced_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a string column containing the decimal year of the JD time 'TIME_JD' rounded to 0 decimal places.",
        "response": "stilts tpipe in=time.fits cmd='addcol DEC_YEAR_INT \"formatDecimal(round(mjdToDecYear(jdToMjd(TIME_JD))), 0)\"' out=dec_year_int.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_YEAR_INT formatDecimal(round(mjdToDecYear(jdToMjd(TIME_JD))), 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find all Gaia sources with negative parallax (potential artifacts).",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, parallax FROM gaiadr3.gaia_source WHERE parallax < 0' out=negative_parallax.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to convert a VOTable to a simple ASCII text file for a quick look.",
        "response": "stilts tcopy in=results.vot ofmt=ascii out=results.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Can I use `mocshape` to find regions with NO coverage?",
        "response": "Not directly. `mocshape` creates a MOC of the covered regions. You would need to use another tool or a script that can perform a 'NOT' operation on the generated MOC against an all-sky MOC.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plotting Y error bars from an array column Y_ERROR_ARRAY.",
        "response": "stilts plot2plane in=spectra.fits layer=yerrors xs=WAVE ys=FLUX yerrhis=Y_ERROR_ARRAY out=array_yerr_only.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVE\"\n    (The name \"WAVE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine observation data from two FITS HDUs, data.fits#1 and data.fits#2, ensuring the output has a column indicating the original HDU index.",
        "response": "stilts tcatn nin=2 in1=data.fits#1 in2=data.fits#2 seqcol=HDU_Index out=hdu_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find all ObsCore entries from ESO taken in 2023 (MJD 59944.0 to 60309.0) and calculate the checksum of the result.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM ivoa.ObsCore WHERE t_min > 59944.0 AND t_max < 60309.0' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a point MOC for random positions generated via a scheme, limiting the rows to 50,000.",
        "response": "stilts mocshape in=:skysim:50000 shape=point coords='array(ra, dec)' out=random_points_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Read a table, convert the string column 'BIBCODE' to an ADS URL and output the list of URLs to standard output.",
        "response": "stilts tpipe in=pubs.fits cmd='addcol ADS_URL bibcodeUrl(BIBCODE)' cmd='keepcols ADS_URL' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine `data_g_band.fits` and `data_r_band.fits`, adding a 'FILTER' column to each first.",
        "response": "stilts tcatn nin=2 in1=data_g_band.fits icmd1='addcol FILTER \"g\"' in2=data_r_band.fits icmd2='addcol FILTER \"r\"' out=multi_band.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "My radius column `R_KPC` is in kiloparsecs and I have distance `D_MPC`. Create MOC.",
        "response": "stilts mocshape in=physical.fits shape=circle coords='array(RA,DEC,atan(R_KPC*1e-3/D_MPC)*180/PI)' out=physical_to_angular.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine four files. For the first file (F1), select only rows where 'MAG' is less than 12. For the last file (F4), only keep the last 50 rows.",
        "response": "stilts tcatn nin=4 in1=F1.fits icmd1='select \"MAG < 12\"' in2=F2.fits in3=F3.fits in4=F4.fits icmd4='tail \"50\"' out=mixed_end_filtering.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 12\n\nUsage: select <expr>\n    (Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query MAST MissionMAST for 100 HST summaries, specifically filtering for observation IDs containing the string 'CANDELS'.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/missionmast/ adql='SELECT TOP 100 obs_id, ra, dec FROM hst.summary WHERE obs_id LIKE ''%CANDELS%''' out=mast_candels_obs.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Perform a cone search and calculate a checksum of the resultant table without saving the table content itself.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=50.0 lat=20.0 radius=0.01 omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot points with a variable size given by $\\text{MAG_ERR} \\times 5$ (scale=5).",
        "response": "stilts plot2plane in=errors.fits layer=size x=X y=Y size=MAG_ERR scale=5 autoscale=false out=mag_err_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge two tables, filtering each one first to only include rows where 'QUALITY' is better than 0.9.",
        "response": "stilts tcat in='q1.fits q2.fits' icmd='select \"QUALITY > 0.9\"' out=high_quality_merge.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select QUALITY > 0.9\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a MOC (order 14) for sources within a tiny 1 micro-arcsecond (\u00b5as) radius.",
        "response": "stilts pixfoot in=ultrap.fits ra=RA dec=DEC radius='1.0 / 3600000000.0' order=14 out=uas_radius_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine three tables. T1 has 'ID_1', T2 has 'ID_2', T3 has 'ID_3'. Unify their identifiers to 'MASTER_ID' using colmeta.",
        "response": "stilts tcatn nin=3 in1=T1.fits icmd1='colmeta -name MASTER_ID ID_1' in2=T2.fits icmd2='colmeta -name MASTER_ID ID_2' in3=T3.fits icmd3='colmeta -name MASTER_ID ID_3' out=master_id_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine three tables, using the first table as a filter by keeping only the columns present in the first table in the final output.",
        "response": "stilts tcatn nin=3 in1=t1.fits in2=t2.fits icmd2='keepcols *' in3=t3.fits icmd3='keepcols *' out=t1_structure_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'FLAG_NEW' that is the logical OR of 'FLAG_A' and 'FLAG_B'.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLAG_NEW \"FLAG_A || FLAG_B\"' out=logical_flags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '||' 'FLAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLAG_NEW FLAG_A || FLAG_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '||' 'FLAG_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column containing the sine of the angle in radians corresponding to the DEC in degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_SIN sin(degreesToRadians(DEC))' out=dec_sin_calc.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate an MOC for points with a radius defined by $\text{DIST} \times 0.0001$ degrees, where DIST is a column.",
        "response": "stilts pixfoot in=dist_cat.fits ra=RA dec=DEC radius='DIST * 0.0001' out=dist_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "How do I just display the contents of a FITS file on my terminal in a readable format?",
        "response": "stilts tcopy in=my_table.fits ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine tables, and enforce that the resulting table is written in FITS column-oriented format (COLFITS), ensuring the total row count is calculated upfront.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=colfits countrows=true out=columnar_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Filter out rows where the string column 'COMMENT' is either null or an empty string.",
        "response": "stilts tpipe in=data.fits cmd='select \"!NULL_COMMENT && length(COMMENT) > 0\"' out=comments_present.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'length(COMMENT)' '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_COMMENT && length(COMMENT) > 0\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'length(COMMENT)' '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need to convert a table for an old application that only reads VOTable 1.1.",
        "response": "stilts tcopy in=latest.vot ofmt='votable(version=V11)' out=legacy.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "My input file is `strange.parquet`. Can you make a JSON MOC from it at order 11?",
        "response": "stilts pixfoot in=strange.parquet order=11 mocfmt=json out=strange_parquet_coverage.moc.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "From a table with a `NAME` column, create a new column `SHORT_NAME` which is the first 5 characters of `NAME`.",
        "response": "stilts tpipe in=names.fits cmd='addcol SHORT_NAME substring(NAME,0,5)' out=short_names.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine table A and table B, eliminating any rows where 'FLUX' in the combined result is less than zero.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits ocmd='select \"FLUX >= 0\"' out=positive_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query MAST TIC to count the total number of stars brighter than TMAG 12.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT COUNT(*) FROM tic.v8 WHERE TMAG < 12' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Search MAST HSCv3 near Galactic L=150, B=-30, with a radius of $120$ arcseconds.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=150.0 lat=-30.0 radius='120.0 / 3600.0' skysys=galactic out=hsc_120as_gal.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"120.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Submit an asynchronous job to the European HST Archive and manually set a destruction time using the ISO 8601 format ('2025-01-01T00:00:00').",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore' destruction='2025-01-01T00:00:00' out=hst_custom_destruction.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw a horizontal line (y=100) and a vertical line (x=50) using the function layer.",
        "response": "stilts plot2plane layer_h=function fexpr_h=100 color_h=red layer_v=function axis_v=vertical fexpr_v=50 color_v=blue out=overlay_lines.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'RA_DMS' converting RA in degrees to DMS string format with 0 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS \"degreesToDms(RA, 0)\"' out=dms_ra_0s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS degreesToDms(RA, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q25_3KPC' containing the 25th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q25_3KPC \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.25)\"' out=q25_dist_3kpc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.25)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q25_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.25)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.25)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw a line plot (line layer) of time vs flux, ensuring the points are sorted by time before connecting them.",
        "response": "stilts plot2plane in=series.fits layer=line x=TIME y=FLUX sortaxis=X out=sorted_time_line.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TIME\"\n    (The name \"TIME\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "My polygon vertices are in an array-valued column `VERT_ARRAY`. How do I use it?",
        "response": "stilts mocshape in=polygons.fits shape=polygon coords=VERT_ARRAY out=polygon_arrays.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Crossmatch T1 and T2. T1 rows must be included (all1). T2 must be filtered first to remove rows where 'BAD_FLAG' is true.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='select !BAD_FLAG' matcher=exact values1=ID values2=ID join=all1 out=T1_left_T2_clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Get the column definitions (metadata) for the VISTA K-band tiling table (`vhs.tile_k`) from the ESO Catalogue service.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT * FROM TAP_SCHEMA.columns WHERE table_name = ''vhs.tile_k''' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query MAST HSCv3, filtering locally to keep only point sources where the G-band magnitude error is below 0.1.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT * FROM hsc_v3.point' ocmd='select \"f606w_mag_err < 0.1\"' out=hsc_low_err.fits",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select f606w_mag_err < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_I_AB_OLD' converting Johnson I magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_I_AB_OLD \"MAG_I + JOHNSON_AB_I\"' out=i_ab_old_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_I'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_I_AB_OLD MAG_I + JOHNSON_AB_I\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_I'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match Survey X and Survey Y using symmetric best match (find=best) within 5 arcsec. Include the separation score in a column named 'SepArcsec'.",
        "response": "stilts tmatch2 in1=Survey_X.fits in2=Survey_Y.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' find=best scorecol=SepArcsec out=symmetric_best_scored.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'POS_GAL_X' containing the X (Galactic) Cartesian component derived from RA/DEC/PARALLAX.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_X \"icrsToGal(astromXYZ(RA, DEC, PARALLAX))\"' out=galactic_x_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_X icrsToGal(astromXYZ(RA, DEC, PARALLAX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "How can I generate a MOC for circles whose radius is determined by a lookup table based on the `TYPE` column?",
        "response": "stilts pixfoot in=objects.fits radius='(TYPE==1 ? 0.1 : (TYPE==2 ? 0.2 : 0.05))' out=type_dependent_radius.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Convert a VOTable to FITS, forcing the use of the **normal, row-oriented FITS** format (fits-basic).",
        "response": "stilts tcopy in=input.vot out=output.fits ofmt=fits-basic",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Get sources from the Gaia archive and then locally remove any row that has a null parallax value.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, parallax FROM gaiadr3.gaia_source' ocmd='select !NULL_parallax' maxrec=10000",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine an IPAC table and a FITS table, converting the output to an HTML report table.",
        "response": "stilts tcatn nin=2 in1=data.tbl ifmt1=ipac in2=data.fits ofmt=html out=report.html",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC where the radius is the error in distance, calculated as $\text{DIST} \times \text{PLX_ERR} / \text{PLX}$ (degrees assumed).",
        "response": "stilts pixfoot in=err_prop.fits ra=RA dec=DEC radius='DIST * PLX_ERR / PLX' out=dist_err_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3, T4. Only output columns from the reference table (T1).",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits ocmd='keepcols *' values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' out=T1_cols_only_pair.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot a line fit that ignores points where `FLAG==1`.",
        "response": "stilts plot2plane in=data.fits layer_pts=mark x_pts=X y_pts=Y layer_fit=linearfit x_fit=X y_fit=Y icmd_fit='select FLAG!=1'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge tables T1 and T2. T1 is remote FITS via HTTPS; T2 is local VOTable. Output the checksum only.",
        "response": "stilts tcatn nin=2 in1=https://example.com/T1.fits in2=T2.vot omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC (order 8) for sources around Galactic L=10, B=0, filtering the input table coordinates from Galactic to ICRS first.",
        "response": "stilts pixfoot in=gal_cat.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC radius=0.01 order=8 out=gal_converted_o8.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine three tables. T1 has MJD timestamps; T2 has ISO 8601 strings; T3 has Julian Dates (JD). Convert all to MJD before concatenation.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits icmd2='replacecol MJD isoToMjd(TIMESTAMP_STR)' in3=T3.fits icmd3='replacecol MJD jdToMjd(JD)' out=universal_time.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate tables, keeping only the rows that were present in the first 50 rows of the input stream.",
        "response": "stilts tcat in='s1.fits s2.fits' icmd='head 50' out=first_50_per_input.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Count the number of galaxies in the Subaru KUG2000 catalogue with a recorded redshift greater than 0.05.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/kug2000 adql='SELECT COUNT(*) FROM kug2000.table_main WHERE Z_KUG > 0.05' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine tables, keeping only rows where the exposure time ('EXPTIME') is greater than 1000 seconds.",
        "response": "stilts tcat in='e1.fits e2.fits' icmd='select \"EXPTIME > 1000\"' out=long_exposures.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select EXPTIME > 1000\n\nUsage: select <expr>\n    (Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot a KDE estimate and apply a smoothing kernel of type 'cos2'.",
        "response": "stilts plot2plane in=data.fits layer=kde x=VALUE kernel=cos2 out=cos2_kde.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot markers sized by the error on declination (DEC_ERR in arcsec), ensuring size autoscale is disabled.",
        "response": "stilts plot2sky in=errors.fits layer=size lon=RA lat=DEC size=DEC_ERR unit=arcsec autoscale=false out=fixed_arcsec_err_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Merge PDS4 files (pdsA.xml, pdsB.xml) into a standard FITS file.",
        "response": "stilts tcat ifmt=pds4 in='pdsA.xml pdsB.xml' ofmt=fits out=pds4_merged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Match three tables on their 3D positions `X, Y, Z` with an error of 10 units.",
        "response": "stilts tmatchn nin=3 in1=pos1.fits in2=pos2.fits in3=pos3.fits multimode=group matcher=3d params=10 values1='X Y Z' values2='X Y Z' values3='X Y Z' out=3d_pos_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate an ASCII MOC for objects where the `OBS_DATE` is after 2020.",
        "response": "stilts pixfoot in=obs_log.fits icmd='select \"OBS_DATE > 2020\"' mocfmt=ascii out=post_2020_obs.moc.txt",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '2020'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select OBS_DATE > 2020\n\nUsage: select <expr>\n    (Unused arguments: '>' '2020'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a very low-resolution MOC (order 2) from a simulated set of 1000 points.",
        "response": "stilts pixfoot in=:skysim:1000 ra=ra dec=dec radius=0 order=2 out=sim_low_res_o2.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need data from the KOA TAP Service around RA 50, Dec -50, using 15 arcminutes as the radius, outputting the exact count.",
        "response": "stilts cone serviceurl=https://koa.ipac.caltech.edu/TAP lon=50.0 lat=-50.0 radius='15.0 / 60.0' omode=count",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"15.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge three survey epochs, adding a column 'Source' indicating the file name without extensions (uloccol).",
        "response": "stilts tcatn nin=3 in1=epoch_2018.fits in2=epoch_2019.fits in3=epoch_2020.fits uloccol=Source out=uloc_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Run a synchronous query against the CeSAM VO Server (LAM) to list its available table schemas and output the result in ECSV format.",
        "response": "stilts tapquery tapurl=https://vo.lam.fr/tap adql='SELECT * FROM TAP_SCHEMA.schemas' sync=true ofmt=ecsv out=cesam_schemas.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 324.892 and latitude 2.0764. Please use a search radius of 1.3452 degrees. Save the results to a fits file called query_results_175.fits.",
        "response": "stilts cone servicetype=sia2 serviceurl=http://irsa.ipac.caltech.edu/sia lon=324.892 lat=2.0764 radius=1.3452 omode=out ofmt=fits out=query_results_175.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine two tables, adding a column to the output indicating the original filename including the full path/location.",
        "response": "stilts tcatn nin=2 in1=archive/full/dataA.fits in2=archive/full/dataB.fits loccol=FullLocation out=combined_with_location.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two tables, but only keep rows where the expression 'RA / DEC' is greater than 1.0.",
        "response": "stilts tcat in='pos1.fits pos2.fits' ocmd='select \"RA/DEC > 1.0\"' out=ratio_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA/DEC > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the PADC TAP Server on voparis-tap-helio.obspm.fr for 5 ObsCore records and output the table metadata only.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT TOP 5 * FROM tap_schema.tables' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I have coordinates in Galactic Longitude (GLON) and Latitude (GLAT). Convert them to ICRS before generating a MOC.",
        "response": "stilts pixfoot in=gal_coords.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC out=gal_to_icrs_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). T3 columns need renaming: apply the 'fixcolnames' filter to T3 before matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits icmd3='fixcolnames' out=fixed_name_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query a service with a radius of 0.05 degrees and filter out rows where both 'FLAG_A' and 'FLAG_B' are true.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=120.0 lat=-40.0 radius=0.05 ocmd='select \"!(FLAG_A && FLAG_B)\"' out=no_flags_out.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'FLAG_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !(FLAG_A && FLAG_B)\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'FLAG_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate a MOC for all sources with `QUALITY = A`.",
        "response": "stilts pixfoot in=quality_data.fits icmd='select QUALITY==\"A\"' out=quality_A_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the ESO TAP Catalogue service for table metadata and locally rename the 'table_name' column to 'CAT_NAME'.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT table_name FROM TAP_SCHEMA.tables' ocmd='colmeta -name CAT_NAME table_name' out=eso_cat_rename.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T_MAIN and T_SUPP. T_SUPP rows should always be included (right outer join). Discard the resulting separation column.",
        "response": "stilts tmatch2 in1=T_MAIN.fits in2=T_SUPP.fits matcher=exact values1=ID values2=ID join=all2 scorecol=null out=right_outer_no_score.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine tables, and add two columns: the originating filename ('File') and the table sequence ID ('Idx').",
        "response": "stilts tcat in='d1.fits d2.fits' loccol=File seqcol=Idx out=indexed_provenance_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables and add a row index column named 'ROW_IDX' starting from 1.",
        "response": "stilts tcat in='r1.fits r2.fits' ocmd='addcol ROW_IDX $0' out=indexed_output_c.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Can you explain the `iref` parameter in `tmatchn`?",
        "response": "The `iref` parameter is used only when `multimode=pairs`. It specifies the 1-based index of the input table that will be used as the reference table. All matches are then performed by pairing rows from the other tables against the rows of this reference table [2, B.41.1, 1974].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "The radius of each source is its `FWHM` in arcseconds. Generate the footprint.",
        "response": "stilts pixfoot in=source_sizes.fits radius='FWHM/3600.0' out=fwhm_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input table to only retain rows where the integer column 'FLAG' is an odd number.",
        "response": "stilts pixfoot in=flags.fits icmd='select \"FLAG % 2 == 1\"' ra=RA dec=DEC out=odd_flag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG % 2 == 1\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query VizieR TAP near RA 170.0, Dec 50.0, using $0.005$ degrees, and retain only columns with UCD starting with 'phot.mag'.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=170.0 lat=50.0 radius=0.005 ocmd='keepcols \"ucd$phot.mag*\"' out=vizier_mag_ucd.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Retrieve the column names and data types from the PADC RR TAP service's primary table metadata.",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT column_name, data_type FROM TAP_SCHEMA.columns' out=padc_rr_columns.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to plot two different datasets on the same axes. `data1.fits` (red crosses) and `data2.fits` (blue circles).",
        "response": "stilts plot2plane layer_1=mark in_1=data1.fits x_1=X_POS y_1=Y_POS color_1=red shape_1=cross layer_2=mark in_2=data2.fits x_2=XPOS y_2=YPOS color_2=blue shape_2=open_circle",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_POS\"\n    (The name \"X_POS\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Start an asynchronous query on the MAST PanSTARRS 1 DR2 catalogue and request the job be kept on the server until June 1, 2026.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT * FROM dbo.detection_object WHERE g_mag < 22' destruction='2026-06-01T00:00:00' out=ps1dr2_long_job.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that 'DEC' is always between -90 and 90 degrees.",
        "response": "stilts tpipe in=coords.fits cmd='assert \"DEC >= -90.0 && DEC <= 90.0\"' out=dec_range_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-90.0' '&&' 'DEC' '<=' '90.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert DEC >= -90.0 && DEC <= 90.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '-90.0' '&&' 'DEC' '<=' '90.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a MOC for objects where `COLOR_INDEX` is between 0.5 and 1.0.",
        "response": "stilts mocshape in=colors.fits icmd='select \"COLOR_INDEX > 0.5 && COLOR_INDEX < 1.0\"' shape=point coords='array(RA,DEC)' out=color_selected.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5' '&&' 'COLOR_INDEX' '<' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select COLOR_INDEX > 0.5 && COLOR_INDEX < 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5' '&&' 'COLOR_INDEX' '<' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 95.575 and latitude -0.7154. Please use a search radius of 1.9214 degrees. Save the results to a csv file called query_results_57.csv.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=95.575 lat=-0.7154 radius=1.9214 omode=out ofmt=csv out=query_results_57.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the KOA TAP Service near RA 200, Dec 20, using $0.5$ degrees, filtering to keep only rows where 'DATE_OBS' is after '2010-01-01'.",
        "response": "stilts cone serviceurl=https://koa.ipac.caltech.edu/TAP lon=200.0 lat=20.0 radius=0.5 ocmd='select \"isoToMjd(DATE_OBS) > 55197\"' out=koa_recent_obs.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '55197'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select isoToMjd(DATE_OBS) > 55197\n\nUsage: select <expr>\n    (Unused arguments: '>' '55197'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a CSV file to LaTeX, ensuring the output is **not** a standalone document (default for LaTeX).",
        "response": "stilts tcopy in=data.csv ifmt=csv ofmt='latex(standalone=false)' out=frag.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T1 contains a flag 'IS_VARIABLE'. Only use rows where IS_VARIABLE is TRUE in the match.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits icmd1='select IS_VARIABLE' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=variable_ref_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine data.fits and header.vot. The header.vot file only contains table parameters. Keep all columns and parameters.",
        "response": "stilts tcatn nin=2 in1=data.fits in2=header.vot out=data_with_header.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match three tables T1, T2, T3 (group mode). T3 is an ASCII table. T1 and T2 are remote URLs. Output row count only.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=5 in1=http://r1/t1.fits in2=http://r2/t2.fits in3=T3.txt ifmt3=ascii values1='RA DEC' values2='RA DEC' values3='RA DEC' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 228.9392 and latitude 5.2135. Please use a search radius of 0.7261 degrees. Instead of a file, just give me the out.",
        "response": "stilts cone servicetype=sia2 serviceurl=http://irsa.ipac.caltech.edu/sia lon=228.9392 lat=5.2135 radius=0.7261 omode=out",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the Chandra Source Catalog (CSC21) for sources within 3 arcminutes of RA 50, Dec -50, requiring the output to be in VOTable format with BINARY serialization.",
        "response": "stilts cone serviceurl=https://cda.cfa.harvard.edu/csc21tap lon=50.0 lat=-50.0 radius='3.0 / 60.0' ofmt='votable(format=BINARY)' out=csc_3arcmin.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"3.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a constant column named 'VEL_C' with the value 299792.458 (speed of light in km/s).",
        "response": "stilts tpipe in=data.fits cmd='addcol -units km/s VEL_C 299792.458' out=data_c.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a high-resolution MOC (order 14) for all sources brighter than G=15 in `gaia_dr3.fits`.",
        "response": "stilts mocshape in=gaia_dr3.fits icmd='select \"phot_g_mean_mag < 15\"' shape=point coords='array(ra, dec)' order=14 out=bright_gaia_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select phot_g_mean_mag < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find the MOC for objects within $0.00000001$ degrees radius (10 nanodegrees).",
        "response": "stilts pixfoot in=nanodeg.fits ra=RA dec=DEC radius=1.0e-8 out=nanodeg_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a table of 10 rows (1 to 10) and then add two new columns: 'X_SQ' and 'X_CUBE'.",
        "response": "stilts tpipe in=:loop:1,11 cmd='addcol X_SQ i*i' cmd='addcol X_CUBE i*i*i' out=powers_of_x.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a 2D density map of RA versus DEC for a large file, using the 'density' shading mode and the 'magma' color map.",
        "response": "stilts plot2plane in=survey.fits layer=mark x=RA y=DEC shading=density densemap=magma out=magma_density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Filter rows keeping only the 5th row from the table.",
        "response": "stilts tpipe in=data.fits cmd='rowrange 5 5' out=fifth_row_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I want to combine `north_survey.dat` and `south_survey.dat`. Please add a new column called 'SurveyID' that indicates whether a row came from the first or second file.",
        "response": "stilts tcat ifmt=ascii in=north_survey.dat in=south_survey.dat seqcol=SurveyID out=combined_survey.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a `cds_json` format MOC. What is that?",
        "response": "The `cds_json` format is a specific JSON serialization used by some CDS services like Aladin Lite. You can generate it like this: `stilts mocshape in=cat.fits shape=point coords='array(RA,DEC)' mocfmt=cds_json out=aladin_lite.json`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a plot and immediately send it to TOPCAT.",
        "response": "This is not a direct feature of `plot2plane`. You would generate the plot as an image file and then load that image into TOPCAT, or more commonly, send the *table* to TOPCAT and use its interactive plotting GUI.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot points from a table using the symlog scale for the Y-axis (linear threshold 1) and the logarithmic scale for the X-axis.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xscale=log yscale='symlog(1,1)' out=mixed_scaling.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot markers that are sized in X by X_ERR and in Y by Y_ERR, using the xycorr error correlation layer (which can also plot ellipses).",
        "response": "stilts plot2plane in=errors.fits layer=xycorr x=X y=Y xerr=X_ERR yerr=Y_ERR xycorr=CORR ellipse=filled_ellipse out=xycorr_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I have `multi_array.fits` with array columns. Can you 'explode' all of them into scalar columns?",
        "response": "stilts tpipe in=multi_array.fits cmd=explodeall out=scalar_columns.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate tables, adding a column 'SOURCE_TYPE' that contains the unique string derived from the input file location, assuming the tables are named 'stars_01.fits' and 'galaxies_02.fits'.",
        "response": "stilts tcat in='stars_01.fits galaxies_02.fits' uloccol=SOURCE_TYPE out=typed_sources.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, ensuring the output format is the TST format (Tab-Separated Table) for compatibility with tools like GAIA.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=tst out=tst_combined.tst",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I have two tables where array columns exist. Combine them and then explode all array columns into separate scalar columns.",
        "response": "stilts tcat in='a.fits b.fits' ocmd=explodeall out=scalar_exploded.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plotting a weighted histogram by energy, using step bar style.",
        "response": "stilts plot2plane in=events.fits layer=histogram x=TIME weight=ENERGY combine=sum barform=steps out=weighted_steps.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TIME\"\n    (The name \"TIME\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match five tables using anisotropic 2D matching (2d_anisotropic) on (FLUX_U, FLUX_G) with tolerances 0.5 and 0.2 units.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=2d_anisotropic params='0.5 0.2' values1='FLUX_U FLUX_G' values2='FLUX_U FLUX_G' values3='FLUX_U FLUX_G' values4='FLUX_U FLUX_G' values5='FLUX_U FLUX_G' in1=F1.fits in2=F2.fits in3=F3.fits in4=F4.fits in5=F5.fits out=aniso_flux_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Submit a very long asynchronous query to the European HST Archive for all ObsCore records and allow a full day (86400 seconds) for execution.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore' executionduration=86400 out=long_hst.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot position vectors (unit=mas) using a medium arrow shape, coloring flat black.",
        "response": "stilts plot2sky in=pm_cat.fits layer=skyvector lon=RA lat=DEC dlon=PMRA dlat=PMDEC unit=mas arrow=medium_arrow shading=flat color=black out=black_mas_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve 5 EPN-TAP planetary records from the FUB service and output the result in VOTable format using BINARY serialization.",
        "response": "stilts tapquery tapurl=http://dachs.planet.fu-berlin.de/tap adql='SELECT TOP 5 * FROM epn_core.epn_core' ofmt='votable(format=BINARY)' out=fub_binary.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve highly efficient photometric data (fainter than F160W=25) from the MAST 3D-HST HLSP and save it in the binary-optimized VOTable BINARY2 format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/3dhst/ adql='SELECT * FROM 3dhst.photometry WHERE f160w_mag < 25' maxrec=1000 ofmt='votable(format=BINARY2)' out=3dhst_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve a list of all unique instrument names found in the ESO ObsCore table.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT DISTINCT instrument_name FROM ivoa.ObsCore' out=eso_instruments.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert the IPAC table 'target_list.tbl' into a simple, human-readable text file named 'target_list.txt'.",
        "response": "stilts tcopy in=target_list.tbl ifmt=ipac ofmt=text out=target_list.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I have a master catalog `master.fits` and two other catalogs, `survey1.vot` and `survey2.csv`. Using `master.fits` as the reference, find all objects in it that have counterparts within 2 arcsec in EITHER `survey1` or `survey2`.",
        "response": "stilts tmatchn nin=3 in1=master.fits ifmt2=votable in2=survey1.vot ifmt3=csv in3=survey2.csv multimode=pairs iref=1 matcher=sky params=2 values1='RA DEC' values2='RA_DEG DEC_DEG' values3='ra dec' join1=match out=master_with_any_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Copy a table from a synthetic test scheme that includes roughly 1000 columns (:test:10,k) to FITS.",
        "response": "stilts tcopy in=':test:10,k' out=wide_test.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot a HEALPix map table (HPX.fits) and degrade the resolution by a factor of 8 (degrade=3).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=VALUE degrade=3 out=hpx_degrade3.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Perform a sanity check on the data (check filter) and output the result to standard output.",
        "response": "stilts tpipe in=data.fits cmd=check out=- ofmt=text",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a PDS4 file, but explicitly instruct the reader to **ignore** the initial magic number check.",
        "response": "stilts tcopy in=risky.xml ifmt='pds4(checkmagic=false)' out=forced_pds4.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Draw filled quadrilaterals defined by coordinates X1, Y1, ... X4, Y4, coloring them green.",
        "response": "stilts plot2plane in=rects.fits layer=poly4 x1=X1 y1=Y1 x2=X2 y2=Y2 x3=X3 y3=Y3 x4=X4 y4=Y4 polymode=fill color=green out=filled_quads.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine two ASCII tables, assuming fields are separated by a space, and save the final result in FITS format.",
        "response": "stilts tcat ifmt=ascii in='a.txt b.txt' ofmt=fits out=ascii_to_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "How to join two tables where one has columns `RA_H`, `RA_M`, `RA_S` that need to be combined into a single `RA` column?",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits icmd2='addcol RA hmsToDegrees(RA_H,RA_M,RA_S)' ocmd='keepcols \"RA DEC\"' out=combined_ra.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I have ecliptic coordinates in radians. How do I make the MOC?",
        "response": "stilts pixfoot in=ecliptic_rad.fits icmd='addskycoords ecliptic icrs radiansToDegrees(ELON_RAD) radiansToDegrees(ELAT_RAD) RA_ICRS DEC_ICRS' ra=RA_ICRS dec=DEC_ICRS out=ecliptic_rad_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the time column 'TIME_MJD' is strictly increasing (requires sort).",
        "response": "stilts tpipe in=data.fits cmd='sort \"TIME_MJD\"' cmd='addcol TIME_DIFF \"TIME_MJD - param$TIME_MJD\"' cmd='assert \"TIME_DIFF >= 0.0\"' out=time_sequence_checked.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'param$TIME_MJD'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol TIME_DIFF TIME_MJD - param$TIME_MJD\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'param$TIME_MJD'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine tables, and output the result in VOTable format using the original BINARY serialization (not BINARY2).",
        "response": "stilts tcat in='v1.fits v2.fits' ofmt='votable(format=BINARY)' out=binary_output_b.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot position errors (skyellipse) where the major/minor axes are given in micro-arcseconds (uas).",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra=A rb=B posang=P unit=uas out=uas_ellipse_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a MOC at order 1, filtering the input to keep only rows where the 'FLAG' column is false.",
        "response": "stilts mocshape in=flagged.fits icmd='select !FLAG' shape=point coords='array(RA, DEC)' order=1 out=unflagged_o1.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine a table and itself, adding a constant column 'REPLICA' set to 'TRUE' for the second instance.",
        "response": "stilts tcatn nin=2 in1=original.fits in2=original.fits icmd2='addcol REPLICA \"TRUE\"' out=self_replicated.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC (order 16) for sources around Ecliptic Lon 30, Lat 30, using $0.001$ radians, converting internally.",
        "response": "stilts pixfoot in=ecl_rad2.fits icmd='addskycoords ecliptic icrs ELON ELAT RA DEC' ra=RA dec=DEC radius='radiansToDegrees(0.001)' order=16 out=ecl_mrad_o16.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the J-PLUS EDR catalogue for sources in the northern hemisphere (Dec > 0) and filter the result locally to remove rows where the magnitude is null.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jpas-edr adql='SELECT ra, dec, g_mag FROM jpas_edr.master WHERE dec > 0' ocmd='select !NULL_g_mag' out=jpas_north_clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find MAST HSCv3 sources around RA 250, Dec 60, using 10 mas, and explicitly ask for a FITS output format.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=250.0 lat=60.0 radius='10.0 / 3600000.0' out=hsc_10mas.fits ofmt=fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Filter the input table to only include rows where the separation between two coordinate pairs is greater than 10 arcseconds, before generating a point MOC.",
        "response": "stilts mocshape in=pairs.fits icmd='select \"skyDistanceDegrees(RA1, DEC1, RA2, DEC2) * 3600.0 > 10.0\"' shape=point coords='array(RA1, DEC1)' out=distant_pairs_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC1,' 'RA2,' 'DEC2)' '*' '3600.0' '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA1, DEC1, RA2, DEC2) * 3600.0 > 10.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC1,' 'RA2,' 'DEC2)' '*' '3600.0' '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find TESS Input Catalog IDs containing the substring '234' and save as CSV.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT tid, ra, dec FROM tic.v8 WHERE tid LIKE ''%234%''' out=tic_subset.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve VSA catalogue entries ordered by K_MAG (K-band magnitude) in descending order, requesting the top 100 rows.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/vsa adql='SELECT TOP 100 * FROM vsa.catalogue ORDER BY K_MAG DESC' out=vsa_kband_sort.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot error ellipses defined by X and Y errors and a correlation coefficient (CORR) column, using the crosshair_ellipse shape.",
        "response": "stilts plot2plane in=errors.fits layer=xycorr x=X y=Y xerr=X_ERR yerr=Y_ERR xycorr=CORR ellipse=crosshair_ellipse out=crosshair_xycorr.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Use the Data Central TAP service in Australia to find table descriptions containing the word 'Galaxy' (case-insensitive) and limit the execution time to 60 seconds.",
        "response": "stilts tapquery tapurl=https://datacentral.org.au:443/vo/tap/ adql='SELECT table_name, description FROM TAP_SCHEMA.tables WHERE description LIKE ''%Galaxy%''' executionduration=60 out=dc_galaxies.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot points using the asinh scale for the X-axis to handle negative values and a wide dynamic range.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xscale='asinh(10.0)' out=asinh_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge two tables, filtering each input to keep only the rows where the error column 'ERR_G' is non-null and greater than zero.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='select \"!NULL_ERR_G && ERR_G > 0\"' out=clean_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'ERR_G' '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_ERR_G && ERR_G > 0\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'ERR_G' '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate three VOTables and output the final result in LaTeX table format.",
        "response": "stilts tcatn nin=3 in1=V1.vot in2=V2.vot in3=V3.vot ofmt=latex out=output_report.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Count the number of APPLAUSE plates taken in 1950, without generating a full table output.",
        "response": "stilts tapquery tapurl=https://www.plate-archive.org/tap adql='SELECT * FROM apl.plate_meta WHERE t_start > 33268 AND t_start < 33633' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers colored by MAG, where null MAG values are colored magenta.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=aux aux=MAG auxnullcolor=magenta out=null_mag_magenta.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "What does a MOC look like in ASCII format?",
        "response": "An ASCII MOC is a space-separated list of HEALPix orders and pixel indices, like '4/1 2 3 5/10-15 ...'. You can generate one with `mocfmt=ascii`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Upload a local table of prospective targets to MAST PanSTARRS 1 DR2 and filter the local data before sending, keeping only sources with positive proper motion in RA (PMRA > 0).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT t.*, u.PMRA FROM dbo.detection_object AS t JOIN TAP_UPLOAD.L AS u ON t.objid = u.ID' nupload=1 upload1=targets.fits upname1=L ucmd1='select \"PMRA > 0\"' out=ps1_upload_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Show me all objects from `catalog_A.fits` that appear in a group with at least one object from `catalog_B.fits` OR `catalog_C.fits`.",
        "response": "stilts tmatchn nin=3 in1=catalog_A.fits in2=catalog_B.fits in3=catalog_C.fits multimode=group matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' fixcols=all suffix1=_A suffix2=_B suffix3=_C join1=match ocmd='keepcols \"*_A\"' out=A_with_B_or_C_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve photometry data from the MAST 3D-HST HLSP and output the result as a plain ASCII text file.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/3dhst/ adql='SELECT TOP 20 ra, dec, f160w_mag FROM 3dhst.photometry' ofmt=ascii out=photometry.txt",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC for points, but filter out all rows where RA is null.",
        "response": "stilts mocshape in=dirty.fits icmd='select !NULL_RA' shape=point coords='array(RA, DEC)' out=no_null_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "How many unique galaxies are indexed in the Subaru KUG2000 comprehensive catalogue?",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/kug2000 adql='SELECT COUNT(DISTINCT KUG) FROM kug2000.table_main' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'LOG_R' applying log scaling to radial distance (R_PC).",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_R log10(R_PC)' out=log_r_distance.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge time series data from two ECSV files and write the result as a standard FITS table.",
        "response": "stilts tcat ifmt=ecsv in='ts1.ecsv ts2.ecsv' ofmt=fits out=ecsv_to_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, calculating a new column 'DIST_MPc' where distance is 1000 times the reciprocal of parallax (in mas).",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol DIST_MPc \"1000.0 / PARALLAX\"' out=dist_mpc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'PARALLAX'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DIST_MPc 1000.0 / PARALLAX\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'PARALLAX'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Read a table, calculate the total proper motion using `hypot(PMRA, PMDEC)`, and explicitly set the output data type for the new column to 32-bit float.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol -type \"float PM_TOTAL hypot(PMRA, PMDEC)\"' out=pm_float.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PM_TOTAL' 'hypot(PMRA,' 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type float PM_TOTAL hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PM_TOTAL' 'hypot(PMRA,' 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "How can I pipe a CSV file into `tcopy` and get a FITS file out?",
        "response": "cat data.csv | stilts tcopy ifmt=csv in=- ofmt=fits out=from_pipe.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Copy a VOTable and output it to FITS, forcing variable-length array storage pointers to 64-bit.",
        "response": "stilts tcopy in=array.vot ofmt='fits(var=Q)' out=q_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'ERROR_COND_6' that is 1.0 if 'ERR_A' is not equal to 'ERR_B', and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_6 \"ERR_A != ERR_B ? 1.0 : 0.0\"' out=conditional_error_6.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_6 ERR_A != ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find resources in the Euclid TAP service near Ecliptic Lon 300, Lat 40, using 1 arcsecond.",
        "response": "stilts cone serviceurl=https://eas.esac.esa.int/tap-server/tap lon=300.0 lat=40.0 radius='1.0 / 3600.0' skysys=ecliptic out=euclid_1as.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Join T_A and T_B using two 1D criteria: 'FLUX' within 10 units AND 'TIME' within 0.01 units (1d+1d).",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=1d+1d params='10 0.01' values1='FLUX TIME' values2='FLUX TIME' out=flux_time_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find MAST Gaia DR3 sources with a measured parallax greater than 1.0 mas and calculate the checksum of the table containing their IDs and positions.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT source_id, ra, dec FROM gaiadr3.gaia_source WHERE parallax > 1.0' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a 2D grid of X vs Y where the color represents the median of the 'AGE' column in each bin.",
        "response": "stilts plot2plane in=population.fits layer=grid x=X y=Y weight=AGE combine=median out=median_age_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I need the MOC for only the first 1000 sources, at high resolution (order 16).",
        "response": "stilts pixfoot in=massive_cat.fits icmd='head 1000' ra=RA dec=DEC order=16 out=head_1000_o16.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine two tables, but in the output remove any column metadata related to UCDs.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='colmeta -ucd NULL *' out=ucd_stripped.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Group match three tables on 1D position (X) and 1D velocity (V) separately (1d+1d). Tolerances 5 units for X, 10 units for V.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d+1d params='5 10' values1='X V' values2='X V' values3='X V' in1=T1.fits in2=T2.fits in3=T3.fits out=separate_1d_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate a MOC for objects where `COLOR_INDEX` is between 0.5 and 1.0.",
        "response": "stilts pixfoot in=colors.fits icmd='select \"COLOR_INDEX > 0.5 && COLOR_INDEX < 1.0\"' out=color_selected.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5' '&&' 'COLOR_INDEX' '<' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select COLOR_INDEX > 0.5 && COLOR_INDEX < 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5' '&&' 'COLOR_INDEX' '<' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot the maximum and minimum values of FLUX_ARRAY using the statline layer.",
        "response": "stilts plot2plane in=spectra.fits layer_max=statline xs=WAVE ys=FLUX_ARRAY ycombine_max=max color_max=red layer_min=statline xs_min=WAVE ys_min=FLUX_ARRAY ycombine_min=min color_min=blue out=max_min_lines.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVE\"\n    (The name \"WAVE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve the RA, Dec, and G-band magnitude for the 100 faintest sources in MAST Gaia DR3, saving the output in a FITS file.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT TOP 100 ra, dec, phot_g_mean_mag FROM gaiadr3.gaia_source ORDER BY phot_g_mean_mag DESC' out=mast_faint_gaia.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine a VOTable and a FITS table. Ensure the output VOTable uses the BINARY serialization format.",
        "response": "stilts tcatn nin=2 in1=v1.vot in2=f1.fits ofmt='votable(format=BINARY)' out=combined_binary.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "My survey data is in galactic coordinates (`glon`, `glat`). How do I create an ICRS MOC?",
        "response": "stilts mocshape in=survey_galactic.fits icmd='addskycoords galactic icrs glon glat ra_icrs dec_icrs' shape=point coords='array(ra_icrs, dec_icrs)' out=survey_icrs.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Convert a FITS table to a VOTable, ensuring the XML uses **TABLEDATA** serialization.",
        "response": "stilts tcopy in=input.fits ofmt='votable(format=TABLEDATA)' out=tabledata.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I need to find objects around Galactic L=300, B=5, with a massive radius of 5 degrees, and project the result immediately to TOPCAT.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=300.0 lat=5.0 radius=5.0 skysys=galactic omode=topcat",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match `ref.fits` (table 2) against `d1.fits` (table 1) and `d2.fits` (table 3). Match radius is 3 arcsec.",
        "response": "stilts tmatchn nin=3 in1=d1.fits in2=ref.fits in3=d2.fits multimode=pairs iref=2 matcher=sky params=3 values1='ra dec' values2='ra dec' values3='ra dec' out=ref2_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a single-column table from 100 to 200 and save as a VOTable.",
        "response": "stilts tcopy in=:loop:100,201 out=numbers.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Merge three tables and add a column that tracks the exact original filename for each row, naming the column 'SourcePath'.",
        "response": "stilts tcat in='fileA.fits fileB.fits fileC.fits' loccol=SourcePath out=tracked_paths.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate tables, and add a column 'OBS_MJD' by converting an existing string column 'OBS_DATE' (ISO format) to MJD.",
        "response": "stilts tcat in='log1.fits log2.fits' ocmd='addcol OBS_MJD isoToMjd(OBS_DATE)' out=mjd_converted_log.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Find TESS Input Catalog entries near RA 300, Dec 40, within 1 arcsecond, applying maximum verbosity.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic lon=300.0 lat=40.0 radius='1.0 / 3600.0' verb=3 out=tic_1arcsec.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a planetary data file in PDS4 format to ECSV.",
        "response": "stilts tcopy in=mars_data.xml ifmt=pds4 out=pds_converted.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Select rows where RA is greater than 180 degrees, then randomly permute the remaining rows.",
        "response": "stilts tpipe in=sky_data.fits cmd='select \"RA > 180.0\"' cmd='shuffle' out=shuffled_hemisphere.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '180.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 180.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '180.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve 50 stellar abundance records from the Subaru SAGA database and locally convert the proper motion (PMRA) to arcseconds per year.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 50 pmra FROM saga.stellar_abundances' ocmd='replacecol PMRA_ARCSEC \"pmra / 1000.0\"' out=saga_pm_arcsec.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PMRA_ARCSEC pmra / 1000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'KCORR_Z_R' using the KCF_z filter at Z=0.01, leveraging the r-z color (KCC_rz).",
        "response": "stilts tpipe in=data.fits cmd='addcol KCORR_Z_R \"kCorr(KCF_z, 0.01, KCC_rz, R_MAG-Z_MAG)\"' out=kcorrected_z_r.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.01,' 'KCC_rz,' 'R_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_Z_R kCorr(KCF_z, 0.01, KCC_rz, R_MAG-Z_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.01,' 'KCC_rz,' 'R_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DMS_DEC' converting DEC in degrees to DMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DMS_DEC \"degreesToDms(DEC, 1)\"' out=dms_dec.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DMS_DEC degreesToDms(DEC, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the string column 'NAME' has a non-zero length for all rows.",
        "response": "stilts tpipe in=data.fits cmd='assert \"length(NAME) > 0\"' out=name_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert length(NAME) > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve the top 50 sources from MAST HSCv3, requiring that the stellarity index is greater than 0.95, using a post-processing filter.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 50 * FROM hsc_v3.point' ocmd='select \"stellarity_index > 0.95\"' out=hsc_high_stellarity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.95'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select stellarity_index > 0.95\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.95'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "I have two large FITS files. I want to match them using sequential execution to avoid high memory usage.",
        "response": "stilts tmatch2 in1=large1.fits in2=large2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' runner=sequential out=sequential_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Copy an ASCII table 'raw_positions.txt' and output it as a FITS file, enabling automatic format detection for the input format hint.",
        "response": "stilts tcopy in=raw_positions.txt ifmt=ascii out=positions.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Concatenate four tables, ensuring the output format is VOTable version 1.4.",
        "response": "stilts tcatn nin=4 in1=a.fits in2=b.fits in3=c.fits in4=d.fits ofmt='votable(version=V14)' out=v14_output.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC from a local FITS file and output the map as a standard ASCII text file to standard output.",
        "response": "stilts mocshape in=local_data.fits shape=point coords='array(RA, DEC)' mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine table A and table B, maintaining only the metadata of the final structure, excluding row data.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match my `targets.csv` (with columns `ra`, `dec`) against `archive.fits` (with columns `RA_J2000`, `DEC_J2000`) within 2 arcsec. For each target, I only want the best match from the archive.",
        "response": "stilts tmatch2 ifmt1=csv in1=targets.csv in2=archive.fits matcher=sky params=2 values1='ra dec' values2='RA_J2000 DEC_J2000' find=best1 out=target_archive_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge files, applying an input filter to remove the column 'DEC_ERROR' from all inputs before concatenation.",
        "response": "stilts tcat in='e1.fits e2.fits' icmd='delcols DEC_ERROR' out=no_dec_error.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a MOC (order 13) for all unique RA/DEC pairs, using a small point radius of $1 \times 10^{-6}$ degrees.",
        "response": "stilts pixfoot in=unique_coords.fits icmd='uniq \"RA DEC\"' ra=RA dec=DEC radius=1.0e-6 order=13 out=unique_coords_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: uniq RA DEC\n\nUsage: uniq [-count] [<colid-list>]\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Retrieve GOODS HLSP photometry, selecting sources where the F850LP magnitude is constrained between 20 and 22.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/goods/ adql='SELECT ra, dec, f850lp_mag FROM goods.photometry WHERE f850lp_mag BETWEEN 20 AND 22' out=goods_faint.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Join T1 and T2. T2 is an ECSV file. Match exactly on an integer ID.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.ecsv ifmt2=ecsv matcher=exact values1=ID values2=ID out=fits_ecsv_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Start a long asynchronous query on ESO TAP_OBS for FORS2 instrument data, setting the max runtime to 2 hours (7200 seconds).",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM ivoa.ObsCore WHERE instrument_name = ''FORS2''' executionduration=7200 out=eso_fors_long.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T_A, T_B, T_C. Use T_B (index 2) as the reference table in pairs mode. Include all columns from all inputs, renaming duplicates.",
        "response": "stilts tmatchn nin=3 multimode=pairs iref=2 matcher=sky params=4 in1=T_A.fits in2=T_B.fits in3=T_C.fits fixcols=dups values1='RA DEC' values2='RA DEC' values3='RA DEC' out=B_ref_full_output.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find the coverage for objects where the radius is determined by $\text{DIST} / 1000$ in degrees, where DIST is distance in parsecs.",
        "response": "stilts pixfoot in=dist_pc.fits ra=RA dec=DEC radius='DIST_PC / 206265.0' out=dist_pc_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 285.2985 and latitude 54.6399. Please use a search radius of 1.5191 degrees. Save the results to a votable file called query_results_8.votable. The coordinates are in the supergalactic system. Use verbosity level 2.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=285.2985 lat=54.6399 radius=1.5191 skysys=supergalactic verb=2 omode=out ofmt=votable out=query_results_8.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot positions, adding a scale bar and setting the plot title using LaTeX formatting.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC scalebar=true title='$\\alpha$ vs $\\delta$' texttype=latex out=latex_scalebar.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a MOC (order 25) for $0.1$ mas radius circles (extremely high resolution).",
        "response": "stilts pixfoot in=extreme_mas.fits ra=RA dec=DEC radius='0.1 / 3600000.0' order=25 out=extreme_o25.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Copy a table from a simulation scheme (:test:5,v) containing variable-length array columns to a VOTable.",
        "response": "stilts tcopy in=':test:5,v' out=var_test.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Linking points (X1, Y1) and (X2, Y2) with a thick magenta line (link2 layer).",
        "response": "stilts plot2plane in=pairs.fits layer=link2 x1=X1 y1=Y1 x2=X2 y2=Y2 thick=3 color=magenta shading=flat out=thick_magenta_links.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a MOC from a `gbin` file at order 12.",
        "response": "stilts pixfoot in=mydata.gbin ifmt=gbin order=12 out=gbin_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match two tables exactly on 'UID'. Output to a LaTeX document.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=UID values2=UID ofmt=latex out=exact_match_report.tex",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column with the minimum value of three related magnitude columns: 'MAG1', 'MAG2', 'MAG3'.",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_MIN \"min(MAG1, MAG2, MAG3)\"' out=min_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MAG2,' 'MAG3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_MIN min(MAG1, MAG2, MAG3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'MAG2,' 'MAG3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find the best match for each row in `table_A.fits` from `table_B.fits`. The `table_B.fits` coordinates are in a 2-element array column `pos_vec`. The search radius is 10 arcsec.",
        "response": "stilts tmatch2 in1=table_A.fits in2=table_B.fits matcher=sky params=10 values1='RA DEC' values2='pos_vec pos_vec[7]' find=best1 out=vec_pos_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Filter the table using an approximate sampling: keep only every 10th row, sacrificing strict precision for speed.",
        "response": "stilts tpipe in=big_data.fits cmd='every -approx 10' out=approx_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match `data_a.fits` and `data_b.fits` in a 2D space (`VAL1`, `VAL2`), where each point has its own error radius given by the `ERR` column.",
        "response": "stilts tmatch2 in1=data_a.fits in2=data_b.fits matcher=2d_err params=10 values1='VAL1 VAL2 ERR' values2='VAL1 VAL2 ERR' out=cartesian_err_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'MJD_TIME' containing the integer component of the MJD and convert it to type int.",
        "response": "stilts tpipe in=time.fits cmd='addcol MJD_TIME toInteger(roundDown(MJD))' out=mjd_int.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "How do I combine a FITS file with a simulated sky catalog of 1000 stars?",
        "response": "stilts tcatn nin=2 in1=my_real_data.fits in2=:skysim:1000 out=real_plus_sim.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC from ASCII MOC strings, ensuring the output uses VOTable BINARY2 format.",
        "response": "stilts mocshape in=mocs.txt ifmt=ascii shape=moc-ascii coords='$1' mocfmt=cds_fits out=binary2_moc.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match four tables using exact string match on 'NAME'. T3 names should be converted to uppercase before matching.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=exact values1=NAME values2=NAME values3=UPPER_NAME values4=NAME in1=T1.fits in2=T2.fits in3=T3.fits icmd3='replacecol UPPER_NAME toUpperCase(NAME)' in4=T4.fits out=uppercase_name_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a 2D histogram (grid) where the color represents the number of points per bin, using a negative bin size to specify count (e.g., -50).",
        "response": "stilts plot2plane in=data.fits layer=grid x=X y=Y xbinsize=-50 ybinsize=-50 combine=count out=count_grid_50.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve all columns from the MAST GOODS HLSP, but constrain the maximum number of returned records to 500.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/goods/ adql='SELECT * FROM goods.photometry' maxrec=500 out=goods_limited.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate a table with a binary VOTable received via standard input.",
        "response": "cat binary.vot | stilts tcatn nin=2 in1=data.fits in2=- ifmt2=votable out=combined_binary_input.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'POS_ANGLE_DEG' calculating the position angle between the North Pole and (RA, DEC) relative to the North Pole (requires a fixed secondary point).",
        "response": "stilts tpipe in=data.fits cmd='addcol POS_ANGLE_DEG \"posAngDegrees(RA, DEC, RA, 90.0)\"' out=pos_angle.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'RA,' '90.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_ANGLE_DEG posAngDegrees(RA, DEC, RA, 90.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'RA,' '90.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plotting X vs Y, X scale logarithmic, Y scale symlog (threshold 10).",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xscale=log yscale='symlog(10,1)' out=mixed_symlog.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Crossmatch T1 and T2 exactly on ID. After matching, drop all columns whose name contains 'ERROR'.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID ocmd='delcols *ERROR*' out=error_cols_dropped.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge two tables, A.fits and B.fits. A column 'FLAG' exists only in B. Add 'FLAG' with null values to A before concatenation.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='addcol FLAG null' in2=B.fits out=flag_padded.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a plot showing the density of points using the KNN (K-Nearest Neighbors) estimate.",
        "response": "stilts plot2plane in=data.fits layer=knn x=VALUE out=knn_density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the PADC Heliophysics server asynchronously and set the polling interval to 20 seconds (20000ms).",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT TOP 5 * FROM TAP_SCHEMA.tables' poll=20000 progress=true out=helio_slow_poll.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Use `replaceval` to change a blank/null value in 'MAG' to a nominal value of 25.0.",
        "response": "stilts tpipe in=survey.fits cmd='replaceval NULL 25.0 MAG' out=survey_no_nulls.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_INV' as the inverse of 'PARALLAX', but set it to null if 'PARALLAX' is less than 0.1 mas.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_INV \"PARALLAX > 0.1 ? 1.0 / PARALLAX : NULL\"' out=inverse_parallax.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.1' '?' '1.0' '/' 'PARALLAX' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_INV PARALLAX > 0.1 ? 1.0 / PARALLAX : NULL\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0.1' '?' '1.0' '/' 'PARALLAX' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Count the total number of stellar abundance records in the Subaru SAGA database, running synchronously.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT COUNT(*) FROM saga.stellar_abundances' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the checksum of the table resulting from a synchronous query to SIMBAD for the coordinates of Sirius.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT main_id, ra, dec FROM basic WHERE main_id = ''Sirius''' sync=true omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch T1, T2, T3. T3 contains an epoch column (JD). Convert JD to MJD (jdToMjd) before matching on time.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.001 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='replacecol MJD jdToMjd(JD)' values1=MJD values2=MJD values3=MJD out=jd_to_mjd_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Filter a table to exclude rows where the flux is negative before creating an order 10 MOC.",
        "response": "stilts mocshape in=flux_data.fits icmd='select \"FLUX > 0\"' shape=point coords='array(RA, DEC)' order=10 out=positive_flux_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "How to select all columns except one in ADQL?",
        "response": "ADQL, like SQL, does not have a standard syntax for 'SELECT ALL EXCEPT'. You must explicitly list all the columns you want to keep. You can get the column list from the service's `/tables` endpoint.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter the input table to only keep the first 5 columns, then generate a MOC for a 0.1 degree radius.",
        "response": "stilts pixfoot in=col_subset.fits icmd='keepcols \"$1 $2 $3 $4 $5\"' ra=$1 dec=$2 radius=0.1 out=subset_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine a list of observation logs (L1, L2, L3). Log L3.csv is CSV format; explicitly name its magnitude column 'M' to align with 'MAG' in L1 and L2.",
        "response": "stilts tcatn nin=3 in1=L1.fits in2=L2.fits in3=L3.csv ifmt3=csv icmd3='colmeta -name MAG M' out=log_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve all information about tables in ESO TAP_CAT, saving the output in CSV format.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT * FROM TAP_SCHEMA.tables' ofmt=csv out=eso_catalog_meta.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create 100 rows containing random numbers drawn from a Gaussian distribution.",
        "response": "stilts tpipe in=:loop:100 cmd='replacecol i randomGaussian($0)' out=gaussian_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match T1 and T2. T1 rows should be included only if they match T2, and T2 rows should be included only if they match T1 (inner join, 1and2). Output metadata only.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' join=1and2 omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge three tables, and then remove any column that is constant (same value for all rows) but ensure its metadata is retained as a table parameter.",
        "response": "stilts tcat in='d1.fits d2.fits d3.fits' ocmd=constcol out=constant_to_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge two tables, filtering each input to remove all columns except 'RA', 'DEC', and 'Z'.",
        "response": "stilts tcat in='cat1.fits cat2.fits' icmd='keepcols \"RA DEC Z\"' out=xyz_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve the top 100 entries from the KIS Science Data Centre catalog schema.",
        "response": "stilts tapquery tapurl=http://dachs.sdc.leibniz-kis.de/tap adql='SELECT TOP 100 * FROM TAP_SCHEMA.tables' out=kis_tables.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the GAVO TAP service and discard the result. I just want to test the connection.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 1 * FROM ivoa.obscore' omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a VOTable to FITS, specifically requesting the output to be FITS using VOTable version 1.2 metadata in the primary HDU.",
        "response": "stilts tcopy in=data.vot ofmt='fits(primary=votable1.2)' out=v12_phdu.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match A.fits and B.fits using Cartesian 2D coordinates (X, Y). Include all rows from B (right outer join), and rename duplicate columns using full suffix notation.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=2d params=5 values1='X Y' values2='X Y' join=all2 fixcols=all suffix1=_A suffix2=_B out=cartesian_right_outer.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve the RA and DEC of the top 100 sources from the MAST SkyMapper DR4 catalogue and save the result as a CSV file.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/skymapperdr4/ adql='SELECT TOP 100 ra, dec FROM smssdr4.master' ofmt=csv out=smss_coords.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Get a statistical summary of the parallax column for the 1000 nearest stars in Gaia DR3.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 1000 parallax FROM gaiadr3.gaia_source ORDER BY parallax DESC' ocmd='keepcols parallax' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a HAPI stream file to a local FITS table.",
        "response": "stilts tcopy ifmt=hapi in=stream.hapi out=table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Can you convert a FITS table from a URL directly to a Parquet file?",
        "response": "stilts tcopy in=http://example.com/catalog.fits out=catalog.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Remove the column 'RA' and replace it with a new 'RA' column calculated from 'RA_RAD' converted to degrees, preserving metadata.",
        "response": "stilts tpipe in=data.fits cmd='replacecol RA radiansToDegrees(RA_RAD)' out=ra_degree_meta.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query MAST Gaia DR3 and locally filter the results to include only sources brighter than G=15.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT * FROM gaiadr3.gaia_source' maxrec=1000 ocmd='select \"phot_g_mean_mag < 15\"' out=mast_gaia_filtered.fits",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select phot_g_mean_mag < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I need to transpose my table `timeseries.fits`. How do I do that?",
        "response": "stilts tpipe in=timeseries.fits cmd=transpose out=timeseries_transposed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "My `csv` file has columns ra_hms and dec_dms. Make me a MOC.",
        "response": "stilts mocshape in=data.csv ifmt=csv shape=point coords='array(hmsToDegrees(ra_hms),dmsToDegrees(dec_dms))' out=data_sexagesimal.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve 10 ObsCore entries from the EVN Data Archive and output the result in IPAC format.",
        "response": "stilts tapquery tapurl=http://evn-vo.jive.eu/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' ofmt=ipac out=evn_sample.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve ObsCore entries from the CSIRO ASKAP service, then sort the results locally by minimum observation time (`t_min`) in ascending order.",
        "response": "stilts tapquery tapurl=https://casda.csiro.au/casda_vo_tools/tap adql='SELECT TOP 100 * FROM obs_core' ocmd='sort t_min' out=casda_sorted_time.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine three ASCII tables, adding a column named 'SOURCE_ORIGIN' containing only the unique part of each filename (e.g., 'star', 'gal', 'qso').",
        "response": "stilts tcat ifmt=ascii in='star.dat gal.dat qso.dat' uloccol=SOURCE_ORIGIN out=unique_origin.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, and if the final table has a column 'FLAG', replace any instance of value 99 with null in that column.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='replaceval 99 null FLAG' out=flag_cleaned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, and add a boolean column 'NULL_FLAG' indicating if the 'FLUX' column was null in the input row.",
        "response": "stilts tcat in='data_x.fits data_y.fits' ocmd='addcol NULL_FLAG NULL_FLUX' out=null_flagged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot points in Ecliptic coordinates (LON, LAT), ensuring the output is 800 pixels wide.",
        "response": "stilts plot2sky in=ecl_data.fits viewsys=ecliptic layer=mark lon=LON lat=LAT xpix=800 out=ecliptic_x800.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"LON\"\n    (The name \"LON\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column containing the squared value of the hyperbolic sine of 'Z_REDSHIFT'.",
        "response": "stilts tpipe in=data.fits cmd='addcol Z_SQ_ASINH square(asinh(Z_REDSHIFT))' out=asinh_z.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "My radius column `DIAM_ARCSEC` is a diameter in arcseconds. How do I use it?",
        "response": "stilts mocshape in=diameters.fits shape=circle coords='array(RA,DEC,DIAM_ARCSEC/2.0/3600.0)' out=diameters_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a 2D plot with a secondary y-axis on the right.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y y2func='1/y' y2label='1/Y'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge tables, adding a boolean column 'IS_BRIGHT' that flags rows where $\\text{MAG} < 18$.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='addcol IS_BRIGHT \"MAG < 18\"' out=flagged_bright.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT MAG < 18\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Which `mocimpl` option should I use for best performance?",
        "response": "The default `mocimpl=auto` chooses the implementation based on the MOC order. The documentation suggests that performance characteristics may differ, and it may be worthwhile to experiment if you are working with very large tables.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter catalog to only include rows where magnitude (G_MAG) is within 15 to 18, then generate a point MOC.",
        "response": "stilts mocshape in=mag_range_cat.fits icmd='select \"G_MAG >= 15.0 && G_MAG <= 18.0\"' shape=point coords='array(RA, DEC)' out=mag_filtered_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '15.0' '&&' 'G_MAG' '<=' '18.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G_MAG >= 15.0 && G_MAG <= 18.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '15.0' '&&' 'G_MAG' '<=' '18.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I want a MOC where the radius is calculated as the parallax error (PLX_ERR) in milli-arcseconds, converted to degrees.",
        "response": "stilts pixfoot in=parallax.fits ra=RA dec=DEC radius='PLX_ERR / 3600000.0' out=parallax_error_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine tables and enforce that the final output file is written using the VOTable FITS serialization format.",
        "response": "stilts tcat in='c1.fits c2.fits' ofmt='votable(format=FITS)' out=votable_fits_output.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create an MOC for circles where the radius is equivalent to 5 arcminutes plus 10 arcseconds, converted to degrees.",
        "response": "stilts mocshape in=data.fits shape=circle coords='array(RA, DEC, (5.0 / 60.0) + (10.0 / 3600.0))' out=complex_radius.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Copy a FITS table to CSV, but explicitly set the output cell width limit to 20 characters.",
        "response": "stilts tcopy in=long_values.fits ofmt='csv(maxCell=20)' out=truncated.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert a Parquet file to Feather, using the Parquet reader in **parallel mode** with 4 threads.",
        "response": "stilts tcopy in=input.parquet ifmt='parquet(nThread=4)' out=parallel_read.fea",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'Z_BIN_0_5' based on rounding the redshift (Z) to the nearest 0.5.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol Z_BIN_0_5 round(Z*2.0)/2.0' out=z_binned_0_5.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I want to perform a symmetric best-match between `survey_x.fits` and `survey_y.fits` such that each object can only appear in one matched pair.",
        "response": "stilts tmatch2 in1=survey_x.fits in2=survey_y.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' find=best out=symmetric_best_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Draw filled polygons (area layer, Polygon array type), coloring them based on the auxiliary MAG column, using Paux shading.",
        "response": "stilts plot2sky in=regions.fits layer=area area=VERTICES areatype=POLYGON polymode=fill shading=paux aux=MAG pmap=viridis out=paux_filled_polys.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert 'raw_measurements.csv' into a FITS file, explicitly specifying the input format since CSV cannot be auto-detected by content.",
        "response": "stilts tcopy in=raw_measurements.csv ifmt=csv out=measurements.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 337.4206 and latitude -15.6699. Please use a search radius of 1.9831 degrees. Save the results to a ascii file called query_results_59.ascii. The coordinates are in the ecliptic system.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=337.4206 lat=-15.6699 radius=1.9831 skysys=ecliptic omode=out ofmt=ascii out=query_results_59.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine tables, and add a constant column 'IS_GAL' with the boolean value 'true'.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol IS_GAL true' out=galaxy_flag_d.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve the top 100 observations from the MAST CLASSY HLSP, but locally filter the resulting table to retain only rows where the quality flag equals zero.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/classy/ adql='SELECT TOP 100 * FROM ivoa.ObsCore' ocmd='select flag==0' out=classy_clean.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC from STC-S strings, outputting the result using the raw binary format (order 16).",
        "response": "stilts mocshape in=stc_footprints.fits shape=stc-s coords=S_REGION order=16 mocfmt=raw out=stc_raw_o16.bin",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Count the number of matches between gala_dr3.fits and sdss_dr17.fits within 2 arcseconds, without creating an output file.",
        "response": "stilts tmatch2 in1=gala_dr3.fits in2=sdss_dr17.fits matcher=sky params=2 values1='ra dec' values2='ra dec' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "What is the command to just check if `my_table.fits` can be read by stilts without producing any output?",
        "response": "stilts tpipe in=my_table.fits omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the MAST TESS Input Catalog (TIC) for 100 objects and locally calculate the row count.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT * FROM tic.v8' maxrec=100 omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine tables and then calculate the standard deviation for every numeric column in the final result.",
        "response": "stilts tcat in='set1.fits set2.fits' omode=stats ocmd='keepcols ucd$stat.stdev'",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 293.1823 and latitude -53.7545. Please use a search radius of 0.1566 degrees. Save the results to a csv file called query_results_185.csv. The coordinates are in the ecliptic system.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=293.1823 lat=-53.7545 radius=0.1566 skysys=ecliptic compress=true omode=out ofmt=csv out=query_results_185.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Execute a search where the longitude is defined by $RA_{deg} = 15 + 1.2$, and the radius is 100 arcminutes (convert correctly).",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon='15.0 + 1.2' lat=20.0 radius='100.0 / 60.0' out=expr_radius_100arcmin.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"15.0 + 1.2\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge two tables, T_LEFT and T_RIGHT. T_LEFT's coordinate system is in Supergalactic coordinates. Convert them to ICRS before joining.",
        "response": "stilts tcatn nin=2 in1=T_LEFT.fits icmd1='addskycoords supergalactic icrs SGL SGB RA_ICRS DEC_ICRS' in2=T_RIGHT.fits out=supergalactic_to_icrs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate tables, ensuring input columns are renamed to syntactically safe versions before proceeding.",
        "response": "stilts tcat in='unsafe1.csv unsafe2.csv' icmd=fixcolnames out=safecols_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create an MOC for large circles (5 degrees radius) around sources, outputting at maximum standard order 29.",
        "response": "stilts mocshape in=wide_fields.fits shape=circle coords='array(RA, DEC, 5.0)' order=29 out=max_res_wide_fields.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a plot where the view system is Supergalactic, and the coordinate numeric labels are hidden (labelpos=None).",
        "response": "stilts plot2sky in=sgl_data.fits viewsys=supergalactic layer=mark lon=SGLON lat=SGLAT labelpos=None out=sgl_no_labels.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"SGLON\"\n    (The name \"SGLON\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I have an `image_centers.fits` table. Generate a MOC for a 0.25 degree radius around each center point, at order 8.",
        "response": "stilts pixfoot in=image_centers.fits radius=0.25 order=8 out=image_footprints.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I have 5 tables. `t1` is the reference. I want to see every row from `t1`, joined with the best match from `t2`, `t3`, `t4`, and `t5` if one exists.",
        "response": "stilts tmatchn nin=5 multimode=pairs iref=1 in1=t1.fits in2=t2.fits in3=t3.fits in4=t4.fits in5=t5.fits matcher=sky params=5 values1='ra dec' values2='ra dec' values3='ra dec' values4='ra dec' values5='ra dec' join1=always out=t1_with_all_counterparts.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate two tables, keeping only rows from the first table where 'SNR' > 5 AND 'QUALITY' is true.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='select \"SNR > 5 && QUALITY\"' in2=T2.fits out=high_quality_snr.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5' '&&' 'QUALITY'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select SNR > 5 && QUALITY\n\nUsage: select <expr>\n    (Unused arguments: '>' '5' '&&' 'QUALITY'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot a 2D grid of X vs Y where the color represents the median of the 'AGE' column in each bin.",
        "response": "stilts plot2plane in=population.fits layer=grid x=X y=Y weight=AGE combine=median out=median_age_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine three files. T2 contains a boolean column 'PASS_FLAG'. Replace it with an integer column 'QUALITY' (1 if true, 0 if false) before joining.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits icmd2='replacecol QUALITY \"(PASS_FLAG ? 1 : 0)\"' in3=T3.fits out=bool_to_int.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '1' ':' '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol QUALITY (PASS_FLAG ? 1 : 0)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '1' ':' '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "My RA column contains NaN values. What will happen?",
        "response": "`mocshape` ignores rows where the coordinate expressions result in a NaN or null value, so those rows will not contribute to the MOC.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Read a table using the JDBC scheme and output the result as a raw, multi-table FITS stream.",
        "response": "stilts tcopy in=':jdbc:postgresql://db#SELECT RA,DEC FROM cat' ofmt=fits out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate a MOC at order 12 from every 5th row of my catalog.",
        "response": "stilts mocshape in=mycat.fits icmd='every 5' order=12 shape=point coords='array(RA,DEC)' out=mycat_every5_o12.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a coverage map for objects only in the northern hemisphere (DEC > 0).",
        "response": "stilts pixfoot in=all_sky.fits icmd='select \"DEC > 0\"' ra=RA dec=DEC out=northern_hemisphere.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Add a column 'ERROR_COND_3' that is 1.0 if 'ERR_A' equals 'ERR_B', and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_3 \"ERR_A == ERR_B ? 1.0 : 0.0\"' out=conditional_error_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_3 ERR_A == ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '==' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read an ECSV file, forcing validation to ignore cases where header columns differ from CSV columns (colcheck=IGNORE).",
        "response": "stilts tcopy in=mismatch.ecsv ifmt='ecsv(colcheck=IGNORE)' out=forced_read.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the PADC RR TAP service for a list of tables and compute the checksum of the resulting output table.",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.tables' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Use the 'assert' filter to guarantee that the integer ID column is always positive.",
        "response": "stilts tpipe in=data.fits cmd='assert \"ID > 0\"' out=id_positive.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert ID > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a 2D plot coloring the points by the value of a third column, 'METALLICITY', using the plasma color map.",
        "response": "stilts plot2plane in=star_properties.fits layer=mark x=TEFF y=LOGG shading=aux aux=METALLICITY auxmap=plasma",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TEFF\"\n    (The name \"TEFF\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 6) colored by the median 'TEMP' value, using the 'cubehelix' map.",
        "response": "stilts plot2sky in=temp_survey.fits layer=skydensity lon=RA lat=DEC level=6 combine=median weight=TEMP auxmap=cubehelix out=median_temp_hpx6.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Merge multiple IPAC tables and output the result as a single, standard FITS table.",
        "response": "stilts tcat ifmt=ipac in='i1.tbl i2.tbl i3.tbl' ofmt=fits out=ipac_to_fits_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "What's the command to calculate the sky separation in arcseconds between two sets of coordinate columns `RA1, DEC1` and `RA2, DEC2`?",
        "response": "stilts tpipe in=pairs.fits cmd='addcol SEPARATION_ARCSEC skyDistanceDegrees(RA1,DEC1,RA2,DEC2)*3600.' out=pairs_with_sep.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Upload `sources.vot` and `calibrators.vot` and join them on the service.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap nupload=2 upload1=sources.vot upname1=src upload2=calibrators.vot upname2=cal adql='SELECT * FROM TAP_UPLOAD.src AS s JOIN TAP_UPLOAD.cal AS c ON s.field_id = c.field_id' out=uploaded_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create an all-sky Aitoff plot with longitude=180 at center (Aitoff0).",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC projection=aitoff0 out=aitoff0_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a MOC for circles whose radius is given by the constant $0.0005$ degrees, multiplied by $2$.",
        "response": "stilts pixfoot in=fixed_rad.fits ra=RA dec=DEC radius='0.0005 * 2.0' out=fixed_0p001deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I only want the identifier and position columns ('ID', 'RA', 'DEC') from the cone search result. Discard all others.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=5.0 lat=5.0 radius=0.02 ocmd='keepcols \"ID RA DEC\"' out=minimal_output.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read a CSV file 'input.csv' that uses a semicolon delimiter and convert it to FITS.",
        "response": "stilts tcopy in=input.csv ifmt='csv(delimiter=;)' out=semicolon.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve the top 10 records from the SIMBAD database based on position near M82, using synchronous access.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT TOP 10 * FROM basic WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 148.9, 69.6, 0.01))' sync=true out=simbad_m82.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter rows to keep only the bottom 50 rows of the table.",
        "response": "stilts tpipe in=data.fits cmd='tail 50' out=last_50.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot error ellipses derived from correlation (skycorr) where units are arcminutes, using a filled ellipse shape.",
        "response": "stilts plot2sky in=errors.fits layer=skycorr lon=RA lat=DEC lonerr=EL laterr=EB corr=C unit=minute ellipse=filled_ellipse out=filled_corr_arcmin.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "What is the simplest `tapquery` command I can run to test a service?",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 1 * FROM ivoa.obscore' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find objects around RA 270, Dec 80, using a radius given by $\\sqrt{0.01^2 + 0.02^2}$ degrees, and output the exact row count.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=270.0 lat=80.0 radius='hypot(0.01, 0.02)' omode=count",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"hypot(0.01, 0.02)\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Draw filled quadrilaterals (poly4 layer).",
        "response": "stilts plot2sky in=quads.fits layer=poly4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 polymode=fill out=filled_quads_poly4.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine three tables. After merging, convert any 'MAG' values of 99.0 to null.",
        "response": "stilts tcatn nin=3 in1=D1.fits in2=D2.fits in3=D3.fits ocmd='badval 99.0 MAG' out=magnitude_cleaned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot density contours on an all-sky plot, setting the smoothing level to 15 pixels.",
        "response": "stilts plot2sky in=data.fits projection=car layer=contour lon=RA lat=DEC smooth=15 out=smooth15_car_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Merge three tables and add a column named 'DataSourceIndex' indicating the sequential position (1, 2, or 3) of the originating table.",
        "response": "stilts tcat in='t1.fits t2.fits t3.fits' seqcol=DataSourceIndex out=sequenced_tcat_result.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate all FITS tables in the current directory (`*.fits`) and sort the final table by the `FLUX` column in descending order.",
        "response": "stilts tcat in=*.fits ocmd='sort -down FLUX' out=all_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Calculate the MOC for sources within 5 arcseconds of their positions in stars.fits.",
        "response": "stilts pixfoot in=stars.fits ra=RA dec=DEC radius='5.0 / 3600.0' out=stars_5as.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Copy a table and output it using the **TST format**.",
        "response": "stilts tcopy in=data.fits out=output.tst",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match T_A and T_B. T_B has an array column 'FLUX_VEC'. Calculate the median flux and match on that value (1d matcher, 0.05 tolerance).",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits icmd2='addcol MEDIAN_FLUX median(FLUX_VEC)' matcher=1d params=0.05 values1=MAG values2=MEDIAN_FLUX out=array_median_1d.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'MJD_ISO' containing the MJD date converted to ISO-8601 string format.",
        "response": "stilts tpipe in=time.fits cmd='addcol MJD_ISO mjdToIso(MJD_TIME)' out=iso_time.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a circle MOC using $0.000001$ degrees as the fixed radius.",
        "response": "stilts mocshape in=input.fits shape=circle coords='array(RA, DEC, 0.000001)' out=tiny_circles_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need the MOC for a radius equal to $\text{sqrt}(0.01)$ degrees.",
        "response": "stilts pixfoot in=sqrt_rad.fits ra=RA dec=DEC radius='sqrt(0.01)' out=sqrt_rad_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the KIS Science Data Centre TAP service, using an external table filter to reduce the data locally and keep only 5 rows.",
        "response": "stilts tapquery tapurl=http://dachs.sdc.leibniz-kis.de/tap adql='SELECT * FROM tap_schema.tables' ocmd='head 5' out=kis_head5.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need data from VizieR TAP near RA 140, Dec -5, with radius 0.005 degrees, limiting output columns to those listed.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=140.0 lat=-5.0 radius=0.005 ocmd='keepcols \"ID RA DEC MAG\"' out=vizier_subset_cols.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "What is the command to create a MOC from `data.parquet` at order 11?",
        "response": "stilts pixfoot in=data.parquet order=11 out=parquet_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Join T1 and T2. T2 is a multi-extension FITS file, use extension #5. Match on position within 10 arcsec.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits#5 matcher=sky params=10 values1='RA DEC' values2='RA DEC' out=ext5_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the XMM-Newton archive, forcing the use of the TAP 1.1 interface version to communicate with the server.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT TOP 5 * FROM ivoa.ObsCore' interface=tap1.1 out=xmm_tap11_req.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a FITS file to a column-oriented FITS file.",
        "response": "stilts tcopy in=row_oriented.fits ofmt=colfits out=column_oriented.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Copy a FITS file and output it to standard output as a VOTable with **BINARY2** serialization.",
        "response": "stilts tcopy in=input.fits ofmt='votable(format=BINARY2)' out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match my reference list `ref.fits` against two very large catalogs `large1.fits` and `large2.fits`. How can I make this faster?",
        "response": "You can try using the `runner=parallel` parameter to use multiple CPU cores. For sky matches, you can also experiment with the `tuning` parameter to adjust the HEALPix level for potentially better performance [2, B.41.1, 1963].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "What's the default value for the `sync` parameter in tapquery?",
        "response": "The default value for the `sync` parameter is `false`, which means queries are submitted asynchronously by default.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert an IPAC file to CSV, ensuring no header line is written to the CSV output.",
        "response": "stilts tcopy in=ipac_data.tbl ifmt=ipac ofmt='csv(header=false)' out=no_header.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Calculate the maximum and minimum detector integration time (DIT) in VIRCAM raw observations using the statistical output mode.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT dit FROM raw.vircam' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "My tables have a 'DATE' column as a string. I want to add a new 'MJD' column to both before joining.",
        "response": "stilts tcatn nin=2 in1=obs1.fits icmd1='addcol MJD isoToMjd(DATE)' in2=obs2.fits icmd2='addcol MJD isoToMjd(DATE)' out=obs_with_mjd.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC (order 15) for sources around Ecliptic Lon 10, Lat 10, using 1 arcminute, converting internally.",
        "response": "stilts pixfoot in=ecl_data3.fits icmd='addskycoords ecliptic icrs ELON ELAT RA DEC' ra=RA dec=DEC radius='1.0 / 60.0' order=15 out=ecl_1am_o15.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create an MOC (order 8) for point sources. The input columns X, Y, Z are Cartesian and must be converted to ICRS RA/DEC before processing.",
        "response": "stilts pixfoot in=cartesian.fits icmd='addskycoords icrs icrs xyzToLon(X,Y,Z) xyzToLat(X,Y,Z) RA_ICRS DEC_ICRS' ra=RA_ICRS dec=DEC_ICRS radius=0 order=8 out=cartesian_o8.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC from the rows where the `MAG_ERROR` is at its minimum value for the whole table.",
        "response": "stilts pixfoot in=photometry.fits icmd='select MAG_ERROR==minimum(MAG_ERROR)' out=best_photometry.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the catalogue to keep only objects with magnitude 'MAG' in the range 10 to 15, inclusive.",
        "response": "stilts tpipe in=cat.fits cmd='select \"MAG >= 10.0 && MAG <= 15.0\"' out=mid_range.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '10.0' '&&' 'MAG' '<=' '15.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG >= 10.0 && MAG <= 15.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '10.0' '&&' 'MAG' '<=' '15.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch T1 and T2 (2 arcsec radius). Filter T1 first, keeping only objects with flux errors less than 0.1, then filter T2, keeping only rows where Z > 0.05.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='select \"FLUX_ERR < 0.1\"' in2=T2.fits icmd2='select \"Z > 0.05\"' matcher=sky params=2 values1='RA DEC' values2='RA DEC' out=double_filtered_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX_ERR < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot error ellipses (skycorr, mas unit) derived from correlation, only for objects where MAG < 16.",
        "response": "stilts plot2sky in=gaia_err.fits icmd='select \"MAG < 16\"' layer=skycorr lon=RA lat=DEC lonerr=RA_ERR laterr=DEC_ERR corr=CORR unit=mas out=bright_corr_errors.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"MAG < 16\" (The name \"MAG\" is unknown.)\n        (The name \"MAG\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a simple table with a loop and save it as a FITS file.",
        "response": "stilts tcopy in=:loop:1,101 out=loop.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find resources in the European JWST Archive TAP around RA 330, Dec 45, using a cone defined by $100$ arcseconds.",
        "response": "stilts cone serviceurl=https://jwst.esac.esa.int/server/tap lon=330.0 lat=45.0 radius='100.0 / 3600.0' out=jwst_100as.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"100.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find objects around RA 23h 59m 59s, Dec -1d 0m 0s (convert RA/Dec), using 1 arcsecond radius.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon='hmsToDegrees(23.999722, 0, 0)' lat=-1.0 radius='1.0 / 3600.0' out=simbad_1as_edge.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(23.999722, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate three VOTables: part1.vot, part2.vot, and part3.vot, forcing the output to VOTable using the efficient BINARY2 serialization.",
        "response": "stilts tcat in='part1.vot part2.vot part3.vot' ofmt='votable(format=BINARY2)' out=combined_binary2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plotting a line where color is auxiliary (Z value) and thickness is 4.",
        "response": "stilts plot2plane in=data.fits layer=line x=X y=Y aux=Z thick=4 out=thick_aux_line.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine T1 and T2. T1 is a streaming input from a system command pipeline; T2 is a local file.",
        "response": "echo 'RA,DEC\n10,20' | stilts tcatn nin=2 in1='cat -|' ifmt1=csv in2=T2.fits out=piped_input_concat.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "What is the command to join `runA.fits` and `runB.fits` and show the result in a GUI window?",
        "response": "stilts tcat in=runA.fits in=runB.fits omode=gui",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I need to find all objects that appear in a list of `transients.fits` and have counterparts in both `archive1.fits` and `archive2.fits`. A match is 2.5 arcsec.",
        "response": "stilts tmatchn nin=3 multimode=pairs iref=1 in1=transients.fits in2=archive1.fits in3=archive2.fits matcher=sky params=2.5 values1='ra dec' values2='ra dec' values3='ra dec' join1=match join2=match join3=match out=confirmed_transients.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Search Gaia TAP (radius 0.001 deg) and retain only columns with UCD starting with 'phot.' and remove the output file.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=10.0 lat=10.0 radius=0.001 ocmd='keepcols \"ucd$phot_*\"' omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate four files (C1-C4.fits). Use FITS-plus output format for preservation of rich metadata.",
        "response": "stilts tcatn nin=4 in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits ofmt=fits-plus out=multi_source_rich.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create an order 17 MOC from UNIQ identifiers and immediately display a summary of coverage.",
        "response": "stilts mocshape in=hpx_list.fits shape=uniq coords=HPX_ID order=17 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the PADC TAP Maser server for tables, running synchronously, and outputting the checksum of the result.",
        "response": "stilts tapquery tapurl=http://voparis-tap-maser.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.tables' sync=true omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the MAST TESS Input Catalog (TIC) to find the minimum and maximum TMAG values and output only the statistical summary.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TMAG FROM tic.v8' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the ESO TAP_CAT around RA 180, Dec -90, searching a region defined by 0.5 arcminutes, and calculate the mean of the resulting magnitude column MAG_V.",
        "response": "stilts cone serviceurl=http://archive.eso.org/tap_cat lon=180.0 lat=-90.0 radius='0.5 / 60.0' ocmd='keepcols MAG_V' omode=stats",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.5 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the ESO TAP_CAT around Galactic L=180, B=90 (North Galactic Pole), using a 6 arcsecond radius.",
        "response": "stilts cone serviceurl=http://archive.eso.org/tap_cat lon=180.0 lat=90.0 radius='6.0 / 3600.0' skysys=galactic out=eso_ngp_6as.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"6.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Join T1 and T2. T1 columns should be retained with their original names. Duplicates from T2 should be suffixed '_dup'.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID fixcols=dups suffix2=_dup out=T1_priority_dup_suffix.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Calculate the average and standard deviation of 'TEFF' for a table, but first filter out any rows where 'TEFF' is null.",
        "response": "stilts tpipe in=stars.fits cmd='select !NULL_TEFF' cmd='keepcols TEFF' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve 5 ObsCore entries from the ESA Euclid Archive, running synchronously, and requiring authentication.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT TOP 5 * FROM ivoa.ObsCore' sync=true auth=true out=euclid_sync_auth.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine FITS file F1.fits with VOTable F2.vot, but ensure F1 is processed to select only rows where 'SNR' is greater than 10, while F2 uses only columns ID and FLUX.",
        "response": "stilts tcatn nin=2 in1=F1.fits icmd1='select \"SNR > 10\"' in2=F2.vot icmd2='keepcols \"ID FLUX\"' out=filtered_mixed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select SNR > 10\n\nUsage: select <expr>\n    (Unused arguments: '>' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Filter a table to keep rows where magnitude 'MAG' is greater than 25, and use the result for plotting/inspection in the GUI mode.",
        "response": "stilts tpipe in=deep.fits cmd='select \"MAG <= 25\"' omode=topcat",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '25'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG <= 25\n\nUsage: select <expr>\n    (Unused arguments: '<=' '25'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows where the proper motion in RA is between 1 and 10 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMRA >= 1.0 && PMRA <= 10.0\"' out=mid_pmra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '1.0' '&&' 'PMRA' '<=' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA >= 1.0 && PMRA <= 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '1.0' '&&' 'PMRA' '<=' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot markers sized by 'DISTANCE', using the size layer, ensuring non-physical scaling (unit=scaled) to make them visible.",
        "response": "stilts plot2sky in=sources.fits layer=size lon=RA lat=DEC size=DISTANCE unit=scaled out=distance_scaled_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Search VizieR TAP for objects around 00h 00m 00s, +00d 00m 00s, using a search radius of 0.0001 degrees, and sort the results by separation in descending order.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=0.0 lat=0.0 radius=0.0001 ocmd='sort -down Separation' out=vizier_sorted_down.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate two tables, then show the final metadata in the terminal.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I have detector coordinates (`X_IMAGE`, `Y_IMAGE`) in two files. Find matches within a 5 pixel radius.",
        "response": "stilts tmatch2 in1=chip1.fits in2=chip2.fits matcher=2d params=5 values1='X_IMAGE Y_IMAGE' values2='X_IMAGE Y_IMAGE' out=detector_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find WiggleZ sources with high confidence redshifts (z_conf > 0.9) near RA 200, Dec 0, within 0.1 degree.",
        "response": "stilts tapquery tapurl=http://wiggleztap.asvo.nci.org.au/ncitap//tap adql='SELECT * FROM wigglez_final.sources WHERE z_conf > 0.9 AND 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 200, 0, 0.1))' out=wigglez_high_conf.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T2 is a remote URL. Use parallel processing.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=5 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=T1.fits in2=http://archive.com/T2.fits in3=T3.fits runner=parallel out=remote_match_parallel.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T2 is a multi-extension FITS file, use extension #2. T3 is a compressed VOTable.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits#2 in3=T3.vot.gz values1='RA DEC' values2='RA DEC' values3='RA DEC' out=mixed_ext_comp_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate two tables. Before joining, collapse columns 'MAG_U', 'MAG_G', 'MAG_R' into a single array column 'UGRI_MAGS' in each table.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='collapsecols UGRI_MAGS MAG_U 3' out=array_mags.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the Subaru/XMM-Newton Deep Survey and output the result in the verbose VOTable TABLEDATA format.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/sxds_v1 adql='SELECT TOP 10 * FROM sxds.point_source' ofmt='votable(format=TABLEDATA)' out=sxds_ascii.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match on a 1-dimensional value, redshift, with a tolerance of 0.01.",
        "response": "stilts tmatch2 in1=spec_cat.fits in2=photo_cat.fits matcher=1d params=0.01 values1=redshift values2=z_phot out=redshift_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot markers, setting a fixed margin (insets) of 20 pixels on the top and bottom, and allowing auto calculation for left and right.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC insets=20,,20, out=custom_vertical_insets.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate two tables, removing all rows in the combined output where 'FLUX' is infinite.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits ocmd='select \"FLUX != Infinity\"' out=no_infinite_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' 'Infinity'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX != Infinity\n\nUsage: select <expr>\n    (Unused arguments: '!=' 'Infinity'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'ERROR_COND_2' that is 1.0 if 'ERR_A' is less than 'ERR_B', and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_2 \"ERR_A < ERR_B ? 1.0 : 0.0\"' out=conditional_error_2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_2 ERR_A < ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "My table has `RA_HRS` and `DEC_DMS`. How do I generate a footprint?",
        "response": "stilts mocshape in=mixed_sex.fits shape=point coords='array(hoursToDegrees(RA_HRS),dmsToDegrees(DEC_DMS))' out=mixed_sex_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Submit a lengthy asynchronous query to ARI Gaia for all sources with measured RVS spectra, requesting a long maximum execution time (4 hours) and setting the polling interval to 30 seconds.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT * FROM gaiadr3.gaia_source WHERE has_rvs = true' executionduration=14400 poll=30000 progress=true out=ari_rvs_long.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Sort the input table by 'REDSHIFT' in descending order, then retrieve only the top 5 records.",
        "response": "stilts tpipe in=qso.fits cmd='sort -down REDSHIFT' cmd='head 5' out=highest_z.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge FITS tables F1 and F2. F2 has FK4 coordinates; convert them to ICRS using the current epoch before concatenation.",
        "response": "stilts tcatn nin=2 in1=F1.fits in2=F2.fits icmd2='addskycoords fk4 icrs RA_B DEC_B RA_I DEC_I' out=fk4_icrs_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the GAVO Data Center for 10 records from the SDSS DR16 QSO catalog, running synchronously.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 10 * FROM sdss.dr16qso' sync=true out=gavo_qso_sync.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_OLD' converting Johnson U magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB_OLD \"MAG_U + JOHNSON_AB_U\"' out=u_ab_old_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB_OLD MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot markers using the Ecliptic coordinate system view, with coordinate labels formatted using LaTeX.",
        "response": "stilts plot2sky in=ecl_data.fits viewsys=ecliptic layer=mark lon=ELON lat=ELAT texttype=latex xlabel='$\\lambda$' ylabel='$\\beta$' out=ecl_latex.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"ELON\"\n    (The name \"ELON\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Upload a list of galaxies with magnitudes to GAVO DC, and perform a crossmatch against SDSS quasars where the uploaded galaxy magnitude is less than 20 (filtered before upload).",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT t.ra, t.dec, u.mag FROM sdss.dr16qso AS t JOIN TAP_UPLOAD.bright_gals AS u ON 1=CONTAINS(POINT(''ICRS'', t.ra, t.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.0001))' nupload=1 upload1=gals.fits upname1=bright_gals ucmd1='select \"MAG < 20\"' out=gavo_upload_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 20\n\nUsage: select <expr>\n    (Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a boolean column 'IS_FAINT' which is true if the magnitude is greater than 20.0.",
        "response": "stilts tpipe in=cat.fits cmd='addcol IS_FAINT \"MAG > 20.0\"' out=faint_flag_output.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 20.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '20.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "My RA is column `RA_J2000` and Dec is `DE_J2000`. Create a MOC.",
        "response": "stilts pixfoot in=data.fits ra=RA_J2000 dec=DE_J2000 out=data_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the Subaru SAGA database for 20 stellar abundance records and send the result directly to TOPCAT.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 20 * FROM saga.stellar_abundances' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate data_A.fits and data_B.fits. A column named 'ID_STRING' in A needs to be converted to a numeric hash ID before joining B.",
        "response": "stilts tcatn nin=2 in1=data_A.fits icmd1='replacecol ID_NUM hashCode(ID_STRING)' in2=data_B.fits out=hashed_id_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match three catalogs where the coordinates for table 3 are in columns `pos_ra` and `pos_dec`.",
        "response": "stilts tmatchn nin=3 in1=c1.fits in2=c2.fits in3=c3.fits multimode=group matcher=sky params=3 values1='ra dec' values2='ra dec' values3='pos_ra pos_dec' out=custom_col_names.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate two tables, restricting the total number of output rows to 500, then display statistics only on the 'FLUX' column.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits ocmd='head 500' ocmd='keepcols FLUX' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'RA_ICRS_DEG_3' converting FK4 RA/DEC (B1950) to ICRS RA (J2000) using the old function.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_ICRS_DEG_3 \"raFK4toFK5degrees(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_ra_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_ICRS_DEG_3 raFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the GAVO Data Center for data around Ecliptic Lon 30, Lat 15, with a 5 arcsecond radius, and explicitly request VOTable BINARY serialization.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=30.0 lat=15.0 radius='5.0 / 3600.0' skysys=ecliptic ofmt='votable(format=BINARY)' out=ecliptic_binary.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot a scatter plot with transparent points. Let's say 10 points make it opaque.",
        "response": "stilts plot2plane in=crowded.fits layer=mark x=X y=Y shading=transparent opaque=10",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine table A (in Galactic coords GLON, GLAT) and table B (in Ecliptic coords ELON, ELAT). Convert both to ICRS (RA, DEC) before joining.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='addskycoords galactic icrs GLON GLAT RA_A DEC_A' in2=B.fits icmd2='addskycoords ecliptic icrs ELON ELAT RA_B DEC_B' ocmd='keepcols \"RA_A DEC_A RA_B DEC_B\"' out=double_convert.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can `mocshape` read a gzipped CSV file?",
        "response": "Yes, STILTS commands automatically decompress gzipped inputs. `stilts mocshape in=data.csv.gz ifmt=csv shape=point coords='array(ra,dec)' out=data.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve the column definitions (metadata) for the star catalogue in the Subaru KUG2000 database.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/kug2000 adql='SELECT * FROM TAP_SCHEMA.columns WHERE table_name = ''kug2000.table_main''' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch T1 and T2. T2 array column 'POS_ARRAY' (RA, DEC) needs to be exploded and renamed before matching.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='explodecols POS_ARRAY; colmeta -name R POS_ARRAY_0; colmeta -name D POS_ARRAY_1' matcher=sky params=2 values1='RA DEC' values2='R D' out=exploded_array_coord_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'VEL_GAL_Y_COMP_2' containing the Y (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_Y_COMP_2 \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_y_vel_comp_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_Y_COMP_2 icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate tables T_A and T_B. T_A uses columns X_PIX, Y_PIX; rename them to 'X' and 'Y' respectively to match T_B.",
        "response": "stilts tcatn nin=2 in1=T_A.fits icmd1='colmeta -name X X_PIX; colmeta -name Y Y_PIX' in2=T_B.fits out=pixel_coords_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the PADC Heliophysics server for table schemas and save the output in the rich FITS-plus format.",
        "response": "stilts tapquery tapurl=http://voparis-tap-he.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.tables' ofmt=fits-plus out=helio_schemas_plus.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Upload a table with RA and DEC, and join it against the ESO TAP_OBS ObsCore table on position within 1 arcminute (0.01667 degrees).",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT t.obs_id, u.id FROM ivoa.ObsCore AS t JOIN TAP_UPLOAD.my_targets AS u ON 1=CONTAINS(POINT(''ICRS'', t.s_ra, t.s_dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.01667))' nupload=1 upload1=targets.csv upname1=my_targets out=eso_xmatch.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot X vs Y, setting the Y axis bounds explicitly based on expressions: YMIN=min(Y)-1 and YMAX=max(Y)+1.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y ymin='min(Y)-1' ymax='max(Y)+1' out=expr_bounds_y.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot X vs Y, restricting the X axis to logarithmic scale and inverting the Y axis (yflip).",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xscale=log yflip=true out=log_x_y_flip.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 181.4257 and latitude 12.2927. Please use a search radius of 1.2621 degrees. Save the results to a fits file called query_results_49.fits. Use verbosity level 1.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=181.4257 lat=12.2927 radius=1.2621 verb=1 compress=true omode=out ofmt=fits out=query_results_49.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find groups of objects across three tables, then in the output table, only keep the ID and RA columns from each input table.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=group matcher=sky params=1 values1='ra dec' values2='ra dec' values3='ra dec' fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 ocmd='keepcols \"ID_1 RA_1 ID_2 RA_2 ID_3 RA_3\"' out=minimal_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match three catalogs. `ref.fits` is the reference. I want an output table that has one row for every row in `ref.fits`, with matched data from `catA.fits` and `catB.fits` included where available.",
        "response": "stilts tmatchn nin=3 multimode=pairs iref=1 in1=ref.fits in2=catA.fits in3=catB.fits matcher=sky params=3 values1='ra dec' values2='ra dec' values3='ra dec' join1=always out=ref_with_optional_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the Gaia archive synchronously for up to 1000 records.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT * FROM gaiadr3.gaia_source' sync=true maxrec=1000",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Visualize position vectors (unit=degree) where the length is scaled automatically.",
        "response": "stilts plot2sky in=flow.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=scaled autoscale=true out=auto_scaled_deg_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query NED for objects within 1 degree of the Galactic Center (RA 266.4, Dec -29.0).",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT * FROM object WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 266.4, -29.0, 1.0))' out=ned_galactic_center.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'MAG_U_KCORR_UV' using the KCF_u filter at Z=0.01, leveraging the u-i color (KCC_ui).",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_KCORR_UV \"MAG_U - kCorr(KCF_u, 0.01, KCC_ui, U_MAG-I_MAG)\"' out=u_kcorr_uv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'kCorr(KCF_u,' '0.01,' 'KCC_ui,' 'U_MAG-I_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_KCORR_UV MAG_U - kCorr(KCF_u, 0.01, KCC_ui, U_MAG-I_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'kCorr(KCF_u,' '0.01,' 'KCC_ui,' 'U_MAG-I_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a polygon MOC from a table with STC-S regions, discarding any input rows where the region string is null.",
        "response": "stilts mocshape in=stc_data.fits icmd='select !NULL_S_REGION' shape=stc-s coords=S_REGION out=clean_stc_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve GOODS photometry rows where V and I magnitude are non-null, then calculate V-I color locally using an `addcol` command.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/goods/ adql='SELECT * FROM goods.photometry WHERE V_MAG IS NOT NULL AND I_MAG IS NOT NULL' ocmd='addcol V_I \"V_MAG - I_MAG\"' out=goods_v_i.fits",
        "error": "Error: Unused arguments: '-' 'I_MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol V_I V_MAG - I_MAG\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'I_MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 77.9826 and latitude 38.5247. Please use a search radius of 1.625 degrees. Save the results to a votable file called query_results_1.votable. After the query, please run this processing command: 'sorthead 20 MAG'.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=77.9826 lat=38.5247 radius=1.625 omode=out ofmt=votable out=query_results_1.votable ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate a plot from a `:loop:1000` table where y = sin(x/10).",
        "response": "stilts plot2plane in=:loop:1000 layer=mark x=i y='sin(i/10.0)'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"i\"\n    (The name \"i\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Read an ASCII file where all integer/float columns must be treated as 64-bit precision (long/double).",
        "response": "stilts tcopy in=high_prec.txt ifmt='ascii(notypes=short;int;float)' out=full_prec.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find MAST CANDELS HLSP photometry where the best photometric redshift (`Z_BEST`) is greater than 5.0.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT ra, dec, z_best FROM candels.photometry WHERE z_best > 5.0' out=candels_high_z.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "My radius column is in arcseconds. How do I make circles?",
        "response": "stilts mocshape in=cat.fits shape=circle coords='array(RA,DEC,RADIUS_ARCSEC/3600.0)' out=arcsec_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Draw error ellipses derived from Gaia correlation (skycorr), specifying unit=degree and coloring flat orange.",
        "response": "stilts plot2sky in=errors.fits layer=skycorr lon=RA lat=DEC lonerr=ER laterr=ED corr=C unit=degree color=orange out=degree_corr_orange.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I want all rows from `table1`, `table2`, and `table3` in the output, with matched groups joined together and unmatched rows having nulls for the other tables' columns.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=group matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' join1=always join2=always join3=always out=full_outer_3way_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate a MOC (order 8) for sources around Galactic L=45, B=-45, with radius $0.1$ degrees, converted from Galactic.",
        "response": "stilts pixfoot in=gal_data7.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC radius=0.1 order=8 out=gal_0p1deg_o8.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a million simulated stars, select only those visible in the Southern Hemisphere (DEC < 0), and then calculate the statistical summary of their magnitudes (GMAG).",
        "response": "stilts tpipe in=:skysim:1000000 cmd='select \"dec < 0\"' cmd='keepcols \"gmag\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select dec < 0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate two tables. For the first table, include a constant value column 'VERSION' set to 1.0.",
        "response": "stilts tcatn nin=2 in1=t1.fits icmd1='addcol VERSION 1.0' in2=t2.fits out=versioned_t1.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate four tables (t1-t4.fits). T2 contains a column named 'MAG' which is an array of 5 elements; replace it with the mean of the array before concatenation.",
        "response": "stilts tcatn nin=4 in1=t1.fits in2=t2.fits icmd2='replacecol MAG mean(MAG)' in3=t3.fits in4=t4.fits out=mean_mag_replaced.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a 2D density map of RA versus DEC for a large survey, coloring by density using the 'viridis' map.",
        "response": "stilts plot2plane in=survey.fits layer=mark x=RA y=DEC shading=density densemap=viridis out=density_map.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. Include all T1 rows (matched or not). T2 and T3 should only contribute matched rows.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits join1=always in2=T2.fits join2=match in3=T3.fits join3=match values1='RA DEC' values2='RA DEC' values3='RA DEC' out=T1_full_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plotting a histogram normalized by the maximum bar height.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE normalise=maximum out=max_norm_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Copy a table while explicitly forcing the output to FITS using **variable-length arrays** (fits-var).",
        "response": "stilts tcopy in=array_input.vot ofmt=fits-var out=var_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match T1 and T2 using position and distance (sky3d). T2 distance is in km; convert to parsec (1 pc = 3.086e13 km) before matching (1 Mpc tolerance).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='addcol DIST_PC \"DIST_KM / (3.086e19 / 1e6)\"' matcher=sky3d params=1 values1='RA DEC DIST_PC' values2='RA DEC DIST_PC' out=distance_unit_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '(3.086e19' '/' '1e6)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DIST_PC DIST_KM / (3.086e19 / 1e6)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '(3.086e19' '/' '1e6)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot marks from a synthetic loop scheme (lon=$0, lat=sin($0*PI/180)) (requires coordinates conversion and projection).",
        "response": "stilts plot2sky in=:loop:360 layer=mark lon='i' lat='sin(i*PI/180.0)' out=sine_wave_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"i\"\n    (The name \"i\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 292.234 and latitude 32.9036. Please use a search radius of 1.239 degrees. Save the results to a fits file called query_results_168.fits.",
        "response": "stilts cone servicetype=sia2 serviceurl=http://irsa.ipac.caltech.edu/sia lon=292.234 lat=32.9036 radius=1.239 compress=true omode=out ofmt=fits out=query_results_168.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the NED TAP VO Service for 10 objects and output the result in VOTable format using BINARY serialization.",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT TOP 10 * FROM object' ofmt='votable(format=BINARY)' out=ned_binary.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a point MOC where the coordinates are normalized Galactic Longitude and Latitude (0 to 360).",
        "response": "stilts mocshape in=norm_gal.fits icmd='addskycoords galactic icrs GLON GLAT RA_ICRS DEC_ICRS' shape=point coords='array(RA_ICRS, DEC_ICRS)' out=norm_gal_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve 10 galaxy objects from the NED TAP service and output the result in IPAC table format.",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT TOP 10 obj_name, ra, dec FROM object WHERE obj_type = ''G'' ' ofmt=ipac out=ned_galaxies.ipac",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine tables A and B. Table A has string column 'NAME' and B has integer ID. Convert A's name column to integer ID using hashing before joining.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='replacecol ID hashCode(NAME)' in2=B.fits out=name_hash_to_id.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve up to 1000 records containing table metadata from the PADC Astro server.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.tables' maxrec=1000 out=padc_astro_1k.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Set the table parameter 'SOURCE_ID' to the value of the first row's 'ID' column.",
        "response": "stilts tpipe in=data.fits cmd='head 1' cmd='setparam -type long SOURCE_ID ID' out=first_id_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Count the total number of ObsCore entries in the Chandra X-ray Archive that used the ACIS-S detector.",
        "response": "stilts tapquery tapurl=https://cda.harvard.edu/cxctap adql='SELECT COUNT(*) FROM ivoa.ObsCore WHERE instrument_name = ''ACIS-S''' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch T1 (ref) against T2, T3. T2 contains an array column 'RGB' of size 3. Explode it into R, G, B scalar columns before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits icmd2='explodecols RGB; colmeta -name R RGB_0; colmeta -name G RGB_1; colmeta -name B RGB_2' in3=T3.fits out=rgb_exploded_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch Catalog A (A.fits) and Catalog B (B.fits) based on sky position (4 arcsec) and proper motion difference (PMRA, PMDEC) within 10 mas/yr. Use anisotropic tolerance for proper motion.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=sky+2d_anisotropic params='4 10 10' values1='RA DEC PMRA PMDEC' values2='RA DEC PMRA PMDEC' out=pos_pm_aniso_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Filter a large table to keep only every 500th row, then display the resulting subset table in a graphical user interface (GUI) window.",
        "response": "stilts tpipe in=massive.fits cmd='every 500' omode=gui",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch A and B using sky position (1 arcsec). Output only the separation score 'SepDeg' (degrees) and the row indices ($0) from both tables.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=sky params=360 values1='RA DEC' values2='RA DEC' scorecol=SepDeg ocmd='keepcols \"$0_1 $0_2 SepDeg\"' out=minimal_index_score.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '$0_2' 'SepDeg'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols $0_1 $0_2 SepDeg\n\nUsage: keepcols <colid-list>\n    (Unused arguments: '$0_2' 'SepDeg'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "For the row with the maximum 'FLUX' value, replace the 'QUALITY' column with 'BEST'.",
        "response": "stilts tpipe in=data.fits cmd='sort -down FLUX' cmd='head 1' cmd='replacecol QUALITY \"BEST\"' out=best_quality.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate statistics on all numeric columns, explicitly setting output to use sequential execution.",
        "response": "stilts tpipe in=data.fits cmd='stats -noparallel' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need objects around Ecliptic Lon 120, Lat 30, with a radius of 5 arcminutes, saving the result as a CSV file.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=120.0 lat=30.0 radius='5.0 / 60.0' skysys=ecliptic ofmt=csv out=ecliptic_5arcmin.csv",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Upload a table of local targets and perform a proximity crossmatch against Gaia DR3 at ESA using a spatial containment function (CONTAINS).",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT g.source_id, u.Vmag FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.target_list AS u ON 1=CONTAINS(POINT(''ICRS'', g.ra, g.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.0001))' nupload=1 upload1=my_sources.csv upname1=target_list out=gaia_xmatch_prox.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot density contours over a scatter plot of X vs Y, setting the contour smoothing to 5 pixels.",
        "response": "stilts plot2plane in=cluster.fits layer_m=mark x_m=X y_m=Y layer_c=contour x_c=X y_c=Y smooth_c=5 out=contour_overlay.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the ASI SSDC TAP Service for 5 ObsCore records and output the calculated checksum.",
        "response": "stilts tapquery tapurl=https://tools.ssdc.asi.it/TAPSSDC/tap adql='SELECT TOP 5 * FROM ivoa.ObsCore' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How do I specify a radius of 2.5 arcminutes for my MOC generation?",
        "response": "stilts pixfoot in=my_table.fits radius=2.5/60.0 out=my_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Merge observations from OBS1 and OBS2. Filter OBS2 to include only rows where 'TIME' is between MJD 59000 and MJD 60000.",
        "response": "stilts tcatn nin=2 in1=OBS1.fits in2=OBS2.fits icmd2='select \"TIME > 59000 && TIME < 60000\"' out=time_filtered_concat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '59000' '&&' 'TIME' '<' '60000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TIME > 59000 && TIME < 60000\n\nUsage: select <expr>\n    (Unused arguments: '>' '59000' '&&' 'TIME' '<' '60000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read data from a HAPI service using the scheme specification and convert it to CSV.",
        "response": "stilts tcopy in=':hapi:https://vires.services/hapi;GRACE_A_MAG;start=2009-01-01;stop=2009-01-02' out=hapi_csv.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the MAST STScI Registry TAP service for resources published by 'NASA', running asynchronously with continuous status updates.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/registry adql='SELECT * FROM reg.resource WHERE publisher LIKE ''%NASA%''' progress=true out=mast_nasa_async.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge tables and write the final result as a LaTeX table snippet to 'report.tex'.",
        "response": "stilts tcat in='s1.fits s2.fits' ofmt=latex out=report.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Convert an IPAC file to a LaTeX table, specifying it should **not** be a standalone document.",
        "response": "stilts tcopy in=report.tbl ifmt=ipac ofmt='latex(standalone=false)' out=report_frag.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query GAVO and then sort the results by `s_ra`.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM ivoa.obscore WHERE s_ra IS NOT NULL' ocmd='sort s_ra'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate an MOC (order 16) for circles whose radius is given by 1 degree divided by $\text{PI} \times 100$.",
        "response": "stilts pixfoot in=pi_div.fits ra=RA dec=DEC radius='1.0 / (PI * 100.0)' order=16 out=pi_scaled_o16.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Crossmatch five tables using exact match on 'OBJECT_ID'. Force sequential execution.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=exact values1=OBJECT_ID values2=OBJECT_ID values3=OBJECT_ID values4=OBJECT_ID values5=OBJECT_ID in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits in5=C5.fits runner=sequential out=sequential_exact_5way.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate tables, and then run an expression assertion to ensure that all 'ERROR' values are non-negative.",
        "response": "stilts tcat in='err1.fits err2.fits' ocmd='assert \"ERROR >= 0\"' out=error_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert ERROR >= 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "I need to take all columns from `table.fits` but add a new column 'ROW_ID' which is just the row number.",
        "response": "stilts tpipe in=table.fits cmd='addcol ROW_ID $0' out=table_with_ids.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Show me the statistics of a table where I've replaced null `FLUX` values with 0.",
        "response": "stilts tpipe in=fluxes.fits cmd='replaceval null 0 FLUX' cmd='keepcols FLUX' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Synchronously access the XMM-Newton archive, requiring authentication.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT TOP 1 * FROM ivoa.ObsCore' auth=true sync=true out=xmm_auth_sync.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "What does a negative order mean for `pixfoot`?",
        "response": "The `order` parameter must be a non-negative integer between 0 and 29. A negative value is not permitted and will result in an error.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find the total row count of the ULLYSES HLSP ObsCore table.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT COUNT(*) FROM ivoa.ObsCore' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Fetch data from Gaia and then calculate a checksum on the result table.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 1000 * FROM gaiadr3.gaia_source' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Join T1 and T2. T1 is a loop table (:loop:10). T2 has a numerical column 'INDEX'. Match exactly on index.",
        "response": "stilts tmatch2 in1=:loop:10 in2=T2.fits matcher=exact values1=i values2=INDEX out=loop_exact_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot sky density using HEALPix level 10, combining the total sum of FLUX per square degree (sum-per-unit).",
        "response": "stilts plot2sky in=survey.fits layer=skydensity lon=RA lat=DEC level=10 weight=FLUX combine=sum-per-unit perunit=degree2 out=hpx10_sum_per_deg2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot points with density shading, applying the 'Histogram Log' scaling function.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=histolog out=histolog_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the proper motion error (PM_ERR) is never negative.",
        "response": "stilts tpipe in=data.fits cmd='assert \"PM_ERR >= 0.0\"' out=asserted_pm_err.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert PM_ERR >= 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table and convert the 'UCD' string column to uppercase using `toUpperCase` for uniformity.",
        "response": "stilts tpipe in=meta.fits cmd='replacecol UCD toUpperCase(UCD)' out=ucd_upper.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine catalogue parts. Part B has arrays that need collapsing: combine scalar columns 'FLUX_1', 'FLUX_2', 'FLUX_3' into one array column 'FLUX_ARRAY' before concatenation.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits icmd2='collapsecols FLUX_ARRAY FLUX_1 3; delcols \"FLUX_1 FLUX_2 FLUX_3\"' out=collapsed_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC for sources where the proper motion in RA (PMRA) is less than 5 mas/yr.",
        "response": "stilts pixfoot in=pm_cat.fits icmd='select \"PMRA < 5.0\"' ra=RA dec=DEC out=low_pmra_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA < 5.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '5.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the table so that the logarithm of the row count in the output table is greater than 5.",
        "response": "stilts tpipe in=large_data.fits cmd='select \"log10($nrow) > 5.0\"' omode=count",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select log10($nrow) > 5.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '5.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the MAST HSCv3 service with a 0.1 degree radius and add a new column 'LOG_FLUX' calculated from the 'FLUX' column in the output.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=10.0 lat=5.0 radius=0.1 ocmd='addcol LOG_FLUX log10(FLUX)' out=hsc_with_log.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot points in ICRS, filtering the input to include only the first 500 rows.",
        "response": "stilts plot2sky in=large_cat.fits icmd='head 500' layer=mark lon=RA lat=DEC out=head500_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Can I hide the legend on a multi-layer plot?",
        "response": "stilts plot2plane layer_1=mark in_1=d1.fits x_1=X y_1=Y layer_2=mark in_2=d2.fits x_2=X y_2=Y legend=false",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "What does `joinN=always` do in `tmatchn`?",
        "response": "The `joinN=always` parameter forces every row from input table N to be included in the output table. If a row from table N is part of a match group, it will be joined with the other members of that group. If it is not part of any match group, it will appear in an output row by itself, with blank values for the columns from all other tables [2, B.41.1, 1976].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate tables, and then add a column 'ERROR_INVERSE' calculated as $1.0/\\text{ERROR}$ in the final result.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='addcol ERROR_INVERSE 1.0/ERROR' out=inverse_error.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plotting 10th and 90th percentiles as a filled polygon using the quantile layer.",
        "response": "stilts plot2plane in=scatter.fits layer=quantile x=X y=Y quantiles='0.1,0.9' join=polygon transparency=0.6 out=90_pct_fill.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Read an array-per-row column named 'FLUX_ERR_ARRAY' and calculate the array's standard deviation into a scalar column 'STDEV_FLUX'.",
        "response": "stilts tpipe in=errors.fits cmd='addcol STDEV_FLUX stdev(FLUX_ERR_ARRAY)' out=stdev_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a scatter plot of RMAG versus BMAG from catalog.fits, setting the y-axis to increase downwards.",
        "response": "stilts plot2plane in=catalog.fits layer=mark x=BMAG y=RMAG yflip=true out=cmd.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"BMAG\"\n    (The name \"BMAG\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge tables and then keep only rows where the expression 'abs(MAG_G - MAG_R)' is less than 0.1.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='select \"abs(MAG_G - MAG_R) < 0.1\"' out=narrow_color_band.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_R)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(MAG_G - MAG_R) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG_R)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "I need to merge two large tables, `sky_north.colfits` and `sky_south.colfits`, and write to a new FITS file. Can I hint to stilts to count the rows first to potentially speed it up?",
        "response": "stilts tcat in=sky_north.colfits in=sky_south.colfits countrows=true out=full_sky.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot markers for sources that are brighter than magnitude 15 (MAG < 15).",
        "response": "stilts plot2plane in=catalog.fits icmd='select \"MAG < 15\"' layer=mark x=RA y=DEC out=bright_filter_mark.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"MAG < 15\" (The name \"MAG\" is unknown.)\n        (The name \"MAG\" is unknown.))\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the Subaru SAGA database for a sample and locally apply a column selection filter to keep only columns containing 'RA' or 'DEC'.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 10 * FROM saga.stellar_abundances' ocmd='keepcols \"ucd$pos.eq.ra ucd$pos.eq.dec\"' out=saga_pos_ucd.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the coverage for objects within 60 arcminutes, converted from 1 degree.",
        "response": "stilts pixfoot in=one_deg.fits ra=RA dec=DEC radius=1.0 out=one_deg_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Select only the columns with names 'ID' and those that are Boolean type (ucd$meta.code.qual).",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"ID ucd$meta_code_qual_*\"' out=id_and_flags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ucd$meta_code_qual_*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID ucd$meta_code_qual_*\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$meta_code_qual_*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a MOC of all sources within 10 degrees of the north celestial pole.",
        "response": "stilts mocshape in=allsky.fits icmd='select \"DEC > 80\"' shape=point coords='array(RA,DEC)' out=ncp_region.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '80'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 80\n\nUsage: select <expr>\n    (Unused arguments: '>' '80'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column 'ERROR_COND_7' that is 1.0 if 'ERR_A' is not equal to 'ERR_B', and 0.0 otherwise, using the logical operator.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_7 \"ERR_A != ERR_B ? 1.0 : 0.0\"' out=conditional_error_7.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_7 ERR_A != ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge two large CSV files, ensuring that rows are read sequentially (streamed) for low memory usage, and save the result as FITS.",
        "response": "stilts tcat ifmt=csv in='large_a.csv large_b.csv' istream=true out=low_mem_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve the top 50 sources from the MAST PanSTARRS 1 DR2 catalogue, ensuring output is compressed via HTTP (gzip).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT TOP 50 * FROM dbo.detection_object' compress=true out=ps2_sample_compressed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Group match three catalogs (C1, C2, C3) using sky position (2 arcsec) and R-band magnitude (0.1 mag tolerance). Filter C2 before matching, keeping only rows where 'FLAG_GOOD' is true.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky+1d params='2 0.1' values1='RA DEC R_MAG' values2='RA DEC R_MAG' values3='RA DEC R_MAG' in1=C1.fits in2=C2.fits icmd2='select FLAG_GOOD' in3=C3.fits out=filtered_sky_mag_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I want to merge two tables and see the result on screen in a simple text format. The tables are `cat1.vot` and `cat2.vot`.",
        "response": "stilts tcat in=cat1.vot in=cat2.vot ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "My table has circle centers, but all circles have a radius of 0.1 deg. How can I specify that?",
        "response": "stilts mocshape in=centers.fits shape=circle coords='array(RA,DEC,0.1)' out=fixed_radius_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Group match three tables. T1 has magnitude 99.0 for nulls. Replace 99.0 with NULL in T1 before grouping.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=2 in1=T1.fits icmd1='badval 99.0 MAG' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=badval_clean_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate tables T1, T2, T3. If the final combined magnitude 'MAG' is null, replace it with 99.9.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits in3=T3.fits ocmd='replacecol MAG \"NULL_MAG ? 99.9 : MAG\"' out=null_filled_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '99.9' ':' 'MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG NULL_MAG ? 99.9 : MAG\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '99.9' ':' 'MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 16.011 and latitude -23.2948. Please use a search radius of 0.9627 degrees. Save the results to a votable file called query_results_171.votable.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=16.011 lat=-23.2948 radius=0.9627 omode=out ofmt=votable out=query_results_171.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a Parquet file to a FITS file.",
        "response": "stilts tcopy in=my_data.parquet out=my_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find resources in the Euclid TAP service around Galactic L=120, B=45, using $30$ arcseconds.",
        "response": "stilts cone serviceurl=https://eas.esac.esa.int/tap-server/tap lon=120.0 lat=45.0 radius='30.0 / 3600.0' skysys=galactic out=euclid_30as_gal.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"30.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Use the assert filter to ensure that the array length of 'SPECTRA' is exactly 100 for all rows.",
        "response": "stilts tpipe in=arrays.fits cmd='assert \"size(SPECTRA) == 100L\"' out=size_100_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '100L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert size(SPECTRA) == 100L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '100L'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "After a 3-way match, I want to see which groups have members from `table1` and `table3` but not `table2`.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=group matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 ocmd='select \"!NULL_ID_1 && NULL_ID_2 && !NULL_ID_3\"' out=groups_1_and_3_only.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'NULL_ID_2' '&&' '!NULL_ID_3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_ID_1 && NULL_ID_2 && !NULL_ID_3\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'NULL_ID_2' '&&' '!NULL_ID_3'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a MOC from the RA and DEC columns in my_catalog.fits, using the default order of 13 and saving the output as a FITS MOC.",
        "response": "stilts pixfoot in=my_catalog.fits ra=RA dec=DEC out=point_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate two tables, applying a global filter to keep only rows where magnitude is less than 18, and outputting to FITS-plus format.",
        "response": "stilts tcatn nin=2 in1=T_BRIGHT.fits in2=T_FAINT.fits ocmd='select \"MAG < 18\"' ofmt=fits-plus out=bright_subset.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 141.6881 and latitude 18.2792. Please use a search radius of 1.2023 degrees. Save the results to a votable file called query_results_44.votable.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=141.6881 lat=18.2792 radius=1.2023 omode=out ofmt=votable out=query_results_44.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a Parquet file to FITS, using the **column-oriented FITS-plus** convention to preserve rich metadata.",
        "response": "stilts tcopy in=data.parquet ofmt=colfits-plus out=data_col.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match my `main.fits` against `survey1.fits` and `survey2.fits`, but only for sources in `main.fits` brighter than magnitude 15.",
        "response": "stilts tmatchn nin=3 in1=main.fits in2=survey1.fits in3=survey2.fits multimode=pairs iref=1 icmd1='select \"MAG < 15\"' matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' out=bright_source_matches.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate two tables, but before joining, keep only columns with UCDs related to photometry (phot.).",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='keepcols ucd$phot.*' out=photometry_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the VSA - VISTA Science Archive for 50 records and stream the output directly to TOPCAT.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/vsa adql='SELECT TOP 50 * FROM vsa.catalogue' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query ESO TAP_CAT for table names and descriptions, locally sorting the result alphabetically by table name.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT table_name, description FROM TAP_SCHEMA.tables' ocmd='sort table_name' out=eso_sorted_tables.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'POS_GAL_R' containing the magnitude of the Galactic Cartesian position vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_R \"hypot(icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\"' out=galactic_r_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_R hypot(icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read data from standard input (FITS format) and convert it to a Feather file.",
        "response": "cat input.fits | stilts tcopy in=- ifmt=fits out=piped_feather.fea",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create an MOC (order 10) for sources around Ecliptic Lon 180, Lat 0, with radius 5 arcminutes, converted internally.",
        "response": "stilts pixfoot in=ecl_data6.fits icmd='addskycoords ecliptic icrs ELON ELAT RA DEC' ra=RA dec=DEC radius='5.0 / 60.0' order=10 out=ecl_5am_o10.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a table from the loop scheme with 50 rows, then add a second column calculated as sin(i / 10.0).",
        "response": "stilts tpipe in=:loop:50 cmd='addcol Y \"sin(i / 10.0)\"' out=sine_loop.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '10.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol Y sin(i / 10.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '10.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the GAVO Data Center at Galactic L=50, B=0.1, with a radius of 0.005 degrees, filtering to keep only rows where magnitude is non-null.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=50.0 lat=0.1 radius=0.005 skysys=galactic ocmd='select !NULL_MAG' out=gavo_clean_mag.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Join primary.fits and aux.fits. Primary coordinates are in radians (RA_R, DEC_R). Convert to degrees inline for a symmetric best match (best) within 2 arcsec.",
        "response": "stilts tmatch2 in1=primary.fits in2=aux.fits matcher=sky params=2 values1='radiansToDegrees(RA_R) radiansToDegrees(DEC_R)' values2='RA DEC' find=best out=inline_rad_best_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I need to get the MOC for the first 100 entries of my `s_region` column.",
        "response": "stilts mocshape in=obscore.fits icmd='head 100' shape=stc-s coords=s_region out=first_100_regions.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a polygon MOC (order 7) where the vertices are calculated using trigonometric functions based on position and size parameters.",
        "response": "stilts mocshape in=params.fits shape=polygon coords='array(RA+cosDeg(PA)*RAD, DEC+sinDeg(PA)*RAD, RA-sinDeg(PA)*RAD, DEC+cosDeg(PA)*RAD, ...)' order=7 out=trig_poly_o7.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate an MOC for only the points with a Declination greater than 80 degrees, using a 1 degree radius.",
        "response": "stilts pixfoot in=polar_data.fits icmd='select \"DEC > 80.0\"' ra=RA dec=DEC radius=1.0 out=polar_cap_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '80.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 80.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '80.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3, T4. Only keep T1 rows that are unmatched in ALL T2, T3, T4.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky params=3 values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits join1=nomatch out=T1_unmatched_full.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Calculate the mean of the array column 'FLUX_ARRAY' and assert that the mean is always positive.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol MEAN_FLUX \"mean(FLUX_ARRAY)\"' cmd='assert \"MEAN_FLUX > 0.0\"' out=mean_flux_positive.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MEAN_FLUX > 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 142.4184 and latitude 54.9887. Please use a search radius of 0.8403 degrees. Instead of a file, just give me the meta. The coordinates are in the fk4 system.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=142.4184 lat=54.9887 radius=0.8403 skysys=fk4 omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find the access URL and target name for 10 EPN-TAP observations of Mars from the FUB service.",
        "response": "stilts tapquery tapurl=http://dachs.planet.fu-berlin.de/tap adql='SELECT TOP 10 access_url, target_name FROM epn_core.epn_core WHERE target_name = ''Mars''' out=mars_obs.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Synchronously query a sample table from the AIASCR VO Services and count the resulting rows.",
        "response": "stilts tapquery tapurl=http://vos2.asu.cas.cz/tap adql='SELECT COUNT(*) FROM TAP_SCHEMA.tables' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "For an array column 'FLUX_BANDS', calculate the array's median and store it as a scalar column 'MED_FLUX'.",
        "response": "stilts tpipe in=array_data.fits cmd='addcol MED_FLUX median(FLUX_BANDS)' out=median_scalar.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I have RA and DEC in separate files. Can I make a footprint?",
        "response": "First you need to join them into a single table: `stilts tjoin nin=2 in1=ra_list.txt ifmt1=ascii in2=dec_list.txt ifmt2=ascii | stilts mocshape in=- ifmt=ascii shape=point coords='array($1, $2)' out=ra_dec_footprint.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine tables A and B. In A, define a new column 'LOG_R' as `log10(R)`. In B, ensure the magnitude 'MAG' is represented by a 64-bit double.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='addcol LOG_R log10(R)' in2=B.fits icmd2='replacecol MAG toDouble(MAG)' out=log_mag_64bit.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine files F1.fits, F2.vot, and F3.csv listed in input_list.txt. F1 is the definitive input; keep only the ID column from F2 and F3.",
        "response": "stilts tcatn nin=3 in1=F1.fits in2=F2.vot icmd2='keepcols ID' in3=F3.csv ifmt3=csv icmd3='keepcols ID' out=combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query VizieR TAP around RA 30, Dec 60, using 15 arcminutes as the radius, and display the result directly in a GUI window.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=30.0 lat=60.0 radius='15.0 / 60.0' omode=gui",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"15.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Remove the column 'OLD_RA' and replace it with a new 'RA' column calculated from 'RA_RAD' converted to degrees.",
        "response": "stilts tpipe in=data.fits cmd='delcols OLD_RA' cmd='addcol RA radiansToDegrees(RA_RAD)' out=ra_degree.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve 100 positions from MAST HSCv3 and calculate the checksum of the resulting data block.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 100 ra, dec FROM hsc_v3.point' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Randomly shuffle the rows of `catalog_ordered.fits`.",
        "response": "stilts tpipe in=catalog_ordered.fits cmd=shuffle out=catalog_shuffled.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query VizieR for M-dwarfs (using parallax/spec type constraint) and output the result in ECSV format.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT main_id, parallax FROM gaiadr3.gaia_source WHERE parallax > 10 AND spec_class = ''M''' ofmt=ecsv out=vizier_mdwarfs.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match Catalog A against a large remote VOTable from a URL. Output metadata only.",
        "response": "stilts tmatch2 in1=CatalogA.fits in2=http://remote.archive/huge.vot matcher=sky params=1 values1='RA DEC' values2='RA DEC' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial position is within 1 arcminute of the center of M101 (RA=210.8, DEC=54.3).",
        "response": "stilts tpipe in=cat.fits cmd='select \"skyDistanceDegrees(RA, DEC, 210.8, 54.3) < 1.0/60.0\"' out=m101_vicinity_1arcmin.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' '210.8,' '54.3)' '<' '1.0/60.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, 210.8, 54.3) < 1.0/60.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' '210.8,' '54.3)' '<' '1.0/60.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Sort the table by 'TIME' and ensure the output stream is written to standard output in FITS format.",
        "response": "stilts tpipe in=data.fits cmd='sort TIME' ofmt=fits out=-",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the GAVO TAP service around the North Galactic Pole (l=0, b=90) with a 1 degree radius and select only rows where the 'FLUX_ERR' column is positive.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=0.0 lat=90.0 radius=1.0 skysys=galactic ocmd='select \"FLUX_ERR > 0\"' out=clean_errors.vot",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX_ERR > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create a circle MOC (radius 0.001 deg) and explicitly force the output to be placed in the current working directory.",
        "response": "stilts mocshape in=input.fits shape=circle coords='array(RA, DEC, 0.001)' out=./output_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column 'MAG_V_AB' converting Johnson V magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_V_AB \"MAG_V + JOHNSON_AB_V\"' out=v_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_V_AB MAG_V + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Remove all columns except those with UCDs starting with 'pos.eq.' and 'phot.mag'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"ucd$pos_eq_* ucd$phot_mag_*\"' out=ucd_subset.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ucd$phot_mag_*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$pos_eq_* ucd$phot_mag_*\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$phot_mag_*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Run an SIA query against MAST CAOM near RA 220, Dec -5, using a cone search defined by 100 arcseconds, explicitly requesting GIF images (if supported).",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=220.0 lat=-5.0 radius='100.0 / 3600.0' servicetype=sia dataformat=image/gif out=sia_gif_list.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"100.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match four tables using Cartesian 2D cuboid coordinates (X, Y) with tolerances 10 units in X and 2 units in Y.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=2d_cuboid params='10 2' values1='X Y' values2='X Y' values3='X Y' values4='X Y' in1=d1.fits in2=d2.fits in3=d3.fits in4=d4.fits out=cuboid_4d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve the top 50 rows from the SuperCOSMOS Science Archive (SSA) and save them as CSV, using a pipe character (|) as the delimiter.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/ssa adql='SELECT TOP 50 * FROM sas_ir.atlas_point_source' ofmt='csv(delimiter=|)' out=ssa_pipe.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a table to a specific version of VOTable, say v1.2.",
        "response": "stilts tcopy in=data.fits ofmt='votable(version=V12)' out=data_v12.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch a local catalog named 'local.fits' against a remote table in the VizieR TAP service, setting up the basic parameters for the upload.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT * FROM \"II/246/out\" AS t JOIN TAP_UPLOAD.mycat AS u ON 1=CONTAINS(POINT(''ICRS'', t.ra, t.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.001))' nupload=1 upload1=local.fits upname1=mycat out=vizier_crossmatch_setup.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge tables and then calculate the standard deviation and mean of the 'G_FLUX' column.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='keepcols \"G_FLUX\"' omode=stats ocmd='keepcols \"Mean StDev\"'",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'StDev'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Mean StDev\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'StDev'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Read a table using the `:test:` scheme with integer and string scalar columns and save it as CSV.",
        "response": "stilts tcopy in=':test:5,is' out=test_is.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Perform an SIA query against the IRSA TAP service for images around RA 180, Dec 10, using a radius of 30 arcseconds, and count the resulting records.",
        "response": "stilts cone serviceurl=https://irsa.ipac.caltech.edu/TAP lon=180.0 lat=10.0 radius='30.0 / 3600.0' servicetype=sia omode=count",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"30.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query IRSA TAP near Galactic L=90, B=0, with radius 1 degree, and add new column 'J_H_COLOR' calculated from magnitudes.",
        "response": "stilts cone serviceurl=https://irsa.ipac.caltech.edu/TAP lon=90.0 lat=0.0 radius=1.0 skysys=galactic ocmd='addcol J_H_COLOR \"J_MAG - H_MAG\"' out=irsa_color.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'H_MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol J_H_COLOR J_MAG - H_MAG\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'H_MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I want to add a column that's a random number between 0 and 1 for each row.",
        "response": "stilts tpipe in=my_table.fits cmd='addcol RAND_VAL random($0)' out=my_table_randomized.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the GAVO Data Center for all SDSS DR16 QSO entries and calculate the checksum of the resulting table.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM sdss.dr16qso' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate three tables and just output the combined row count.",
        "response": "stilts tcatn nin=3 in1=c1.fits in2=c2.fits in3=c3.fits omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Pair match four tables (C1 ref) using sky position (1 arcsec). T2 contains magnitude in Vega; convert to AB magnitude (MAG_AB = MAG_VEGA + 0.9) before matching.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky params=1 in1=C1.fits in2=C2_vega.fits icmd2='replacecol MAG MAG+0.9' in3=C3.fits in4=C4.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' out=vega_converted_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "My coordinate columns are simply named `c1` and `c2`. How do I generate a MOC?",
        "response": "stilts mocshape in=generic_coords.fits shape=point coords='array(c1, c2)' out=generic_coords_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find MAST Gaia DR3 sources with non-zero proper motion (`pmra` != 0 or `pmdec` != 0) and pipe the result directly to TOPCAT.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT source_id, pmra, pmdec FROM gaiadr3.gaia_source WHERE pmra != 0 OR pmdec != 0' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "My radius column `R_KPC` is in kiloparsecs and I have distance `D_MPC`. Create MOC.",
        "response": "stilts mocshape in=physical.fits shape=circle coords='array(RA,DEC,atan(R_KPC*1e-3/D_MPC)*180/PI)' out=physical_to_angular.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Pair match A (ref) against B, C. B is a simulated table of 100,000 points (`:skysim:`). Use B's coordinates directly.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 values1='RA DEC' values2='ra dec' values3='RA DEC' in1=A.fits in2=:skysim:100000 in3=C.fits out=sim_crossmatch_ref.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Join `a.fits` and `b.fits` with a sky match. After joining, I only want the ID columns from both (`ID_1`, `ID_2`) and the separation.",
        "response": "stilts tmatch2 in1=a.fits in2=b.fits matcher=sky params=4 values1='RA DEC' values2='RA DEC' ocmd='keepcols \"ID_1 ID_2 Separation\"' out=id_pairs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Search MAST PS1 DR1 at 150.5, -20.5 with a radius calculated as 10 arcminutes divided by 2.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 lon=150.5 lat=-20.5 radius='(10.0 / 2.0) / 60.0' out=ps1_half_10arcmin.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"(10.0 / 2.0) / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plotting density contours over a scatter plot, 12 levels, thick lines.",
        "response": "stilts plot2plane in=dense.fits layer=contour x=X y=Y nlevel=12 thick=2 out=thick_contours.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Copy a table to Parquet, setting key-value metadata in the footer: 'VERSION:1.0' and 'SOURCE:MAST'.",
        "response": "stilts tcopy in=data.fits ofmt='parquet(kvmap=VERSION:1.0;SOURCE:MAST)' out=kv_metadata.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Just count the total number of rows I would get if I concatenated `chunk1.csv` and `chunk2.csv`.",
        "response": "stilts tcat ifmt=csv in=chunk1.csv in=chunk2.csv omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Join A.fits and B.fits. A rows should always be included (left outer join). Rename duplicate columns using full suffix notation: '_A' and '_B'.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID join=all1 fixcols=all suffix1=_A suffix2=_B out=left_outer_full_suffixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Upload my local table `my_targets.fits` to the Gaia TAP service and crossmatch it with `gaiadr3.gaia_source` within 2 arcseconds. The table should be called `my_cat` on the service.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap nupload=1 upload1=my_targets.fits upname1=my_cat adql='SELECT s.*, t.* FROM gaiadr3.gaia_source AS s JOIN TAP_UPLOAD.my_cat AS t ON 1=CONTAINS(POINT(\"ICRS\", s.ra, s.dec), CIRCLE(\"ICRS\", t.ra, t.dec, 2.0/3600.0))' out=remote_crossmatch.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert an ECSV file to FITS, ensuring validation handles cases where column names might differ between header and CSV body (`colcheck=IGNORE`).",
        "response": "stilts tcopy in=mismatch.ecsv ifmt='ecsv(colcheck=IGNORE)' out=forced_ecsv.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot only the first 1000 rows of a large file, using a simple mark layer.",
        "response": "stilts plot2plane in=large_file.fits icmd='head 1000' layer=mark x=X y=Y out=head_sample.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Visualize proper motions (PMRA, PMDEC in mas/yr) as vectors, forcing a fixed, high scale factor of 5000.",
        "response": "stilts plot2sky in=pm_cat.fits layer=skyvector lon=RA lat=DEC dlon=PMRA dlat=PMDEC unit=mas autoscale=false scale=5000 out=fixed_pm_5000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a densogram with a height of 20 pixels, positioned at 0.1 (10%) of the plot height.",
        "response": "stilts plot2plane in=data.fits layer=densogram x=VALUE size=20 pos=0.1 out=densogram_custom.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot error ellipses derived from correlation (skycorr) where units are micro-arcseconds (uas).",
        "response": "stilts plot2sky in=gaia_high.fits layer=skycorr lon=RA lat=DEC lonerr=ERR_L laterr=ERR_B corr=C unit=uas out=uas_corr_errors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a MOC at order 0. What does that mean?",
        "response": "stilts pixfoot in=one_point.fits order=0 out=order0.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match two tables on 3D Cartesian coordinates (X, Y, Z) with anisotropic errors (10, 5, 2 units).",
        "response": "stilts tmatch2 in1=D1.fits in2=D2.fits matcher=3d_anisotropic params='10 5 2' values1='X Y Z' values2='X Y Z' out=anisotropic_3d_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Take `sources1.fits` and `sources2.fits`, concatenate them, and then only keep the first 100 rows of the combined table.",
        "response": "stilts tcat in=sources1.fits in=sources2.fits ocmd='head 100' out=top100_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Pair match T1 (ref) against T2 and T3. T2 contains parallax (PLX). Calculate distance modulus DM from parallax and match on position + DM (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='2 1' in1=T1.fits in2=T2.fits icmd2='addcol DM modulusToDistance(1000.0/PLX)' in3=T3.fits values1='RA DEC DM' values2='RA DEC DM' values3='RA DEC DM' out=parallax_dm_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch five observational epochs (E1-E5.fits) in group mode. Filter the final result to only include groups containing exactly 5 sources.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID values5=ID in1=E1.fits in2=E2.fits in3=E3.fits in4=E4.fits in5=E5.fits ocmd='select GroupSize==5' out=perfect_group_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match two catalogs. T2 is provided via a system command pipe that outputs an ASCII table. Match exactly on 'KEY'.",
        "response": "cat T2.txt | stilts tmatch2 in1=T1.fits in2=- ifmt2=ascii matcher=exact values1=KEY values2=KEY out=piped_ascii_match.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find sources in the MAST PanSTARRS 1 DR2 TAP around Ecliptic Lon 180, Lat 10, using 0.001 degrees, then pipeline the result directly to the GUI viewer.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 lon=180.0 lat=10.0 radius=0.001 skysys=ecliptic omode=gui",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the AIP MUSE-Wide survey TAP Service for a deep field region and verify the ADQL syntax.",
        "response": "stilts tapquery tapurl=https://musewide.aip.de/tap adql='SELECT ra, dec, z_conf FROM mwide.deep_field WHERE z_conf > 0.8' parse=true omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot the mean of an array column SPEC_ARRAY vs wavelength, using the statline layer.",
        "response": "stilts plot2plane in=spectra.fits layer=statline xs=WAVELENGTHS ys=SPEC_ARRAY ycombine=mean out=statline_mean.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVELENGTHS\"\n    (The name \"WAVELENGTHS\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Ensure that the original column name 'RA (deg)' is replaced with 'RA_DEG' and is safe for expressions.",
        "response": "stilts tpipe in=messy_ra.fits cmd='colmeta -name RA_DEG \"RA (deg)\"' out=clean_ra_deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Run a general search on the European HST Archive TAP around Galactic L=0, B=0, with 1 arcminute radius, sorting by distance (Separation).",
        "response": "stilts cone serviceurl=https://hst.esac.esa.int/tap-server/tap lon=0.0 lat=0.0 radius='1.0 / 60.0' skysys=galactic ocmd='sort Separation' out=hst_sorted_sep.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the VizieR TAP service for the 2MASS PSC (II/246/out) and retrieve only the resulting table metadata description.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT TOP 1 * FROM \"II/246/out\"' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the European HST Archive TAP for resources around Galactic L=350, B=0, with a radius of 0.01 degrees.",
        "response": "stilts cone serviceurl=https://hst.esac.esa.int/tap-server/tap lon=350.0 lat=0.0 radius=0.01 skysys=galactic out=hst_gal_0p01.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "How to convert a FITS table to a VOTable and specify the output table name in the VOTable metadata?",
        "response": "This is a metadata manipulation task, so `tpipe` is more suitable: `stilts tpipe in=data.fits cmd='tablename \"My Table\"' out=data.vot`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Select only the rows that have a redshift (Z) greater than 2, and write the output as a LaTeX table.",
        "response": "stilts tpipe in=qso.fits cmd='select \"Z > 2.0\"' ofmt=latex out=qso_report.tex",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '2.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 2.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '2.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the total number of records in the CSIRO Parkes Pulsar Data Archive catalog.",
        "response": "stilts tapquery tapurl=https://data.csiro.au/psrdavo/tap adql='SELECT COUNT(*) FROM PSRD.cat' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB_OLD' converting J magnitude to AB and then to absolute magnitude using distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_OLD \"MAG_J + VEGA_AB_J\"' cmd='addcol MAG_ABS_J_AB_OLD \"MAG_J_AB_OLD - distanceToModulus(DISTANCE_PC)\"' out=j_abs_ab_old.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_OLD MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need a MOC representing the coverage of a 5 arcsec radius around every source.",
        "response": "stilts pixfoot in=source_list.fits radius=5.0/3600.0 out=coverage_5arcsec.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Calculate the distance modulus (DIST_MOD) from parallax (PLX) in mas, assuming a simple inversion, and apply a select filter to keep only objects with DM > 10.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol DIST_MOD \"5 * log10(100.0 / PLX) - 5\"' cmd='select \"DIST_MOD > 10\"' out=dm_far.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' 'log10(100.0' '/' 'PLX)' '-' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DIST_MOD 5 * log10(100.0 / PLX) - 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'log10(100.0' '/' 'PLX)' '-' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Group match three tables (L1, L2, L3). L2 and L3 only include rows where 'TIME' > 55000 MJD.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.01 in1=L1.fits in2=L2.fits icmd2='select \"TIME > 55000\"' in3=L3.fits icmd3='select \"TIME > 55000\"' values1=TIME values2=TIME values3=TIME out=time_filtered_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '55000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TIME > 55000\n\nUsage: select <expr>\n    (Unused arguments: '>' '55000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine two tables and rename a column named 'ERROR' to 'UNCERTAINTY' globally in the final output.",
        "response": "stilts tcat in='err1.fits err2.fits' ocmd='colmeta -name UNCERTAINTY ERROR' out=errors_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I have a text file where each line is an ASCII MOC string. How can I combine them all into a single FITS MOC?",
        "response": "stilts mocshape in=moc_list.txt ifmt=ascii shape=moc-ascii coords='$1' mocfmt=fits out=combined_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Concatenate an ASCII file and an ECSV file. In the ASCII file, drop columns named 'V_old' and 'I_old' prior to merging.",
        "response": "stilts tcatn nin=2 in1=data.txt ifmt1=ascii icmd1='delcols \"V_old I_old\"' in2=data.ecsv ifmt2=ecsv out=reduced_ascii_ecsv.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Propagate the full 22-element astrometric error matrix backwards by 5 years, updating all fields.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PROP_22 \"epochPropErr(-5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV, RA_error, DEC_error, PARALLAX_error, PMRA_error, PMDEC_error, RV_error, RA_DEC_corr, RA_PARALLAX_corr, RA_PMRA_corr, RA_PMDEC_corr, DEC_PARALLAX_corr, DEC_PMRA_corr, DEC_PMDEC_corr, PARALLAX_PMRA_corr, PARALLAX_PMDEC_corr, PMRA_PMDEC_corr))\"' out=gaia_error_propagated.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV,' 'RA_error,' 'DEC_error,' 'PARALLAX_error,' 'PMRA_error,' 'PMDEC_error,' 'RV_error,' 'RA_DEC_corr,' 'RA_PARALLAX_corr,' 'RA_PMRA_corr,' 'RA_PMDEC_corr,' 'DEC_PARALLAX_corr,' 'DEC_PMRA_corr,' 'DEC_PMDEC_corr,' 'PARALLAX_PMRA_corr,' 'PARALLAX_PMDEC_corr,' 'PMRA_PMDEC_corr))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PROP_22 epochPropErr(-5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV, RA_error, DEC_error, PARALLAX_error, PMRA_error, PMDEC_error, RV_error, RA_DEC_corr, RA_PARALLAX_corr, RA_PMRA_corr, RA_PMDEC_corr, DEC_PARALLAX_corr, DEC_PMRA_corr, DEC_PMDEC_corr, PARALLAX_PMRA_corr, PARALLAX_PMDEC_corr, PMRA_PMDEC_corr))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV,' 'RA_error,' 'DEC_error,' 'PARALLAX_error,' 'PMRA_error,' 'PMDEC_error,' 'RV_error,' 'RA_DEC_corr,' 'RA_PARALLAX_corr,' 'RA_PMRA_corr,' 'RA_PMDEC_corr,' 'DEC_PARALLAX_corr,' 'DEC_PMRA_corr,' 'DEC_PMDEC_corr,' 'PARALLAX_PMRA_corr,' 'PARALLAX_PMDEC_corr,' 'PMRA_PMDEC_corr))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate tables, then sort the output by 'REDSHIFT' and keep the rows from the original table with the 20 lowest redshifts.",
        "response": "stilts tcat in='z1.fits z2.fits' ocmd='sorthead 20 REDSHIFT' out=low_redshift_20.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine two tables. T1 has RA/DEC. T2 has a 2-element array column 'POS_ARRAY'. Rename 'POS_ARRAY' elements to RA/DEC before joining T1.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='addcol RA POS_ARRAY; addcol DEC POS_ARRAY[1]; delcols POS_ARRAY' out=array_to_scalar.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I need data from Konkoly TAP around RA 40, Dec 50, using a radius of 20 arcseconds, and filtering the output to keep rows where 'FLAG' is positive.",
        "response": "stilts cone serviceurl=http://nadir.konkoly.hu:80/tap lon=40.0 lat=50.0 radius='20.0 / 3600.0' ocmd='select FLAG > 0' out=konkoly_clean.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"20.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Visualize position vectors where the color is determined by density, using the Histogram scaling function.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=histogram out=density_hist_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a plot where the marker size is determined by `sqrt(AREA)`.",
        "response": "stilts plot2plane in=data.fits layer=size x=X y=Y size='sqrt(AREA)'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a MOC at order 1, covering the entire sky.",
        "response": "stilts pixfoot in=:skysim:1000 ra=ra dec=dec order=1 out=all_sky_o1.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Convert a CSV file to a FITS file, letting `tcopy` guess the input format from the `.csv` extension.",
        "response": "stilts tcopy in=data.csv out=data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Can you generate a MOC for my data, with a radius of 2 arcseconds, and save it as `quasar_distribution.moc.fits`?",
        "response": "stilts pixfoot in=my_data.fits radius=2.0/3600.0 out=quasar_distribution.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Merge tables, and calculate the 90th percentile (Q.90) for the column 'FLUX' in the combined result.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='keepcols FLUX' omode=stats ocmd='keepcols Q.90'",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Match four tables using Cartesian 3D error quadrature (3d_err_q). Scale parameter is 1.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=3d_err_q params=1 values1='X Y Z ERR' values2='X Y Z ERR' values3='X Y Z ERR' values4='X Y Z ERR' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits out=cartesian_3d_err_q.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create the MOC for a list of HEALPix pixels given by order and index columns.",
        "response": "stilts mocshape in=pixels.fits shape=uniq coords='mocUniq(ORDER_COL, INDEX_COL)' out=pixels.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a parameter 'ROW_COUNT_LONG' set to the total number of rows ($nrow).",
        "response": "stilts tpipe in=data.fits cmd='setparam -type long ROW_COUNT_LONG $nrow' out=row_count_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Submit an asynchronous query to the European HST Archive for all ObsCore entries, ensuring the job destruction time is explicitly set to never.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT obs_id, t_min FROM ivoa.ObsCore' delete=never out=hst_permanent_job.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch T1 and T2. T2 contains parallax (PLX) in mas. Calculate distance modulus (DM) from parallax in T2 and match on position + DM (sky+1d). Tolerance 2 arcsec, 0.5 mag DM.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='addcol DM modulusToDistance(1000.0/PLX)' matcher=sky+1d params='2 0.5' values1='RA DEC DM_1' values2='RA DEC DM' out=dm_combined_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Ensure that the table is suitable for parallel processing by caching it if it's currently sequential.",
        "response": "stilts tpipe in=streamed.csv ifmt=csv cmd=random out=cached.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read an ASCII file 'catalog.txt' that uses **multiple spaces** as delimiters, and save it as a VOTable.",
        "response": "stilts tcopy in=catalog.txt ifmt=ascii out=catalog.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Start an asynchronous job on the Planetary FUB service and set the job destruction time to a specific ISO 8601 date.",
        "response": "stilts tapquery tapurl=http://dachs.planet.fu-berlin.de/tap adql='SELECT * FROM epn_core.epn_core' maxrec=10000 destruction='2025-10-25T12:00:00' out=epn_job.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Access image metadata (SIA) from the CADC Archive using a radius of 0.0001 degrees around RA 250, Dec 5, and discard the results after initial processing.",
        "response": "stilts cone serviceurl=https://ws.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus lon=250.0 lat=5.0 radius=0.0001 servicetype=sia omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Copy a VOTable to a Parquet file, explicitly setting the compression type to **ZSTD**.",
        "response": "stilts tcopy in=input.vot ofmt='parquet(compression=zstd)' out=zstd_compressed.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the GAVO Data Center for objects around Ecliptic Lon 0, Lat 0, using a radius calculated as 100 arcseconds divided by 4.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=0.0 lat=0.0 radius='(100.0 / 4.0) / 3600.0' skysys=ecliptic out=ecliptic_25as.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"(100.0 / 4.0) / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Retrieve 10 ObsCore entries from the ESA Euclid Archive and output the result in IPAC table format.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' ofmt=ipac out=euclid_sample.ipac",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a footprint for a feather file `data.feather`.",
        "response": "stilts pixfoot in=data.feather order=9 out=feather_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate the footprint for objects where the magnitude is between 15 and 16.",
        "response": "stilts mocshape in=magnitudes.fits icmd='select \"MAG > 15 && MAG < 16\"' shape=point coords='array(RA,DEC)' out=mag_slice_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '15' '&&' 'MAG' '<' '16'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 15 && MAG < 16\n\nUsage: select <expr>\n    (Unused arguments: '>' '15' '&&' 'MAG' '<' '16'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T2 has an array column 'FLUX_SPECTRUM'. Discard this column in T2 before matching on scalar ID.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=exact values1=ID values2=ID values3=ID in1=T_REF.fits in2=T2.fits icmd2='delcols FLUX_SPECTRUM' in3=T3.fits out=array_col_discarded.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need the footprint for sources with a color `g-r` less than 0.1.",
        "response": "stilts mocshape in=colors.fits icmd='select \"g-r < 0.1\"' shape=point coords='array(RA,DEC)' out=blue_sources_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select g-r < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve the top 10 point sources from the MAST Hubble Source Catalog Version 3 (HSCv3).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 10 * FROM hsc_v3.point' out=hsc_point_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine an IPAC table and a FITS table into an ECSV file.",
        "response": "stilts tcatn nin=2 in1=data.tbl ifmt1=ipac in2=data.fits out=combined.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'RA_ICRS_RAD' converting FK4 RA/DEC (B1950) to ICRS RA (J2000) in radians.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_ICRS_RAD \"raFK4toFK5radians(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_ra_rad.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_ICRS_RAD raFK4toFK5radians(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a scatter plot and disable minor tick marks on both axes.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y minor=false out=no_minor_ticks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a MOC from a `cdf` file.",
        "response": "stilts mocshape in=data.cdf ifmt=cdf shape=point coords='array(RA,DEC)' out=cdf_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve up to 50 table definitions from the Pithia VO datacenter, setting a hard limit on the result count.",
        "response": "stilts tapquery tapurl=http://pithia.cbk.waw.pl/tap adql='SELECT * FROM TAP_SCHEMA.tables' maxrec=50 out=pithia_50.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a FITS file to VOTable, ensuring that the VOTable output explicitly uses version **1.2**.",
        "response": "stilts tcopy in=input.fits ofmt='votable(version=V12)' out=v12_output.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create an order 25 MOC for extremely deep coverage around M42, using a simulated point scheme input.",
        "response": "stilts mocshape in=:skysim:100000 shape=point coords='array(ra, dec)' icmd='select \"skyDistanceDegrees(ra, dec, 83.82, -5.39) < 0.1\"' order=25 out=deep_m42_o25.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'dec,' '83.82,' '-5.39)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(ra, dec, 83.82, -5.39) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: 'dec,' '83.82,' '-5.39)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Concatenate three tables and compute the population standard deviation of the final 'REDSHIFT' column.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits in3=T3.fits ocmd='keepcols REDSHIFT' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a JSON MOC (order 14) for sources within a $0.5$ arcminute radius, converted from Ecliptic coordinates (Lon/Lat).",
        "response": "stilts pixfoot in=ecl_data4.fits icmd='addskycoords ecliptic icrs ELON ELAT RA DEC' ra=RA dec=DEC radius='0.5 / 60.0' order=14 mocfmt=json out=ecl_half_am_json.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I want to show y-error bars from an array column `ERR_ARRAY` for a spectrum in `SPEC_ARRAY`.",
        "response": "stilts plot2plane in=spectrum.fits layer=yerrors xs=param$WAVELENGTHS ys=SPEC_ARRAY yerrhis=ERR_ARRAY",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"param\"\n    (The name \"param\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the ESO TAP_OBS service around RA 5, Dec 5, using a radius of 5 arcminutes, outputting the result using ECSV format.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=5.0 lat=5.0 radius='5.0 / 60.0' ofmt=ecsv out=eso_5arcmin.ecsv",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine three tables, T1, T2, T3. In T1, calculate a column 'LOG_FLUX' = log10(FLUX) and delete the original FLUX column before joining.",
        "response": "stilts tcatn nin=3 in1=T1.fits icmd1='addcol LOG_FLUX log10(FLUX)' icmd1='delcols FLUX' in2=T2.fits in3=T3.fits out=log_flux_preprocessed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a new column 'DEC_RAD' by converting the 'DEC_DEG' column from degrees to radians.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_RAD degreesToRadians(DEC_DEG)' out=coords_rad.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine two tables. T1 has 'DATE_STRINGS'. Convert these to Unix seconds before joining T2.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='replacecol TIME_SEC isoToUnixSec(DATE_STRINGS)' in2=T2.fits out=unix_time_merged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Pair match T_MAIN against T2, T3. T_MAIN has magnitude in log scale (LOG_F); convert T2/T3 flux (F) to log10(F) before matching on position + log flux (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='1 0.1' in1=T_MAIN.fits in2=T2.fits icmd2='replacecol LOG_F log10(F)' in3=T3.fits icmd3='replacecol LOG_F log10(F)' values1='RA DEC LOG_F' values2='RA DEC LOG_F' values3='RA DEC LOG_F' out=log_flux_match_3way.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot the mean of an array column FLUX_SPEC against WAVELENGTH, using the statline layer.",
        "response": "stilts plot2plane in=spectra.fits layer=statline xs=WAVELENGTH ys=FLUX_SPEC ycombine=mean thick=3 out=mean_spectrum_stat.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVELENGTH\"\n    (The name \"WAVELENGTH\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I need the MOC for sources within 5 arcseconds, writing the output as a simple ASCII MOC string to standard output.",
        "response": "stilts pixfoot in=targets_5as.fits ra=RA dec=DEC radius='5.0 / 3600.0' mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Convert the first table from a CDF file to a CSV file.",
        "response": "stilts tcopy in=data.cdf#1 out=data.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Perform a synchronous syntax check of an ADQL query against the NOIRLab Data Lab service without executing the query or saving any output.",
        "response": "stilts tapquery tapurl=https://datalab.noirlab.edu/tap adql='SELECT a.*, b.x, b.y FROM main_cat a JOIN second_cat b ON a.id = b.id WHERE a.mag < 20.0' sync=true parse=true omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How can I set the exact plot range, for instance X from -5 to 5 and Y from 0 to 100?",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xmin=-5 xmax=5 ymin=0 ymax=100",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can I use different coordinate systems (e.g., galactic for one table, ICRS for others) in `tmatchn`?",
        "response": "Yes, but you must use the `icmdN` filter with the `addskycoords` command to convert all tables to a common coordinate system *before* the matching stage. For example: `icmd2='addskycoords galactic icrs GLON GLAT RA_ICRS DEC_ICRS'`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the MAST CAOM service for observations within 0.2 degrees of the field center, filtering the results to keep only rows where the exposure time ('EXPTIME') is greater than 100 seconds.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=15.0 lat=25.0 radius=0.2 ocmd='select \"EXPTIME > 100.0\"' out=mast_long_exposure.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select EXPTIME > 100.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a column 'RA_HMS_0' converting RA in degrees to HMS string format with 0 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_0 \"degreesToHms(RA, 0)\"' out=hms_ra_0.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_0 degreesToHms(RA, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the best match between `cat_new.fits` and `cat_old.fits`. `cat_new` has per-object errors in `ERR_ARCSEC`. `cat_old` does not. Match them.",
        "response": "stilts tmatch2 in1=cat_new.fits in2=cat_old.fits matcher=skyerr params=2 values1='RA DEC ERR_ARCSEC' values2='RA DEC 0' find=best out=new_old_best_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match three tables on 2D elliptical regions on the sky. Approximate scale is 10 arcsec. Parameters include RA, DEC, A, B, PA.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=skyellipse params=10 values1='RA DEC A B PA' values2='RA DEC A B PA' values3='RA DEC A B PA' in1=e1.fits in2=e2.fits in3=e3.fits out=sky_ellipse_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Map coverage from STC-S strings, running an input check for table validity before processing.",
        "response": "stilts mocshape in=stc_data.fits icmd='check' shape=stc-s coords=S_REGION out=checked_stc_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Merge all FITS tables in the current directory and calculate the statistical median of the combined 'MAG' column.",
        "response": "stilts tcat in='*.fits' ocmd='keepcols MAG' omode=stats ocmd='keepcols ucd$stat.median'",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Match a target list (t.fits) against three survey files (s1, s2, s3). The target list is reference. Filter targets to only include 'BRIGHT' sources before matching.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky params=4 in1=t.fits icmd1='select MAG<15' in2=s1.fits in3=s2.fits in4=s3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' out=bright_targets_matched.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Simulate a cone query against PanSTARRS DR1 using a fixed circle region and save maximum 1000 rows as CSV.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT objid, ra, dec FROM dbo.detection_object WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 10.0, 10.0, 0.01))' maxrec=1000 ofmt=csv out=ps1_cone.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I want a MOC for sources where the distance modulus (DM) is less than 15.",
        "response": "stilts pixfoot in=dm_cat.fits icmd='select \"DM < 15.0\"' ra=RA dec=DEC out=low_dm_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DM < 15.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '15.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find targets in the European HST Archive TAP around Galactic L=20, B=20, searching a cone of $0.001$ arcminutes.",
        "response": "stilts cone serviceurl=https://hst.esac.esa.int/tap-server/tap lon=20.0 lat=20.0 radius='0.001 / 60.0' skysys=galactic out=hst_tiny_arcmin.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.001 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a column 'ERROR_COND_11' that is true if 'ERR_A' is greater than 1.0 and 'ERR_B' is less than 0.5.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_11 \"ERR_A > 1.0 && ERR_B < 0.5\"' out=conditional_error_11.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0' '&&' 'ERR_B' '<' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_11 ERR_A > 1.0 && ERR_B < 0.5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '1.0' '&&' 'ERR_B' '<' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the best match (best1) for T1 from T2. T2 contains an array column 'POS_XYZ' (X, Y, Z). Explode this column to X, Y, Z scalars before matching in 3D.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='explodecols POS_XYZ; colmeta -name X POS_XYZ_0; colmeta -name Y POS_XYZ_1; colmeta -name Z POS_XYZ_2' matcher=3d params=1 values1='X Y Z' values2='X Y Z' find=best1 out=exploded_3d_match_best1.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge T1 and T2. T1 is ASCII format. T2 is FITS. Only keep columns 'ID' and 'VALUE' from both tables.",
        "response": "stilts tcatn nin=2 in1=T1.txt ifmt1=ascii icmd1='keepcols \"ID VALUE\"' in2=T2.fits icmd2='keepcols \"ID VALUE\"' out=minimal_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC for circles where the radius is given by a distance column (DIST_KPC) scaled by 0.0001 (in degrees).",
        "response": "stilts pixfoot in=dist_cat.fits ra=RA dec=DEC radius='DIST_KPC * 0.0001' out=kpc_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine a local file with the result of a piped command, forcing the piped input to be VOTable format.",
        "response": "cat stream_data.vot | stilts tcatn nin=2 in1=local.fits in2=- ifmt2=votable out=piped_merge.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read an ECSV file, verify that the 'FLUX_ERR' is always positive, and discard the table data afterward.",
        "response": "stilts tpipe in=photometry.ecsv ifmt=ecsv cmd='assert \"FLUX_ERR > 0\"' omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX_ERR > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine an IPAC table and an ASCII table. The final output must be sorted by the concatenation of two string columns, ID and NAME.",
        "response": "stilts tcatn nin=2 in1=ipac.tbl ifmt1=ipac in2=ascii.txt ifmt2=ascii ocmd='addcol SORT_KEY \"concat(ID, NAME)\"' ocmd='sort \"SORT_KEY\"' out=sorted_ipac_ascii.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'NAME)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SORT_KEY concat(ID, NAME)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'NAME)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a 2D grid plot where the color indicates the standard deviation of the 'ERROR' column in each bin.",
        "response": "stilts plot2plane in=sim.fits layer=grid x=X y=Y weight=ERROR combine=stdev out=stdev_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert a Feather file to a VOTable, relying on automatic detection for both formats.",
        "response": "stilts tcopy in=data.fea out=data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Draw a set of filled circles using the area layer, coloring them based on density, using translucent shading (translevel=0.5).",
        "response": "stilts plot2sky in=targets.fits layer=area area='array(RA, DEC, RADIUS)' areatype=CIRCLE polymode=fill shading=translucent translevel=0.5 out=trans_density_circles.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"array(RA, DEC, RADIUS)\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Synchronously query the Subaru SAGA database for a sample and retrieve only the resulting row count.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT COUNT(*) FROM saga.stellar_abundances' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the CLIMSO EPN-TAP service for observations of the Sun.",
        "response": "stilts tapquery tapurl=https://epntap.climso.ovgso.fr/tap adql='SELECT * FROM epn_core.epn_core WHERE target_name = ''Sun''' out=climso_sun.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the CADC archive for 10 ObsCore entries, ensuring the request attempts authentication.",
        "response": "stilts tapquery tapurl=https://ws.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus adql='SELECT TOP 10 * FROM ivoa.ObsCore' auth=true out=cadc_auth_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'DEC_RAD_COS' calculating the cosine of the DEC in radians, assuming DEC is currently in degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_RAD_COS cos(degreesToRadians(DEC))' out=dec_rad_cos.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match A.fits and B.fits exactly on ID. T2 has a numerical column that is -999 for nulls. Replace -999 with null in T2 before joining.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits icmd2='replaceval -999 null MAG' matcher=exact values1=ID values2=ID out=null_replacement_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a string column 'TYPE' and set it to 'GALAXY' for all rows, then save as an IPAC table.",
        "response": "stilts tpipe in=gals.fits cmd='addcol TYPE \"GALAXY\"' ofmt=ipac out=gals.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read astronomical data from an IPAC table 'obs.tbl' and write it to standard output as a simple **ASCII table**, including table parameters.",
        "response": "stilts tcopy in=obs.tbl ifmt=ipac ofmt='ascii(params=true)' out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match two tables using elliptical regions (RA, DEC, A, B, PA) with a characteristic size of 15 arcsec.",
        "response": "stilts tmatch2 in1=E1.fits in2=E2.fits matcher=skyellipse params=15 values1='RA DEC A B PA' values2='RA DEC A B PA' out=sky_ellipse_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine two tables and filter out rows where both 'FLAG_A' and 'FLAG_B' are true.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits ocmd='select \"!(FLAG_A && FLAG_B)\"' out=filtered_flags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'FLAG_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !(FLAG_A && FLAG_B)\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'FLAG_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a `cds_fits` format MOC from my `s_region` column.",
        "response": "stilts mocshape in=obscore.fits shape=stc-s coords=s_region mocfmt=cds_fits out=obscore_cds.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a polygon MOC (order 11) and output in the CDS JSON format.",
        "response": "stilts mocshape in=poly_in.fits shape=polygon coords=VERTICES order=11 mocfmt=cds_json out=poly_cds_o11.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the Subaru SAGA database and perform a local transposition of the table (rows become columns) before outputting the metadata.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 5 * FROM saga.stellar_abundances' omode=meta ocmd='transpose'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a scatter plot with symmetric error bars for both x and y coordinates.",
        "response": "stilts plot2plane in=measurements.fits layer_m=mark x_m=X y_m=Y layer_e=xyerror x_e=X y_e=Y xerrhi_e=X_ERR yerrhi_e=Y_ERR",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Crossmatch T1 (ref) against T2, T3, T4. Only output the rows from T1 that were *unmatched* by T2, T3, and T4 combined.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits join1=nomatch values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' out=T1_only_unmatched.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot error ellipses derived from correlation, coloring by the auxiliary value 'Z' using the private aux map 'inferno'.",
        "response": "stilts plot2sky in=errors.fits layer=skycorr lon=RA lat=DEC lonerr=EL laterr=EB corr=C shading=paux aux=Z pmap=inferno out=paux_inferno_corr.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers colored by the magnitude of the 3D position vector (DISTANCE) using the weighted shading mode (combine=mean, weight=DISTANCE).",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=weighted weight=DISTANCE combine=mean auxmap=viridis out=weighted_distance_color.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find all rows that are in either T_A or T_B, and count them, using exact match on 'KEY'.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=exact values1=KEY values2=KEY join=1or2 omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve 50 sources from the VizieR TAP service and save the output in a FITS file.",
        "response": "stilts tapquery tapurl=http://cdsarc.cds.unistra.fr/saadavizier.tap/tap adql='SELECT TOP 50 * FROM \"II/246/out\"' maxrec=50 ofmt=fits out=vizier_50.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve observations from the PADC TAP Astro server where minimum time (`t_min`) is greater than 57000 MJD.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT TOP 50 * FROM ivoa.ObsCore WHERE t_min > 57000' out=padc_recent_obs.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Submit an asynchronous query to the ESA Euclid Archive and set the polling interval to 10 seconds (10000ms) for status updates.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT TOP 50 * FROM ivoa.ObsCore WHERE obs_collection = ''Euclid''' poll=10000 out=euclid_slow_poll.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC for sources with a `CONFIDENCE_LEVEL` of 95% or higher.",
        "response": "stilts pixfoot in=confident_detections.fits icmd='select \"CONFIDENCE_LEVEL >= 0.95\"' out=confident_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0.95'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select CONFIDENCE_LEVEL >= 0.95\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0.95'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Read an ASCII file, forcing the data sampling to determine column types to check only the first 100 rows.",
        "response": "stilts tcopy in=test.txt ifmt='ascii(maxSample=100)' out=sample_check.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'FLUX_DIFF' calculated as the dot product of two array columns, 'FLUX_A' and 'FLUX_B'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_DOT_PROD \"dotProduct(FLUX_A, FLUX_B)\"' out=flux_dot_product.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_DOT_PROD dotProduct(FLUX_A, FLUX_B)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find objects around RA 150, Dec 5, using a radius defined by the expression $1.0 / 3600.0$ degrees, piping to TOPCAT.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=150.0 lat=5.0 radius='1.0 / 3600.0' omode=topcat",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Can `tmatchn` handle a mix of FITS, VOTable, and CSV inputs?",
        "response": "Yes, you can specify the format for each input table individually using the `ifmtN` parameter, for example `ifmt2=csv`. Formats like FITS and VOTable are often auto-detected, so you may not need to specify them [2, B.41.1].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve the top 5 tables from the AIP DaCHS TAP service and output the result in ECSV format.",
        "response": "stilts tapquery tapurl=http://gavo.aip.de/tap adql='SELECT TOP 5 * FROM TAP_SCHEMA.tables' ofmt=ecsv out=aip_tables_ecsv.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a 2D grid plot where the color indicates the minimum value of 'FLUX' in each bin.",
        "response": "stilts plot2plane in=survey.fits layer=grid x=RA y=DEC weight=FLUX combine=min out=min_flux_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot vectors, ensuring they are scaled automatically (autoscale=true) and use the 'capped_lines' arrow shape.",
        "response": "stilts plot2sky in=pm.fits layer=skyvector lon=RA lat=DEC dlon=PMRA dlat=PMDEC unit=mas autoscale=true arrow=capped_lines out=auto_scaled_capped_lines.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "My CSV file uses a semicolon as a delimiter. How do I plot it?",
        "response": "stilts plot2plane in=data.csv ifmt='csv(delimiter=;)' layer=mark x=col1 y=col2",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"col1\"\n    (The name \"col1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I want to join `data_run_A.fits` and `data_run_B.fits`. I need a column `RunLetter` that has 'A' for rows from the first file and 'B' for the second.",
        "response": "stilts tcat in=data_run_A.fits in=data_run_B.fits uloccol=RunLetter out=combined_runs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the MAST CAOM ObsCore service for 10 records and locally add a constant string column 'SOURCE' set to 'MAST'.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT TOP 10 * FROM ivoa.ObsCore' ocmd='addcol SOURCE ''MAST''' out=caom_tagged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a table of 10 rows using the loop scheme, then add a column `y` where `y = i*i`. Display the result in the terminal.",
        "response": "stilts tpipe in=:loop:10 cmd='addcol y i*i' ofmt=text",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Run a synchronous query against the EVN Data Archive to retrieve the column definitions for the ObsCore table.",
        "response": "stilts tapquery tapurl=http://evn-vo.jive.eu/tap adql='SELECT * FROM ivoa.ObsCore' sync=true omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T_REF contains position error in mas (E_MAS). Match using skyerr (1 mas scale) and convert T_REF error to arcsec (E_MAS/1000).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=skyerr params=1 values1='RA DEC E_ARCSEC' values2='RA DEC E_ARCSEC' values3='RA DEC E_ARCSEC' in1=T_REF.fits icmd1='addcol E_ARCSEC E_MAS/1000.0' in2=T2.fits in3=T3.fits out=ref_error_converted_skyerr.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the IRSA TAP Service for a sample of tables and explicitly request FITS output format.",
        "response": "stilts tapquery tapurl=https://irsa.ipac.caltech.edu/TAP adql='SELECT TOP 10 * FROM TAP_SCHEMA.tables' ofmt=fits out=irsa_tables.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I'm matching three catalogs. The coordinate columns are `ra1, dec1`, `ra2, dec2`, and `ra3, dec3`. To avoid confusion, can you add suffixes `_c1`, `_c2`, `_c3` to the columns from each table in the output?",
        "response": "stilts tmatchn nin=3 in1=c1.fits in2=c2.fits in3=c3.fits multimode=group matcher=sky params=4 values1='ra1 dec1' values2='ra2 dec2' values3='ra3 dec3' fixcols=all suffix1=_c1 suffix2=_c2 suffix3=_c3 out=suffixed_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Perform a crossmatch between T1 and a simulated star catalog (:skysim:50000). Use best match for T1 (best1). Output to VOTable BINARY2 format.",
        "response": "stilts tmatch2 in1=T1.fits in2=:skysim:50000 matcher=sky params=1 values1='RA DEC' values2='ra dec' find=best1 ofmt='votable(format=BINARY2)' out=sim_best1_binary2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Initiate an asynchronous query on the ARI Gaia service, setting the progress polling interval to 1 second (1000 milliseconds) for frequent updates.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 100 source_id FROM gaiadr3.gaia_source' progress=true poll=1000 out=gaia_fast_poll.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a table from one FITS file to another, but convert it to column-oriented format.",
        "response": "stilts tcopy in=input.fits ofmt='fits(col=true)' out=output.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot elliptical regions defined by MAJ, MIN axes and PA, coloring them based on the aux map 'cubehelix'.",
        "response": "stilts plot2plane in=shapes.fits layer=xyellipse x=X y=Y ra=MAJ rb=MIN posang=PA shading=aux aux=COLOR_CODE auxmap=cubehelix out=colored_ellipses.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Search the Gaia TAP service for sources within 10 arcseconds of RA 175.5, Dec 5.2, saving the output to a FITS file.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=175.5 lat=5.2 radius='10.0 / 3600.0' out=gaia_10arcsec.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Check if bit 3 (zero-indexed) is set in the integer column 'STATUS_WORD', adding a boolean column 'BIT3_SET'.",
        "response": "stilts tpipe in=telemetry.fits cmd='addcol BIT3_SET \"hasBit(STATUS_WORD, 3)\"' out=telemetry_bit.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol BIT3_SET hasBit(STATUS_WORD, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve 200 ESO ObsCore entries and save them in the maximally efficient VOTable BINARY2 format.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 200 * FROM ivoa.ObsCore' ofmt='votable(format=BINARY2)' out=eso_obs.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run a TAP query and then only keep the first 10 rows of the result locally.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT * FROM gaiadr3.gaia_source' ocmd='head 10'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a new column 'LOG_MASS' which is the base-10 logarithm of the 'MASS' column, ensuring it is present even if MASS is null.",
        "response": "stilts tpipe in=stars.fits cmd='addcol -units dex LOG_MASS log10(MASS)' out=log_stars.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at http://archive.eso.org/ssap? I'm looking for objects around longitude 100.3128 and latitude -8.7052. Please use a search radius of 1.0589 degrees. Save the results to a csv file called query_results_58.csv.",
        "response": "stilts cone servicetype=ssa serviceurl=http://archive.eso.org/ssap lon=100.3128 lat=-8.7052 radius=1.0589 omode=out ofmt=csv out=query_results_58.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a file from MRT (Machine-Readable Table) format to FITS.",
        "response": "stilts tcopy in=mrt_cat.txt ifmt=mrt out=mrt_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Concatenate T1 and T2. T1 contains proper motions (PMRA, PMDEC) and parallax (PLX). Calculate the tangential velocity 'VTAN' (in km/s) in T1 before joining.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='addcol VTAN \"hypot(rvMasyrToKms(PMRA, PLX), rvMasyrToKms(PMDEC, PLX))\"' in2=T2.fits out=with_vtan.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PLX),' 'rvMasyrToKms(PMDEC,' 'PLX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VTAN hypot(rvMasyrToKms(PMRA, PLX), rvMasyrToKms(PMDEC, PLX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PLX),' 'rvMasyrToKms(PMDEC,' 'PLX))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch five catalogs (C1-C5) using exact match on SOURCE_ID. Output only groups that include entries from C1 and C5.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=exact values1=SOURCE_ID values2=SOURCE_ID values3=SOURCE_ID values4=SOURCE_ID values5=SOURCE_ID in1=C1.fits join1=match in2=C2.fits in3=C3.fits in4=C4.fits in5=C5.fits join5=match out=C1_C5_overlap_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate a footprint for all objects in `survey.fits` that are near the Andromeda galaxy (within 1 degree).",
        "response": "stilts pixfoot in=survey.fits icmd='select \"skyDistanceDegrees(RA,DEC,10.6847,41.2690) < 1\"' out=andromeda_region.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,10.6847,41.2690) < 1\n\nUsage: select <expr>\n    (Unused arguments: '<' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Take the table `sky_patches.fits`, sort it by `HEALPIX_INDEX`, and then remove adjacent rows with the same index.",
        "response": "stilts tpipe in=sky_patches.fits cmd='sort HEALPIX_INDEX' cmd='uniq HEALPIX_INDEX' out=unique_patches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate tables, keeping only columns with UCDs related to position (pos.eq.ra, pos.eq.dec).",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='keepcols \"ucd$pos.eq.ra ucd$pos.eq.dec\"' out=position_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge two tables. The output should be converted into a LaTeX table format for reporting.",
        "response": "stilts tcatn nin=2 in1=report_part1.fits in2=report_part2.fits ofmt=latex out=final_report.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate tables, where each input table is filtered to drop the column 'COMMENT' before merging.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='delcols COMMENT' out=comment_free_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Copy an ECSV file but explicitly use a **space delimiter** in the output ECSV file.",
        "response": "stilts tcopy in=input.ecsv ofmt='ecsv(delimiter=space)' out=space_delimited.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve 1000 sources from MAST PanSTARRS 1 DR1 whose G magnitude is between 15 and 16.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT * FROM dbo.detection_object WHERE g_mag BETWEEN 15 AND 16' maxrec=1000 out=ps1_g15_16.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I have two tables with different column orders. How do I concatenate them with columns in the order: NAME, RA_DEG, DEC_DEG?",
        "response": "stilts tcatn nin=2 in1=t1.fits icmd1='keepcols \"NAME RA_DEG DEC_DEG\"' in2=t2.fits icmd2='keepcols \"NAME RA_DEG DEC_DEG\"' out=ordered.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables, forcing the output to FITS column-oriented format (COLFITS), ensuring the final row count is computed upfront.",
        "response": "stilts tcat in='data_a.fits data_b.fits' ofmt=colfits countrows=true out=combined_colfits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Line representing the median of Y arrays vs X arrays (statline layer).",
        "response": "stilts plot2plane in=multi_obs.fits layer=statline xs=X_ARR ys=Y_ARR ycombine=median join=lines out=median_statline.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_ARR\"\n    (The name \"X_ARR\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I have an ASCII table with a header I need to skip. How to use `mocshape`?",
        "response": "You can use the `tail` filter. If your header is 5 lines long, use `icmd='tail ($nrow - 5)'`. For example: `stilts mocshape in=data.txt ifmt=ascii icmd='tail ($nrow-5)' shape=point coords='array($1,$2)' out=footprint.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for sources within 1 arcminute of Galactic coordinates L=10, B=5, requiring conversion to ICRS before processing.",
        "response": "stilts mocshape in=gal_cat.fits icmd='addskycoords galactic icrs GLON GLAT RA_ICRS DEC_ICRS' shape=circle coords='array(RA_ICRS, DEC_ICRS, 1.0 / 60.0)' out=galactic_moc_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve astronomical source information from SIMBAD, requiring authentication, and save the resulting table metadata only.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT TOP 1 * FROM basic' auth=true omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run a synchronous query against the ASI SSDC ObsCore service and save the output as a FITS file.",
        "response": "stilts tapquery tapurl=https://tools.ssdc.asi.it/TAPSSDC/tap adql='SELECT TOP 50 * FROM ivoa.ObsCore' sync=true ofmt=fits out=ssdc_sync.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query SIMBAD TAP using Galactic coordinates L=200, B=-50, with a search radius of 0.001 radians.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=200.0 lat=-50.0 radius='radiansToDegrees(0.001)' skysys=galactic out=simbad_rad_gal.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"radiansToDegrees(0.001)\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine two ASCII tables, then display the result in the GUI.",
        "response": "stilts tcatn nin=2 ifmt1=ascii in1=a.txt ifmt2=ascii in2=b.txt omode=gui",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a MOC of all sources from a simulation with galactic latitude |b|>20.",
        "response": "stilts mocshape in=:skysim:1e6 icmd='addskycoords icrs galactic ra dec l b' icmd='select abs(b)>20' shape=point coords='array(ra,dec)' out=high_latitude.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine tables T_A and T_B. T_B has Galactic coordinates GLON, GLAT; rename these to 'LON' and 'LAT' to match T_A.",
        "response": "stilts tcatn nin=2 in1=T_A.fits in2=T_B.fits icmd2='colmeta -name LON GLON; colmeta -name LAT GLAT' out=coords_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Pair match survey_A (ref) against survey_B and survey_C (sky 1 arcsec). Rename duplicate columns using full suffix notation ('_A', '_B', '_C').",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=A.fits in2=B.fits in3=C.fits fixcols=all suffix1=_A suffix2=_B suffix3=_C out=fully_suffixed_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a MOC for objects with non-negative flux values.",
        "response": "stilts pixfoot in=fluxes.fits icmd='select \"FLUX >= 0\"' out=non_neg_flux.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Ensure that the input file name is kept as a parameter called 'FILE_PATH'.",
        "response": "stilts tpipe in=input.fits cmd='setparam FILE_PATH param$in' out=file_path_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot density contours on a Galactic view, setting the number of levels to 12 and using thickness 3.",
        "response": "stilts plot2sky in=gal_cat.fits viewsys=galactic layer=contour lon=L lat=B nlevel=12 thick=3 out=thick_gal_contours.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L\"\n    (The name \"L\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I need the MOC for 20 arcsecond circles, converted from $20 / 3600$ degrees.",
        "response": "stilts pixfoot in=targets.fits ra=RA dec=DEC radius='20.0 / 3600.0' out=targets_20as.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Crossmatch FITS table A against simulated star field B (:skysim:10000). Use best match for A (best1). Output to VOTable format.",
        "response": "stilts tmatch2 in1=A.fits in2=:skysim:10000 matcher=sky params=5 values1='RA DEC' values2='ra dec' find=best1 ofmt=votable out=simulated_best_match.vot",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I have `file1.fits` and `file2.fits`. I want to concatenate them, but only if they both exist. How can I do that in a script?",
        "response": "STILTS itself doesn't have conditional logic for file existence. You would typically handle that in a shell script, for example: `if [ -f file1.fits ] && [ -f file2.fits ]; then stilts tcat in=file1.fits in=file2.fits out=output.fits; fi`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcat"
    },
    {
        "prompt": "Read a VOTable, use the positional crossmatch error matcher (skyerr) parameters to perform local filtering, keeping rows where separation is less than the quadrature sum of errors.",
        "response": "stilts tpipe in=matched.vot cmd='addcol SEP \"skyDistanceDegrees(RA_1, DEC_1, RA_2, DEC_2) * 3600.0\"' cmd='select \"SEP < hypot(ERR_1, ERR_2)\"' out=clean_skyerr.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_1,' 'RA_2,' 'DEC_2)' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SEP skyDistanceDegrees(RA_1, DEC_1, RA_2, DEC_2) * 3600.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_1,' 'RA_2,' 'DEC_2)' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert 'gaia_dr3.fits' into a VOTable using the memory-efficient **BINARY2** serialization format.",
        "response": "stilts tcopy in=gaia_dr3.fits ofmt='votable(format=BINARY2)' out=gaia_dr3.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find the top 20 rows ordered by the square root of 'MASS', outputting the result in FITS-plus format.",
        "response": "stilts tpipe in=objects.fits cmd='sorthead 20 sqrt(MASS)' ofmt=fits-plus out=top_mass_sqrt.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine tables, enabling lazy reading and streaming input, and count the total rows.",
        "response": "stilts tcat in='large_data*.fits' lazy=true istream=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge observation files, and rename the output table itself to 'MasterObsLog' before writing.",
        "response": "stilts tcatn nin=2 in1=log1.fits in2=log2.fits ocmd='tablename MasterObsLog' out=master_log.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Upload a catalog and join it against VizieR table 'I/337/wise', restricting matches to sources with remote magnitude (w.w1mag) brighter than 15.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT * FROM \"I/337/wise\" AS w JOIN TAP_UPLOAD.targets AS u ON 1=CONTAINS(POINT(''ICRS'', w.ra, w.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.001)) WHERE w.w1mag < 15' nupload=1 upload1=targets.fits upname1=targets out=wise_bright_xmatch.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run a search on the GAVO Data Center for a tiny region (0.1 arcsecond) and calculate a statistical checksum on the resulting table.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=10.0 lat=20.0 radius='0.1 / 3600.0' omode=checksum",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.1 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find all groups of objects that have an entry in at least one of `cat1.fits`, `cat2.fits`, `cat3.fits`.",
        "response": "This is ambiguous. `tmatchn` finds groups of matching objects. If you want a list of all unique objects across all catalogs, you would need a more complex workflow involving `tcat` and `uniq` filters, likely after a crossmatch to identify duplicates.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine tables, adding a column 'PARALLAX_UAS' calculated from the existing 'PARALLAX' (mas) column, then sort the output by this new column.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol PARALLAX_UAS \"PARALLAX * 1000.0\"; sort \"PARALLAX_UAS\"' out=uas_sorted_parallax.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_UAS PARALLAX * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Run a simple synchronous query to the AIP DaCHS server to fetch the top 10 table names.",
        "response": "stilts tapquery tapurl=http://gavo.aip.de/tap adql='SELECT TOP 10 * FROM TAP_SCHEMA.tables' sync=true out=aip_tables.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter my catalog to keep only sources in the northern hemisphere (DEC > 0) and generate a MOC at order 10.",
        "response": "stilts mocshape in=full_sky.fits icmd='select \"DEC > 0\"' shape=point coords='array(RA, DEC)' order=10 out=north_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match T1 and T2 using Cartesian 2D coordinates (X, Y) within a cuboid tolerance of 2 units in X and 20 units in Y.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=2d_cuboid params='2 20' values1='X Y' values2='X Y' out=aniso_cuboid_match_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Start an asynchronous query on the ESO TAP_OBS service for all VIRCAM calibration frames and ensure the job is deleted immediately upon command exit.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM calib.vircam' delete=now out=eso_calib_quick_delete.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a table, rename the column 'OBS_TIME_STR' to 'OBS_MJD', converting its ISO-8601 string content to MJD numeric values.",
        "response": "stilts tpipe in=log.fits cmd='replacecol OBS_TIME_STR isoToMjd(OBS_TIME_STR)' cmd='colmeta -name OBS_MJD OBS_TIME_STR' out=mjd_log.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables and add a row index column named 'Index' starting from 0, ensuring the final output uses the output format TST (Tab-Separated Table).",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol Index $0' ofmt=tst out=indexed_tst.tst",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a JSON MOC from the positions in a `tst` file.",
        "response": "stilts pixfoot in=legacy_data.tst ifmt=tst mocfmt=json out=legacy_coverage.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a summary of the MOC coverage for my catalog `sources.csv`, without creating a MOC file.",
        "response": "stilts mocshape in=sources.csv ifmt=csv shape=point coords='array(RA,DEC)' mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert a FITS table to a VOTable, ensuring the output version is 1.4.",
        "response": "stilts tcopy in=data.fits ofmt='votable(version=V14)' out=data_v14.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Merge tables, and then calculate the 1st and 3rd quartiles (Q1, Q3) for the column 'FLUX'.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='keepcols \"FLUX\"' omode=stats ocmd='keepcols \"Q.25 Q.75\"'",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Q.75'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Q.25 Q.75\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Q.75'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "How do I show every 500th row of `big_survey.fits` in my terminal?",
        "response": "stilts tpipe in=big_survey.fits cmd='every 500' ofmt=text",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge `table_x.fits` and `table_y.fits`. After merging, add a column `LOG_VAL` that is the base-10 log of the `VALUE` column.",
        "response": "stilts tcat in=table_x.fits in=table_y.fits ocmd='addcol LOG_VAL log10(VALUE)' out=table_log.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, ensuring that the final output is written to an ECSV file using a space delimiter and without a header row.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits ofmt='ecsv(delimiter=space)' out=space_delimited.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query MAST PanSTARRS DR1 and locally convert RA (decimal degrees) to sexagesimal HMS notation for output.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 10 ra FROM dbo.detection_object' ocmd='replacecol ra hmsToDegrees(ra)' out=ps1_hms_ra.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 267.8228 and latitude 34.3999. Please use a search radius of 0.1899 degrees. Save the results to a votable file called query_results_187.votable.",
        "response": "stilts cone servicetype=sia1 serviceurl=http://irsa.ipac.caltech.edu/sia lon=267.8228 lat=34.3999 radius=0.1899 omode=out ofmt=votable out=query_results_187.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "How do I make a MOC from the tail end (last 10%) of my catalog?",
        "response": "stilts pixfoot in=long_catalog.fits icmd='select \"$0 > ($nrow * 0.9)\"' out=tail_end_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '($nrow' '*' '0.9)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 > ($nrow * 0.9)\n\nUsage: select <expr>\n    (Unused arguments: '>' '($nrow' '*' '0.9)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Start an asynchronous job on the ESA Integral Science Archive, setting the delete policy to only delete the job if it finishes successfully.",
        "response": "stilts tapquery tapurl=https://isla.esac.esa.int/tap/tap adql='SELECT TOP 100 * FROM isv.scw' delete=finished out=integral_clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 sources from the Subaru SAGA database and locally convert the 'fe_h' column to a string, padding with zeros to 5 digits.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 10 fe_h FROM saga.stellar_abundances' ocmd='replacecol FE_H_STR padWithZeros(round(fe_h*100),5)' out=saga_padded_string.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find all records in the MAST PanSTARRS 1 DR1 TAP service with a quality flag greater than 0, and locally delete the RA and DEC columns after retrieval.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 100 * FROM dbo.detection_object WHERE quality_flag > 0' ocmd='delcols \"ra dec\"' out=ps1_filtered_no_coords.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'dec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: delcols ra dec\n\nUsage: delcols <colid-list>\n    (Unused arguments: 'dec'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate data tables. In the second table, D2, drop all string columns except for 'NAME'.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits icmd2='keepcols \"NAME\"; keepcols \"-exclude NAME *string*\"' out=string_subset_merge.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'NAME' '*string*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols -exclude NAME *string*\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'NAME' '*string*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match Survey A and Survey B using elliptical positional errors (skyellipse) with 10 arcsec scale. A has major/minor axes A_MAJ, B_MIN and PA.",
        "response": "stilts tmatch2 in1=Survey_A.fits in2=Survey_B.fits matcher=skyellipse params=10 values1='RA DEC A_MAJ B_MIN PA' values2='RA DEC A_MAJ B_MIN PA' out=elliptical_match_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the European HST Archive for 10 ObsCore entries and locally filter the result to keep only the `obs_id` and `t_exptime` columns.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' ocmd='keepcols \"obs_id t_exptime\"' out=hst_minimal.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 't_exptime'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols obs_id t_exptime\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 't_exptime'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can I use different match radii for different pairs in `tmatchn`?",
        "response": "No, `tmatchn` uses a single `matcher` with a single set of `params` that applies to all pairwise comparisons between tables. To use different radii, you would need to perform multiple `tmatch2` commands and then combine the results.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge three ASCII tables, defining their null value as 999.0 globally, and outputting to ECSV.",
        "response": "stilts tcatn nin=3 ifmt1=ascii in1=d1.txt ifmt2=ascii in2=d2.txt ifmt3=ascii in3=d3.txt ocmd='badval 999.0 *' ofmt=ecsv out=null_fixed_ecsv.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a scatter plot of magnitude G vs (G-R) color, explicitly setting the size of the markers to 2 pixels.",
        "response": "stilts plot2plane in=photometry.fits layer=mark x='G-R' y=G size=2 out=cmd_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"G-R\"\n    (The name \"G\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Concatenate tables, then discard all the output. This is used solely to check if all inputs are readable and compatible.",
        "response": "stilts tcat in='check1.fits check2.fits' omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Convert a PDS4 planetary XML label file to FITS, explicitly setting the input format.",
        "response": "stilts tcopy in=pds_label.xml ifmt=pds4 out=pds_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits. A is filtered to keep only rows with 'FLAG' = true. Output separation score 'DistDeg' in degrees.",
        "response": "stilts tmatch2 in1=A.fits icmd1='select FLAG' in2=B.fits matcher=sky params=360 values1='RA DEC' values2='RA DEC' scorecol=DistDeg out=filtered_scored_deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate tables, adding a column 'Distance_kpc' derived from parallax (in mas) using the expression $\\text{1.0}/\\text{PARALLAX}$.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol Distance_kpc 1.0/PARALLAX' out=distance_kpc_calc.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "What's the command to combine `table1.fits`, `table2.fits`, and `table3.fits`, adding a column `TableIndex` with the source table number?",
        "response": "stilts tcat in=table1.fits in=table2.fits in=table3.fits seqcol=TableIndex out=indexed_table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine two tables, but only keep the first 50 rows of the resulting table.",
        "response": "stilts tcat in='partA.fits partB.fits' ocmd='head 50' out=top50_result.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the GAVO TAP service for RAVE DR3 data and sort the result by radial velocity before saving.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT raveid, teff, hrv FROM rave.dr3 WHERE hrv IS NOT NULL' ocmd='sort -down hrv' out=sorted_rave.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need a point MOC (order 18) for sources where the error in RA (PMRA_ERR) is less than 0.1 mas/yr.",
        "response": "stilts mocshape in=gaia_like.fits icmd='select \"PMRA_ERR < 0.1\"' shape=point coords='array(RA, DEC)' order=18 out=low_error_o18.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA_ERR < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter the table by keeping columns with UCD 'pos.eq.ra' and 'pos.eq.dec'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"ucd$pos_eq_ra ucd$pos_eq_dec\"' out=pos_ucd_only.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ucd$pos_eq_dec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$pos_eq_ra ucd$pos_eq_dec\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$pos_eq_dec'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Synchronously query the ESO TAP_OBS service for 10 VIRCAM calibration records and output the result in LaTeX table format.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 * FROM calib.vircam' sync=true ofmt=latex out=eso_calib.tex",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a new table parameter named 'PROCESSED_DATE' with the current timestamp.",
        "response": "stilts tpipe in=data.fits cmd='setparam PROCESSED_DATE toString(CURRENT_TIMESTAMP)' out=data_processed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw lines connecting two positions from each row, (X1,Y1) to (X2,Y2).",
        "response": "stilts plot2plane in=pairs.fits layer=link2 x1=X1 y1=Y1 x2=X2 y2=Y2",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a plot and save the output to standard output as a GIF.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y ofmt=gif out=-",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'VEL_GAL_Z_COMP' containing the Z (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_Z_COMP \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_z_vel_comp_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_Z_COMP icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'KCORR_H' using the KCF_H filter at Z=0.15, leveraging the H-K color (KCC_HK).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_H \"kCorr(KCF_H, 0.15, KCC_HK, MAG_H-MAG_K)\"' out=kcorr_h.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.15,' 'KCC_HK,' 'MAG_H-MAG_K)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_H kCorr(KCF_H, 0.15, KCC_HK, MAG_H-MAG_K)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.15,' 'KCC_HK,' 'MAG_H-MAG_K)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine four data files. After merging, use the 'constcol' filter to remove any columns found to have constant values across the entire result set.",
        "response": "stilts tcatn nin=4 in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits ocmd='constcol' out=variable_data_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plotting a Gaussian curve fitted to temperature data, turning off the mean line display.",
        "response": "stilts plot2plane in=temps.fits layer=gaussian x=TEMP showmean=false out=gauss_no_mean.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TEMP\"\n    (The name \"TEMP\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the CSIRO ASKAP Science Data Archive for 50 ObsCore entries and locally calculate the row index ($0) plus 1.",
        "response": "stilts tapquery tapurl=https://casda.csiro.au/casda_vo_tools/tap adql='SELECT TOP 50 obs_id FROM obs_core' ocmd='addcol ROW_INDEX \"$0 + 1\"' out=askap_indexed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ROW_INDEX $0 + 1\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw lines connecting positions in Equatorial coordinates, sorting the points by their RA coordinate before connecting them.",
        "response": "stilts plot2sky in=data.fits layer=line lon=RA lat=DEC sortaxis=X out=line_sorted_ra.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter layer: Unknown value \"line\" - must be one of mark, size, sizexy, skyvector, skyellipse, skycorr, link2, mark2, poly4, mark4, polygon, area, central, label, arealabel, contour, skydensity, healpix, skygrid\nUsage: layer=<layer-type> <layer-specific-params>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Set the table parameter 'VERSION' to the current time stamp.",
        "response": "stilts tpipe in=data.fits cmd='setparam -type string VERSION now()' out=timestamp_version.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a raw binary MOC stream (order 10) for positions specified in an ECSV file.",
        "response": "stilts mocshape in=coords.ecsv ifmt=ecsv shape=point coords='array(RA, DEC)' order=10 mocfmt=raw out=ecsv_moc_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 11 MOC and write the output to standard output as ASCII format.",
        "response": "stilts pixfoot in=data.fits ra=RA dec=DEC order=11 mocfmt=ascii out=-",
        "chat.jar": "fixed",
        "error": "Error: Bad value for parameter mocfmt: Unknown value \"cds_ascii\" - must be one of fits, json, ascii\nUsage: mocfmt=fits|json|ascii\n\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query Gaia specifying TAP 1.1 interface version, retrieving the top 10 rows and saving to FITS.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 10 ra, dec FROM gaiadr3.gaia_source' interface=tap1.1 out=g10.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match `catalog.fits` with `deep_field.fits` where the match must be within 1 arcsec, and `deep_field` objects must have `FLAG==0`.",
        "response": "stilts tmatch2 in1=catalog.fits in2=deep_field.fits icmd2='select FLAG==0' matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=clean_deep_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve 100 stellar abundance records from the Subaru SAGA database and locally remove the RA and DEC columns after retrieval.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 100 * FROM saga.stellar_abundances' ocmd='delcols \"RA DEC\"' out=saga_no_coords.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: delcols RA DEC\n\nUsage: delcols <colid-list>\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match two tables on magnitude and color, with anisotropic tolerances: 0.05 for MAG_R and 0.15 for B_R.",
        "response": "stilts tmatch2 in1=phot1.fits in2=phot2.fits matcher=2d_anisotropic params='0.05 0.15' values1='MAG_R B_R' values2='MAG_R B_R' out=anisotropic_mag_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Count the number of match groups between three large catalogs without creating an output file.",
        "response": "stilts tmatchn nin=3 in1=large1.fits in2=large2.fits in3=large3.fits multimode=group matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge two tables, adding a column 'Distance_kpc' derived from 'PARALLAX' (in mas) using the expression language function.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol Distance_kpc 1.0/PARALLAX' out=distance_catalog.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot the 10th, 50th, and 90th percentiles of Y data, binned by X, using the quantile layer with line connections.",
        "response": "stilts plot2plane in=data.fits layer=quantile x=X y=Y quantiles='0.1,0.5,0.9' join=lines color=black out=percentile_lines.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a table of 100 rows using the loop scheme and convert it to a local ECSV file.",
        "response": "stilts tcopy in=:loop:100 out=loop_100.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Concatenate two tables from a pipe and a file. The first table comes from `gunzip -c data1.csv.gz` and the second is `data2.csv`.",
        "response": "stilts tcat ifmt=csv in=\"gunzip -c data1.csv.gz|\" in=data2.csv out=combined_pipe_file.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Start an asynchronous query on the PADC helio server but explicitly prevent the job from ever being automatically deleted.",
        "response": "stilts tapquery tapurl=http://voparis-tap-he.obspm.fr/tap adql='SELECT TOP 1000 * FROM tap_schema.tables' delete=never out=padc_job_saved.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a boolean column 'HIGH_FLUX_ERROR' based on the condition that FLUX_ERR > 0.1.",
        "response": "stilts tpipe in=data.fits cmd='addcol HIGH_FLUX_ERROR \"FLUX_ERR > 0.1\"' out=high_err_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HIGH_FLUX_ERROR FLUX_ERR > 0.1\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot markers sized by a column, using the paux shading mode with an Aux value of 'TYPE' and 'set1' map.",
        "response": "stilts plot2sky in=data.fits layer=size lon=RA lat=DEC size=S shading=paux aux=TYPE pmap=set1 out=paux_type_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "What does a zero radius mean for `pixfoot`?",
        "response": "A radius of zero (which is the default) means each position is treated as a single point on the sky. The MOC will cover the smallest HEALPix pixel at the given order that contains each point.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match four tables using Cartesian 2D coordinates (X, Y) where the match tolerance is given by an error column 'ERR' combined in quadrature (2d_err_q).",
        "response": "stilts tmatchn nin=4 multimode=group matcher=2d_err_q params=1 values1='X Y ERR' values2='X Y ERR' values3='X Y ERR' values4='X Y ERR' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits out=cartesian_err_q_4way.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Filter the table to keep rows where the absolute magnitude 'M_G' is numerically larger than 0.5.",
        "response": "stilts tpipe in=stars.fits cmd='select \"M_G > 0.5\"' out=giants.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select M_G > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve 20 J-PLUS DR3 sources brighter than r_mag=18 and output to LaTeX format.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jplus-dr3 adql='SELECT TOP 20 * FROM jplus_dr3.master WHERE r_mag < 18' ofmt=latex out=jplus_bright.tex",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge tables, and explicitly set the output format to VOTable version 1.4.",
        "response": "stilts tcatn nin=2 in1=V1.fits in2=V2.fits ofmt='votable(version=V14)' out=v14_output.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I need SSA spectra from ESO near Galactic L=30, B=0, using 5 arcminutes, and keep only columns named 'FLUX'.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=30.0 lat=0.0 radius='5.0 / 60.0' servicetype=ssa skysys=galactic ocmd='keepcols FLUX*' out=ssa_flux_only.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Join T1.fits and T2.fits on a 1D magnitude (MAG) within a 0.2 tolerance. T1 is remote, T2 is local FITS.",
        "response": "stilts tmatch2 in1=http://remote.org/T1.fits in2=T2.fits matcher=1d params=0.2 values1=MAG values2=MAG out=remote_1d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Submit a query asynchronously and then immediately delete it.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 1 * FROM ivoa.obscore' sync=false delete=now",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a low-resolution MOC (order 4) from a table containing polygon vertex arrays in a column named 'VERTICES'.",
        "response": "stilts mocshape in=footprints.fits shape=polygon coords='VERTICES' order=4 out=low_res_polygons.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Merge tables, filtering the final combined table to include only rows where the 'RA' column is between 100 and 200 degrees.",
        "response": "stilts tcat in='sky1.fits sky2.fits' ocmd='select \"RA >= 100.0 && RA <= 200.0\"' out=ra_restricted_merge.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '100.0' '&&' 'RA' '<=' '200.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA >= 100.0 && RA <= 200.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '100.0' '&&' 'RA' '<=' '200.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot X vs Y, restricting the output X range to the 10th to 90th percentile of the data (xsub).",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xsub='0.1,0.9' out=xsub_range.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a Kernel Density Estimate (KDE) with a smoothing width of 0.2 units.",
        "response": "stilts plot2plane in=data.fits layer=kde x=VALUE smooth=0.2 out=fixed_smooth_kde.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Concatenate three tables and calculate the total number of rows, reporting only that count.",
        "response": "stilts tcatn nin=3 in1=P1.fits in2=P2.fits in3=P3.fits omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "My RA is column `alpha_j2000` and Dec is `delta_j2000`. Generate a JSON MOC.",
        "response": "stilts pixfoot in=data.fits ra=alpha_j2000 dec=delta_j2000 mocfmt=json out=custom_coord_names.moc.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find spectra (SSA) from ESO around RA 350, Dec -10, with a search radius of 0.00005 degrees, and add a column that is the square root of FLUX.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=350.0 lat=-10.0 radius=0.00005 servicetype=ssa ocmd='addcol SQRT_FLUX sqrt(FLUX)' out=ssa_with_sqrt.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find XMM-Newton XCATDB sources and locally filter them to keep only rows where the flux in band 1 is greater than 1e-13.",
        "response": "stilts tapquery tapurl=https://xcatdb.unistra.fr/xtapdb adql='SELECT TOP 100 flux_b1 FROM dbo.xcat_source' ocmd='select \"flux_b1 > 1E-13\"' out=xcat_flux_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1E-13'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select flux_b1 > 1E-13\n\nUsage: select <expr>\n    (Unused arguments: '>' '1E-13'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Calculate the statistical summary (min, max, mean, etc.) of the airmass column for VIRCAM raw data in the ESO archive.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT airmass FROM raw.vircam WHERE airmass IS NOT NULL' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read CSV data from standard input, using a **tab delimiter**, and save the result as an ECSV file.",
        "response": "cat stream.tsv | stilts tcopy in=- ifmt='csv(delimiter=tab)' out=piped.ecsv",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "What is the command to convert a WDC format file to CSV?",
        "response": "stilts tcopy ifmt=wdc in=data.wdc ofmt=csv out=data.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I have data from 'run_a.csv' and 'run_b.csv'. Concatenate them and add a column 'RunID' showing 'a' or 'b'.",
        "response": "stilts tcat ifmt=csv in='run_a.csv run_b.csv' uloccol=RunID out=run_combined_id.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Start an asynchronous query on ESO TAP OBS, find VIRCAM raw data, but set the job destruction policy to immediately delete the job when the command exits.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM raw.vircam WHERE instrument_name = ''VIRCAM''' delete=now out=quick_delete.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot error ellipses derived from Gaia correlation parameters (mas unit), using the standard ellipse shape.",
        "response": "stilts plot2sky in=gaia_err.fits layer=skycorr lon=RA lat=DEC lonerr=RA_ERR laterr=DEC_ERR corr=C unit=mas out=gaia_corr_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Group match six tables (M1-M6) using exact match on 'OBJECT_ID'. Output the result as a multi-extension FITS file (fits-plus).",
        "response": "stilts tmatchn nin=6 multimode=group matcher=exact values1=OBJECT_ID values2=OBJECT_ID values3=OBJECT_ID values4=OBJECT_ID values5=OBJECT_ID values6=OBJECT_ID in1=M1.fits in2=M2.fits in3=M3.fits in4=M4.fits in5=M5.fits in6=M6.fits ofmt=fits-plus out=six_way_fits_plus.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the Subaru Suprime-Cam data service for a sample of sources, outputting the result as an ECSV file.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/spcam adql='SELECT TOP 10 * FROM hsc_v3.point' ofmt=ecsv out=spcam_sample.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers (filled triangle up, size 4) but only include sources where $\\text{G-R}$ color is between -0.5 and 1.5.",
        "response": "stilts plot2sky in=color_cat.fits icmd='select \"G-R > -0.5 && G-R < 1.5\"' layer=mark lon=RA lat=DEC shape=filled_triangle_up size=4 out=color_range_filter.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"G-R > -0.5 && G-R < 1.5\" (The name \"G\" is unknown.)\n        (The name \"G\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Crossmatch T_MAIN.fits and T_REF.fits using T_MAIN coordinates (RA, DEC) and T_REF coordinates (RArad, DECrad) converted from radians. Use a 1 arcsec radius.",
        "response": "stilts tmatch2 in1=T_MAIN.fits in2=T_REF.fits matcher=sky params=1 values1='RA DEC' values2='radiansToDegrees(RArad) radiansToDegrees(DECrad)' out=rad_converted_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I have coordinates in hours and degrees (RA 12h 30m, Dec 15d). Convert RA to degrees for a query with a 1 arcminute radius.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon='hmsToDegrees(12.5, 0, 0)' lat=15.0 radius='1.0 / 60.0' out=hms_converted_1arcmin.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(12.5, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge three Parquet files and output the result as a VOTable using the highly efficient BINARY2 format.",
        "response": "stilts tcat in='a.parquet b.parquet c.parquet' ofmt='votable(format=BINARY2)' out=parquet_to_binary2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the Subaru Suprime-Cam service for sources where B_MAG is brighter than 20.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/spcam adql='SELECT ra, dec, B_MAG FROM hsc_v3.point WHERE B_MAG < 20' out=subaru_bright.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read an external VOTable from a URL, convert the flux from Jy to AB magnitude in a new column, and output the table metadata only.",
        "response": "stilts tpipe in=http://example.com/flux.vot cmd='addcol MAG_AB janskyToAb(FLUX_JY)' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a scatter plot, displaying the result directly in a Swing GUI window.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y omode=swing",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot X vs Y, restricting the output X range to the 10th to 90th percentile of the data (xsub).",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xsub='0.1,0.9' out=xsub_range.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Round the numeric column 'FLUX' to 3 decimal places for storage as a string.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_STR \"formatDecimal(FLUX, 3)\"' out=flux_formatted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_STR formatDecimal(FLUX, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find targets in the MAST TESS Input Catalog (TIC) near RA 20, Dec -5, using 5 mas.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic lon=20.0 lat=-5.0 radius='5.0 / 3600000.0' out=tic_5mas.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plotting vectors where the scale factor is derived from velocity magnitude.",
        "response": "stilts plot2plane in=flow.fits layer=xyvector x=X y=Y xdelta=VX ydelta=VY scale='hypot(VX,VY)' autoscale=true thick=2 out=mag_scaled_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "How do I convert a table to the old TST (Tab-Separated Table) format?",
        "response": "stilts tcopy in=my_catalog.fits ofmt=tst out=my_catalog.tst",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read an ECSV file, and locally add a column 'TEFF_K' which is simply a copy of the 'TEFF' column, but set its UCD to 'phys.temp.eff'.",
        "response": "stilts tpipe in=stars.ecsv ifmt=ecsv cmd='addcol -ucd phys.temp.eff TEFF_K TEFF' out=stars_ucd.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Set a table parameter 'MJD_OBS' to the fixed value 59000.0.",
        "response": "stilts tpipe in=data.fits cmd='setparam MJD_OBS 59000.0' out=data_param_set.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need to plot markers for each point in an array column.",
        "response": "stilts plot2plane in=data.fits layer=marks xs=X_ARRAY ys=Y_ARRAY",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_ARRAY\"\n    (The name \"X_ARRAY\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I want to show the 5th and 95th percentiles of my data on a scatter plot.",
        "response": "stilts plot2plane in=data.fits layer_m=mark x_m=X y_m=Y layer_q=quantile x_q=X y_q=Y quantiles_q='0.05,0.95' color_q=green",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge CDF data (cdf_ts.cdf) and a VOTable. In the CDF data, select only the second table extension (#1).",
        "response": "stilts tcatn nin=2 in1=cdf_ts.cdf#1 ifmt1=cdf in2=local.vot out=cdf_merged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'DEC_ICRS_RAD' converting FK4 RA/DEC (B1950) to ICRS DEC (J2000) in radians.",
        "response": "stilts tpipe in=data.fits cmd='addcol DEC_ICRS_RAD \"decFK4toFK5radians(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_dec_rad.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_ICRS_RAD decFK4toFK5radians(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query ESO TAP OBS for ObsCore entries observed between MJD 57000 and MJD 58000.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM ivoa.ObsCore WHERE t_min BETWEEN 57000 AND 58000' maxrec=100 out=eso_mjd_range.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T1 contains an array column 'ERR_VEC'. Explode this array column into scalar error components (E_RA, E_DEC) to be used in a skyerr match.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=skyerr params=1 values1='RA DEC E_RA' values2='RA DEC E_RA' values3='RA DEC E_RA' in1=T1.fits icmd1='explodecols ERR_VEC; colmeta -name E_RA ERR_VEC_0; colmeta -name E_DEC ERR_VEC_1' in2=T2.fits in3=T3.fits out=exploded_error_skyerr.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need the MOC for sources with a radius given by $\text{exp}(\text{MAGNITUDE}) \times 10^{-8}$ degrees.",
        "response": "stilts pixfoot in=exp_mag.fits ra=RA dec=DEC radius='exp(MAGNITUDE) * 1.0e-8' out=exp_mag_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "How do I specify a very high resolution, like order 18?",
        "response": "stilts mocshape in=small_patch.fits shape=point coords='array(RA,DEC)' order=18 out=hires_patch.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find all matches between cat1.fits and cat2.fits using position AND proper motion (sky+2d) with tolerances 2 arcsec, 5 mas/yr, 5 mas/yr.",
        "response": "stilts tmatch2 in1=cat1.fits in2=cat2.fits matcher=sky+2d_anisotropic params='2 5 5' values1='RA DEC PMRA PMDEC' values2='RA DEC PMRA PMDEC' out=pos_pm_anisotropic.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 169.7433 and latitude -83.3083. Please use a search radius of 1.1647 degrees. Save the results to a ascii file called query_results_196.ascii. After the query, please run this processing command: 'sorthead 20 MAG'. Use verbosity level 2.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=169.7433 lat=-83.3083 radius=1.1647 verb=2 omode=out ofmt=ascii out=query_results_196.ascii ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Join three tables on `OBJECT_ID`. Before joining, for each table, remove rows where `MAG_ERR > 0.2`.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits icmd1='select \"MAG_ERR <= 0.2\"' icmd2='select \"MAG_ERR <= 0.2\"' icmd3='select \"MAG_ERR <= 0.2\"' multimode=group matcher=exact values1=OBJECT_ID values2=OBJECT_ID values3=OBJECT_ID out=clean_id_groups.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '0.2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR <= 0.2\n\nUsage: select <expr>\n    (Unused arguments: '<=' '0.2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (group mode). T3 columns need cleaning: rename 'R_mag' to 'R' and apply fixcolnames filter.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=3 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='colmeta -name R R_mag; fixcolnames' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=t3_clean_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the Subaru KUG2000 catalog and calculate statistics only on the KUG redshift column (Z_KUG).",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/kug2000 adql='SELECT Z_KUG FROM kug2000.table_main' omode=stats ocmd='keepcols Z_KUG'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine three tables and show the metadata of the resulting table structure.",
        "response": "stilts tcatn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate an order 11 MOC, forcing the use of the 'cds' implementation for map construction.",
        "response": "stilts mocshape in=input_data.fits shape=point coords='array(RA, DEC)' order=11 mocimpl=cds out=cds_impl_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (group mode). For the output, rename the magnitude columns in T1, T2, T3 to MAG_A, MAG_B, MAG_C.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_A suffix2=_B suffix3=_C ocmd='colmeta -name MAG_A MAG_A; colmeta -name MAG_B MAG_B; colmeta -name MAG_C MAG_C' out=renamed_mag_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find ULLYSES HLSP observations with spectral coverage greater than 2400 Angstroms and save as a CSV file.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT * FROM ivoa.ObsCore WHERE em_max > 2400' ofmt=csv out=ullyses_uv.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine a local file with a synthetic table representing a henon strange attractor with parameters a=-0.68, b=1.64, c=0.36.",
        "response": "stilts tcatn nin=2 in1=local_data.fits in2=':attractor:50000,henon,-0.68,1.64,0.36' out=hemon_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'LOG_FLUX' and ensure that it is typed as a 32-bit floating point value (float).",
        "response": "stilts tpipe in=data.fits cmd='addcol -type \"float LOG_FLUX log10(FLUX)\"' out=float_log.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'LOG_FLUX' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type float LOG_FLUX log10(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'LOG_FLUX' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot `y=x^2` and `y=x^3` as functions on the same plot.",
        "response": "stilts plot2plane layer_sq=function fexpr_sq='x*x' color_sq=red layer_cb=function fexpr_cb='x*x*x' color_cb=blue xmin=-2 xmax=2 ymin=-8 ymax=8",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T3 is a FITS file from which only the second extension (#2) should be used.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=exact values1=ID values2=ID values3=ID in1=T_REF.fits in2=T2.fits in3=T3.fits#2 out=ext_2_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the MAST STScI Registry TAP service for resources, limiting the total output rows to 50.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/registry adql='SELECT * FROM reg.resource' maxrec=50 out=mast_reg_limit.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "What is the maximum order `pixfoot` supports?",
        "response": "The `order` parameter for `pixfoot` supports values up to 29.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Retrieve 10 SIMBAD sources whose main ID starts with 'NGC', and locally rename the remote `main_id` column to `NGC_ID`.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT TOP 10 main_id, ra, dec FROM basic WHERE main_id LIKE ''NGC%''' ocmd='colmeta -name NGC_ID main_id' out=simbad_ngc_rename.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the PADC heliophysics server for a small sample of solar data, requiring explicit user authentication.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT TOP 10 * FROM tap_schema.tables' auth=true out=helio_auth_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T1, T2, T3 using Cartesian 2D coordinates (X, Y) where error is defined by the larger of the two errors squared combined in quadrature (2d_err_q).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=2d_err_q params=1 values1='X Y ERR' values2='X Y ERR' values3='X Y ERR' in1=D1.fits in2=D2.fits in3=D3.fits out=cartesian_2d_err_q_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the VSA (VISTA) archive and locally calculate the absolute K magnitude (K_ABS) based on parallax (assuming it exists locally) and K magnitude.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/vsa adql='SELECT * FROM vsa.catalogue' ocmd='addcol K_ABS \"K_MAG - 5 * log10(parallax) + 5\"' out=vsa_k_abs.fits",
        "error": "Error: Unused arguments: '-' '5' '*' 'log10(parallax)' '+' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol K_ABS K_MAG - 5 * log10(parallax) + 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '5' '*' 'log10(parallax)' '+' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Plot the sky density (skydensity, level 5), combining the sample standard deviation (stdev) of flux per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=FLUX combine=stdev out=stdev_flux_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match T1 and T2, filtering T2 to only keep columns ID and MAG before matching on exact ID.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='keepcols \"ID MAG\"' matcher=exact values1=ID values2=ID out=T2_minimal_cols.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID MAG\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "How to join two tables where one has an extra column that I want to discard?",
        "response": "stilts tcatn nin=2 in1=t1.fits icmd1='keepcols \"ID RA DEC MAG\"' in2=t2.fits icmd2='keepcols \"ID RA DEC MAG\"' out=aligned_cols.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine tables, writing the result in VOTable format using the recommended binary serialization (BINARY2).",
        "response": "stilts tcat in='v1.fits v2.fits' ofmt='votable(format=BINARY2)' out=votable_binary2_merge.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Filter rows keeping only the top 100 rows, based on the highest 'FLUX' values.",
        "response": "stilts tpipe in=data.fits cmd='sorthead -down 100 FLUX' out=high_flux_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge two tables, ensuring that any missing strings in the input CSV files are interpreted as null values (using the 'notypes=blank' CSV option).",
        "response": "stilts tcat ifmt='csv(notypes=blank)' in='t1.csv t2.csv' out=blank_null_csv.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Select all Gaia sources where the parallax error is less than 0.1 mas.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, parallax, parallax_error FROM gaiadr3.gaia_source WHERE parallax_error < 0.1' out=low_error_parallax.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Calculate the checksum of the plate metadata table from the APPLAUSE archive, but filter the retrieved rows first to keep only ID and DATE columns.",
        "response": "stilts tapquery tapurl=https://www.plate-archive.org/tap adql='SELECT * FROM apl.plate_meta' omode=checksum ocmd='keepcols \"ID, DATE\"' ",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DATE'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID, DATE\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'DATE'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate two ECSV files and replace the value 999.0 with null in the 'FLUX' column after concatenation.",
        "response": "stilts tcat ifmt=ecsv in='e1.ecsv e2.ecsv' ocmd='replaceval 999.0 null FLUX' out=cleaned_ecsv.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot HEALPix cells (UNIQ index column HPX_ID) using fill mode, showing low resolution (order 3).",
        "response": "stilts plot2sky in=hpx_list.fits layer=area area=HPX_ID areatype=UNIQ polymode=fill order=3 out=uniq_hpx3.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"HPX_ID\"\n    (The name \"HPX_ID\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Merge two tables, ensuring all input columns with non-safe names are fixed before concatenation, and stream input for efficiency.",
        "response": "stilts tcat in='a.csv b.csv' icmd=fixcolnames istream=true out=clean_streamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 317.4493 and latitude 63.0765. Please use a search radius of 1.0495 degrees. Save the results to a ascii file called query_results_144.ascii.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=317.4493 lat=63.0765 radius=1.0495 omode=out ofmt=ascii out=query_results_144.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create an order 17 MOC from UNIQ IDs, forcing the output format to standard FITS.",
        "response": "stilts mocshape in=hpx_data.fits shape=uniq coords=HPX_ID order=17 mocfmt=fits out=hpx_o17.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find 20 bright objects (Jmag < 15) in the SuperCOSMOS Science Archive near the North Galactic Pole and send the resulting table directly to TOPCAT.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/ssa adql='SELECT TOP 20 * FROM ssa.phot_ukidssdr6_y WHERE Jmag < 15 AND 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 192.859, 27.128, 0.5))' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to generate a coverage map only for objects observed in 2020 (MJD between 58849 and 59214).",
        "response": "stilts pixfoot in=obs_log.fits icmd='select \"MJD >= 58849 && MJD <= 59214\"' ra=RA dec=DEC out=2020_coverage.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '58849' '&&' 'MJD' '<=' '59214'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MJD >= 58849 && MJD <= 59214\n\nUsage: select <expr>\n    (Unused arguments: '>=' '58849' '&&' 'MJD' '<=' '59214'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine tables and add a constant string column 'VERSION' with the value 'DR4'.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol VERSION \"DR4\"' out=version_flagged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Find objects in the ESO TAP_CAT near Galactic L=30, B=0, using 0.001 degrees, then pipeline the result to calculate a checksum.",
        "response": "stilts cone serviceurl=http://archive.eso.org/tap_cat lon=30.0 lat=0.0 radius=0.001 skysys=galactic omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match sources.fits against detections.fits and send the results directly to TOPCAT for inspection. Use a 3 arcsecond radius.",
        "response": "stilts tmatch2 in1=sources.fits in2=detections.fits matcher=sky params=3 values1='RA DEC' values2='RA DEC' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the Subaru SAGA database for a large sample of records, retaining only the RA and DEC columns after retrieval.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT * FROM saga.stellar_abundances' maxrec=5000 ocmd='keepcols \"RA DEC\"' out=saga_coords.fits",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols RA DEC\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find all pairs (find=all) between T1 and T2 using position AND 1D magnitude (sky+1d) and output only the Separation and Score columns.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky+1d params='2 0.2' values1='RA DEC MAG' values2='RA DEC MAG' find=all ocmd='keepcols \"Separation Score\"' out=min_pair_data.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Score'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Separation Score\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Score'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "My input table is an ECSV file. Generate a FITS MOC from it.",
        "response": "stilts mocshape in=data.ecsv ifmt=ecsv shape=point coords='array(ra,dec)' mocfmt=fits out=ecsv_source.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 120.6622 and latitude -19.2254. Please use a search radius of 0.3306 degrees. Save the results to a fits file called query_results_76.fits. Don't use compression for the download.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=120.6622 lat=-19.2254 radius=0.3306 compress=false omode=out ofmt=fits out=query_results_76.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find all table schemas in the AIP DaCHS TAP service, outputting the result in FITS format.",
        "response": "stilts tapquery tapurl=http://gavo.aip.de/tap adql='SELECT * FROM TAP_SCHEMA.schemas' ofmt=fits out=aip_schemas.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can `mocshape` read a bzipped FITS file?",
        "response": "Yes, `mocshape` can read files compressed with bzip2, gzip, or Unix compress automatically.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Group match three tables. Filter the result to retain only rows where 'QUALITY_FLAG' in T1 is true (1).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_1 ocmd='select QUALITY_FLAG_1' out=T1_quality_filtered_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine two tables, adding an integer column 'TIME_BIN' calculated as the integer part of 'TIME / 1000.0'.",
        "response": "stilts tcat in='t1.fits t2.fits' ocmd='addcol TIME_BIN toInteger(TIME/1000.0)' out=binned_time.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "For `results.fits`, add a column `IS_VALID` which is true if `FLAG` is 0 and `ERROR` < 0.1.",
        "response": "stilts tpipe in=results.fits cmd='addcol IS_VALID FLAG==0&&ERROR<0.1' out=results_validated.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Copy a table and output it as a text file, setting the maximum cell width to 60 characters.",
        "response": "stilts tcopy in=long_strings.fits ofmt='text(maxCell=60)' out=truncated_text.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a scatter plot, displaying the result directly in a Swing GUI window.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y omode=swing",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Crossmatch three tables (T1-T3) using anisotropic 2D matching (X, Y) with tolerances 10 units in X and 2 units in Y.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=2d_anisotropic params='10 2' values1='X Y' values2='X Y' values3='X Y' in1=T1.fits in2=T2.fits in3=T3.fits out=aniso_2d_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot points with X/Y errors, setting the error bar style to 'caps' (capped_lines).",
        "response": "stilts plot2plane in=errors.fits layer=xyerror x=X y=Y xerrhi=EX yerrhi=EY errorbar=capped_lines out=capped_xy_errors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot error ellipses using the skycorr layer, fixing the size scale to 1e7 pixels for better visual inspection of micro-arcsecond errors.",
        "response": "stilts plot2sky in=gaia_errors.fits layer=skycorr lon=RA lat=DEC lonerr=ER laterr=ED corr=C unit=uas scale=1e7 out=uas_scale1e7.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot points with X and Y error bars, using the 'filled_ellipse' shape for the error regions.",
        "response": "stilts plot2plane in=errors.fits layer=xyerror x=X y=Y xerrhi=EX yerrhi=EY errorbar=filled_ellipse out=filled_error_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column with the hyperbolic tangent of 'VELOCITY'.",
        "response": "stilts tpipe in=data.fits cmd='addcol VEL_TANH tanh(VELOCITY)' out=hyperbolic_vel.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "How to create a MOC from an ASCII file with columns `RA_HMS` and `DEC_DMS`?",
        "response": "stilts pixfoot in=data.txt ifmt=ascii ra='hmsToDegrees(RA_HMS)' dec='dmsToDegrees(DEC_DMS)' out=data_hmsdms.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query ESO TAP_CAT for any catalogue containing 'VISTA' in its description, and filter the output locally to select only the first 5 records.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT table_name, description FROM TAP_SCHEMA.tables WHERE description LIKE ''%VISTA%''' ocmd='head 5' out=eso_vista_filter.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine two files, sorting the results first, and only keeping the rows where the absolute magnitude is brighter than -10.",
        "response": "stilts tcatn nin=2 in1=gals.fits in2=qso.fits ocmd='sort \"-down ABS_MAG\"' ocmd='select \"ABS_MAG < -10\"' out=bright_sorted_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '-10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ABS_MAG < -10\n\nUsage: select <expr>\n    (Unused arguments: '<' '-10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge tables, adding a column 'OBS_JD' by converting the ISO date string 'DATE_OBS' to Julian Day.",
        "response": "stilts tcat in='obs_a.fits obs_b.fits' ocmd='addcol OBS_JD \"isoToMjd(DATE_OBS) + 2400000.5\"' out=iso_to_jd.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol OBS_JD isoToMjd(DATE_OBS) + 2400000.5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot points from a strange attractor simulation with 1 million points, using transparent shading.",
        "response": "stilts plot2plane in=:attractor:1e6,clifford layer=mark x=x y=y shading=transparent opaque=20 out=attractor_transp.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"x\"\n    (The name \"x\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot error bars in the Y direction using an array-valued column Y_ERR_ARRAY.",
        "response": "stilts plot2plane in=spectra.fits layer=yerrors xs=WAVE ys=FLUX yerrhis=Y_ERR_ARRAY out=array_yerr.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVE\"\n    (The name \"WAVE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Read from a system pipe: process CSV data piped from a command and save the result as a FITS file.",
        "response": "cat input.csv | stilts tcopy in=- ifmt=csv out=piped_result.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query VizieR for M-dwarfs (assuming spectral type M, parallax > 10 mas) and only keep ID, RA, DEC, and Parallax columns. Output to standard output as text.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT main_id, ra, dec, parallax FROM gaiadr3.gaia_source WHERE parallax > 10 AND spec_class = ''M''' ocmd='keepcols \"main_id ra dec parallax\"' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch survey_A.fits and survey_B.fits on sky position with a 2 arcsecond radius. The coordinate columns in both are RA and DEC. Save the result to matched_surveys.fits.",
        "response": "stilts tmatch2 in1=survey_A.fits in2=survey_B.fits out=matched_surveys.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC'",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Read an ASCII file that contains quoted strings with internal spaces, and save it as a FITS file.",
        "response": "stilts tcopy in=quoted_strings.txt ifmt=ascii out=string_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column of boolean values indicating whether the integer column 'STATUS' has bit 5 set.",
        "response": "stilts tpipe in=flags.fits cmd='addcol HAS_BIT5 \"hasBit(STATUS, 5)\"' out=bit_checked.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HAS_BIT5 hasBit(STATUS, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a HEALPix map table, ensuring the view system is Galactic, and the data is read correctly, even if the native HEALPix system is Equatorial.",
        "response": "stilts plot2sky in=HPX_MAP.fits viewsys=galactic layer=healpix value=VALUE datasys=equatorial out=hpx_eq_to_gal.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "How do I plot multiple spectra from an array column, each with a small vertical offset?",
        "response": "stilts plot2plane in=spectra.fits layer=lines xs=param$WAVELENGTHS ys='FLUX_SPEC + $0 * 0.1'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"param\"\n    (The name \"param\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine tables, and then sort the final table by the magnitude column 'G_MAG' in descending order.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='sort -down G_MAG' out=mag_descending.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 192.0349 and latitude 70.3848. Please use a search radius of 0.302 degrees. Instead of a file, just give me the count. The coordinates are in the galactic system.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=192.0349 lat=70.3848 radius=0.302 skysys=galactic omode=count",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match two tables on X, Y, Z coordinates using isotropic matching. T1 columns are in a single array 'VEC3D'. Explode T1 first.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='explodecols VEC3D' in2=T2.fits matcher=3d params=1 values1='VEC3D_0 VEC3D_1 VEC3D_2' values2='X Y Z' out=exploded_3d_match_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the PADC TAP Heliophysics server asynchronously and request that the job is never automatically deleted.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT TOP 10 * FROM TAP_SCHEMA.tables' delete=never out=helio_persistent_meta.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine two tables, `cat1.vot` and `cat2.vot`, and write the output to a file `cat.colfits`, making sure it's in column-oriented FITS format.",
        "response": "stilts tcat in=cat1.vot in=cat2.vot ofmt=colfits-plus out=cat.colfits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Remove the column 'RA' and replace it with a new column using the existing 'RA' value but ensuring its unit is set to 'deg'.",
        "response": "stilts tpipe in=data.fits cmd='replacecol -units deg RA RA' out=ra_unit_set.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Copy a table from a loop scheme with step 0.5 and save it as a CSV file.",
        "response": "stilts tcopy in=:loop:1,10,0.5 out=half_step_loop.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot markers at the center of MOC regions defined by ASCII strings (central layer).",
        "response": "stilts plot2sky in=moc_table.fits layer=central area=MOC_STR areatype=MOC-ASCII out=moc_center_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MOC_STR\"\n    (The name \"MOC_STR\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Join T_main (all rows included) and T_aux (matched rows only). Match on sky position (1 arcsec) and find the single best match from T_aux for each T_main row.",
        "response": "stilts tmatch2 in1=T_main.fits in2=T_aux.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=best1 join=all1 out=left_outer_best1.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Read an ASCII file, explicitly excluding boolean and date types from the inferred column types.",
        "response": "stilts tcopy in=mixed.txt ifmt='ascii(notypes=boolean;date)' out=mixed_no_bool.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "How can I convert a column `EPOCH` from Julian Day to Modified Julian Date?",
        "response": "stilts tpipe in=epochs.fits cmd='replacecol EPOCH jdToMjd(EPOCH)' cmd='colmeta -name MJD EPOCH' out=epochs_mjd.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the maximum and minimum values of the proper motion in RA (pmra) in the MAST Gaia DR3 catalog.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT pmra FROM gaiadr3.gaia_source WHERE pmra IS NOT NULL' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 100 ObsCore entries from the ASI SSDC TAP Service and locally remove the 'UCD' column from the resulting table.",
        "response": "stilts tapquery tapurl=https://tools.ssdc.asi.it/TAPSSDC/tap adql='SELECT TOP 100 * FROM ivoa.ObsCore' ocmd='delcols UCD' out=ssdc_no_ucd.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch T1 (FITS) and T2 (CSV) using an exact match on 'OBJECT_NAME'. T1 rows should always be included in the output (left outer join).",
        "response": "stilts tmatch2 in1=T1.fits ifmt2=csv in2=T2.csv matcher=exact values1=OBJECT_NAME values2=OBJECT_NAME join=all1 out=name_left_outer.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you convert my table into a standalone HTML document?",
        "response": "stilts tcopy in=data.fits ofmt='html(standalone=true)' out=report.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read an ASCII file with space delimiters, clean up improper column names, and replace any nulls in 'FLUX' with 0.0.",
        "response": "stilts tpipe in=dirty_data.txt ifmt=ascii cmd='fixcolnames' cmd='replaceval NULL 0.0 FLUX' out=cleaned_fixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I want to match two tables (`a.fits`, `b.fits`) and then view the result directly in a GUI window.",
        "response": "stilts tmatch2 in1=a.fits in2=b.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' omode=gui",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine only the sources with magnitude brighter than 15 from `deep_survey.fits` with all sources from `shallow_survey.fits`.",
        "response": "stilts tcatn nin=2 in1=deep_survey.fits icmd1='select \"MAG < 15\"' in2=shallow_survey.fits out=mixed_depth.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve the top 10 columns from the Subaru HDS Spectrum data service, outputting the result in LaTeX format.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/hds/ adql='SELECT TOP 10 column_name FROM TAP_SCHEMA.columns' ofmt=latex out=hds_columns.tex",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Count the total number of sources available in the Gaia TAP archive that are brighter than G magnitude 10.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT COUNT(*) FROM gaiadr3.gaia_source WHERE phot_g_mean_mag < 10' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a MOC from my `data.fits`, using a radius that is the mean of `ERR_MAJ` and `ERR_MIN` columns (in degrees).",
        "response": "stilts pixfoot in=data.fits radius='(ERR_MAJ+ERR_MIN)/2.0' out=mean_error_radius.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate multiple tables, enabling streaming input for optimal handling of very large files.",
        "response": "stilts tcat in='huge*.fits' istream=true out=huge_streamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot vectors showing proper motion (PMRA, PMDEC) at positions (RA, DEC), scaling vectors automatically.",
        "response": "stilts plot2plane in=propermotion.fits layer=xyvector x=RA y=DEC xdelta=PMRA ydelta=PMDEC autoscale=true out=pm_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine two tables, and replace the column 'FLUX' with a new column calculated as 'FLUX * 1e-12' (unit conversion).",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replacecol FLUX \"FLUX * 1e-12\"' out=unit_corrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1e-12'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX * 1e-12\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '1e-12'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables A and B. A contains array columns (e.g., 'SPEC_FLUX'). Explode all arrays into scalar columns in A before joining.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='explodeall' in2=B.fits out=all_exploded_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a MOC from a table where the coordinates are in the FK4 system.",
        "response": "stilts mocshape in=fk4_cat.fits icmd='addskycoords fk4 fk5 RA_FK4 DEC_FK4 RA_J2000 DEC_J2000' shape=point coords='array(RA_J2000, DEC_J2000)' out=fk4_converted_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find all Gaia DR3 sources in a 1-degree radius of the galactic center.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, l, b FROM gaiadr3.gaia_source WHERE 1=CONTAINS(POINT(\"GALACTIC\", l, b), CIRCLE(\"GALACTIC\", 0, 0, 1.0))'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How to do a sky match where the radius for each object in table 1 is given by `ERR_RADIUS_1` and for table 2 it is a fixed 0.5 arcsec?",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=skyerr params=1 values1='RA DEC ERR_RADIUS_1' values2='RA DEC 0.5' out=mixed_error_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'LOG_PLX' applying log scaling to parallax (PARALLAX) to handle a wide range of values.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol LOG_PLX log10(PARALLAX)' out=log_parallax.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_DMS_3' converting RA in degrees to DMS string format with 3 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_3 \"degreesToDms(RA, 3)\"' out=dms_ra_3s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_3 degreesToDms(RA, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query GAVO for quasars near RA 180 and calculate the result density per square degree, running synchronously.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT COUNT(*) / AREA(box_around_qso_region) AS density FROM sdss.dr16qso WHERE ra > 175 AND ra < 185' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate tables, applying an input filter to remove rows where the time column 'MJD' is null.",
        "response": "stilts tcat in='m1.fits m2.fits' icmd='select !NULL_MJD' out=non_null_mjd.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Transpose the table and make the original column names a separate column named 'Old_Name'.",
        "response": "stilts tpipe in=data.fits cmd='transpose -namecol 1' cmd='colmeta -name Old_Name C1' out=name_col_transposed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the integer 'ID' column is odd.",
        "response": "stilts tpipe in=data.fits cmd='select \"ID % 2 != 0\"' out=odd_ids_filtered_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID % 2 != 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "My table has two radius columns, `R_MAJ` and `R_MIN`, and a position angle `PA`. How can I make a MOC?",
        "response": "You can use the STC-S shape type. First, create the STC-S string: `icmd='addcol stc_s \"Ellipse ICRS \"+RA+\" \"+DEC+\" \"+R_MAJ+\" \"+R_MIN+\" \"+PA'` then use that column: `stilts mocshape in=... shape=stc-s coords=stc_s ...`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Is it possible to convert a table to a JPEG or other image format?",
        "response": "No, `tcopy` only converts between tabular formats. You would need one of the `plot` commands like `plot2plane` to create an image.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a MOC for all sources in `mycat.fits` that are at least 10 arcseconds away from any source in `bright_stars.fits`.",
        "response": "This is a complex filtering operation not suitable for a single `pixfoot` command. It would require a cross-match (`tmatch2`) first to identify and exclude the nearby sources before generating the MOC with `pixfoot`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need objects from VizieR TAP around 09h 00m 00s, +40d 00m 00s, converting coordinates, and using 45 arcseconds.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon='hmsToDegrees(9.0, 0, 0)' lat='dmsToDegrees(40.0, 0, 0)' radius='45.0 / 3600.0' out=vizier_45as.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(9.0, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create a simple scatter plot of RMAG vs BMAG from `catalog.fits` and display it on the screen.",
        "response": "stilts plot2plane in=catalog.fits layer=mark x=BMAG y=RMAG",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"BMAG\"\n    (The name \"BMAG\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Draw markers using the fat cross shape and a thick line (thick=2), shaded translucent.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shape=fat_cross thick=2 shading=translucent out=fat_translucent.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine positional data (pos.fits) with a generated table of 100,000 strange attractor points (clifford family).",
        "response": "stilts tcatn nin=2 in1=pos.fits in2=:attractor:100000,clifford out=pos_attractor.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query ARI Gaia for 100 sources and locally compute a new column `MU` representing the total proper motion vector magnitude (SQRT(pmra^2 + pmdec^2)).",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 100 pmra, pmdec FROM gaiadr3.gaia_source' ocmd='addcol MU \"hypot(pmra, pmdec)\"' out=ari_pm_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MU hypot(pmra, pmdec)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a line fit that ignores points where FLAG equals 1.",
        "response": "stilts plot2plane in=data.fits layer_m=mark x_m=X y_m=Y layer_fit=linearfit x_fit=X y_fit=Y icmd_fit='select FLAG!=1' out=filtered_fit.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I have two tables with per-object errors. Match `cat1.fits` and `cat2.fits` using their individual errors stored in `ERR_ARCSEC_1` and `ERR_ARCSEC_2` respectively. The coordinate columns are `RA_1`, `DEC_1` and `RA_2`, `DEC_2`.",
        "response": "stilts tmatch2 in1=cat1.fits in2=cat2.fits matcher=skyerr params=5 values1='RA_1 DEC_1 ERR_ARCSEC_1' values2='RA_2 DEC_2 ERR_ARCSEC_2' out=match_with_errors.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Calculate the distance modulus (`DM`) from the luminosity distance (`DL_Mpc`) using a cosmology function, assuming `DM = 5 * log10(DL_Mpc) + 25`.",
        "response": "stilts tpipe in=cosmo.fits cmd='addcol DM distanceToModulus(MpcToPc(DL_Mpc))' out=dist_modulus.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Display the output table using the graphical user interface (GUI) mode.",
        "response": "stilts tpipe in=data.fits omode=gui",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a scatter plot, displaying the result directly in a Swing GUI window.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y omode=swing",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert the galactic coordinates `GLON`, `GLAT` in `bulge_stars.fits` to ICRS and then create a MOC at order 9.",
        "response": "stilts pixfoot in=bulge_stars.fits icmd='addskycoords galactic icrs GLON GLAT RA_ICRS DEC_ICRS' ra=RA_ICRS dec=DEC_ICRS order=9 out=bulge_icrs_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine two tables, but drop all columns except for 'RA', 'DEC', and 'Z' from both.",
        "response": "stilts tcatn nin=2 in1=qso1.fits icmd1='keepcols \"RA DEC Z\"' in2=qso2.fits icmd2='keepcols \"RA DEC Z\"' out=qso_xyz.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I have a table of spectral lines. I need to select lines where the `WAVELENGTH` is between 4000 and 5000 Angstroms.",
        "response": "stilts tpipe in=spectral_lines.fits cmd='select \"WAVELENGTH>4000 && WAVELENGTH<5000\"' out=optical_lines.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'WAVELENGTH<5000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select WAVELENGTH>4000 && WAVELENGTH<5000\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'WAVELENGTH<5000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine an ASCII file and an IPAC file, defining their null values as -99 globally.",
        "response": "stilts tcatn nin=2 ifmt1=ascii in1=a.txt ifmt2=ipac in2=i.tbl ocmd='replaceval NULL -99 MAG' out=null_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "For a table containing RA and DEC in degrees, add columns for galactic longitude (l) and latitude (b).",
        "response": "stilts tpipe in=coords.fits cmd='addskycoords icrs galactic RA DEC l b' out=galactic_coords.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot the X and Y columns against each other, coloring points by their row index ($0).",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=aux aux='$0' out=index_color.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create an all-sky plot of stars in Galactic coordinates (L, B) using the Aitoff projection, coloring points by magnitude (MAG).",
        "response": "stilts plot2sky in=stars.fits viewsys=galactic projection=aitoff layer=mark lon=L lat=B shading=aux aux=MAG out=gal_aitoff_mag.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L\"\n    (The name \"L\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Run an SSA query looking for spectra around RA 100, Dec 5 that are specifically in VOTable format, outputting the rows as an ASCII table to standard output.",
        "response": "stilts cone serviceurl=http://jvo.nao.ac.jp/skynode/do/tap/akari/spectrum/slitless_mir_spec lon=100.0 lat=5.0 radius=0.1 servicetype=ssa dataformat=application/x-votable+xml out=- ofmt=ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge survey data. In the second survey (S2), select rows corresponding to groups of objects (GroupSize > 1) and keep only one representative per group.",
        "response": "stilts tcatn nin=2 in1=S1.fits in2=S2.fits icmd2='select \"GroupSize > 1\"; uniq \"GroupID\"' out=group_representatives.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GroupSize > 1\n\nUsage: select <expr>\n    (Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XYZ_MAG_SQ' containing the magnitude of the 3D error vector squared.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XYZ_MAG_SQ \"square(hypot(ERROR_X, ERROR_Y, ERROR_Z))\"' out=xyz_error_mag_sq.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ERROR_Y,' 'ERROR_Z))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XYZ_MAG_SQ square(hypot(ERROR_X, ERROR_Y, ERROR_Z))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'ERROR_Y,' 'ERROR_Z))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Copy data from the synthetic attractor scheme (Rampe) and save it as a local FITS file.",
        "response": "stilts tcopy in=:attractor:1000,rampe out=rampe_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine three tables. The entire output must be shuffled randomly.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits in3=T3.fits ocmd='shuffle' out=random_shuffle.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Map coverage from an ObsCore table using STC-S strings, filtering to keep only non-null RA/DEC coordinates from the core table columns (if available).",
        "response": "stilts mocshape in=obscore.fits icmd='select !NULL_RA' shape=stc-s coords=s_region out=stc_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match four tables from different surveys (`s1.vot`, `s2.dat`, `s3.fits`, `s4.csv`) and send the result directly to TOPCAT.",
        "response": "stilts tmatchn nin=4 in1=s1.vot ifmt2=ascii in2=s2.dat in3=s3.fits ifmt4=csv in4=s4.csv multimode=group matcher=sky params=5 values1='RA DEC' values2='ra dec' values3='RA_J2000 DEC_J2000' values4='alpha delta' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 180.8278 and latitude 4.7116. Please use a search radius of 1.6508 degrees. Save the results to a csv file called query_results_116.csv. The coordinates are in the fk4 system.",
        "response": "stilts cone servicetype=sia1 serviceurl=http://irsa.ipac.caltech.edu/sia lon=180.8278 lat=4.7116 radius=1.6508 skysys=fk4 omode=out ofmt=csv out=query_results_116.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "After concatenating `set_a.fits` and `set_b.fits`, can I calculate statistics only on the `flux_error` column?",
        "response": "stilts tcat in=set_a.fits in=set_b.fits ocmd='keepcols flux_error' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Match four catalogs using **skyerr_q** (quadrature) where the error column (E_POS) needs conversion from arcminutes to arcseconds before matching (multiply by 60).",
        "response": "stilts tmatchn nin=4 multimode=group matcher=skyerr_q params=1 in1=C1.fits icmd1='replacecol E_POS E_POS*60' in2=C2.fits icmd2='replacecol E_POS E_POS*60' in3=C3.fits icmd3='replacecol E_POS E_POS*60' in4=C4.fits icmd4='replacecol E_POS E_POS*60' values1='RA DEC E_POS' values2='RA DEC E_POS' values3='RA DEC E_POS' values4='RA DEC E_POS' out=arcmin_error_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need SIA metadata from MAST CAOM near Galactic L=30, B=30, searching with a radius of 15 arcminutes.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=30.0 lat=30.0 radius='15.0 / 60.0' servicetype=sia skysys=galactic out=caom_15am_gal.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"15.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Group match three tables (A, B, C). Filter A to keep only rows where magnitude difference (B-V) > 1.0 before matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=3 in1=A.fits icmd1='select \"B_MAG - V_MAG > 1.0\"' in2=B.fits in3=C.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=color_filtered_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'V_MAG' '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select B_MAG - V_MAG > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'V_MAG' '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine tables. Before joining, replace the column 'TIME_STRING' in each table with a calculated MJD value.",
        "response": "stilts tcat in='log1.fits log2.fits' icmd='replacecol TIME isoToMjd(TIME_STRING)' out=mjd_times.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Apply a random shuffle to the rows and send the result directly to the terminal as text.",
        "response": "stilts tpipe in=data.fits cmd=shuffle ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a PDS4 planetary data XML file and save its table data as a FITS file.",
        "response": "stilts tcopy in=pds_label.xml ifmt=pds4 out=pds_table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Copy a VOTable to a CSV file, ensuring that the output string values are **not** quoted (default behavior).",
        "response": "stilts tcopy in=input.vot ofmt=csv out=unquoted.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a MOC from UNIQ values, but only for those at HEALPix order 8.",
        "response": "stilts mocshape in=uniqs.fits icmd='select uniqToOrder(UNIQ_COL)==8' shape=uniq coords=UNIQ_COL order=8 out=order8_uniqs.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column 'RA_HMS_1' converting RA in degrees to HMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_1 \"degreesToHms(RA, 1)\"' out=hms_ra_1s_new.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_1 degreesToHms(RA, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate an order 2 MOC (very coarse resolution) from a catalog of positions.",
        "response": "stilts mocshape in=coarse_cat.fits shape=point coords='array(RA, DEC)' order=2 out=coarse_moc_o2.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Copy a VOTable to a FITS file, selecting extension #0 (the primary HDU) only (though this extension does not typically contain table data).",
        "response": "stilts tcopy in=data.vot#0 out=data_primary.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine table1.fits and table2.fits, adding a boolean column named 'IS_FAINT' which is true if MAG > 20 in the final table.",
        "response": "stilts tcatn nin=2 in1=table1.fits in2=table2.fits ocmd='addcol IS_FAINT \"MAG > 20\"' out=with_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 20\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match `cat1.fits`, `cat2.fits`, `cat3.fits`. Before matching, filter `cat2` to only include rows where `FLAG==0`. After matching, sort the result by the `RA_1` column.",
        "response": "stilts tmatchn nin=3 in1=cat1.fits in2=cat2.fits in3=cat3.fits icmd2='select FLAG==0' multimode=group matcher=sky params=2 values1='RA DEC' values2='RA DEC' values3='RA DEC' fixcols=dups suffix1=_1 suffix2=_2 suffix3=_3 ocmd='sort RA_1' out=filtered_sorted_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate tables, and in the final output, keep only the columns that have units defined.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='keepcols ucd$*units' out=units_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Match four tables using Cartesian 3D coordinates (X, Y, Z) within 5 units. Execute in parallel.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=3d params=5 values1='X Y Z' values2='X Y Z' values3='X Y Z' values4='X Y Z' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits runner=parallel out=parallel_3d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Crossmatch five tables, but only return the total count of matched groups.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=3 in1=c1.fits in2=c2.fits in3=c3.fits in4=c4.fits in5=c5.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA DEC' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find objects in `cat_new.fits` which have a counterpart in `cat_ref.fits` within 3 arcsec, but only if the magnitude in `cat_new` is brighter than 18.",
        "response": "stilts tmatch2 in1=cat_new.fits icmd1='select \"MAG < 18\"' in2=cat_ref.fits matcher=sky params=3 values1='RA DEC' values2='RA DEC' out=bright_matches.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine tables, setting the output table name to 'Survey_DR1_Final'.",
        "response": "stilts tcat in='s1.fits s2.fits' ocmd='tablename Survey_DR1_Final' out=final_survey.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Run a search on ESA's JWST Archive TAP service around RA 50, Dec 10, using 2 arcminutes as the radius, and include filtering to select only sources brighter than magnitude 18.",
        "response": "stilts cone serviceurl=https://jwst.esac.esa.int/server/tap lon=50.0 lat=10.0 radius='2.0 / 60.0' ocmd='select MAG < 18.0' out=jwst_filtered.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"2.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match T_A and T_B. T_A coordinates are in Ecliptic. Convert T_A to ICRS before matching T_B (5 arcsec).",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='addskycoords ecliptic icrs ELON ELAT RA DEC' in2=T_B.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' out=ecliptic_preprocessed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a parameter 'MAX_FLUX_LOG' with the maximum value of the log of flux.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='addcol LOG_FLUX log10(FLUX)' cmd='setparam MAX_FLUX_LOG maximum(LOG_FLUX)' out=max_log_flux_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables, adding a column 'LOG_ABS_FLUX' calculated as $\\log_{10}(\\text{abs}(\\text{FLUX}) + 1)$ to handle near-zero values safely.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol LOG_ABS_FLUX \"log10(abs(FLUX) + 1)\"' out=robust_log_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_ABS_FLUX log10(abs(FLUX) + 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Visualize proper motion vectors (PMRA, PMDEC in mas/yr) colored by the logarithm of magnitude (MAG), using the 'plasma' map.",
        "response": "stilts plot2sky in=pm.fits layer=skyvector lon=RA lat=DEC dlon=PMRA dlat=PMDEC unit=mas shading=aux aux=MAG auxfunc=log auxmap=plasma out=log_mag_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine tables, adding a column 'WEIGHT_KG' which is the expression 'MASS * 0.453592' (assuming input mass is in pounds).",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='addcol WEIGHT_KG \"MASS * 0.453592\"' out=weight_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '0.453592'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol WEIGHT_KG MASS * 0.453592\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '0.453592'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot markers, forcing the scale bar visibility off.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC scalebar=false out=no_scalebar_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a light curve from an array column `FLUX_VALUES` vs a generated time axis.",
        "response": "stilts plot2plane in=lightcurve.fits layer=lines ys=FLUX_VALUES",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"FLUX_VALUES\"\n    (The name \"FLUX_VALUES\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Filter rows to keep only those where the proper motion is non-zero, using proper motion vector magnitude.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"hypot(PMRA, PMDEC) != 0.0\"' out=nonzero_pm.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '!=' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) != 0.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '!=' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a new column that gives the number of hours since the Unix epoch for the given 'TIME_UNIX' column (seconds).",
        "response": "stilts tpipe in=time_data.fits cmd='addcol HOURS_SINCE \"TIME_UNIX / 3600.0\"' out=time_hours.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HOURS_SINCE TIME_UNIX / 3600.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Simulate resolving names using an external service by adding columns for the resolved RA and DEC.",
        "response": "stilts tpipe in=objects.fits cmd='addresolve NAME RA_RESOLVED DEC_RESOLVED' out=resolved_objects.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve the top 5 results from the Subaru Suprime-Cam data service and obtain only the output table's metadata (column definitions).",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/spcam adql='SELECT TOP 5 * FROM hsc_v3.point' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the XMM-Newton data and catalogues service for 5 ObsCore records and output the resulting table metadata only.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT TOP 5 * FROM ivoa.ObsCore' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw a set of filled circles using the area layer, applying transparency proportional to density (opaque=100).",
        "response": "stilts plot2sky in=targets.fits layer=area area='array(RA, DEC, 0.01)' areatype=CIRCLE polymode=fill shading=transparent opaque=100 out=circles_transp100.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"array(RA, DEC, 0.01)\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column that contains a reference to the FITS file itself, using the param$in value.",
        "response": "stilts tpipe in=input.fits cmd='addcol FITS_REFERENCE param$in' out=with_ref.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match T1 and T2 using 3D spherical polar coordinates (sky3d). T1 radial distance is in light years (LY). Convert LY to Mpc before matching (1 Mpc tolerance).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='replacecol LY LY/3.26156e6' in2=T2.fits matcher=sky3d params=1 values1='RA DEC LY' values2='RA DEC DIST_MPC' out=ly_to_mpc_3d.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Use the Chandra X-ray Observatory Data Archive TAP service to count the total number of tables available in its TAP_SCHEMA.",
        "response": "stilts tapquery tapurl=https://cda.harvard.edu/cxctap adql='SELECT COUNT(*) FROM TAP_SCHEMA.tables' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to select rows where `FLAG_A` OR `FLAG_B` is set. These are bitmask columns, so I need to check bit 3 (value 8).",
        "response": "stilts tpipe in=flags.fits cmd='select \"hasBit(FLAG_A,3) || hasBit(FLAG_B,3)\"' out=flagged_objects.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '||' 'hasBit(FLAG_B,3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(FLAG_A,3) || hasBit(FLAG_B,3)\n\nUsage: select <expr>\n    (Unused arguments: '||' 'hasBit(FLAG_B,3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 201.2757 and latitude -28.3398. Please use a search radius of 0.4218 degrees. Save the results to a csv file called query_results_133.csv.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=201.2757 lat=-28.3398 radius=0.4218 omode=out ofmt=csv out=query_results_133.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match T_A and T_B. T_A X coordinate is derived from log10(FLUX). Match on 1D log flux (0.01 tolerance).",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='replacecol LOG_FLUX log10(FLUX)' in2=T_B.fits matcher=1d params=0.01 values1=LOG_FLUX values2=LOG_FLUX out=log_flux_1d_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'ERROR_Q' containing the quadrature sum of 'ERR1' and 'ERR2'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q \"hypot(ERR1, ERR2)\"' out=quad_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ERR2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q hypot(ERR1, ERR2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'ERR2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a parameter 'MAX_Z' with the maximum value of the column 'Z_SPEC'.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='setparam MAX_Z maximum(Z_SPEC)' out=max_z_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch five FITS files exactly on 'ID'. Sort the final table by 'ID' ascending.",
        "response": "stilts tmatchn nin=5 multimode=pairs matcher=exact values1=ID values2=ID values3=ID values4=ID values5=ID in1=F1.fits in2=F2.fits in3=F3.fits in4=F4.fits in5=F5.fits ocmd='sort ID' out=five_way_exact_sort.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add a column 'TIME_STRING' rounding 'TIME_MJD' to the nearest integer and converting it to a string.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_STRING toString(toLong(round(TIME_MJD)))' out=time_string.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate observation data from OBS_A.fits and OBS_B.fits. Only retain the columns whose names start with 'PM' in both inputs.",
        "response": "stilts tcatn nin=2 in1=OBS_A.fits icmd1='keepcols PM*' in2=OBS_B.fits icmd2='keepcols PM*' out=pm_columns_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read a CSV file where the header guessing should be explicitly forced to assume the **first line is a header**.",
        "response": "stilts tcopy in=header_guess.csv ifmt='csv(header=true)' out=forced_header.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine multiple ECSV files that have been sorted by 'RA' in descending order.",
        "response": "stilts tcatn nin=2 ifmt1=ecsv in1=e1.ecsv ifmt2=ecsv in2=e2.ecsv ocmd='sort -down RA' out=ecsv_sorted_down.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q50_1350PC' containing the median distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q50_1350PC \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.5)\"' out=median_dist_1350pc_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q50_1350PC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find resources in the European JWST Archive TAP around Galactic L=45, B=-1, using 0.0002 radians.",
        "response": "stilts cone serviceurl=https://jwst.esac.esa.int/server/tap lon=45.0 lat=-1.0 radius='radiansToDegrees(0.0002)' skysys=galactic out=jwst_rad_gal.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"radiansToDegrees(0.0002)\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a column containing the squared value of the hyperbolic cosine of PMRA.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PMRA_COSH_SQ square(cosh(PMRA))' out=pmra_cosh_sq.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate the footprint of objects where `FLAG_A` OR `FLAG_B` is false.",
        "response": "stilts pixfoot in=flagged_data.fits icmd='select \"!(FLAG_A || FLAG_B)\"' out=no_flags_set.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '||' 'FLAG_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !(FLAG_A || FLAG_B)\n\nUsage: select <expr>\n    (Unused arguments: '||' 'FLAG_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine two FITS files, then transpose the resulting table (rows become columns).",
        "response": "stilts tcatn nin=2 in1=data_rows.fits in2=more_rows.fits ocmd='transpose' out=transposed_table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Assert that the current version of STILTS being used is greater than 3.0.",
        "response": "stilts tpipe in=data.fits cmd='assert \"param$stilts.version > 3.0\"' out=version_checked.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert param$.version > 3.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '3.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw two independent XY error plots (xyerror layer) on the same graph, one red and one blue.",
        "response": "stilts plot2plane layer_r=xyerror in_r=data1.fits x_r=X y_r=Y xerrhi_r=XE yerrhi_r=YE color_r=red layer_b=xyerror in_b=data2.fits x_b=X y_b=Y xerrhi_b=XE yerrhi_b=YE color_b=blue out=dual_xyerror.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T1 and T2. T1 is a simulated sky catalog (:skysim:1e5). Use best match for T2 from T1 (best2).",
        "response": "stilts tmatch2 in1=:skysim:1e5 in2=T2.fits matcher=sky params=2 values1='ra dec' values2='RA DEC' find=best2 out=simulated_best2_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Search the MAST PanSTARRS DR1 TAP service around RA 120, Dec 0, with a radius of 200 mas, adding a new column 'LOG_PM' based on existing proper motion columns.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 lon=120.0 lat=0.0 radius='200.0 / 3600000.0' ocmd='addcol LOG_PM log10(PMRA * PMRA + PMDEC * PMDEC)' out=ps1dr1_logpm.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"200.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot error bars in both X and Y directions, hiding the central markers (hide_mark=true is the old way; here we omit the mark layer).",
        "response": "stilts plot2plane in=errors.fits layer=xyerror x=X y=Y xerrhi=EX yerrhi=EY out=no_central_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find all table schemas in the KIS Science Data Centre TAP service, running synchronously, and output the row count.",
        "response": "stilts tapquery tapurl=http://dachs.sdc.leibniz-kis.de/tap adql='SELECT COUNT(*) FROM TAP_SCHEMA.schemas' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a VOTable to Parquet, using **LZ4_RAW** compression.",
        "response": "stilts tcopy in=v.vot ofmt='parquet(compression=lz4_raw)' out=lz4_parq.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Draw lines connecting pairs of points (link2 layer), coloring them based on the auxiliary magnitude MAG, using the 'cubehelix' map.",
        "response": "stilts plot2sky in=pairs.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 aux=MAG auxmap=cubehelix out=aux_cubehelix_links.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Upload a local table to MAST HSCv3, filtering the uploaded table to include only bright sources (F606W < 20) before the crossmatch occurs.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT t.*, u.ID FROM hsc_v3.point AS t JOIN TAP_UPLOAD.T AS u ON t.hst_id = u.ID' nupload=1 upload1=local_cat.fits upname1=T ucmd1='select \"F606W_MAG < 20\"' out=hsc_upload.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select F606W_MAG < 20\n\nUsage: select <expr>\n    (Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "I have three tables `a.fits`, `b.fits`, `c.fits`. I want to find all rows in `a.fits` that have a match in `b.fits`, irrespective of whether they match `c.fits`.",
        "response": "stilts tmatchn nin=3 multimode=pairs iref=1 in1=a.fits in2=b.fits in3=c.fits matcher=sky params=1 values1='ra dec' values2='ra dec' values3='ra dec' join1=match join2=match out=a_b_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine tables and enforce that the resulting table is written in FITS column-oriented format.",
        "response": "stilts tcat in='a.fits b.fits' ofmt=colfits out=combined.colfits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a point MOC, but drop the column containing the position angle in the output table metadata before writing the file.",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' out=no_pa_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find objects around RA 90, Dec 15, using a radius calculated as 1 degree divided by 50, and ensure no output file is written (discard mode).",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=90.0 lat=15.0 radius='1.0 / 50.0' omode=discard",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 50.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot a scatter plot with each point colored by its row index.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=aux aux=$0",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge four tables (G1-G4.fits). Only output the final result to standard output in plain text format.",
        "response": "stilts tcatn nin=4 in1=G1.fits in2=G2.fits in3=G3.fits in4=G4.fits ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate tables, and then calculate the standard deviation of the column 'TEFF' for the combined data.",
        "response": "stilts tcat in='s1.fits s2.fits' ocmd='keepcols TEFF' omode=stats ocmd='keepcols ucd$stat.stdev'",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve 10 VSA catalogue sources and locally calculate a new column J_H_COLOR from existing J_MAG and H_MAG columns using a post-processing command.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/vsa adql='SELECT TOP 10 J_MAG, H_MAG FROM vsa.catalogue' ocmd='addcol J_H_COLOR \"J_MAG - H_MAG\"' out=vsa_color.fits",
        "error": "Error: Unused arguments: '-' 'H_MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol J_H_COLOR J_MAG - H_MAG\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'H_MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the input table to exclude null RA values before creating a MOC for 5 arcminute radii.",
        "response": "stilts pixfoot in=dirty_data.fits icmd='select !NULL_RA' ra=RA dec=DEC radius='5.0 / 60.0' out=clean_5am.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Crossmatch four tables in group mode, excluding rows from the input table T2 that were matched.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=sky params=2 in1=T1.fits in2=T2.fits join2=nomatch in3=T3.fits in4=T4.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' out=T2_unmatched_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Run a general cone search on the Euclid TAP around RA 40, Dec 5, with a search radius calculated as 1 degree divided by 40.",
        "response": "stilts cone serviceurl=https://eas.esac.esa.int/tap-server/tap lon=40.0 lat=5.0 radius='1.0 / 40.0' out=euclid_div_rad.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 40.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Pair match T_MAIN against T_SUPP1, T_SUPP2. Calculate the mean of the magnitudes (MAG) from T_MAIN, T_SUPP1, and T_SUPP2 in the output.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T_MAIN.fits in2=T_SUPP1.fits in3=T_SUPP2.fits fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 ocmd='addcol AVG_MAG (MAG_1+MAG_2+MAG_3)/3' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=avg_mag_3way.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "What's the command to get a list of all column names from `complex_table.fits`?",
        "response": "stilts tpipe in=complex_table.fits cmd='meta Name' ofmt=text",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a FITS MOC from a simulated catalog of 20 million stars, but use a sparse sample for speed.",
        "response": "stilts pixfoot in=:skysim:20_000_000 icmd='every 1000' ra=ra dec=dec out=sim_20M_sparse.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Copy the second table extension from 'multi.fits' and convert it to ECSV format.",
        "response": "stilts tcopy in=multi.fits#2 out=ext2.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Submit a lengthy asynchronous job to the ESA Euclid archive, allowing it a maximum runtime of two hours (7200 seconds).",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore WHERE obs_collection = ''Euclid''' maxrec=1000000 executionduration=7200 out=euclid_long_query.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC for circles whose radius is `(ERR_A + ERR_B + ERR_C)/3.0`.",
        "response": "stilts pixfoot in=error_terms.fits radius='(ERR_A+ERR_B+ERR_C)/3.0' out=mean_error_term_radius.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Merge two tables, T_GALS and T_QSOS. T_GALS requires conversion of 'FLUX_MILIJY' to Janskys before joining.",
        "response": "stilts tcatn nin=2 in1=T_GALS.fits icmd1='replacecol FLUX_JY \"FLUX_MILIJY / 1000.0\"' in2=T_QSOS.fits out=flux_normalized.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_JY FLUX_MILIJY / 1000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine three tables. The resulting table must be sorted by 'TIME' descending, and then output as an ECSV file.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits in3=T3.fits ocmd='sort -down TIME' ofmt=ecsv out=time_sorted.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Filter rows to keep only those where the integer column 'STATUS' has bit 1 (0x02) set.",
        "response": "stilts tpipe in=flags.fits cmd='select \"hasBit(STATUS, 1)\"' out=bit_1_set.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(STATUS, 1)\n\nUsage: select <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "How do I specify the query language for my TAP query?",
        "response": "You can use the `language` parameter. For example, `language=ADQL-2.0`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the ARI Gaia service for 50 sources near a specific coordinate (RA 200, Dec 5) within a 0.05 degree radius.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 50 * FROM gaiadr3.gaia_source WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 200.0, 5.0, 0.05))' out=ari_cone_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw a line fit (linearfit) weighted by the reciprocal of the square of the ERROR column (1/(ERROR*ERROR)).",
        "response": "stilts plot2plane in=data.fits layer=linearfit x=X y=Y weight='1/(ERROR*ERROR)' out=weighted_fit.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine tables and then add a column 'LOG_ABS_Z' calculated as $\\log_{10}(|\\text{REDSHIFT}| + 1)$ to handle near-zero values.",
        "response": "stilts tcat in='z1.fits z2.fits' ocmd='addcol LOG_ABS_Z \"log10(abs(REDSHIFT) + 1)\"' out=robust_log_z.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_ABS_Z log10(abs(REDSHIFT) + 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a MOC from the RA and DEC columns in my_catalog.fits, using the default resolution and output format.",
        "response": "stilts mocshape in=my_catalog.fits shape=point coords='array(RA, DEC)' out=catalog_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a plot from an ECSV file.",
        "response": "stilts plot2plane in=my_data.ecsv ifmt=ecsv layer=mark x=col_A y=col_B",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"col_A\"\n    (The name \"col_A\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create an order 4 MOC for 1 arcminute circles and save the result as standard ASCII text to standard output.",
        "response": "stilts mocshape in=input.fits shape=circle coords='array(RA, DEC, 1.0 / 60.0)' order=4 mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query VizieR CDSARC for a sample of the 2MASS PSC and enforce HTTP compression for the data transfer.",
        "response": "stilts tapquery tapurl=http://cdsarc.cds.unistra.fr/saadavizier.tap/tap adql='SELECT TOP 100 ra, dec FROM \"II/246/out\"' compress=true out=vizier_compressed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate tables, explicitly selecting only the final table extension from each multi-extension FITS input.",
        "response": "stilts tcat in='m1.fits#-1 m2.fits#-1' out=last_extension_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge two tables, and then eliminate adjacent duplicate rows based on the 'UID' column.",
        "response": "stilts tcat in='u1.fits u2.fits' ocmd='sort UID; uniq UID' out=uid_unique.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Find objects from catalog1.fits that are NOT in catalog2.fits, based on a 1.5 arcsecond sky match. Coords are RAJ2000 and DEJ2000.",
        "response": "stilts tmatch2 in1=catalog1.fits in2=catalog2.fits matcher=sky params=1.5 values1='RAJ2000 DEJ2000' values2='RAJ2000 DEJ2000' join=1not2 out=unmatched_from_cat1.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Extract the first 5 elements of the array column 'DATA_ARRAY' and make them a new array column 'SUB_ARRAY'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol SUB_ARRAY \"slice(DATA_ARRAY, 0, 5)\"' out=sliced_array.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0,' '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SUB_ARRAY slice(DATA_ARRAY, 0, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0,' '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate tables, retaining only the first 50 rows of the combined dataset.",
        "response": "stilts tcat in='t1.fits t2.fits' ocmd='head 50' out=top_50_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Please match `cat_a.fits` and `cat_b.fits`. I want to keep all rows from `cat_a`, and include matched data from `cat_b` where available. Use a 4 arcsec radius.",
        "response": "stilts tmatch2 in1=cat_a.fits in2=cat_b.fits matcher=sky params=4 values1='RA DEC' values2='RA DEC' join=all1 out=cat_a_with_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch five tables using sky position (3 arcsec). Add a column 'InputID' indicating which group the match belongs to.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=3 values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA DEC' in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits in5=C5.fits ocmd='addcol InputID GroupID' out=group_id_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (group mode). Add a column 'MAX_FLUX_DIFF' in the output showing the maximum absolute difference in FLUX values across all members of the group.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_1 suffix2=_2 suffix3=_3 ocmd='addcol MAX_FLUX_DIFF \"maximum(abs(FLUX_1-FLUX_2), abs(FLUX_1-FLUX_3), abs(FLUX_2-FLUX_3))\"' out=max_flux_diff_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'abs(FLUX_1-FLUX_3),' 'abs(FLUX_2-FLUX_3))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAX_FLUX_DIFF maximum(abs(FLUX_1-FLUX_2), abs(FLUX_1-FLUX_3), abs(FLUX_2-FLUX_3))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'abs(FLUX_1-FLUX_3),' 'abs(FLUX_2-FLUX_3))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the XMM-Newton catalogue TAP around a specific location and filter the resulting table to remove rows where the 'FLAG' column is non-zero.",
        "response": "stilts cone serviceurl=https://nxsa.esac.esa.int/tap-server/tap lon=250.0 lat=-60.0 radius=0.05 ocmd='select FLAG==0' out=xmm_clean.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a local VOTable to FITS, explicitly specifying the input format as VOTable.",
        "response": "stilts tcopy in=local.vot ifmt=votable out=local_copy.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Calculate the lookback time (Gyr) for redshift Z using standard cosmology.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol LOOKBACK_TIME \"lookbackTime(Z, 70.0, 0.3, 0.7)\"' out=galaxies_lookback.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOOKBACK_TIME lookbackTime(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the top 5 ASKAP Science Data Archive (CASDA) ObsCore entries that used the 'continuum' data product type, and stream the results directly to TOPCAT.",
        "response": "stilts tapquery tapurl=https://casda.csiro.au/casda_vo_tools/tap adql='SELECT TOP 5 * FROM obs_core WHERE dataproduct_type = ''continuum''' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). T1 contains proper motions (PMRA, PMDEC) and requires a filter to keep only objects with PM > 5 mas/yr before matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=2 in1=T1.fits icmd1='select \"hypot(PMRA, PMDEC) > 5\"' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=high_pm_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 5\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a table, convert the string column 'ERROR_STR' to a double array using `parseDoubles`, then calculate the mean error for each array.",
        "response": "stilts tpipe in=error_log.fits cmd='addcol ERROR_ARRAY parseDoubles(ERROR_STR)' cmd='addcol MEAN_ERROR mean(ERROR_ARRAY)' out=mean_errors.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I want to see the sky fraction covered by my `s_region` column.",
        "response": "stilts mocshape in=my_table.fits shape=stc-s coords=s_region mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC from the positions in a Parquet file.",
        "response": "stilts mocshape in=data.parquet shape=point coords='array(ra,dec)' out=parquet_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a MOC for polygons defined in an array column, but only if the polygon has exactly 4 vertices.",
        "response": "stilts mocshape in=polygons.fits icmd='select size(VERTICES)==8' shape=polygon coords=VERTICES out=quadrilaterals.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Copy a Parquet file and output it to standard output as a raw data stream (no formatting).",
        "response": "stilts tcopy in=data.parquet ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Can you generate a MOC for my data, using FK4 coords `RA_B1950` and `DEC_B1950`?",
        "response": "stilts pixfoot in=my_data.fits icmd='addskycoords fk4 fk5 RA_B1950 DEC_B1950 RA_J2000 DEC_J2000' ra=RA_J2000 dec=DEC_J2000 out=fk4_converted_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Convert a string column of JSON arrays named 'VERTICES' into an array of doubles.",
        "response": "stilts tpipe in=polygons.fits cmd='replacecol VERTICES jsonToDoubles(VERTICES)' out=numeric_polygons.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate two tables, viewing the final table in the Swing GUI window.",
        "response": "stilts tcat in=t1.fits in=t2.fits omode=gui",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Run a query and select only rows where the magnitude is within a specific range (15 to 18).",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=45.0 lat=-45.0 radius=0.02 ocmd='select \"MAG > 15.0 && MAG < 18.0\"' out=mag_range.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '15.0' '&&' 'MAG' '<' '18.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 15.0 && MAG < 18.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '15.0' '&&' 'MAG' '<' '18.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plotting from a simulated loop scheme ($x=i, y=i^2$) in a simple mark layer.",
        "response": "stilts plot2plane in=:loop:100 layer=mark x='i' y='i*i' out=loop_square.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"i\"\n    (The name \"i\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve MAST HSCv3 sources with G-band magnitude (`F606W_MAG`) between 20 and 21, limiting results to 100 records.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT * FROM hsc_v3.point WHERE F606W_MAG BETWEEN 20 AND 21' maxrec=100 out=hsc_mid_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create the MOC for a list of HEALPix pixels given by order and index columns.",
        "response": "stilts mocshape in=pixels.fits shape=uniq coords='mocUniq(ORDER_COL, INDEX_COL)' out=pixels.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column with the hyperbolic cosine of 'TEMPERATURE'.",
        "response": "stilts tpipe in=data.fits cmd='addcol TEMP_COSH cosh(TEMPERATURE)' out=hyperbolic_temp.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate `table_with_arrays.fits` and `more_arrays.fits`. Beforehand, explode all array columns in each table into scalar columns.",
        "response": "stilts tcat in=table_with_arrays.fits in=more_arrays.fits icmd=explodeall out=scalar_table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the PADC Heliophysics server for table columns and save the output in FITS format.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.columns' ofmt=fits out=helio_columns.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Apply a simple magnitude correction formula to the 'MAG_G' column in place.",
        "response": "stilts tpipe in=phot.fits cmd='replacecol MAG_G \"MAG_G - 0.03 * (MAG_G - MAG_R)\"' out=phot_corrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '0.03' '*' '(MAG_G' '-' 'MAG_R)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_G MAG_G - 0.03 * (MAG_G - MAG_R)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '0.03' '*' '(MAG_G' '-' 'MAG_R)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine `sources.csv` and `targets.csv`. Before combining, fix the column names in each to be syntactically convenient.",
        "response": "stilts tcat ifmt=csv in=sources.csv in=targets.csv icmd=fixcolnames out=clean_names.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Calculate the difference between the maximum and minimum values of the array column 'TEMP_READINGS'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol TEMP_RANGE \"maximum(TEMP_READINGS) - minimum(TEMP_READINGS)\"' out=temp_range.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'minimum(TEMP_READINGS)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol TEMP_RANGE maximum(TEMP_READINGS) - minimum(TEMP_READINGS)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'minimum(TEMP_READINGS)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match A and B (exact ID). A columns use numerical suffix '_1'. B columns use '_2'. Then, keep only the IDs and a new column 'Sum_A_B' = A.VAL + B.VAL.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID fixcols=all suffix1=_1 suffix2=_2 ocmd='addcol Sum_A_B \"VAL_1+VAL_2\"; keepcols \"ID_1 ID_2 Sum_A_B\"' out=summed_values_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ID_2' 'Sum_A_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols ID_1 ID_2 Sum_A_B\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ID_2' 'Sum_A_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Convert a VOTable to a FITS file, forcing the inclusion of the VOTable metadata in the Primary HDU (FITS-plus).",
        "response": "stilts tcopy in=meta.vot ofmt=fits-plus out=fits_plus_meta.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q1' containing the 25th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q1 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.25)\"' out=q1_dist_1350pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.25)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q1 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.25)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.25)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the ESO TAP_OBS service for raw VIRCAM data, ensuring the query uses HTTP compression.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT ra, dec, instrument_name FROM raw.vircam WHERE instrument_name = ''VIRCAM''' compress=true out=compressed_query.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find objects in T_MAIN that are unmatched in T_SUPP. Add a score column 'UNMATCHED_SEP' to show the minimum separation distance to any object in T_SUPP, even if it exceeds the tolerance.",
        "response": "stilts tmatch2 in1=T_MAIN.fits in2=T_SUPP.fits matcher=sky params=180000 values1='RA DEC' values2='RA DEC' find=best1 join=1not2 scorecol=UNMATCHED_SEP out=unmatched_with_min_sep.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge ASCII tables where the data is fixed-width and space-separated (ifmt=ascii).",
        "response": "stilts tcat ifmt=ascii in='fw1.txt fw2.txt' out=fixed_width_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Submit an ADQL query to VizieR (CDSARC endpoint) to find all sources in the 2MASS Point Source Catalog (II/246/out) and calculate the final checksum without saving the table.",
        "response": "stilts tapquery tapurl=http://cdsarc.cds.unistra.fr/saadavizier.tap/tap adql='SELECT * FROM \"II/246/out\"' maxrec=1000 omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a MOC for all positions in `cat_a.fits` and `cat_b.csv` combined.",
        "response": "Lets first merge the catalogues; stilts tcatn nin=2 in1=cat_a.fits icmd1='keepcols \"RA DEC\"' in2=cat_b.csv ifmt2=csv icmd2='keepcols \"RA DEC\"' out=combined.fits; Now we can create the moc; stilts mocshape in=combined.fits shape=point coords='array(RA,DEC)' out=combined_ab.moc.fits",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: mocshape: not found\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Convert a FITS file to a VOTable, but use the compact BINARY2 encoding.",
        "response": "stilts tcopy in=data.fits out=data.vot ofmt='votable(format=BINARY2)'",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I have a catalog where each object has a positional error `pos_err_arcsec`. How do I create a MOC representing the 3-sigma error circles?",
        "response": "stilts pixfoot in=catalog_with_errors.fits radius='pos_err_arcsec * 3 / 3600.' out=3sigma_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Read a table, convert the proper motion columns (PMRA, PMDEC) from mas/yr to km/s at 1 kpc distance (using distance=1000/PLX), then remove the original PM columns.",
        "response": "stilts tpipe in=gaia_abundances.fits cmd='addcol RV_RA \"(PMRA * 4.740470446 / 1000) * (1000/PLX)\"' cmd='addcol RV_DEC \"(PMDEC * 4.740470446 / 1000) * (1000/PLX)\"' cmd='delcols \"PMRA PMDEC\"' out=rv_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '4.740470446' '/' '1000)' '*' '(1000/PLX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RV_RA (PMRA * 4.740470446 / 1000) * (1000/PLX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '4.740470446' '/' '1000)' '*' '(1000/PLX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find resources around Ecliptic coordinates (Lon=50, Lat=10) with a 0.3 degree radius.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=50.0 lat=10.0 radius=0.3 skysys=ecliptic out=ecliptic_search.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T2 has an array column 'FLUX_VEC'. Replace it with the mean of the array values before matching on position + mean flux (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='1 0.1' in1=T1.fits in2=T2.fits icmd2='addcol FLUX_MEAN mean(FLUX_VEC)' in3=T3.fits values1='RA DEC FLUX_MEAN' values2='RA DEC FLUX_MEAN' values3='RA DEC FLUX_MEAN' out=array_mean_match_3way.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge three ASCII tables, using a filter to rename all columns to be uppercase before concatenation.",
        "response": "stilts tcat ifmt=ascii in='t1.txt t2.txt t3.txt' icmd='colmeta -name toUpperCase($1) $1' out=uppercase_cols.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the Pollux Synthetic Spectra service, requesting non-ADQL language VQL, for tap_schema tables.",
        "response": "stilts tapquery tapurl=https://pollux.oreme.org/vo/datalink/speconvol? adql='SELECT * FROM tap_schema.tables' language=VQL out=pollux_tables.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Select only objects where the proper motion in RA (PMRA) is within two times its error (PMRA_ERR).",
        "response": "stilts tpipe in=gaia.fits cmd='select \"abs(PMRA) < 2.0 * PMRA_ERR\"' out=clean_pm.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '2.0' '*' 'PMRA_ERR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(PMRA) < 2.0 * PMRA_ERR\n\nUsage: select <expr>\n    (Unused arguments: '<' '2.0' '*' 'PMRA_ERR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T2 only includes the first 1000 sources (head 1000).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=3 in1=T_REF.fits in2=T2.fits icmd2='head 1000' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=t2_top_1k_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Pair match three tables (t1 ref). T2's coordinates (RA, DEC) are in radians. Convert them to degrees before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=t1.fits in2=t2.fits icmd2='replacecol RA radiansToDegrees(RA); replacecol DEC radiansToDegrees(DEC)' in3=t3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=rad_converted_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need the output of a cone search in compressed FITS format, named output.fits.gz.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=180.0 lat=60.0 radius=0.01 out=output.fits.gz ofmt=fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge source tables S1 and S2. Output the resulting data structure metadata, including details on VOTable COOSYS references.",
        "response": "stilts tcatn nin=2 in1=S1.fits in2=S2.fits ocmd='meta CoosysSystem CoosysEpoch' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create an animation of the scatter plot, where the YMAX range changes from 100 to 10 in 10 steps.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y ymin=0 animate=:loop:10 acmd='addcol ymax \"100.0 - $0*9.0\"' out=y_zoom_movie.gif",
        "chat.jar": "fixed",
        "error": "java.lang.IllegalStateException\n\tat uk.ac.starlink.table.EmptyRowSequence.getRow(EmptyRowSequence.java:57)\n\tat uk.ac.starlink.ttools.filter.AddColumnsTable$1.getRow(AddColumnsTable.java:148)\n\tat uk.ac.starlink.ttools.plot2.task.AbstractPlot2Task$Row0Table.<init>(AbstractPlot2Task.java:3055)\n\tat uk.ac.starlink.ttools.plot2.task.AbstractPlot2Task.createExecutable(AbstractPlot2Task.java:574)\n\tat uk.ac.starlink.ttools.task.LineInvoker.invoke(LineInvoker.java:285)\n\tat CommandValidator.checkInvocation(CommandValidator.java:46)\n\tat CommandValidator.main(CommandValidator.java:66)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot error ellipses derived from correlation, forcing a size scale of 1000 pixels (autoscale=false, scale=1000).",
        "response": "stilts plot2sky in=errors.fits layer=skycorr lon=RA lat=DEC lonerr=EL laterr=EB corr=C unit=arcsec autoscale=false scale=1000 out=fixed_scale_corr.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Crossmatch T1 and T2 using position and magnitude (sky*1d). T1 magnitude is null if its magnitude is 99.99. Replace 99.99 with null in T1 before matching.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='badval 99.99 MAG' in2=T2.fits matcher=sky*1d params='1 0.2' values1='RA DEC MAG' values2='RA DEC MAG' out=T1_badval_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Upload local catalogue 'data.fits' to the Gaia TAP service and filter the upload before sending, ensuring only rows where G magnitude is brighter than 17 are included in the server's temporary table.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT g.* FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.D AS u ON g.source_id = u.source_id' nupload=1 upload1=data.fits upname1=D ucmd1='select \"G < 17\"' out=gaia_filtered_upload.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '17'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G < 17\n\nUsage: select <expr>\n    (Unused arguments: '<' '17'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a coverage map, but sort the input table by magnitude first (though sorting doesn't affect the MOC output).",
        "response": "stilts pixfoot in=data.fits icmd='sort MAGNITUDE' ra=RA dec=DEC out=sorted_input.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Convert a local FITS file to a VOTable, ensuring the output document does **not** include the current date stamp comment.",
        "response": "stilts tcopy in=input.fits ofmt='votable(date=false)' out=undated.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Concatenate tables, and then run an expression check to assert that all magnitudes are positive (MAG > 0).",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='assert \"MAG > 0\"' out=positive_mag_assert.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the GAVO Data Center around Ecliptic Lon 270, Lat 10, using a radius of $1.0$ arcsecond, and output a CSV file.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=270.0 lat=10.0 radius='1.0 / 3600.0' skysys=ecliptic ofmt=csv out=ecliptic_1as.csv",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge tables, then randomly permute the rows of the combined table using a fixed seed of 42.",
        "response": "stilts tcat in='sets*.fits' ocmd='shuffle -seed 42' out=shuffled_fixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Match T_ref against T_sup. T_sup positions are in FK4 B1950. Convert T_sup positions to ICRS J2000 before matching.",
        "response": "stilts tmatch2 in1=T_ref.fits in2=T_sup.fits icmd2='addskycoords fk4 icrs RA_B1950 DEC_B1950 RA DEC' matcher=sky params=3 values1='RA DEC' values2='RA DEC' out=fk4_preproc_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve the top 5 tables from the ESO Catalogue TAP service and format the output as a basic HTML table.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT TOP 5 * FROM TAP_SCHEMA.tables' ofmt=html out=eso_tables.html",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a Parquet file, explicitly enabling **dictionary encoding** in the output for better compression efficiency.",
        "response": "stilts tcopy in=data.parquet ofmt='parquet(usedict=true)' out=dict_output.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a parameter named 'PIXEL_SCALE' using a string value '0.2 arcsec/pixel'.",
        "response": "stilts tpipe in=data.fits cmd='setparam PIXEL_SCALE \"0.2 arcsec/pixel\"' out=scale_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match three tables T1, T2, T3 based on elliptical regions (skyellipse, 10 arcsec scale). Parameters RA, DEC, A_MAJ, B_MIN, PA.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=skyellipse params=10 values1='RA DEC A_MAJ B_MIN PA' values2='RA DEC A_MAJ B_MIN PA' values3='RA DEC A_MAJ B_MIN PA' in1=T1.fits in2=T2.fits in3=T3.fits out=elliptical_pair_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1 (ref) against T2, T3. Include all T1 rows, matched or not. Only include T2 and T3 rows that matched T1.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits join1=always in2=T2.fits join2=match in3=T3.fits join3=match values1='RA DEC' values2='RA DEC' values3='RA DEC' out=T1_left_T2T3_inner.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert a FITS file to VOTable, ensuring the VOTable output writes a datestamp comment (the default behavior).",
        "response": "stilts tcopy in=input.fits ofmt='votable(date=true)' out=dated.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Group match three catalogs (C1, C2, C3). Only output groups that contain sources from C1 or C2, but NOT C3.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=C1.fits in2=C2.fits in3=C3.fits join3=nomatch ocmd='select \"GroupSize > 0\"' out=C1_or_C2_not_C3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GroupSize > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the MAST PanSTARRS DR1 catalog for a sample set and only retrieve the resulting table's metadata description.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 1 * FROM dbo.detection_object' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers at the position of the first vertex (lon1, lat1) and the nominal center of polygon regions (central layer for polygon).",
        "response": "stilts plot2sky in=polys.fits layer_m=mark lon_m=LON1 lat_m=LAT1 layer_c=central area_c=VERTICES areatype_c=POLYGON out=poly_vertex_center.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"LON1\"\n    (The name \"LON1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a point MOC and ensure the output filename ends with .fits.gz to enable compression.",
        "response": "stilts mocshape in=comp_test.fits shape=point coords='array(RA, DEC)' out=output_moc.fits.gz",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Concatenate four tables, keeping the original filename in a provenance column named 'SourceFile' for the final output.",
        "response": "stilts tcatn nin=4 in1=dir/d1.fits in2=dir/d2.fits in3=dir/d3.fits in4=dir/d4.fits loccol=SourceFile out=full_provenance.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a MOC from my `pds4_data.xml` file, which is in PDS4 format.",
        "response": "stilts pixfoot in=pds4_data.xml ifmt=pds4 out=pds4_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Retrieve astronomical data around 12h 0m 0s, 0d 0m 0s (convert RA/Dec), applying a radius of 600 arcseconds.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=180.0 lat=0.0 radius='600.0 / 3600.0' out=vizier_600as.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"600.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match T1 and T2 on 2D position (X, Y). T1 position error is column ERR1, T2 error is ERR2. Use quadrature sum of errors (2d_err_q).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=2d_err_q params=1 values1='X Y ERR1' values2='X Y ERR2' out=cartesian_error_q_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "What does a negative order mean for `mocshape`?",
        "response": "The `order` parameter must be a non-negative integer between 0 and 29. A negative value is not permitted and will result in an error.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Crossmatch T1 and T2 (1 arcsec sky). T2 has a time column EPOCH in Julian Day (JD). Convert T2 to MJD before using it in a calculated output column.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='addcol MJD jdToMjd(EPOCH)' matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=dups suffix2=_2 ocmd='addcol T2_MJD MJD_2' out=t2_jd_converted_output.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match four tables using Cartesian 3D coordinates (X, Y, Z) within 10 units.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=3d params=10 values1='X Y Z' values2='X Y Z' values3='X Y Z' values4='X Y Z' in1=d1.fits in2=d2.fits in3=d3.fits in4=d4.fits out=cartesian_3d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve metadata columns from the MAST TESS Input Catalog (TIC) describing columns with 'parallax' in their name or description.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT * FROM TAP_SCHEMA.columns WHERE column_name LIKE ''%parallax%'' OR description LIKE ''%parallax%''' out=tic_parallax_meta.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a table using the CDF format, selecting a specific table extension by index #2, and save it as VOTable.",
        "response": "stilts tcopy in=data.cdf#2 ifmt=cdf out=cdf_ext2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add columns converting coordinates from Galactic (L, B) to ICRS (RA, DEC).",
        "response": "stilts tpipe in=data.fits cmd='addskycoords galactic icrs L B RA DEC' out=icrs_coords.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need to get 10000 records but the service limit is 2000. Can `tapquery` handle this?",
        "response": "No, `tapquery` submits a single ADQL query, so it is bound by the service's `maxrec` limit. You would need to split your query into multiple `tapquery` commands, for instance by breaking up the sky area, and then use `tcat` to combine the results.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge two tables, but before joining, sort both tables by 'Z' (redshift) to minimize temporary storage if the aggregation is ordered (though concatenation breaks order).",
        "response": "stilts tcat in='z1.fits z2.fits' icmd='sort Z' out=presorted_z_tcat.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "My table has two sets of corners for a bowtie shape. Can I represent this with `mocshape`?",
        "response": "Yes, for `shape=polygon`, a `NaN, NaN` pair in the coordinate array delimits distinct polygons for a single row. So you can use an expression like `coords='array(RA1,D1,RA2,D2,RA3,D3, NaN,NaN, RA4,D4,RA5,D5,RA6,D6)'`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the ESO TAP_CAT service near Galactic L=5, B=0, with a radius of 0.5 degrees, and output just the column definitions (metadata).",
        "response": "stilts cone serviceurl=http://archive.eso.org/tap_cat lon=5.0 lat=0.0 radius=0.5 skysys=galactic omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match two tables on 2D coordinates (X, Y) with anisotropic cuboid tolerances of 8 units in X and 2 units in Y.",
        "response": "stilts tmatch2 in1=D1.fits in2=D2.fits matcher=2d_cuboid params='8 2' values1='X Y' values2='X Y' out=aniso_2d_cuboid_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match two tables on 1D position (X) and 1D magnitude (M) (1d+1d) with tolerances 5 units and 0.1 mag.",
        "response": "stilts tmatch2 in1=D1.fits in2=D2.fits matcher=1d+1d params='5 0.1' values1='X M' values2='X M' out=mixed_1d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create a MOC from a table with a fixed 0.5 arcsec radius, at order 15.",
        "response": "stilts mocshape in=points.fits shape=circle coords='array(RA,DEC,0.5/3600.0)' order=15 out=hires_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Group match three tables. After matching, calculate the standard deviation of the 'FLUX' column across the matched members.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_1 suffix2=_2 suffix3=_3 ocmd='addcol FLUX_STDEV \"stdev(FLUX_1, FLUX_2, FLUX_3)\"' out=flux_stdev_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_2,' 'FLUX_3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_STDEV stdev(FLUX_1, FLUX_2, FLUX_3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_2,' 'FLUX_3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need data from VizieR TAP near 06h 30m 00s, +05d 00m 00s, converting coordinates, and using 0.01 arcminutes as the radius.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon='hmsToDegrees(6.5, 0, 0)' lat='dmsToDegrees(5.0, 0, 0)' radius='0.01 / 60.0' out=vizier_tiny_radius.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(6.5, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a column 'L_DIST_MPC' converting the lookback time (Gyr) to luminosity distance (Mpc) using an approximation.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol L_DIST_MPC \"lookbackTime(Z, 70.0, 0.3, 0.7) * 10.0\"' out=l_dist_approx.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)' '*' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol L_DIST_MPC lookbackTime(Z, 70.0, 0.3, 0.7) * 10.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)' '*' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match T_REF and T_SUPP. T_SUPP contains an array column 'FLUX_VEC'. Calculate the standard deviation of this array and use the result (STDEV_F) for a combined match (exact ID + 1D STDEV_F).",
        "response": "stilts tmatch2 in1=T_REF.fits in2=T_SUPP.fits icmd2='addcol STDEV_F stdev(FLUX_VEC)' matcher=exact+1d params='0' values1='ID STDEV_F' values2='ID STDEV_F' out=array_stdev_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "For the European HST Archive, retrieve the top 100 rows, delete the output, and only test the ADQL query's syntax.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT TOP 100 s_ra, s_dec FROM ivoa.ObsCore WHERE obs_collection = ''HST''' parse=true omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Search VizieR TAP near 03h 30m 00s, +15d 00m 00s, converting coordinates, using $0.01$ arcminutes radius.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon='hmsToDegrees(3.5, 0, 0)' lat='dmsToDegrees(15.0, 0, 0)' radius='0.01 / 60.0' out=vizier_0p01am.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(3.5, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot points with asymmetric Y error bars, defined by Y_LOW_ERR and Y_HIGH_ERR columns.",
        "response": "stilts plot2plane in=measure.fits layer=xyerror x=X y=Y yerrlo=Y_LOW_ERR yerrhi=Y_HIGH_ERR out=asym_y_error.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). T2 contains magnitude 99.0 for nulls. Replace 99.0 with null in T2 before matching T1 and T3 on position.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=1 in1=T1.fits in2=T2.fits icmd2='badval 99.0 MAG' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=T2_nulls_cleaned_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find 50 sources from MAST PanSTARRS 1 DR1 and calculate the ratio of G magnitude to R magnitude (assuming G_MEAN_MAG and R_MEAN_MAG columns exist).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 50 g_mean_mag, r_mean_mag FROM dbo.detection_object' ocmd='addcol G_R_RATIO \"g_mean_mag / r_mean_mag\"' out=ps1_ratio.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'r_mean_mag'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol G_R_RATIO g_mean_mag / r_mean_mag\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'r_mean_mag'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate a VOTable and a FITS table, ensuring the combined result is streamed as VOTable with BINARY serialization.",
        "response": "stilts tcatn nin=2 in1=data.vot in2=data.fits ofmt='votable(format=BINARY)' out=combined_binary.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert a table from FITS to LaTeX format, explicitly setting the output to be a standalone document.",
        "response": "stilts tpipe in=report.fits ofmt='latex(standalone=true)' out=report.tex",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_R_AB_V' converting Johnson R magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_R_AB_V \"MAG_R + JOHNSON_AB_V\"' out=r_ab_v_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_R_AB_V MAG_R + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find all TESS Input Catalog (TIC) sources within 0.01 degrees of the celestial equator (Dec 0) and calculate statistics only on their magnitudes.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT Tmag FROM tic.v8 WHERE ABS(dec) < 0.01' omode=stats ocmd='keepcols Tmag'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run a query and then replace all nulls in the `radial_velocity` column with -9999.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, radial_velocity FROM gaiadr3.gaia_source' ocmd='replaceval null -9999 radial_velocity'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Synchronously fetch the top 5 brightest (TMAG < 10) stars from the MAST TESS Input Catalog and save the result as a FITS file.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 5 tid, ra, dec, tmag FROM tic.v8 WHERE tmag < 10' sync=true ofmt=fits out=tic_bright_sync.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate the MOC of all objects between declination -10 and +10.",
        "response": "stilts pixfoot in=all_sky.fits icmd='select \"DEC > -10 && DEC < 10\"' out=equatorial_strip.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '-10' '&&' 'DEC' '<' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > -10 && DEC < 10\n\nUsage: select <expr>\n    (Unused arguments: '>' '-10' '&&' 'DEC' '<' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a 2D density map of RA versus DEC for a large file, using the 'density' shading mode and the 'magma' color map.",
        "response": "stilts plot2plane in=survey.fits layer=mark x=RA y=DEC shading=density densemap=magma out=magma_density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate an order 0 MOC. What would that look like?",
        "response": "An order 0 MOC represents coverage using the 12 base HEALPix pixels. It is the coarsest possible MOC. `stilts mocshape in=mycat.fits shape=point coords='array(RA,DEC)' order=0 out=order0.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Search ESA's HREDA TAP near Ecliptic Lon 90, Lat -90, using a radius of 30 arcseconds, and output the result in ECSV format.",
        "response": "stilts cone serviceurl=https://hreda.esac.esa.int/hreda-sl-tap/tap lon=90.0 lat=-90.0 radius='30.0 / 3600.0' skysys=ecliptic ofmt=ecsv out=hreda_30as.ecsv",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"30.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine table A and table B. Table A has an integer quality column 'Q' and table B has a boolean quality column 'FLAG'. Convert B's boolean column to an integer (0/1) quality column 'Q' before combining.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits icmd2='replacecol Q \"(FLAG ? 1 : 0)\"' out=quality_aligned.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '1' ':' '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol Q (FLAG ? 1 : 0)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '1' ':' '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Make a plot using the `asinh` scale for the x-axis to handle a wide dynamic range.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xscale=asinh",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a MOC (order 13) where the radius is calculated as the separation distance in degrees between RA, DEC and a fixed point (10, 20).",
        "response": "stilts pixfoot in=sep_dist.fits ra=RA dec=DEC radius='skyDistanceDegrees(RA, DEC, 10.0, 20.0)' out=sep_dist_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the ESO TAP_OBS service around Ecliptic Lon 60, Lat 0, using $0.008333$ degrees (30 arcsec), and check for integrity using checksum mode.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=60.0 lat=0.0 radius=0.008333 skysys=ecliptic omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a column 'TIME_MJD_FROM_BESSELIAN' converting Besselian Epoch to MJD.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_MJD_FROM_BESSELIAN besselianToMjd(TIME_BESSELIAN)' out=mjd_from_besselian.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve 50 rows containing table metadata from the AIP DaCHS service and save the results in a FITS file.",
        "response": "stilts tapquery tapurl=http://gavo.aip.de/tap adql='SELECT * FROM TAP_SCHEMA.tables' maxrec=50 ofmt=fits out=aip_tables_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy the remote VOTable file from 'http://archive.org/catalog.xml' and save it locally as 'local_catalog.fits'.",
        "response": "stilts tcopy in=http://archive.org/catalog.xml out=local_catalog.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query NED and locally calculate a new column 'LOG_Z' that is the base-10 logarithm of the redshift column.",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT TOP 10 obj_name, redshift FROM object WHERE redshift > 0' ocmd='addcol LOG_Z log10(redshift)' out=ned_logz.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate two tables, keeping only the final 50 rows from the first table and the first 50 rows from the second table.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='tail 50' in2=T2.fits icmd2='head 50' out=combined_slice.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XYZ_MAG' containing the magnitude of the 3D error vector (quadrature sum).",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XYZ_MAG \"hypot(ERROR_X, ERROR_Y, ERROR_Z)\"' out=xyz_error_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ERROR_Y,' 'ERROR_Z)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XYZ_MAG hypot(ERROR_X, ERROR_Y, ERROR_Z)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'ERROR_Y,' 'ERROR_Z)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Run a synchronous query on the UCL DaCHS server for a sample of tables, requesting HTTP compression for the transfer.",
        "response": "stilts tapquery tapurl=http://astroweb.projects.phys.ucl.ac.uk:8000/tap adql='SELECT TOP 10 * FROM TAP_SCHEMA.tables' sync=true compress=true out=ucl_compressed_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need the footprint for the second HDU of my FITS file `multi_data.fits`.",
        "response": "stilts mocshape in=multi_data.fits#2 shape=point coords='array(RA,DEC)' out=hdu2_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot polygon outlines defined by STC-S strings, filtering to select only regions with Area > 1.0 sq deg before plotting.",
        "response": "stilts plot2sky in=footprints.fits icmd='select \"Area > 1.0\"' layer=area area=S_REGION areatype=STC-S polymode=outline out=large_footprints.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"Area > 1.0\" (The name \"Area\" is unknown.)\n        (The name \"Area\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Count the number of entries in the PADC Maser TAP service's main catalogue table.",
        "response": "stilts tapquery tapurl=http://voparis-tap-maser.obspm.fr/tap adql='SELECT COUNT(*) FROM maser_catalog' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match four tables `t1, t2, t3, t4` using `t4` as the reference.",
        "response": "stilts tmatchn nin=4 in1=t1.fits in2=t2.fits in3=t3.fits in4=t4.fits multimode=pairs iref=4 matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' values4='ra dec' out=t4_ref_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add a column that is the square of the proper motion (PMRA_SQ + PMDEC_SQ).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_SQ \"square(PMRA) + square(PMDEC)\"' out=pm_squared.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'square(PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_SQ square(PMRA) + square(PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'square(PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read the output of a JDBC query and write the result to standard output in plain text format.",
        "response": "stilts tcopy in=':jdbc:mysql://localhost/db#SELECT ID, RA FROM objects' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine tables, filtering each input to ensure that the coordinate columns are fixed (safe) names before merging.",
        "response": "stilts tcat in='bad_col1.fits bad_col2.fits' icmd=fixcolnames out=safe_column_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Match T1, T2, T3 using sky position and R-band magnitude (sky*1d). Tolerances 1 arcsec and 0.1 mag.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky*1d params='1 0.1' values1='RA DEC R_MAG' values2='RA DEC R_MAG' values3='RA DEC R_MAG' in1=T1.fits in2=T2.fits in3=T3.fits out=sky_star_1d_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve the metadata (column definitions) for the MAST Hubble Source Catalog Version 3 (HSCv3) point source table.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT * FROM hsc_v3.point' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw a line plot with a thicker, dashed red line.",
        "response": "stilts plot2plane in=timeseries.fits layer=line x=TIME y=FLUX color=red thick=3 dash=dash",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TIME\"\n    (The name \"TIME\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate an order 9 MOC for circles with a variable radius given by the expression $1 / \text{DISTANCE}$ degrees.",
        "response": "stilts mocshape in=distance_data.fits shape=circle coords='array(RA, DEC, 1.0 / DISTANCE)' order=9 out=inv_distance_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Join table A with every other row of table B.",
        "response": "stilts tcatn nin=2 in1=table_A.fits in2=table_B.fits icmd2='every 2' out=every_other.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match A.fits and B.fits on exact ID. Output columns from A suffixed '_A', but only include columns from B that are *not* duplicates of A.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID fixcols=dups suffix1=_A out=A_suffix_B_clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 30.2956 and latitude 4.735. Please use a search radius of 0.5875 degrees. Save the results to a csv file called query_results_34.csv. The coordinates are in the fk4 system.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=30.2956 lat=4.735 radius=0.5875 skysys=fk4 omode=out ofmt=csv out=query_results_34.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate tables and, in the final table, replace the value 'BAD' in the 'FLAG' column with null.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replaceval \"BAD\" null FLAG' out=flag_nullified.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve MAST TESS Input Catalog entries for objects near RA 180, Dec 0, within 0.1 degree, and save to a CSV file.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT tid, ra, dec FROM tic.v8 WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 180.0, 0.0, 0.1))' ofmt=csv out=tic_cone_search.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a FITS file and rename all columns that contain the substring 'FLUX' by appending '_RAW' to their names.",
        "response": "stilts tpipe in=raw_data.fits cmd='colmeta -name FLUX*_RAW FLUX*' out=renamed_fluxes.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find rows in T1 that match T2. Include all columns but rename duplicates using the automatic numeric suffixing convention.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID fixcols=dups out=auto_suffixed_inner.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find groups of objects across three catalogs that match in a 2D plane on columns `XPOS` and `YPOS` within a 5 pixel radius.",
        "response": "stilts tmatchn nin=3 in1=d1.fits in2=d2.fits in3=d3.fits multimode=group matcher=2d params=5 values1='XPOS YPOS' values2='XPOS YPOS' values3='XPOS YPOS' out=detector_plane_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 39.13 and latitude 12.9539. Please use a search radius of 0.1136 degrees. Save the results to a votable file called query_results_86.votable. The coordinates are in the galactic system. Use verbosity level 3. Don't use compression for the download.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=39.13 lat=12.9539 radius=0.1136 skysys=galactic verb=3 compress=false omode=out ofmt=votable out=query_results_86.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Crossmatch T1 and T2 using the symmetrical best match (find=best). T2 contains magnitude 99.0 for nulls; replace 99.0 with null before matching.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='badval 99.0 MAG' matcher=sky params=2 values1='RA DEC' values2='RA DEC' find=best out=null_cleaned_best.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot a histogram of the separation distance in arcseconds between two sets of coordinates in a table.",
        "response": "stilts plot2plane in=pairs.fits layer=histogram x='skyDistanceDegrees(RA1,DEC1,RA2,DEC2)*3600' xlabel='Separation (arcsec)' out=sep_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"skyDistanceDegrees(RA1,DEC1,RA2,DEC2)*3600\"\n    (The name \"RA1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a MOC for all sources with `parallax_error < 0.1`.",
        "response": "stilts mocshape in=gaia.fits icmd='select \"parallax_error < 0.1\"' shape=point coords='array(ra,dec)' out=low_parallax_error.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select parallax_error < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match `t1.fits` and `t2.fits`. If a column `ID` exists in both, rename them to `ID_1` and `ID_2` but leave other columns as they are.",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=dups suffix1=_1 suffix2=_2 out=dup_id_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Pair match T_MAIN against T2, T3. T3 contains an array column 'FLUX_ARRAY'. Replace it with the mean of the array values before matching T_MAIN on position + mean flux (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='1 0.5' in1=T_MAIN.fits in2=T2.fits in3=T3.fits icmd3='replacecol FLUX_MEAN mean(FLUX_ARRAY)' values1='RA DEC FLUX_MEAN' values2='RA DEC FLUX_MEAN' values3='RA DEC FLUX_MEAN' out=array_mean_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three tables. Output the result directly to TOPCAT for inspection.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=5 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=A.fits in2=B.fits in3=C.fits omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find all rows in table A that are unmatched in table B based on exact ID. Output columns from A suffixed '_A' and columns from B suffixed '_B'.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID join=1not2 fixcols=all suffix1=_A suffix2=_B out=A_anti_join_suffixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Please generate a MOC at order 9 covering the sources listed in `my_targets.csv`.",
        "response": "stilts pixfoot in=my_targets.csv ifmt=csv order=9 out=my_targets_o9.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC for pointings where the `OBSERVER` name is 'Hubble'.",
        "response": "stilts mocshape in=obs_log.fits icmd='select OBSERVER==\"Hubble\"' shape=circle coords='array(RA,DEC,FOV)' out=hubble_pointings.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Use the 'assert' filter to verify that 'FLUX' never contains NaN or infinite values.",
        "response": "stilts tpipe in=data.fits cmd='assert isFinite(FLUX)' out=finite_flux_asserted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve the top 10 schemata defined in the HEASARC Xamin Catalog Interface.",
        "response": "stilts tapquery tapurl=https://heasarc.gsfc.nasa.gov/xamin/vo/tap adql='SELECT TOP 10 * FROM tap_schema.schemas' out=heasarc_schemas.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'FLUX_ERROR_ABS' containing the absolute value of the flux error.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_ERROR_ABS abs(FLUX_ERR)' out=abs_error.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Group match three tables, T1-T3. After matching, filter the result to keep only groups where the size is 2 (pairs).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=T1.fits in2=T2.fits in3=T3.fits ocmd='select GroupSize==2' out=only_pairs_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a plot using the KDE layer with normalization set to 'area' (total area under curve is 1).",
        "response": "stilts plot2plane in=data.fits layer=kde x=VALUE normalise=area out=area_norm_kde.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge tables, and calculate a new column 'COLOR' = 'G_MAG - R_MAG' post-concatenation.",
        "response": "stilts tcatn nin=2 in1=photo1.fits in2=photo2.fits ocmd='addcol COLOR G_MAG-R_MAG' out=with_color_final.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC for all objects around Galactic L=30, B=0, with a radius of 150 arcseconds, converted from Galactic.",
        "response": "stilts pixfoot in=gal_data6.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC radius='150.0 / 3600.0' out=gal_150as.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a `cds_ascii` format MOC from `s_region`.",
        "response": "stilts mocshape in=obscore.fits shape=stc-s coords=s_region mocfmt=cds_ascii out=obscore.moc.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Read data from the synthetic attractor scheme (Henon) with 50,000 points and output the coordinates as a CSV file.",
        "response": "stilts tcopy in=:attractor:50000,henon out=henon_coords.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find sources in VizieR TAP near 01h 00m 00s, +10d 00m 00s, using 0.001 degrees, and output as FITS colfits-plus format.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon='hmsToDegrees(1.0, 0, 0)' lat='dmsToDegrees(10.0, 0, 0)' radius=0.001 ofmt=colfits-plus out=vizier_colfits.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(1.0, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge FITS files, ensuring the output is written using the VOTable FITS serialization format.",
        "response": "stilts tcat in='f1.fits f2.fits' ofmt='votable(format=FITS)' out=fits_votable_c.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Perform an SIA query and ensure the response is compressed, saving it as ECSV format.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=120.0 lat=5.0 radius=0.1 servicetype=sia compress=true ofmt=ecsv out=sia_compressed.ecsv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find groups of objects across four tables (`t1.fits`, `t2.fits`, `t3.fits`, `t4.fits`) that match on an exact `SOURCE_ID`.",
        "response": "stilts tmatchn nin=4 in1=t1.fits in2=t2.fits in3=t3.fits in4=t4.fits multimode=group matcher=exact values1=SOURCE_ID values2=SOURCE_ID values3=SOURCE_ID values4=SOURCE_ID out=id_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read data from the HAPI time series scheme and output it as FITS.",
        "response": "stilts tcopy in=':hapi:https://vires.services/hapi;GRACE_A_MAG;start=2009-01-01;stop=2009-01-01T00:00:10;include=header' out=hapi_out.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Synchronously query the PADC helio server for a data sample and output the result in ECSV format.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT TOP 10 * FROM some_helio_table' sync=true ofmt=ecsv out=helio_sample.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Search the GAVO Data Center near RA 123, Dec 45, using 40 arcseconds, and display the resulting data table immediately in a graphical window.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=123.0 lat=45.0 radius='40.0 / 3600.0' omode=gui",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"40.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find all objects from my three catalogs that did NOT participate in any match group.",
        "response": "This is a multi-step process. First, run `tmatchn` to find all the groups and get the unique IDs of matched objects from each catalog. Then, for each input catalog, use `tmatch2` with `join=1not2` to select the rows from the original catalog that are not in the list of matched IDs.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a PDS4 file and save it to standard output in simple ASCII format.",
        "response": "stilts tcopy in=mars_mission.xml ifmt=pds4 ofmt=ascii out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plotting a density map grid showing count per unit area.",
        "response": "stilts plot2plane in=big_cat.fits layer=grid x=RA y=DEC combine=count-per-unit out=count_per_unit_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert a Parquet file from a URL to a local FITS file.",
        "response": "stilts tcopy in=http://example.com/data.parquet out=local.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 128.8943 and latitude -26.289. Please use a search radius of 1.5569 degrees. Instead of a file, just give me the stats.",
        "response": "stilts cone servicetype=sia2 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=128.8943 lat=-26.289 radius=1.5569 omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a VOTable to FITS, ensuring the FITS output uses the Primary HDU for VOTable metadata (fits(primary=votable)).",
        "response": "stilts tcopy in=input.vot ofmt='fits(primary=votable)' out=fits_phdu.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I want to calculate the median of the 'FLUX' column after a cone search.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=160.0 lat=-20.0 radius=0.05 ocmd='keepcols FLUX' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate two FITS files, `survey_part1.fits` and `survey_part2.fits`, into a single FITS file.",
        "response": "stilts tcatn nin=2 in1=survey_part1.fits in2=survey_part2.fits out=survey_full.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the PADC TAP Maser service for tables and output the list in VOTable BINARY format.",
        "response": "stilts tapquery tapurl=http://voparis-tap-maser.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.tables' ofmt='votable(format=BINARY)' out=maser_binary.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match table `one.fits` and `two.fits`. The coordinates for `one` are `RA1`, `DEC1` and for `two` are `RA2`, `DEC2`. The output should be a VOTable with BINARY2 serialization.",
        "response": "stilts tmatch2 in1=one.fits in2=two.fits matcher=sky params=1 values1='RA1 DEC1' values2='RA2 DEC2' ofmt='votable(format=BINARY2)' out=match_binary2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 212.6993 and latitude -59.4158. Please use a search radius of 1.4616 degrees. Save the results to a votable file called query_results_163.votable. The coordinates are in the supergalactic system.",
        "response": "stilts cone servicetype=sia1 serviceurl=http://irsa.ipac.caltech.edu/sia lon=212.6993 lat=-59.4158 radius=1.4616 skysys=supergalactic omode=out ofmt=votable out=query_results_163.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Run a cone search against Gaia TAP around RA 50, Dec 25, using a radius of 5 arcseconds, and add a column 'FLUX_RATIO' = FLUX_G / FLUX_R.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=50.0 lat=25.0 radius='5.0 / 3600.0' ocmd='addcol FLUX_RATIO FLUX_G / FLUX_R' out=gaia_ratio.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "How do the `joinN` parameters work in `multimode=pairs`?",
        "response": "In `pairs` mode, the `joinN` parameters act as filters on the output rows based on whether a match was found for the reference row in table N. For example, `join1=match join2=match join3=nomatch` would return rows from the reference table (`iref=1`) that have a match in table 2 but do not have a match in table 3 [2, B.41.1, 1976].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I have a table in IPAC format. How can I convert it to a standard FITS table?",
        "response": "stilts tcopy ifmt=ipac in=ipac_table.tbl ofmt=fits out=standard.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match on magnitude and color, with different tolerances: 0.1 for magnitude (mag_r) and 0.2 for color (g_minus_r).",
        "response": "stilts tmatch2 in1=phot1.fits in2=phot2.fits matcher=2d_anisotropic params='0.1 0.2' values1='mag_r g_minus_r' values2='mag_r g_minus_r' out=mag_color_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I need a summary of coverage for points where the magnitude is brighter than 12, calculated at order 15.",
        "response": "stilts mocshape in=bright_stars.fits icmd='select \"MAG < 12.0\"' shape=point coords='array(RA, DEC)' order=15 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '12.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 12.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '12.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a MOC at order 6 from the first 50 rows of my table.",
        "response": "stilts pixfoot in=my_table.fits icmd='head 50' order=6 out=first50_o6.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Retrieve 10 rows from the APPLAUSE plate archive and locally convert the string column 'plate_id' to uppercase.",
        "response": "stilts tapquery tapurl=https://www.plate-archive.org/tap adql='SELECT TOP 10 plate_id FROM apl.plate_meta' ocmd='replacecol PLATE_ID toUpperCase(plate_id)' out=applause_upper.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I want to find objects that are in `cat1` and `cat3`, but not `cat2`, using `cat1` as the reference.",
        "response": "stilts tmatchn nin=3 in1=cat1.fits in2=cat2.fits in3=cat3.fits multimode=pairs iref=1 matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' join1=match join2=nomatch join3=match out=in_1_and_3_not_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "How can I check the syntax of my ADQL query before submitting it to the GAVO service?",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT ra, dec FROM ivoa.obscore' parse=true",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query MAST PanSTARRS DR1 and locally remove all columns except the source ID, RA, and DEC.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 10 * FROM dbo.detection_object' ocmd='keepcols \"objid ra dec\"' out=ps1_minimal.fits",
        "error": "Error: Unused arguments: 'ra' 'dec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols objid ra dec\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ra' 'dec'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How do I make the marker edges black but the fill color variable?",
        "response": "This level of marker style customization is not available. You could overplot two layers: one for filled markers and one slightly larger for open black markers.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 236.5902 and latitude -16.8361. Please use a search radius of 0.4748 degrees. Save the results to a votable file called query_results_147.votable.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=236.5902 lat=-16.8361 radius=0.4748 omode=out ofmt=votable out=query_results_147.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read an ASCII file, excluding only `date` and `time` related column types from inference.",
        "response": "stilts tcopy in=time_series.txt ifmt='ascii(notypes=date;hms;dms)' out=numeric_ts.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Merge tables, only keeping columns whose UCD is exactly 'phot.mag' (case-insensitive UCD match).",
        "response": "stilts tcat in='m1.fits m2.fits' icmd='keepcols ucd$phot.mag' out=exact_phot_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Can you generate the MOC for my data and save it as a JSON file named `celestial_tapestry.moc.json`?",
        "response": "stilts mocshape in=my_data.fits mocfmt=json shape=point coords='array(RA,DEC)' out=celestial_tapestry.moc.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot points with X/Y error bars using a custom dash pattern for the error lines: '2 on, 5 off'.",
        "response": "stilts plot2plane in=errors.fits layer=xyerror x=X y=Y xerrhi=XE yerrhi=YE dash='2,5' out=custom_error_dash.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Filter a catalog to include only sources where the total proper motion (hypot(PMRA, PMDEC)) is greater than 50 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"hypot(PMRA, PMDEC) > 50.0\"' out=high_pm_stars.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '50.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 50.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '50.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find all table names in the UCL DaCHS server TAP service, outputting the table metadata only.",
        "response": "stilts tapquery tapurl=http://astroweb.projects.phys.ucl.ac.uk:8000/tap adql='SELECT table_name FROM TAP_SCHEMA.tables' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the KOA TAP Service near RA 18h, Dec 5d (convert RA/Dec), using 45 arcminutes radius, forcing VOTable FITS format output.",
        "response": "stilts cone serviceurl=https://koa.ipac.caltech.edu/TAP lon=270.0 lat=5.0 radius='45.0 / 60.0' ofmt='votable(format=FITS)' out=koa_45am_fits.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"45.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate a MOC where the underlying mechanism is forced to the 'lists' implementation (experimental).",
        "response": "stilts mocshape in=sparse_cat.fits shape=point coords='array(RA, DEC)' mocimpl=lists out=lists_impl_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "How to create a plot legend and place it in the top left corner?",
        "response": "stilts plot2plane layer_1=mark in_1=d1.fits x_1=X y_1=Y leglabel_1='Set 1' layer_2=mark in_2=d2.fits x_2=X y_2=Y leglabel_2='Set 2' legend=true legpos=0.05,0.95",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T_REF has position errors in mas (E_MAS). Convert to degrees before matching using skyerr.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=skyerr params=1 in1=T_REF.fits icmd1='addcol E_DEG E_MAS/3600000.0' in2=T2.fits in3=T3.fits values1='RA DEC E_DEG' values2='RA DEC E_DEG' values3='RA DEC E_DEG' out=mas_error_converted_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add a column 'RA_DMS' converting RA in degrees to DMS string format with 0 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS \"degreesToDms(RA, 0)\"' out=dms_ra_0.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS degreesToDms(RA, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine tables, adding a column that contains the natural logarithm of the 'ENERGY' column.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='addcol LOG_E ln(ENERGY)' out=log_energy.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Convert a VOTable into a CSV file and show it on the screen.",
        "response": "stilts tcopy in=my_data.vot ofmt=csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Merge tables and then transpose the final table so columns become rows.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd=transpose out=transposed_table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Can `tcopy` convert a FITS image to a table?",
        "response": "No, `tcopy` and STILTS are for tabular data. A FITS file with an image in the primary HDU and no table extensions will result in an error.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 using Cartesian 3D error quadrature (3d_err_q). Output column names should be suffixed '_1', '_2', '_3'.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=3d_err_q params=1 values1='X Y Z ERR' values2='X Y Z ERR' values3='X Y Z ERR' in1=D1.fits in2=D2.fits in3=D3.fits fixcols=all out=numbered_3d_err_q.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a table, ensure random access by caching the data, and then output the checksum of the table content.",
        "response": "stilts tpipe in=streamed.vot cmd=cache omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the VizieR TAP service near 100 degrees, 10 degrees, with a search radius of 500 milli-arcseconds (mas).",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=100.0 lat=10.0 radius='500.0 / 3600000.0' out=vizier_500mas.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"500.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Perform a precise Cone Search on Gaia TAP around RA 10, Dec -10. The radius must be exactly 50 mas.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=10.0 lat=-10.0 radius='50.0 / 3600000.0' out=gaia_50mas.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"50.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create an order 5 MOC and enforce sequential processing (`mocimpl=lists`) for memory management, saving as FITS.",
        "response": "stilts mocshape in=memory_hog.fits shape=point coords='array(RA, DEC)' order=5 mocimpl=lists out=sequential_moc_o5.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine tables, where each input table is filtered to keep only rows where 'FLAG' is true.",
        "response": "stilts tcat in='a.fits b.fits' icmd='select FLAG' out=flag_true_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge observation list Obs1.fits and a custom looping table with 500 rows (:loop:500).",
        "response": "stilts tcatn nin=2 in1=Obs1.fits in2=:loop:500 out=obs_plus_loop.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find 10 ObsCore entries related to XMM from the ASI SSDC TAP Service, requiring user authentication for the query.",
        "response": "stilts tapquery tapurl=https://tools.ssdc.asi.it/TAPSSDC/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore WHERE facility_name = ''XMM''' auth=true out=ssdc_xmm_auth.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'RA_ECL' containing the ICRS RA converted to Ecliptic Longitude (approximate conversion for comparison).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol COORDS_ICRS \"astromXYZ(RA, DEC, 1.0)\"' cmd='addcol COORDS_ECL \"icrsToEcl(COORDS_ICRS)\"' cmd='addcol RA_ECL \"cartesianToLon(COORDS_ECL, COORDS_ECL)\"' out=ecliptic_coords.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' '1.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COORDS_ICRS astromXYZ(RA, DEC, 1.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' '1.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables from standard input (VOTable format) and a local FITS file.",
        "response": "cat stream.vot | stilts tcat in=- ifmt=votable in2=local.fits out=piped_merge.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot the 10th, 50th, and 90th percentiles of Y data, binned by X, using the quantile layer with line connections.",
        "response": "stilts plot2plane in=data.fits layer=quantile x=X y=Y quantiles='0.1,0.5,0.9' join=lines color=black out=percentile_lines.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate an ASCII MOC (order 18) for extremely high-resolution coverage of transient alerts.",
        "response": "stilts mocshape in=alerts.fits shape=point coords='array(RA, DEC)' order=18 mocfmt=ascii out=hires_alerts.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column 'KCORR_Z_I' using the KCF_z filter at Z=0.05, leveraging the i-z color (KCC_iz).",
        "response": "stilts tpipe in=data.fits cmd='addcol KCORR_Z_I \"kCorr(KCF_z, 0.05, KCC_iz, I_MAG-Z_MAG)\"' out=kcorrected_z_i.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.05,' 'KCC_iz,' 'I_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_Z_I kCorr(KCF_z, 0.05, KCC_iz, I_MAG-Z_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.05,' 'KCC_iz,' 'I_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match three catalogs. `c1.fits` has FK4 coordinates `RA_1950`, `DEC_1950`. The others are J2000. How do I match them?",
        "response": "stilts tmatchn nin=3 in1=c1.fits in2=c2.fits in3=c3.fits icmd1='addskycoords fk4 fk5 RA_1950 DEC_1950 RA_2000 DEC_2000' multimode=group matcher=sky params=2 values1='RA_2000 DEC_2000' values2='ra dec' values3='ra dec' out=fk4_j2000_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate an order 14 MOC where the radius is dynamically calculated for each row as $0.001 / \text{ERROR_FACTOR}$.",
        "response": "stilts mocshape in=dyn_error.fits shape=circle coords='array(RA, DEC, 0.001 / ERROR_FACTOR)' order=14 out=dynamic_rad_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate the MOC at the maximum HEALPix order (29) for point sources, ensuring the output is a standard FITS MOC file.",
        "response": "stilts pixfoot in=max_res_input.fits ra=RA dec=DEC radius=0 order=29 out=point_o29.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a test table with a wide variety of column types and save it as FITS.",
        "response": "stilts tcopy in=:test:50,* out=test.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot markers sized by FLUX, applying the Inverse Hyperbolic Sine (asinh) function to the size values.",
        "response": "stilts plot2sky in=sources.fits layer=size lon=RA lat=DEC size=FLUX sizefunc=asinh autoscale=true out=asinh_flux_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a parameter 'RUN_TIME_MJD' and set it to the current Modified Julian Date.",
        "response": "stilts tpipe in=data.fits cmd='setparam RUN_TIME_MJD isoToMjd(now())' out=runtime_mjd.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query for all XMM observations from the GAVO service.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM ivoa.obscore WHERE obs_collection = ''XMM'''",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine tables, renaming the combined table itself to 'Master_Catalog'.",
        "response": "stilts tcatn nin=2 in1=c1.fits in2=c2.fits ocmd='tablename Master_Catalog' out=master.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "My radius is given by column `R_UAS` in microarcseconds. How do I use it for circles?",
        "response": "stilts mocshape in=uas_radii.fits shape=circle coords='array(RA,DEC,R_UAS/3600000000.0)' out=uas_radii_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Concatenate four tables, then filter the final table to keep only every 100th row.",
        "response": "stilts tcatn nin=4 in1=d1.fits in2=d2.fits in3=d3.fits in4=d4.fits ocmd='every 100' out=sparse_output.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert a FITS file to Feather format, relying on Feather's ability to handle the data types.",
        "response": "stilts tcopy in=input_types.fits out=output_types.fea",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Count the total number of table schemas available on the MAST STScI Registry TAP service.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/registry adql='SELECT COUNT(*) FROM TAP_SCHEMA.schemas' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read data from the **MRT (Machine-Readable Table)** format and output it as a VOTable.",
        "response": "stilts tcopy in=mrt_catalogue.txt ifmt=mrt out=mrt_converted.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Use 'setparam' to record the maximum 'FLUX' in the table as a parameter 'MAX_FLUX'.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='setparam MAX_FLUX maximum(FLUX)' out=max_flux_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I have columns `X_ERR_LO` and `X_ERR_HI`. How do I plot asymmetric error bars?",
        "response": "stilts plot2plane in=errors.fits layer=xyerror x=X y=Y xerrlo=X_ERR_LO xerrhi=X_ERR_HI",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot KDE estimate with Gaussian kernel and full normalization (normalise=area).",
        "response": "stilts plot2plane in=data.fits layer=kde x=VALUE kernel=gauss3 normalise=area out=kde_gauss_area.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T_Main and T_Sup. T_Sup positions are in FK4 B1950 (RA_B, DEC_B). Convert T_Sup to ICRS J2000 before matching.",
        "response": "stilts tmatch2 in1=T_Main.fits in2=T_Sup.fits icmd2='addskycoords fk4 icrs RA_B DEC_B RA DEC' matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=fk4_preprocessed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find sources in the ESA Herschel TAP within 15 arcseconds of RA 150, Dec 5, and output the row count.",
        "response": "stilts cone serviceurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap lon=150.0 lat=5.0 radius='15.0 / 3600.0' omode=count",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"15.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine tables that use Galactic coordinates (GLON, GLAT) and convert them to ICRS (RA, DEC) before concatenation.",
        "response": "stilts tcatn nin=2 in1=gal1.fits icmd1='addskycoords galactic icrs GLON GLAT RA_ICRS DEC_ICRS' in2=gal2.fits icmd2='addskycoords galactic icrs GLON GLAT RA_ICRS DEC_ICRS' ocmd='keepcols \"RA_ICRS DEC_ICRS MAG\"' out=icrs_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a histogram where the X axis label is formatted using LaTeX: '$\\lambda$ (nm)'.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=WAVE texttype=latex xlabel='$\\lambda$ (nm)' out=latex_x_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVE\"\n    (The name \"WAVE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can you match `cat1.fits` and `cat2.fits` using `skyerr` and then in the output keep only the ID columns and the separation?",
        "response": "stilts tmatch2 in1=cat1.fits in2=cat2.fits matcher=skyerr params=5 values1='RA DEC ERR' values2='RA DEC ERR' scorecol=Separation ocmd='keepcols \"ID_1 ID_2 Separation\"' out=id_sep_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Read an ASCII file where columns are defined to exclude `boolean` and `date` types during parsing.",
        "response": "stilts tcopy in=mixed_types.txt ifmt='ascii(notypes=boolean;date)' out=type_clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Draw a line plot using the line layer, sorting points by their Y value before connecting them.",
        "response": "stilts plot2plane in=unsorted.fits layer=line x=X y=Y sortaxis=Y out=sorted_by_y.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a plot centered on RA=90, DEC=0, radius 10 degrees (SIN projection), showing coordinates in sexagesimal format and enabling antialiasing for the grid lines.",
        "response": "stilts plot2sky in=data.fits clon=90.0 clat=0.0 radius=10.0 projection=sin layer=mark lon=RA lat=DEC sex=true gridaa=true out=sin_sex_aa.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the Chandra Source Catalog for 200 clean sources (m_conf_flag = 0) and pipe the result directly to TOPCAT.",
        "response": "stilts tapquery tapurl=https://cda.cfa.harvard.edu/csctap adql='SELECT TOP 200 * FROM csc.master WHERE m_conf_flag = 0' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Search MAST Gaia DR3 TAP near Galactic L=270, B=0, with a radius of $3 \times 10^{-5}$ degrees.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ lon=270.0 lat=0.0 radius=0.00003 skysys=galactic out=gaiadr3_3e5deg.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I want to match two tables and only keep the columns `ID`, `RA`, `DEC` from the first table and `ID` from the second table.",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' icmd1='keepcols \"ID RA DEC\"' icmd2='keepcols \"ID RA DEC\"' ocmd='keepcols \"ID_1 RA_1 DEC_1 ID_2\"' out=subset_cols_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve the top 100 records from the ESO TAP_OBS service, performing coordinate conversion from galactic to ICRS locally, and saving the output as FITS.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 100 * FROM ivoa.ObsCore' ocmd='addskycoords galactic icrs glon glat ra_icrs dec_icrs' out=eso_icrs_coords.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query MAST CAOM for ObsCore entries where the facility is not 'HST', limited to 10 rows, and retrieve the full access reference URL.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT TOP 10 * FROM ivoa.ObsCore WHERE facility_name <> ''HST''' out=mast_nonhst_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "What does a MOC generated by `mocshape` represent?",
        "response": "It represents the union of the coverage on the sky of all the shapes (points, circles, polygons, etc.) from your input table, described as a list of HEALPix pixels of different sizes.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Take `observations.vot` and display it in a temporary GUI window.",
        "response": "stilts tpipe in=observations.vot omode=gui",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw a line plot using a custom dash pattern '8 on, 4 off' (dash='8,4').",
        "response": "stilts plot2plane in=data.fits layer=line x=X y=Y dash='8,4' out=custom_dash.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine three tables, but ensure the final table name is 'CombinedCatalog'.",
        "response": "stilts tcatn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits ocmd='tablename CombinedCatalog' out=named_catalog.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a scatter plot and a histogram as two separate layers, one for X and one for Y.",
        "response": "This is not standard for `plot2plane`. The `histogram` layer is 1D. You could use `plot2corner` to achieve this effect.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve the top 5 tables from the PADC RR TAP service and save the output in ECSV format.",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT TOP 5 * FROM tap_schema.tables' ofmt=ecsv out=padc_rr.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column named 'ERROR_ARRAY' containing the sum of the square of two array columns, 'ERR1' and 'ERR2', element-wise.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol ERROR_ARRAY \"add(square(ERR1), square(ERR2))\"' out=error_quadrature.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'square(ERR2))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_ARRAY add(square(ERR1), square(ERR2))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'square(ERR2))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_ICRS_DEG' converting FK4 RA/DEC (B1950) to ICRS RA (J2000) using the old function with explicit input/output units.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_ICRS_DEG \"raFK4toFK5degrees(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_ICRS_DEG raFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "What's the command to merge `file1.csv`, `file2.csv`, and output to an IPAC table file named `merged.tbl`?",
        "response": "stilts tcat ifmt=csv in=file1.csv in=file2.csv ofmt=ipac out=merged.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Draw a line plot (line layer) of time vs flux, ensuring the points are sorted by time before connecting them.",
        "response": "stilts plot2plane in=series.fits layer=line x=TIME y=FLUX sortaxis=X out=sorted_time_line.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TIME\"\n    (The name \"TIME\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T_REF against T2. Use a combined match criteria: exact match on string 'FIELD' AND anisotropic match on (X, Y) coordinates (2d_cuboid, 5 units in X, 1 unit in Y).",
        "response": "stilts tmatch2 in1=T_REF.fits in2=T2.fits matcher=exact+2d_cuboid params='5 1' values1='FIELD X Y' values2='FIELD X Y' out=field_cuboid_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the MAST ULLYSES HLSP service for ObsCore entries, and locally sort the result by the target name.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT TOP 20 * FROM ivoa.ObsCore' ocmd='sort target_name' out=ullyses_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can `mocshape` output anything other than a MOC?",
        "response": "No, the primary purpose of `mocshape` is to generate a Multi-Order Coverage map (MOC). It outputs this MOC in one of several formats controlled by `mocfmt`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Upload a local table of targets ('targets.csv') and crossmatch it against the VizieR table 'J/MNRAS/440/1571/table5', including all available columns and keeping only the matches.",
        "response": "stilts tapquery tapurl=http://cdsarc.cds.unistra.fr/saadavizier.tap/tap adql='SELECT t.*, u.* FROM \"J/MNRAS/440/1571/table5\" AS t JOIN TAP_UPLOAD.targets AS u ON 1=CONTAINS(POINT(''ICRS'', t.RA, t.DEC), CIRCLE(''ICRS'', u.RA, u.DEC, 0.001))' nupload=1 upload1=targets.csv upname1=targets out=vizier_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I have positions in radians (RA_R, DEC_R). Convert them and generate a point MOC (radius 0) at order 13.",
        "response": "stilts pixfoot in=rad_input.fits ra='radiansToDegrees(RA_R)' dec='radiansToDegrees(DEC_R)' radius=0 order=13 out=rad_converted_point.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Convert a VOTable to LaTeX, ensuring the output is a **standalone document**.",
        "response": "stilts tcopy in=small_cat.vot ofmt='latex(standalone=true)' out=standalone.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'KCORR_K' using the KCF_K filter at Z=0.2, leveraging the H-K color (KCC_HK).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_K \"kCorr(KCF_K, 0.2, KCC_HK, MAG_H-MAG_K)\"' out=kcorr_k.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.2,' 'KCC_HK,' 'MAG_H-MAG_K)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_K kCorr(KCF_K, 0.2, KCC_HK, MAG_H-MAG_K)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.2,' 'KCC_HK,' 'MAG_H-MAG_K)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match three tables T1, T2, T3 (group mode). T2 coordinates (GLON, GLAT) are Galactic. Convert T2 to ICRS before group matching on position.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=2 in1=T1.fits in2=T2.fits icmd2='addskycoords galactic icrs GLON GLAT RA DEC' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=gal_to_icrs_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create an output table that is just the last 5 rows of `input.fits`.",
        "response": "stilts tpipe in=input.fits cmd='tail 5' out=last5.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the statistical summary of observation exposure times (`t_exptime`) for all ObsCore records in the KOA TAP service.",
        "response": "stilts tapquery tapurl=https://koa.ipac.caltech.edu/TAP adql='SELECT t_exptime FROM ivoa.ObsCore' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate tables. Output metadata of the combined tables, listing column names, UCDs, and Units.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits ocmd='meta Name UCD Units' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Transpose the table, but do not use an input column to name the output columns.",
        "response": "stilts tpipe in=long_table.fits cmd='transpose' out=transposed_noname.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the input table to keep only every 5th row and create an order 11 MOC for $1$ arcminute radius.",
        "response": "stilts pixfoot in=sampled_cat.fits icmd='every 5' ra=RA dec=DEC radius='1.0 / 60.0' order=11 out=sampled_o11.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Run a general search on the Euclid TAP around Ecliptic Lon 10, Lat 10, with 0.01 degree radius, showing verbose output.",
        "response": "stilts cone serviceurl=https://eas.esac.esa.int/tap-server/tap lon=10.0 lat=10.0 radius=0.01 skysys=ecliptic verb=3 out=euclid_verbose_ecl.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a FITS table to FITS, forcing the output to FITS-basic (stripping VOTable metadata from Primary HDU).",
        "response": "stilts tcopy in=input.fits ofmt=fits-basic out=basic.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Sort the entire table randomly using the 'shuffle' filter.",
        "response": "stilts tpipe in=ordered.fits cmd=shuffle out=shuffled.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Extract the sixth extension (#5) from a multi-extension FITS file 'multi_ext.fits' and save it as a new VOTable file.",
        "response": "stilts tcopy in=multi_ext.fits#5 out=ext5.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a MOC (order 13) for points in catalog.fits within 15 arcseconds of their center.",
        "response": "stilts pixfoot in=catalog.fits ra=RA dec=DEC radius='15.0 / 3600.0' out=cat_15as_o13.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate four tables, ensuring the output is column-oriented FITS (colfits-plus).",
        "response": "stilts tcatn nin=4 in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits ofmt=colfits-plus out=multi_colfits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I need the MOC for sources where the redshift (Z) is less than 0.1.",
        "response": "stilts pixfoot in=redshift.fits icmd='select \"Z < 0.1\"' ra=RA dec=DEC out=low_redshift_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot the error in RA (RA_ERR) versus RA, using size proportional to DEC. Error bars should be 'filled_ellipse'.",
        "response": "stilts plot2plane in=gaia.fits layer_s=size x_s=RA y_s=RA_ERR size_s=DEC layer_e=xyerror x_e=RA y_e=RA_ERR yerrhi_e=RA_ERR errorbar_e=filled_ellipse out=error_size_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a string column 'URL_SIMBAD' containing the SIMBAD service URL for the object name in column 'OBJ_NAME'.",
        "response": "stilts tpipe in=targets.fits cmd='addcol URL_SIMBAD simbadUrl(OBJ_NAME)' out=targets_with_simbad.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a point MOC and apply a filter to rename the output table name to 'FINAL_MOC'.",
        "response": "stilts mocshape in=input_data.fits shape=point coords='array(RA, DEC)' icmd='tablename FINAL_MOC' out=renamed_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Perform a pair match with t1 as reference against t2, t3, t4. For t2, only include rows where 'FLAG' is 'GOOD' before matching.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' in1=t1.fits in2=t2.fits icmd2='select FLAG==\"GOOD\"' in3=t3.fits in4=t4.fits out=t2_filtered_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a plot showing the 5th and 95th percentiles of data using the quantile layer, with thick lines.",
        "response": "stilts plot2plane in=data.fits layer=quantile x=X y=Y quantiles='0.05,0.95' thick=5 out=percentile_thick.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Remove the column 'FLUX_ERR' and implicitly derive a similar column using a simple formula (FLUX * 0.1).",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLUX_ERR \"FLUX * 0.1\"' out=derived_err_factor.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_ERR FLUX * 0.1\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a 2D grid colored by the number of points per unit area.",
        "response": "stilts plot2plane in=data.fits layer=grid x=X y=Y combine=count-per-unit",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Crossmatch T1 and T2 using position and magnitude (sky+1d), where magnitude tolerance is 0.1, and positional tolerance is 3 arcsec.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky+1d params='3 0.1' values1='RA DEC MAG' values2='RA DEC MAG' out=pos_mag_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "My file has sexagesimal coordinates. Create a MOC.",
        "response": "stilts pixfoot in=sexagesimal.txt ifmt=ascii ra='hmsToDegrees(RA_SEX)' dec='dmsToDegrees(DEC_SEX)' out=sexagesimal_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need to get the footprint from `pointing_log.fits`, but the coordinates are named `L` and `B`.",
        "response": "stilts pixfoot in=pointing_log.fits ra=L dec=B out=log_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match A.fits and B.fits exactly on ID. Filter A to only include rows where Z > 1.0. Output to standard output and count the rows.",
        "response": "stilts tmatch2 in1=A.fits icmd1='select \"Z > 1.0\"' in2=B.fits matcher=exact values1=ID values2=ID omode=count",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate two FITS files, `obs_run1.fits` and `obs_run2.fits`, into a single output file named `combined_obs.fits`.",
        "response": "stilts tcat in=obs_run1.fits in=obs_run2.fits out=combined_obs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a FITS MOC from a 10 million star simulation at order 9.",
        "response": "stilts mocshape in=:skysim:1e7 shape=point coords='array(ra,dec)' order=9 mocfmt=json out=sim_10M_o9.moc.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find groups across `obs1.fits`, `obs2.fits`, and `obs3.fits`. After matching, add a column that is the average of the `FLUX` column from the three tables.",
        "response": "stilts tmatchn nin=3 in1=obs1.fits in2=obs2.fits in3=obs3.fits multimode=group matcher=sky params=1 values1='ra dec' values2='ra dec' values3='ra dec' fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 ocmd='addcol AVG_FLUX (FLUX_1+FLUX_2+FLUX_3)/3.' out=avg_flux_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge two tables. The first table is a multi-extension FITS file; use only extension #1.",
        "response": "stilts tcatn nin=2 in1=multi.fits#1 in2=single.fits out=ext1_merged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Calculate statistics for a sample query against the JVO ALMA VO Service.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/alma adql='SELECT TOP 10 ra, dec FROM alma.obscore' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Explode a fixed-length array column named 'FLUX_BAND[4]' into five scalar columns.",
        "response": "stilts tpipe in=spectra.fits cmd='explodecols FLUX_BAND' out=spectra_exploded.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate four catalog tiles (T1-T4.fits). In T3, filter out sources where 'FLAG_SATURATION' is set (FLAG & 2 != 0) before combination.",
        "response": "stilts tcatn nin=4 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='select \"(FLAG & 2) == 0\"' in4=T4.fits out=unsaturated_tiles.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&' '2)' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select (FLAG & 2) == 0\n\nUsage: select <expr>\n    (Unused arguments: '&' '2)' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two Parquet files and ensure the final output is a VOTable with FITS serialization.",
        "response": "stilts tcat ifmt=parquet in='p1.parquet p2.parquet' ofmt='votable(format=FITS)' out=parquet_to_votefits.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot X vs Y, coloring points based on the 'Z' column using the 'aux' shading mode and the 'viridis' map.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=aux aux=Z auxmap=viridis out=aux_color_z.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "How do I make the plot grid lines dashed and grey?",
        "response": "This level of customization for grid lines is not directly available. You can change the color with `gridcolor=grey`, but not the dash style.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "My two tables have an 'ID' column as integer in one and string in another. How can I join them?",
        "response": "stilts tcatn nin=2 in1=t1_int.fits icmd1='replacecol ID toString(ID)' in2=t2_str.fits out=strings.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'Z_COMOVING' converting Redshift (Z) to the transverse comoving distance (Mpc).",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol Z_COMOVING \"comovingDistanceT(Z, 70.0, 0.3, 0.7)\"' out=galaxies_trans_comoving.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol Z_COMOVING comovingDistanceT(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate a FITS table and a simulated table that represents a strange attractor with 1000 points.",
        "response": "stilts tcatn nin=2 in1=real_data.fits in2=:attractor:1000,clifford out=real_plus_attractor.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can I match two tables on `RA`, `DEC`, and `EPOCH`? Tolerances are 1 arcsec and 0.5 years.",
        "response": "stilts tmatch2 in1=e1.fits in2=e2.fits matcher=sky+1d params='1 0.5' values1='RA DEC EPOCH' values2='RA DEC EPOCH' out=spacetime_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "How do I get the statistics of just the `FLUX_ERROR` column from `phot_data.fits`?",
        "response": "stilts tpipe in=phot_data.fits cmd='keepcols FLUX_ERROR' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a FITS file and convert it to ECSV, specifying the ECSV delimiter as comma.",
        "response": "stilts tcopy in=input.fits out=comma.ecsv ofmt='ecsv(delimiter=comma)'",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate a MOC using the implicit coordinate column indices $1 and $2 for RA and DEC, assuming FITS input.",
        "response": "stilts mocshape in=index_data.fits shape=point coords='array($1, $2)' out=index_coords_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match four tables (A, B, C, D) using 'group' mode. Before matching, compute and add a temporary log magnitude column to all inputs.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=sky params=2 in1=A.fits icmd1='addcol LOG_MAG log10(MAG)' in2=B.fits icmd2='addcol LOG_MAG log10(MAG)' in3=C.fits icmd3='addcol LOG_MAG log10(MAG)' in4=D.fits icmd4='addcol LOG_MAG log10(MAG)' values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' out=log_mag_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a scatter plot of every 100th point from a file.",
        "response": "stilts plot2plane in=bigdata.fits icmd='every 100' layer=mark x=X y=Y",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Read a large CSV file, piping the output of a command that decompresses it, and convert it to FITS.",
        "response": "gunzip -c archive.csv.gz | stilts tcopy in=- ifmt=csv out=decompressed.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T_REF contains position in Galactic (GLON, GLAT). Convert T_REF to ICRS before matching T2 and T3.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T_REF.fits icmd1='addskycoords galactic icrs GLON GLAT RA DEC' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=gal_ref_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert a FITS file to a Feather file.",
        "response": "stilts tcopy in=source.fits out=source.fea",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Concatenate two tables, and then calculate the maximum value of the combined 'FLUX' column using the stats output mode.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='keepcols FLUX' omode=stats ocmd='keepcols Maximum'",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a MOC for all sources except those in the Small Magellanic Cloud.",
        "response": "stilts mocshape in=allsky.fits icmd='select \"skyDistanceDegrees(RA,DEC,13.18,-72.82) > 5\"' shape=point coords='array(RA,DEC)' out=no_smc.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,13.18,-72.82) > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Upload a catalogue of coordinates to GAVO DC and filter the local table before upload to keep only rows with RA greater than zero.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT t.ra, u.mag FROM sdss.dr16qso AS t JOIN TAP_UPLOAD.C AS u ON 1=CONTAINS(POINT(''ICRS'', t.ra, t.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.001))' nupload=1 upload1=coords.csv upname1=C ucmd1='select \"RA > 0\"' out=gavo_positive_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot the `central` position of a set of polygons.",
        "response": "stilts plot2plane in=polygons.fits layer=central area=VERTICES shape=cross",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VERTICES\"\n    (The name \"VERTICES\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve all ObsCore entries from the ESA Euclid Archive and check the checksum of the resulting data.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How can I join three CSV files, `data_q1.csv`, `data_q2.csv`, and `data_q3.csv`, and save the result as a VOTable named `quarterly_report.xml`?",
        "response": "stilts tcat ifmt=csv in=\"data_q1.csv data_q2.csv data_q3.csv\" ofmt=votable out=quarterly_report.xml",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, calculating the total count of rows for the resulting table (omitting checksum calculation to save time).",
        "response": "stilts tcatn nin=2 in1=large1.fits in2=large2.fits omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'DEC_DMS_4' converting DEC in degrees to DMS string format with 4 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_4 \"degreesToDms(DEC, 4)\"' out=dms_dec_4s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_4 degreesToDms(DEC, 4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match `ref.fits` against `catA.fits`, `catB.fits`, `catC.fits`, keeping all rows from `ref.fits` and only matched rows from the others.",
        "response": "stilts tmatchn nin=4 in1=ref.fits in2=catA.fits in3=catB.fits in4=catC.fits multimode=pairs iref=1 matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' values4='ra dec' join1=always out=ref_left_join_3.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate a MOC for all sources with a non-blank name.",
        "response": "stilts mocshape in=names.fits icmd='select !NULL_NAME' shape=point coords='array(RA,DEC)' out=named_objects_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "How to create a MOC for circles whose radius is `sqrt(AREA/PI)` from the `AREA` column?",
        "response": "stilts pixfoot in=source_areas.fits radius='sqrt(AREA/PI)' out=area_derived_radius.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine three tables, then add a new column which is the ratio of 'FLUX_A' and 'FLUX_B'.",
        "response": "stilts tcatn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits ocmd='addcol FLUX_RATIO FLUX_A/FLUX_B' out=with_ratio.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "How to convert an `ascii` file with 5 header lines to FITS?",
        "response": "`tcopy` itself can't skip headers. You should use `tpipe` for that: `stilts tpipe ifmt=ascii in=data.txt icmd='tail ($nrow-5)' out=data.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot points where markers are sized by one column and colored by another, sharing the aux color map with another layer.",
        "response": "stilts plot2plane layer_1=size in_1=d1.fits x_1=X y_1=Y size_1=S1 shading_1=aux aux_1=C1 layer_2=mark in_2=d2.fits x_2=X y_2=Y shading_2=aux aux_2=C2 out=shared_aux.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I need spectra (SSA) from the GAVO Data Center near RA 140, Dec 10, using 15 arcminutes.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=140.0 lat=10.0 radius='15.0 / 60.0' servicetype=ssa out=gavo_ssa_15arcmin.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"15.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot markers, specifying output image size 1024x768 pixels, saving as PDF.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC xpix=1024 ypix=768 out=hires_sky.pdf",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a low-resolution MOC (order 3) for sources with a 30 arcminute radius.",
        "response": "stilts pixfoot in=coarse_30am.fits ra=RA dec=DEC radius='30.0 / 60.0' order=3 out=coarse_o3_30am.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine catalog.fits and err_data.fits, removing duplicate rows based only on the 'ID' column in the combined dataset.",
        "response": "stilts tcatn nin=2 in1=catalog.fits in2=err_data.fits ocmd='uniq ID' out=id_unique_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Limit the output from the VSA VISTA Science Archive to 50,000 records.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/vsa adql='SELECT * FROM vsa.catalogue' maxrec=50000 out=vsa_50k.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert my table to a 'basic' FITS file without the extra VOTable metadata in the primary HDU.",
        "response": "stilts tcopy in=my_table.vot ofmt=fits-basic out=basic.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Compute the checksum of a sample query result against the Subaru SAGA database.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 10 * FROM saga.stellar_abundances' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine three files, T1, T2, T3. In T3, replace any occurrences of the magic value 99.0 with null in all columns before joining.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='badval 99.0 *' out=magic_value_cleaned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Calculate the difference between the parallax error in mas and the radial velocity error in km/s.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol ERROR_DIFF \"PARALLAX_ERR - RV_ERR\"' out=error_diff.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'RV_ERR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_DIFF PARALLAX_ERR - RV_ERR\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'RV_ERR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the PADC heliophysics server (voparis-tap-helio.obspm.fr) for solar wind observation parameters and retrieve only the first 5 rows synchronously.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT TOP 5 * FROM tap_schema.tables' sync=true out=helio_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Join three CSV files where data fields are delimited by a pipe '|' instead of a comma.",
        "response": "stilts tcat ifmt='csv(delimiter=|)' in='partA.csv partB.csv partC.csv' out=pipe_delimited_output.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "After concatenating, I want to see the result as a Mirage file.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ofmt=mirage out=out.mirage",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Group match three tables (A, B, C) where B is provided via standard input (VOTable) and C is an ASCII file.",
        "response": "cat B.vot | stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=A.fits in2=- ifmt2=votable in3=C.txt ifmt3=ascii out=streamed_ascii_group.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the HREDA TAP service for 5 ObsCore records and ensure the query runs asynchronously with continuous progress logging.",
        "response": "stilts tapquery tapurl=https://hreda.esac.esa.int/hreda-sl-tap/tap adql='SELECT TOP 5 * FROM ivoa.ObsCore' progress=true out=hreda_async_progress.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge T1 and T2. T2 contains a string column 'MJD_STRINGS'. Convert these ISO 8601 strings to MJD numeric values before combination.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='replacecol MJD isoToMjd(MJD_STRINGS)' out=mjd_numeric_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query HST ObsCore for optical observations, then filter the results locally to keep only observations with quality_flag > 5.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore WHERE em_min < 7000 AND em_max > 3000' ocmd='select \"quality_flag > 5\"' out=hst_reliable.vot",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select quality_flag > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine an IPAC table and a FITS table. The final table must explicitly use long (64-bit) integers for column 'INDEX'.",
        "response": "stilts tcatn nin=2 in1=ipac.tbl ifmt1=ipac in2=fits.fits ocmd='replacecol INDEX toLong(INDEX)' out=long_index_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match T_ref and T_sup. T_ref coordinates are in sexagesimal strings (RA, DEC). Convert T_ref to degrees before matching T_sup.",
        "response": "stilts tmatch2 in1=T_ref.fits icmd1='addcol RA_DEG hmsToDegrees(RA); addcol DEC_DEG dmsToDegrees(DEC)' in2=T_sup.fits matcher=sky params=1 values1='RA_DEG DEC_DEG' values2='RA DEC' out=sexagesimal_preproc_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve 10 ObsCore records from MAST CAOM, filtering for HST observations, and output to a FITS file.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT TOP 10 * FROM ivoa.ObsCore WHERE facility_name = ''HST''' ofmt=fits out=caom_hst_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read an IPAC table and output it as a VOTable with BINARY serialization.",
        "response": "stilts tcopy in=input.tbl ifmt=ipac ofmt='votable(format=BINARY)' out=ipac_binary.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve the metadata (column definitions) for the Subaru KUG2000 catalogue.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/kug2000 adql='SELECT * FROM kug2000.table_main' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits on sky position (1 arcsec). Before matching, filter A to keep only rows with Z > 0.5.",
        "response": "stilts tmatch2 in1=A.fits icmd1='select \"Z > 0.5\"' in2=B.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=high_z_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the KSB-ROB TAP service for the number of available columns in its table schema.",
        "response": "stilts tapquery tapurl=http://vo-tap.oma.be/tap adql='SELECT COUNT(*) FROM TAP_SCHEMA.columns' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot multiple lines from an array column FLUX_SPEC vs array column WAVE_SPEC, using the lines layer.",
        "response": "stilts plot2plane in=spectra.fits layer=lines xs=WAVE_SPEC ys=FLUX_SPEC out=multiple_spectra.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVE_SPEC\"\n    (The name \"WAVE_SPEC\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T_A and T_B exactly on 'NAME'. After joining, add a column for the length of the NAME string.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=exact values1=NAME values2=NAME ocmd='addcol NAME_LEN length(NAME)' out=name_length_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query SIMBAD for the top 10 rows and save the result in Enhanced Character Separated Values (ECSV) format.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT TOP 10 * FROM basic' ofmt=ecsv out=simbad_sample.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine two CDF files from a single input stream, separating them using the file indexing feature.",
        "response": "cat cdf_data.cdf | stilts tcatn nin=2 in1=-#0 ifmt1=cdf in2=-#1 ifmt2=cdf out=cdf_parts.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "I need to clear all table parameters from `table_with_params.vot`.",
        "response": "stilts tpipe in=table_with_params.vot cmd='clearparams *' out=table_no_params.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_LOG' using the logarithmic scaling function 'log' and assert that all resulting values are greater than -10.",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_LOG \"log10(MAG)\"' cmd='assert \"MAG_LOG > -10.0\"' out=log_mag_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG_LOG > -10.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '-10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Execute a cone search against VizieR TAP for 15.0 degrees, -5.0 degrees, limiting the search radius to 180 arcseconds.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=15.0 lat=-5.0 radius='180.0 / 3600.0' out=vizier_180as.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"180.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the European JWST Archive and set a hard limit of 5000 records for the retrieval.",
        "response": "stilts tapquery tapurl=https://jwst.esac.esa.int/server/tap adql='SELECT * FROM ivoa.ObsCore' maxrec=5000 out=jwst_5k.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a scatter plot but only for the first 1000 rows of a very large file.",
        "response": "stilts plot2plane in=large_file.fits icmd='head 1000' layer=mark x=X y=Y",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot vectors showing displacement (in degrees) using the 'lines' arrow shape and thickness 4.",
        "response": "stilts plot2sky in=drifts.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=degree arrow=lines thick=4 out=thick_line_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Set the table name to 'Processed_Data' and output the table metadata only.",
        "response": "stilts tpipe in=input.fits cmd='tablename Processed_Data' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve 10 J-PLUS DR3 sources, locally add a column `DEC_RAD` converting `dec` to radians.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jplus-dr3 adql='SELECT TOP 10 ra, dec FROM jplus_dr3.master' ocmd='addcol DEC_RAD degreesToRadians(dec)' out=jplus_rad.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Upload a local catalogue named 'input.csv' and crossmatch it against the MAST PanSTARRS 1 DR1 service within 1 arcsecond.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT t.objid, u.id FROM dbo.detection_object AS t JOIN TAP_UPLOAD.local_cat AS u ON 1=CONTAINS(POINT(''ICRS'', t.ra, t.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.0002777))' nupload=1 upload1=input.csv upname1=local_cat out=ps1_xmatch_upload.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC (order 18) for sources where the error radius is fixed at 5 mas, outputting JSON.",
        "response": "stilts pixfoot in=mas_5_json.fits ra=RA dec=DEC radius='5.0 / 3600000.0' order=18 mocfmt=json out=mas_5_json.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC from ObsCore data (STC-S) and ensure the map is constructed using the slower but potentially safer 'lists' implementation.",
        "response": "stilts mocshape in=obscore_slow.vot shape=stc-s coords=s_region mocimpl=lists out=obscore_lists_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot an X-Y scatter using the plot's X and Y limits to calculate a custom range.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xmin='min(X)' xmax='max(X)' ymin='min(Y)' ymax='max(Y)' out=auto_bounds.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a MOC from an ObsCore table using the s_region column, ensuring the output is written in the CDS ASCII MOC format.",
        "response": "stilts mocshape in=obscore_results.fits shape=stc-s coords=s_region mocfmt=cds_ascii out=obscore_cds.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot a HEALPix map table and use the weighted shading mode, combining the sum of EXPTIME per pixel.",
        "response": "stilts plot2sky in=hpx_obs.fits layer=healpix value=HPX_VAL shading=weighted weight=EXPTIME combine=sum out=hpx_exptime_sum.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"HPX_VAL\"\n    (The name \"HPX_VAL\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a scatter plot using the 'monospaced' font for annotations.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y fontstyle=mono out=monospace_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 77.4929 and latitude 8.4537. Please use a search radius of 0.4203 degrees. Save the results to a csv file called query_results_150.csv. The coordinates are in the ecliptic system.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=77.4929 lat=8.4537 radius=0.4203 skysys=ecliptic omode=out ofmt=csv out=query_results_150.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot two datasets: dataA.fits (magenta stars) and dataB.fits (cyan circles) on the same graph.",
        "response": "stilts plot2plane layer_a=mark in_a=dataA.fits x_a=X y_a=Y color_a=magenta shape_a=filled_star layer_b=mark in_b=dataB.fits x_b=X y_b=Y color_b=cyan out=dual_catalog_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Set up a Gaia crossmatch query (without executing) where the join condition is a simple difference in RA coordinates less than 1 milliarcsecond, requiring ADQL syntax check only.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT g.source_id FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.U AS u ON ABS(g.ra - u.ra) < 0.0000002777' nupload=1 upload1=targets.csv upname1=U parse=true omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the Pollux Synthetic Spectra service for its tables, explicitly requesting the specialized VQL language and printing the results to standard output.",
        "response": "stilts tapquery tapurl=https://pollux.oreme.org/vo/datalink/speconvol? adql='SELECT * FROM TAP_SCHEMA.tables' language=VQL ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot the nominal center of polygon regions (central layer), displaying the plot in Swing GUI mode.",
        "response": "stilts plot2sky in=regions.fits layer=central area=VERTICES areatype=POLYGON omode=swing",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VERTICES\"\n    (The name \"VERTICES\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine tables A and B. A contains metadata parameters I wish to keep; propagate all of them to the output.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits out=metadata_preserved.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine tables, and then apply a statistical filter to determine the statistical median of the combined 'FLUX' column.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='keepcols FLUX' omode=stats ocmd='keepcols Median'",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate two CSV files using a semicolon delimiter and output the result as an ECSV file.",
        "response": "stilts tcat ifmt='csv(delimiter=;)' in='s1.csv s2.csv' ofmt=ecsv out=semicolon_ecsv.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate an order 15 MOC from polygons and explicitly request the 'bits' implementation.",
        "response": "stilts mocshape in=test.fits shape=polygon coords=VERTICES order=15 mocimpl=bits out=bits_poly_o15.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot the analytic function y = x^2 - 4x + 4 from x=0 to x=4.",
        "response": "stilts plot2plane layer=function fexpr='x*x - 4*x + 4' xmin=0 xmax=4 out=parabola.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 500 ObsCore results from the CSIRO ASKAP service and pipe the results directly to TOPCAT.",
        "response": "stilts tapquery tapurl=https://casda.csiro.au/casda_vo_tools/tap adql='SELECT TOP 500 * FROM obs_core' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter the table to keep rows where 'PMDEC' is negative.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMDEC < 0.0\"' out=negative_pmdec_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMDEC < 0.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot velocity (V) vs distance (D), restricting the range to only objects where V is less than 500 km/s.",
        "response": "stilts plot2plane in=galaxies.fits icmd='select \"V < 500\"' layer=mark x=D y=V out=filtered_hubble.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"V < 500\" (The name \"V\" is unknown.)\n        (The name \"V\" is unknown.))\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I need a point MOC for targets around Galactic L=0, B=0, derived from Cartesian components (X, Y, Z) assuming distances in parsecs.",
        "response": "stilts mocshape in=cartesian.fits icmd='addskycoords icrs galactic xyzToLon(X,Y,Z) xyzToLat(X,Y,Z) GLON GLAT; addcol RA_ICRS 0.0; addcol DEC_ICRS 0.0' shape=point coords='array(RA_ICRS, DEC_ICRS)' out=cartesian_gal_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query ARI Gaia for a sample of sources, and locally rename the complex coordinate error column 'ra_error' to 'RA_ERR'.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 100 ra, dec, ra_error FROM gaiadr3.gaia_source' ocmd='colmeta -name RA_ERR ra_error' out=ari_renamed_err.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC from a table with a fixed 1 milliparcsecond radius per point.",
        "response": "stilts mocshape in=hires_points.fits shape=circle coords='array(RA,DEC,1.0/3600000.0)' out=mas_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot vectors colored by the density of points (density shading mode for the vector layer).",
        "response": "stilts plot2plane in=vectors.fits layer=xyvector x=X y=Y xdelta=DX ydelta=DY autoscale=true shading=density densemap=plasma out=density_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve the top 10 rows of Subaru HDS spectral metadata and calculate the checksum of the resultant table.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/hds/ adql='SELECT TOP 10 * FROM hds.spectrum' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find all sources in the SuperCOSMOS Science Archive (SSA) within a 0.5 degree cone around the LMC (RA 81.5, DEC -69.7).",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/ssa adql='SELECT * FROM sas_ir.atlas_point_source WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 81.5, -69.7, 0.5))' out=ssa_lmc_cone.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need a polygon MOC where vertices are extracted from a JSON array column named 'VERTICES_JSON'.",
        "response": "stilts mocshape in=json_polys.fits shape=polygon coords='jsonToDoubles(VERTICES_JSON)' out=json_polygon_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Draw filled circles (area layer) where the radius is fixed at 1 degree.",
        "response": "stilts plot2sky in=targets.fits layer=area area='array(RA, DEC, 1.0)' areatype=CIRCLE polymode=fill out=one_degree_circles.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"array(RA, DEC, 1.0)\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a large catalog (1 million simulated points) using density shading and caching the data to disk for performance.",
        "response": "stilts plot2sky in=:skysim:1000000 layer=mark lon=ra lat=dec shading=density storage=disk out=disk_cached_density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"ra\"\n    (The name \"ra\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match two tables based on elliptical regions on the sky. Table `galaxies.fits` has columns `ra`, `dec`, `a_world`, `b_world`, `pa_world`. Table `regions.vot` has `cen_ra`, `cen_dec`, `maj_ax`, `min_ax`, `pos_ang`. All angles are degrees and radii are arcseconds. The approximate scale of the radii is 30 arcsec.",
        "response": "stilts tmatch2 in1=galaxies.fits in2=regions.vot matcher=skyellipse params=30 values1='ra dec a_world b_world pa_world' values2='cen_ra cen_dec maj_ax min_ax pos_ang' out=elliptical_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge tables, converting the output to Feather format (suitable for R/Python exchange).",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=feather out=merged_feather.feather",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine two tables, adding a column to the second input that uses the hyperbolic sine function: `Y_HYP = sinh(Y_RAW)`.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='addcol Y_HYP sinh(Y_RAW)' out=hyp_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert a FITS file to VOTable, guaranteeing that **no datestamp comment** is included in the XML output.",
        "response": "stilts tcopy in=undated.fits ofmt='votable(date=false)' out=nodate.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I need the MOC for sources within $0.0000005$ radians, converted from degrees, outputting ASCII.",
        "response": "stilts pixfoot in=tiny_rad_ascii.fits ra=RA dec=DEC radius='radiansToDegrees(5.0e-7)' mocfmt=ascii out=tiny_rad_ascii.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find all table schemas in the SIMBAD TAP query engine and calculate the checksum of the table containing the names and descriptions.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT table_name, description FROM TAP_SCHEMA.schemas' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter rows to keep only sources with positive magnitudes before generating a circle MOC (radius 0.01 deg) and writing in CDS ASCII format.",
        "response": "stilts mocshape in=faint_cat.fits icmd='select \"MAG > 0\"' shape=circle coords='array(RA, DEC, 0.01)' mocfmt=cds_ascii out=filtered_cds.txt",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve metadata for 50 Herschel observations and monitor job progress continuously during asynchronous execution.",
        "response": "stilts tapquery tapurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap adql='SELECT TOP 50 * FROM ivoa.ObsCore' progress=true out=herschel_obs_async.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run a general cone search against Gaia TAP around RA 300, Dec 0, with a radius defined as the constant PI / 1000 degrees.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=300.0 lat=0.0 radius='PI / 1000.0' out=gaia_pi_over_1000.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"PI / 1000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert coordinates from ICRS (RA, DEC) to Galactic (GLON, GLAT), saving the result in a VOTable.",
        "response": "stilts tpipe in=icrs_cat.fits cmd='addskycoords icrs galactic RA DEC GLON GLAT' out=galactic_cat.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I'm concatenating thousands of small FITS files listed in `all_patches.txt`. To avoid running out of file handles, how can I make stilts process them lazily?",
        "response": "stilts tcat in=@all_patches.txt lazy=true out=full_sky_mosaic.fits",
        "chat.jar": "fixed",
        "error": "Error: all_patches.txt (No such file or directory)\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Pair match T_MAIN against T2, T3, T4. Only output T_MAIN rows that were *unmatched* by T2, T3, and T4 combined. T2 is provided via standard input (ASCII).",
        "response": "cat T2.txt | stilts tmatchn nin=4 multimode=pairs matcher=exact values1=ID values2=ID values3=ID values4=ID in1=T_MAIN.fits in2=- ifmt2=ascii in3=T3.fits in4=T4.fits join1=nomatch out=T_MAIN_only_singles_pipe.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add a parameter 'USER_ID' set to the current system user name.",
        "response": "stilts tpipe in=data.fits cmd='setparam USER_ID param$user.name' out=user_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw filled quadrilaterals defined by corner coordinates X1,Y1, X2,Y2, X3,Y3, X4,Y4.",
        "response": "stilts plot2plane in=ccd_corners.fits layer=poly4 x1=X1 y1=Y1 x2=X2 y2=Y2 x3=X3 y3=Y3 x4=X4 y4=Y4 polymode=fill out=quads.pdf",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Make the legend border invisible.",
        "response": "stilts plot2plane layer_1=mark in_1=d1.fits x_1=X y_1=Y leglabel_1=A layer_2=mark in_2=d2.fits x_2=X y_2=Y leglabel_2=B legborder=false",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a MOC from an ECSV file (order 8), ensuring the output uses the CDS FITS MOC format.",
        "response": "stilts mocshape in=input.ecsv ifmt=ecsv shape=point coords='array(RA, DEC)' order=8 mocfmt=cds_fits out=ecsv_cds_fits.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match T1 and T2 on 3D coordinates (X, Y, Z). After joining, add a column 'DISTANCE' calculated as hypot(X_1, Y_1, Z_1).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=3d params=1 values1='X Y Z' values2='X Y Z' fixcols=dups suffix1=_1 ocmd='addcol DISTANCE \"hypot(X_1, Y_1, Z_1)\"' out=3d_distance_calc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Y_1,' 'Z_1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DISTANCE hypot(X_1, Y_1, Z_1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_1,' 'Z_1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'MAG_UCD' and set its UCD to 'phot.mag;em.opt.U' and its unit to 'mag'.",
        "response": "stilts tpipe in=data.fits cmd='addcol -ucd \"phot.mag;em.opt.U\" -units mag MAG_UCD 99.0' out=ucd_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Copy a table from a synthetic test scheme that includes basic scalar columns and fixed arrays (:test:10,bf) to FITS.",
        "response": "stilts tcopy in=':test:10,bf' out=fixed_array_test.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I have sexagesimal RA in `RA_SEX` and decimal Dec in `DEC_DECIMAL`. Can you make a MOC?",
        "response": "stilts pixfoot in=mixed_coords.fits ra='hmsToDegrees(RA_SEX)' dec=DEC_DECIMAL out=mixed_coords_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "What is the smallest MOC order I can use?",
        "response": "stilts pixfoot in=:skysim:1 ra=ra dec=dec order=0 out=smallest_order.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Convert an ASCII catalogue to IPAC format, limiting the maximum width of any output cell to 50 characters.",
        "response": "stilts tcopy in=input.txt ifmt=ascii ofmt='ipac(maxCell=50)' out=limited.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Draw filled quadrilaterals (poly4 layer), setting the minsize threshold to 10 pixels and minshape to filled circle.",
        "response": "stilts plot2sky in=quads.fits layer=poly4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 polymode=fill minsize=10 minshape=filled_circle out=minshape10_fill.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Crossmatch T_A and T_B. T_B positions (ELON, ELAT) are Ecliptic. Convert T_B to Galactic (GLON, GLAT) and match T_A on Galactic coordinates (5 arcsec).",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits icmd2='addskycoords ecliptic galactic ELON ELAT GLON GLAT' matcher=sky params=5 values1='GLON GLAT' values2='GLON GLAT' out=ecl_to_gal_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Perform a Cone Search and ensure the output is suitable for web display as an HTML table.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=25.0 lat=35.0 radius=0.01 out=report.html ofmt=html",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Remove columns by UCD: remove all columns related to 'error' (ucd$stat.error).",
        "response": "stilts tpipe in=data.fits cmd='delcols ucd$stat_error_*' out=no_errors.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a MOC from a piped input stream of ASCII MOCs.",
        "response": "cat my_mocs.txt | stilts mocshape in=- ifmt=ascii shape=moc-ascii coords='$1' mocfmt=fits out=piped_moc.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match A.fits and B.fits using position AND parallax (sky+1d). T_B parallax is in arcsec. Match tolerances: 1 arcsec, 0.05 arcsec.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=sky+1d params='1 0.05' values1='RA DEC PARALLAX' values2='RA DEC PARALLAX' out=pos_parallax_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T_A and T_B. T_A coordinates are in a 3-element array 'POS_ARRAY' (RA, DEC, ERR). Explode this array to scalars before matching using skyerr.",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='explodecols POS_ARRAY; colmeta -name RA POS_ARRAY_0; colmeta -name DEC POS_ARRAY_1; colmeta -name ERR POS_ARRAY_2' in2=T_B.fits matcher=skyerr params=1 values1='RA DEC ERR' values2='RA DEC ERR' out=exploded_skyerr.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve all tables from the KSB-ROB TAP service and output the resulting table metadata.",
        "response": "stilts tapquery tapurl=http://vo-tap.oma.be/tap adql='SELECT * FROM TAP_SCHEMA.tables' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a table using the loop scheme, generating rows from 10 to 100 in steps of 0.5, and save it as a FITS file.",
        "response": "stilts tcopy in=:loop:10,100,0.5 out=half_steps.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 281.7815 and latitude -55.2749. Please use a search radius of 1.8898 degrees. Save the results to a fits file called query_results_120.fits.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=281.7815 lat=-55.2749 radius=1.8898 compress=true omode=out ofmt=fits out=query_results_120.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Can `tcat` handle input from standard input?",
        "response": "Yes, you can use `in=-` to specify standard input. However, you must also explicitly provide the format using the `ifmt` parameter [2].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve 10 VIRCAM raw data entries from ESO TAP_OBS and calculate a local column 'EX_TIME' representing the total exposure time (DIT * NDIT).",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 dit, ndit FROM raw.vircam' ocmd='addcol EX_TIME dit*ndit' out=vircam_calc_exp.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate an MOC for objects within a radius equal to $20 \times 10^{-6}$ degrees.",
        "response": "stilts mocshape in=sources.fits shape=circle coords='array(RA, DEC, 20.0e-6)' out=20e6_deg_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the ESO TAP_CAT service for tables, running synchronously, and ensuring the output uses HTTP compression.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT TOP 10 table_name FROM TAP_SCHEMA.tables' sync=true compress=true out=eso_compressed_sync.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How can I turn off the grid lines on my plot?",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y grid=false",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the ESA Herschel TAP service for ObsCore entries and locally filter the result to discard rows where the observation date is null.",
        "response": "stilts tapquery tapurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap adql='SELECT TOP 100 * FROM ivoa.ObsCore' ocmd='select !NULL_t_min' out=herschel_clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter the table to keep only rows where the flux is non-null and greater than 10, and count the remaining rows.",
        "response": "stilts tpipe in=data.fits cmd='select \"!NULL_FLUX && FLUX > 10\"' omode=count",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'FLUX' '>' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_FLUX && FLUX > 10\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'FLUX' '>' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an order 10 MOC for circles where the radius is calculated as the hypotenuse of X_ERR and Y_ERR in degrees.",
        "response": "stilts pixfoot in=err_data.fits ra=RA dec=DEC radius='hypot(X_ERR, Y_ERR)' order=10 out=hypot_error_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot two datasets (A and B) using marks, one with fixed color (red) and one with density shading (viridis).",
        "response": "stilts plot2sky layer_a=mark in_a=dataA.fits lon_a=RA lat_a=DEC shading_a=flat color_a=red layer_b=mark in_b=dataB.fits lon_b=RA lat_b=DEC shading_b=density densemap_b=viridis out=fixed_density_overlay.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Group match six tables (T1-T6) exactly on ID. Filter the final output to only keep groups where the GroupSize is exactly 6.",
        "response": "stilts tmatchn nin=6 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID values5=ID values6=ID in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits in5=T5.fits in6=T6.fits ocmd='select GroupSize==6' out=full_6way_overlap.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a table from standard input (CSV) and output it as FITS.",
        "response": "cat input.csv | stilts tcopy in=- ifmt=csv out=streamed_fits.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Request the result in VOTable BINARY2 format from the service.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 10 * FROM gaiadr3.gaia_source' out=binary2_result.vot ofmt='votable(format=BINARY2)'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Use stilts tcat to join `part_A.fits` and `part_B.fits`. Before joining, for each table, select only rows where FLUX > 100. After joining, sort the final table by RA.",
        "response": "stilts tcat in=part_A.fits in=part_B.fits icmd='select \"FLUX > 100\"' ocmd='sort \"RA\"' out=filtered_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a `cds_ascii` format MOC from `s_region`.",
        "response": "stilts mocshape in=obscore.fits shape=stc-s coords=s_region mocfmt=cds_ascii out=obscore.moc.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need to combine two tables and add a 'SURVEY' column saying 'SDSS' for the first and '2MASS' for the second.",
        "response": "stilts tcatn nin=2 in1=sdss.fits icmd1='addcol SURVEY \"SDSS\"' in2=2mass.fits icmd2='addcol SURVEY \"2MASS\"' out=surveys.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "My radius is given by `R_UAS` in microarcseconds. How do I use that?",
        "response": "stilts pixfoot in=uas_radii.fits radius='R_UAS/3600000000.0' out=uas_radii_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Retrieve the column definitions (metadata) for the Hubble ObsCore table structure at ESA.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need the MOC for sources around Galactic L=90, B=0, with radius $1$ arcminute, converting coordinates, and writing the output to an ASCII table to standard output.",
        "response": "stilts pixfoot in=gal_data5.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC radius='1.0 / 60.0' mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Crossmatch T1 and T2 on 3D Cartesian coordinates (X, Y, Z). After joining, calculate the length of the resulting 3D vector.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=3d params=1 values1='X Y Z' values2='X Y Z' fixcols=dups suffix1=_1 ocmd='addcol LENGTH \"hypot(X_1, Y_1, Z_1)\"' out=3d_length_calc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Y_1,' 'Z_1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LENGTH hypot(X_1, Y_1, Z_1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_1,' 'Z_1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB' calculating absolute magnitude using J-band AB magnitude and distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB \"MAG_J + VEGA_AB_J\"' cmd='addcol MAG_ABS_J_AB \"MAG_J_AB - distanceToModulus(DISTANCE_PC)\"' out=j_abs_ab.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Select only rows 500 to 1000, inclusive (using the 1-based index).",
        "response": "stilts tpipe in=huge_cat.fits cmd='rowrange 500 1000' out=middle_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the mean, minimum, and maximum of the 'FLUX' column for objects where 'Z' > 0.5.",
        "response": "stilts tpipe in=data.fits cmd='select \"Z > 0.5\"' cmd='keepcols \"FLUX\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate an ASCII MOC at order 4 for a simulated catalog of 1000 stars and display it on the terminal.",
        "response": "stilts pixfoot in=:skysim:1000 ra=ra dec=dec order=4 mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Run an asynchronous query on the ARI Gaia TAP service for high proper motion stars (total PM > 200 mas/yr) and set the polling interval to 20 seconds (20000ms).",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT source_id, parallax, pmra, pmdec FROM gaiadr3.gaia_source WHERE SQRT(pmra*pmra + pmdec*pmdec) > 200' poll=20000 out=ari_high_pm.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Please take `messy_names.csv` and fix the column names to be more convenient for use in expressions, then save as `clean_names.csv`.",
        "response": "stilts tpipe ifmt=csv in=messy_names.csv cmd=fixcolnames ofmt=csv out=clean_names.csv",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot points with symmetric error bars defined by the ERR column for both X and Y coordinates.",
        "response": "stilts plot2plane in=measurements.fits layer=xyerror x=X y=Y xerrhi=ERR yerrhi=ERR out=xy_errors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_OLD_4' converting Johnson U magnitude to AB, using the R-band deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB_OLD_4 \"MAG_U + JOHNSON_AB_R\"' out=u_ab_old_conv_4.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB_OLD_4 MAG_U + JOHNSON_AB_R\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read an ECSV file and output it as a FITS file, explicitly naming the column-oriented output format.",
        "response": "stilts tcopy in=ecsv_data.ecsv ifmt=ecsv ofmt=colfits-plus out=ecsv_colfits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I want to generate the footprint of every 50th instrument pointing.",
        "response": "stilts mocshape in=pointings.fits icmd='every 50' shape=circle coords='array(RA,DEC,RADIUS)' out=sparse_pointings.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Read the first table extension (#1) from a multi-extension CDF file and convert it to VOTable.",
        "response": "stilts tcopy in=multi_ts.cdf#1 ifmt=cdf out=ts_ext1.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Concatenate four tables, removing any column that becomes constant in value across the entire resulting dataset.",
        "response": "stilts tcatn nin=4 in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits ocmd='constcol' out=variable_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Join two tables on exact ID. Output columns ID, MAG_1, MAG_2. Filter the output to select MAG_1 > 10.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID fixcols=dups suffix1=_1 suffix2=_2 ocmd='keepcols \"ID MAG_1 MAG_2\"; select \"MAG_1 > 10\"' out=mag_filtered_subset.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MAG_1' 'MAG_2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID MAG_1 MAG_2\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'MAG_1' 'MAG_2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I have columns `FLUX_U`, `FLUX_G`, `FLUX_R`. Collapse them into a single 3-element array column named `FLUXES`.",
        "response": "stilts tpipe in=photometry.fits cmd='collapsecols FLUXES FLUX_U 3' out=photometry_arrays.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables T_EARLY and T_LATE. Only keep the columns 'ID' and 'TIME' from T_EARLY, and keep all columns from T_LATE.",
        "response": "stilts tcatn nin=2 in1=T_EARLY.fits icmd1='keepcols \"ID TIME\"' in2=T_LATE.fits out=partial_cols_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 309.9301 and latitude 73.9911. Please use a search radius of 1.4009 degrees. Save the results to a ascii file called query_results_53.ascii.",
        "response": "stilts cone servicetype=sia1 serviceurl=http://irsa.ipac.caltech.edu/sia lon=309.9301 lat=73.9911 radius=1.4009 omode=out ofmt=ascii out=query_results_53.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Run a TAP query but don't delete the job when it's done, I want to resume it later.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 5 * FROM gaiadr3.gaia_source' sync=false delete=never",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert the first table from a multi-extension FITS file at a URL to a local CSV.",
        "response": "stilts tcopy in=http://example.com/multi.fits#1 out=first_ext.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Copy 'gaia_dr3_subset.fits' to a VOTable using **VOTable version 1.3** and binary serialization.",
        "response": "stilts tcopy in=gaia_dr3_subset.fits ofmt='votable(version=V13,format=BINARY)' out=gaia_v13.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "How do I perform a match and see timing and profiling information?",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' progress=profile out=profiled_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve all column metadata from the MAST MissionMAST summary table.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/missionmast/ adql='SELECT * FROM TAP_SCHEMA.columns WHERE table_name = ''hst.summary''' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert celestial coordinates from FK4 B1950 (RA_B, DEC_B) to ICRS (RA_I, DEC_I) using the addskycoords filter.",
        "response": "stilts tpipe in=legacy.fits cmd='addskycoords fk4 icrs RA_B DEC_B RA_I DEC_I' out=icrs_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge two tables, T_MAIN and T_SUPP. T_SUPP contains a 3D velocity vector array 'VELOCITY_VEC'. Explode only this column.",
        "response": "stilts tcatn nin=2 in1=T_MAIN.fits in2=T_SUPP.fits icmd2='explodecols VELOCITY_VEC' out=velocity_exploded.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query NED for galaxies near M87 (RA 187.7, Dec 12.4, 0.01 deg radius), explicitly requesting the standard ADQL language.",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT ra, dec FROM object WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 187.7, 12.4, 0.01))' language=ADQL out=ned_m87_cone.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. Output should include all T2 rows, regardless of T1 match, and only T3 rows that matched T1.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=3 in1=T1.fits in2=T2.fits join2=always in3=T3.fits join3=match values1='RA DEC' values2='RA DEC' values3='RA DEC' out=t2_outer_t3_inner.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Execute a cone query with a radius defined by an expression, say 0.05 * 2, and rename the 'ID' column to 'SOURCE_ID' in the output.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=30.0 lat=15.0 radius='0.05 * 2' ocmd='colmeta -name SOURCE_ID ID' out=renamed_output.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.05 * 2\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the MAST ULLYSES HLSP service and ensure that the asynchronous job is deleted only after it has successfully finished processing.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT TOP 10 * FROM ivoa.ObsCore' delete=finished out=ullyses_delete_finished.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read data from the first 50 rows of an ASCII file to guess column types, then convert the whole file to FITS.",
        "response": "stilts tcopy in=large.txt ifmt='ascii(maxSample=50)' out=type_inferred.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the CSIRO Parkes Pulsar Data Archive for pulsars with period error less than 1e-6 and output the result in FITS format.",
        "response": "stilts tapquery tapurl=https://data.csiro.au/psrdavo/tap adql='SELECT * FROM PSRD.cat WHERE per_err < 1E-6' out=pulsar_low_error.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'PLX_DIST_MEDIAN' containing the median distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_MEDIAN \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.5)\"' out=median_dist_3kpc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_MEDIAN distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert the astronomical catalogue 'data.fits' into a VOTable document, forcing the output to use VOTable version 1.5.",
        "response": "stilts tcopy in=data.fits ofmt='votable(version=V15)' out=data_v15.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert a Parquet file containing VOParquet metadata to a FITS file, explicitly reading the **metadata from an external VOTable file**.",
        "response": "stilts tcopy in=input.parquet ifmt='parquet(votable=meta.vot)' out=meta_overridden.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "After combining my tables, I want to replace any occurrence of the string 'N/A' with a null value in the 'NOTES' column.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='replaceval \"N/A\" null NOTES' out=clean_notes.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert an IPAC table to FITS, ensuring table parameters are output as well as row data (IPAC default).",
        "response": "stilts tcopy in=input.tbl ifmt=ipac ofmt='ipac(params=true)' out=ipac_params.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Perform a synchronous query to the MAST Gaia DR3 service to retrieve the unique IDs and mean G-band magnitudes for all entries within 1 degree of M101.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT source_id, phot_g_mean_mag FROM gaiadr3.gaia_source WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 210.8, 54.3, 1.0))' sync=true out=m101_gaia.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a FITS table to a VOTable, ensuring XML output encoding is **ISO-8859-1**.",
        "response": "stilts tcopy in=input.fits ofmt='votable(encoding=ISO-8859-1)' out=iso8859_vot.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot error ellipses derived from Gaia correlation (mas unit), using the elliptical crosshair shape (crosshair_ellipse).",
        "response": "stilts plot2sky in=gaia.fits layer=skycorr lon=RA lat=DEC lonerr=ER laterr=ED corr=C unit=mas ellipse=crosshair_ellipse out=gaia_mas_crosshair.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve 10 rows from the MAST CANDELS HLSP photometry table and output the result in Feather format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT TOP 10 * FROM candels.photometry' ofmt=feather out=candels_sample.feather",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert the input table to an HTML file suitable for display, including table parameters.",
        "response": "stilts tpipe in=data.fits ofmt=html out=report.html",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "My polygon vertices are in separate columns `v1x,v1y`, `v2x,v2y`, `v3x,v3y`. How do I make the MOC?",
        "response": "stilts mocshape in=vertices.fits shape=polygon coords='array(v1x,v1y, v2x,v2y, v3x,v3y)' out=triangle_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need to join table `a.fits` with the output of `tloop`.",
        "response": "stilts tcatn nin=2 in1=a.fits in2=:loop:100 icmd1='keepcols i' icmd2='addcol x i*2' out=joined_loop.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge three tables, then sort the output by the concatenation of 'FIELD_ID' and 'SOURCE_NUM'.",
        "response": "stilts tcatn nin=3 in1=F1.fits in2=F2.fits in3=F3.fits ocmd='addcol SORT_KEY \"concat(FIELD_ID, toString(SOURCE_NUM))\"' ocmd='sort \"SORT_KEY\"' out=sorted_composite_key.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'toString(SOURCE_NUM))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SORT_KEY concat(FIELD_ID, toString(SOURCE_NUM))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'toString(SOURCE_NUM))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read a gzipped VOTable file from a URL and convert it to a local ECSV file.",
        "response": "stilts tcopy in=http://remote.org/cat.vot.gz out=local_cat.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Concatenate T_POS and T_FLUX. T_FLUX columns are in a fixed order; drop T_FLUX's first two columns (ID, Name) before combining.",
        "response": "stilts tcatn nin=2 in1=T_POS.fits in2=T_FLUX.fits icmd2='delcols \"$1 $2\"' out=columns_shifted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read a table, calculate the column 'FLUX_JY' from 'MAG_AB' using `abToJansky`, and output the table metadata only.",
        "response": "stilts tpipe in=phot.fits cmd='addcol FLUX_JY abToJansky(MAG_AB)' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'TIME_BESSELIAN' converting MJD to Besselian Epoch.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_BESSELIAN mjdToBesselian(MJD_TIME)' out=besselian_time.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query SIMBAD for a sample of sources and perform a local operation to convert the object type (otype) to uppercase.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT TOP 10 main_id, otype FROM basic' ocmd='replacecol OTYPE toUpperCase(otype)' out=simbad_upper_otype.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge photometry tables, ensuring that the combined result contains columns 'MAG_B' and 'MAG_V' in Vega units, converting if necessary.",
        "response": "stilts tcatn nin=2 in1=T1_AB.fits icmd1='replacecol MAG_B \"MAG_B - JOHNSON_AB_B\"' in2=T2_Vega.fits out=vega_unified.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'JOHNSON_AB_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_B MAG_B - JOHNSON_AB_B\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' 'JOHNSON_AB_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3, T4 (group mode). Filter the final output to keep only groups where the calculated standard deviation of the MAG column is less than 0.1.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits fixcols=dups suffix1=_1 suffix2=_2 suffix3=_3 suffix4=_4 ocmd='addcol MAG_STDEV \"stdev(MAG_1, MAG_2, MAG_3, MAG_4)\"' ocmd='select \"MAG_STDEV < 0.1\"' out=low_stdev_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MAG_2,' 'MAG_3,' 'MAG_4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_STDEV stdev(MAG_1, MAG_2, MAG_3, MAG_4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'MAG_2,' 'MAG_3,' 'MAG_4)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate T_POS.fits and T_FLUX.fits. T_FLUX has an array column 'SPEC_ARRAY'. Replace it with the maximum value in that array before joining.",
        "response": "stilts tcatn nin=2 in1=T_POS.fits in2=T_FLUX.fits icmd2='replacecol SPEC_ARRAY maximum(SPEC_ARRAY)' out=max_flux_scalar.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge tables and then convert the result to ECSV format, setting the output delimiter to space.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt='ecsv(delimiter=space)' out=spaced_ecsv.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I need a MOC at order 16 for objects where the identifier column 'OBJ_ID' is an even number.",
        "response": "stilts mocshape in=ids.fits icmd='select \"OBJ_ID % 2 == 0\"' shape=point coords='array(RA, DEC)' order=16 out=even_id_o16.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select OBJ_ID % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for all sources with a parallax greater than 100 mas.",
        "response": "stilts mocshape in=gaia.fits icmd='select \"PARALLAX > 100\"' shape=point coords='array(ra,dec)' out=nearby_stars.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PARALLAX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "My ASCII file is very large. Does `tcopy` have to read it twice?",
        "response": "Yes, the `ascii` reader often requires two passes to determine column types. You can limit this by using `ifmt='ascii(maxSample=1000)'` to guess types from the first 1000 rows, which is faster but may guess wrong.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a string column 'FLAG_HEX' containing the hexadecimal representation of the integer 'FLAG'.",
        "response": "stilts tpipe in=flags.fits cmd='addcol FLAG_HEX toHex(FLAG)' out=hex_flagged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Output the final table to a PostgreSQL database table named 'processed_data' (appending rows).",
        "response": "stilts tpipe in=final.fits omode=tosql protocol=postgresql host=db_host db=mydb dbtable=processed_data write=append user=dbuser",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I want to show the 5th and 95th percentiles of my data on a scatter plot.",
        "response": "stilts plot2plane in=data.fits layer_m=mark x_m=X y_m=Y layer_q=quantile x_q=X y_q=Y quantiles_q='0.05,0.95' color_q=green",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve a sample of up to 10 rows from the MAST PanSTARRS DR2 service and compute the checksum of the result.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT TOP 10 * FROM dbo.detection_object' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Get the `ra_dec_corr` for all Gaia sources where it's not null.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, ra_dec_corr FROM gaiadr3.gaia_source WHERE ra_dec_corr IS NOT NULL'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a MOC (order 19) for sources with a radius calculated as 10 arcseconds plus 5 arcseconds.",
        "response": "stilts pixfoot in=combined_as.fits ra=RA dec=DEC radius='(10.0 + 5.0) / 3600.0' order=19 out=combined_15as.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate two tables, discarding the 'ERROR' column from both inputs before joining.",
        "response": "stilts tcatn nin=2 in1=c1.fits icmd1='delcols ERROR' in2=c2.fits icmd2='delcols ERROR' out=error_free.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate an order 7 MOC for polygons, outputting the result using the verbose standard FITS format.",
        "response": "stilts mocshape in=polygons.fits shape=polygon coords=VERTICES order=7 mocfmt=fits out=poly_o7_fits.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "How to set the output image size to 800x600 pixels?",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xpix=800 ypix=600 out=plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Show the median line for a noisy scatter plot.",
        "response": "stilts plot2plane in=noisy_data.fits layer_pts=mark x_pts=TIME y_pts=FLUX layer_med=quantile x_med=TIME y_med=FLUX quantiles_med=0.5 color_med=red",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TIME\"\n    (The name \"TIME\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a MOC for a $0.001$ mas radius (high precision search).",
        "response": "stilts pixfoot in=sub_mas.fits ra=RA dec=DEC radius='0.001 / 3600000.0' out=sub_mas_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Calculate the checksum of a large EPN core query result from the PADC Planetary server.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT * FROM epn_core.epn_core WHERE target_name = ''Moon''' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot elliptical regions using the xyellipse layer, setting the orientation angle (POSANG) to 45 degrees.",
        "response": "stilts plot2plane in=ellipses.fits layer=xyellipse x=X y=Y ra=A rb=B posang=45 out=45_deg_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Crossmatch T1, T2, T3. Apply a filter to T2 to discard rows where magnitude MAG is null, and rename T3's magnitude column to MAG_3 before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits in2=T2.fits icmd2='select !NULL_MAG' in3=T3.fits icmd3='colmeta -name MAG_3 MAG' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=t2_clean_t3_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate an ASCII MOC with a 0.01 degree radius for each point.",
        "response": "stilts pixfoot in=points.vot radius=0.01 mocfmt=ascii out=points_coverage.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "What's the command to get a FITS MOC from a simulated catalog of 1.5 million stars?",
        "response": "stilts pixfoot in=:skysim:1.5e6 ra=ra dec=dec mocfmt=fits out=sim_1.5M.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC for all sources with `parallax_error < 0.1`.",
        "response": "stilts mocshape in=gaia.fits icmd='select \"parallax_error < 0.1\"' shape=point coords='array(ra,dec)' out=low_parallax_error.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select parallax_error < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Read a table, calculate the proper motion vector magnitude (PM_MAG) using hypot, and explicitly set the output data type for the new column to 32-bit float.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol -type \"float PM_TOTAL hypot(PMRA, PMDEC)\"' out=pm_float.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PM_TOTAL' 'hypot(PMRA,' 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type float PM_TOTAL hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PM_TOTAL' 'hypot(PMRA,' 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Remove all rows which are exact duplicates based on columns 'RA' and 'DEC'.",
        "response": "stilts tpipe in=data.fits cmd='sort \"RA DEC\"' cmd='uniq \"RA DEC\"' out=unique_coords.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort RA DEC\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge two tables. T1 has 'Flux_uJy'; convert this to Janskys in T1 before concatenating with T2.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='replacecol FLUX_JY \"Flux_uJy * 1e-6\"' in2=T2.fits out=flux_unit_aligned.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1e-6'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_JY Flux_uJy * 1e-6\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '1e-6'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert a long integer row index ($0) to a string padded with zeros to 8 digits.",
        "response": "stilts tpipe in=:loop:100 cmd='replacecol i \"padWithZeros(i, 8)\"' out=padded_index.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '8)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol i padWithZeros(i, 8)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '8)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a scatter plot with logarithmic scaling on both axes for FLUX vs FLUX_ERROR.",
        "response": "stilts plot2plane in=data.fits layer=mark x=FLUX y=FLUX_ERROR xscale=log yscale=log out=log_log.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"FLUX\"\n    (The name \"FLUX\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Perform a cone search and output the result using VOTable serialization with BINARY encoding, writing the result to standard output.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=100.0 lat=50.0 radius=0.005 ofmt='votable(format=BINARY)' out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Overlay density contours on an Equatorial plot, with the contours colored based on the standard deviation of MAGNITUDE (combine=stdev).",
        "response": "stilts plot2sky in=data.fits layer=contour lon=RA lat=DEC weight=MAGNITUDE combine=stdev out=stdev_mag_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Replace null values in the 64-bit integer column 'LONG_ID' with -1.",
        "response": "stilts tpipe in=data.fits cmd='replacecol LONG_ID \"NULL_LONG_ID ? -1L : LONG_ID\"' out=long_id_fixed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '-1L' ':' 'LONG_ID'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol LONG_ID NULL_LONG_ID ? -1L : LONG_ID\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '-1L' ':' 'LONG_ID'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can I query a TAP service using HTTP POST instead of GET?",
        "response": "STILTS handles the POST/GET submission automatically. For short queries, it typically uses GET. For longer queries, especially those with uploads, it will use POST behind the scenes.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tapquery"
    },
    {
        "prompt": "My coordinates are in separate columns for degrees, minutes, and seconds. Can I combine them for `pixfoot`?",
        "response": "stilts pixfoot in=dms_coords.fits icmd='addcol RA_DEG dmsToDegrees(RA_D,RA_M,RA_S)' icmd='addcol DEC_DEG dmsToDegrees(DEC_D,DEC_M,DEC_S)' ra=RA_DEG dec=DEC_DEG out=combined_dms.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine tables and write the final result as a LaTeX table snippet for a publication.",
        "response": "stilts tcat in='small_d1.fits small_d2.fits' ofmt=latex out=output_latex.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot the mean of an array column (ycombine=mean) versus the median of the corresponding X array (xcombine=median) using statmark.",
        "response": "stilts plot2plane in=arrays.fits layer=statmark xs=X_ARR ys=Y_ARR xcombine=median ycombine=mean out=median_mean_mark.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_ARR\"\n    (The name \"X_ARR\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Select only rows where the decimal year (`DECYEAR`) is 2010.0 or later, and convert the RA coordinate to radians in a new column.",
        "response": "stilts tpipe in=data.fits cmd='select \"DECYEAR >= 2010.0\"' cmd='addcol RA_RAD \"degreesToRadians(RA)\"' out=recent_rad_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '2010.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DECYEAR >= 2010.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '2010.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot the median line for noisy scatter data using the quantile layer, coloring it red.",
        "response": "stilts plot2plane in=noisy_data.fits layer_med=quantile x_med=TIME y_med=FLUX quantiles_med=0.5 color_med=red join_med=lines out=median_line.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TIME\"\n    (The name \"TIME\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot vectors (in degrees) using the 'capped_lines' shape, applying transparency shading (translevel=0.2).",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=degree arrow=capped_lines shading=translucent translevel=0.2 out=transp_capped_vec.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. Output should include all T1 rows, and only T2 rows that were matched, and only T3 rows that were matched.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits join1=always in2=T2.fits join2=match in3=T3.fits join3=match values1='RA DEC' values2='RA DEC' values3='RA DEC' out=selective_outer_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Explode a 1-dimensional integer array column 'IDS' into scalar columns.",
        "response": "stilts tpipe in=arrays.fits cmd='explodecols IDS' out=exploded_ids.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table using the JDBC scheme and output the resulting table as a VOTable, ensuring binary serialization.",
        "response": "stilts tcopy in=':jdbc:psql://db/cat#SELECT * FROM table' ofmt='votable(format=BINARY)' out=jdbc_binary.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert a VOTable to a FITS file, but without the FITS-plus headers.",
        "response": "stilts tcopy in=data.vot ofmt='fits(primary=basic)' out=basic.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read a FITS catalog, remove rows where the magnitude error (MAG_ERR) is zero, and replace the column description of 'RA_ICRS' to include units.",
        "response": "stilts tpipe in=survey.fits cmd='select \"MAG_ERR != 0\"' cmd='colmeta -desc \"Right Ascension (ICRS, deg)\" RA_ICRS' out=clean_survey.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine three tables from different years, but only keep sources brighter than 17th magnitude from all of them.",
        "response": "stilts tcatn nin=3 in1=2019.fits icmd1='select \"MAG < 17\"' in2=2020.fits icmd2='select \"MAG < 17\"' in3=2021.fits icmd3='select \"MAG < 17\"' out=bright_only.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '17'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 17\n\nUsage: select <expr>\n    (Unused arguments: '<' '17'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC for all sources that have non-zero proper motion (PMRA != 0 || PMDEC != 0).",
        "response": "stilts mocshape in=pm_data.fits icmd='select \"PMRA != 0 || PMDEC != 0\"' shape=point coords='array(RA, DEC)' out=pm_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0' '||' 'PMDEC' '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA != 0 || PMDEC != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0' '||' 'PMDEC' '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Draw markers that are size 5 and colored by the square of the proper motion (PM^2), using weighted shading.",
        "response": "stilts plot2plane in=pm.fits layer=mark x=RA y=DEC size=5 shading=weighted weight='PMRA*PMRA + PMDEC*PMDEC' auxmap=sunset out=pm_sq_weighted.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match catalogs T_A and T_B on a 3D parameter space (X, Y, Z) within 15 units.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=3d params=15 values1='X Y Z' values2='X Y Z' out=cartesian_3d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the APPLAUSE TAP Service for plates taken at a specific observatory (e.g., 'Tautenburg').",
        "response": "stilts tapquery tapurl=https://www.plate-archive.org/tap adql='SELECT plate_id, ra_center, dec_center FROM apl.plate_meta WHERE obs_name = ''Tautenburg''' out=applause_tautenburg.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot the `marks` for two different array columns on the same axes.",
        "response": "stilts plot2plane in=data.fits xs=WAVE layer_1=marks ys_1=FLUX1 color_1=blue layer_2=marks ys_2=FLUX2 color_2=red",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVE\"\n    (The name \"WAVE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Start a synchronous query on MAST PanSTARRS 1 DR1 to count sources with 'r_mean_mag' brighter than 20.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT COUNT(*) FROM dbo.detection_object WHERE r_mean_mag < 20' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch T1, T2, T3, T4 (group mode). Add an empty string column 'COMMENT' to the output for annotations.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits ocmd='addcol COMMENT \"\"' out=empty_comment_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a WDC format file and save it as FITS.",
        "response": "stilts tcopy in=wdc_data.txt ifmt=wdc out=wdc.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Calculate K-correction for SDSS g-band (KCF_g) at redshift Z=0.1, using g-r color (KCC_gr).",
        "response": "stilts tpipe in=data.fits cmd='addcol KCORR \"kCorr(KCF_g, 0.1, KCC_gr, G_MAG-R_MAG)\"' out=kcorrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.1,' 'KCC_gr,' 'G_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR kCorr(KCF_g, 0.1, KCC_gr, G_MAG-R_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.1,' 'KCC_gr,' 'G_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve all table names from the UCL DaCHS server TAP service, running synchronously.",
        "response": "stilts tapquery tapurl=http://astroweb.projects.phys.ucl.ac.uk:8000/tap adql='SELECT table_name FROM TAP_SCHEMA.tables' sync=true out=ucl_tables_sync.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Change the name of the column 'TEFF' to 'Temperature' and explicitly set its unit to 'K'.",
        "response": "stilts tpipe in=stars.fits cmd='colmeta -name Temperature -units K TEFF' out=stars_temp.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge an ASCII table and an IPAC table. In the ASCII table, specify the input format options to sample only the first 500 rows to guess column types.",
        "response": "stilts tcatn nin=2 in1=input.txt ifmt1='ascii(maxSample=500)' in2=input.tbl ifmt2=ipac out=sample_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. Calculate the distance modulus DM from magnitude M and distance R_PC (modulusToDistance(R_PC)) and match on DM only (1d matcher).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=1d params=0.5 in1=T1.fits icmd1='addcol DM modulusToDistance(R_PC)' in2=T2.fits icmd2='addcol DM modulusToDistance(R_PC)' in3=T3.fits icmd3='addcol DM modulusToDistance(R_PC)' values1=DM values2=DM values3=DM out=distance_modulus_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Draw a plot where markers are sized by MAGNITUDE and colored by Z, using the 'weighted' shading mode.",
        "response": "stilts plot2plane in=sources.fits layer=size x=RA y=DEC size=MAGNITUDE shading=weighted weight=Z auxmap=inferno out=weighted_size_z.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert a Parquet table to a local FITS file, ensuring the Parquet reading process uses **column caching** for speed.",
        "response": "stilts tcopy in=large.parquet ifmt='parquet(cachecols=true)' out=large_cached.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate a MOC (order 15) for sources where $\text{B_MAG} - \text{R_MAG} > 2.0$, using a 2 arcminute radius.",
        "response": "stilts pixfoot in=red_sources.fits icmd='select \"B_MAG - R_MAG > 2.0\"' ra=RA dec=DEC radius='2.0 / 60.0' order=15 out=red_sources_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'R_MAG' '>' '2.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select B_MAG - R_MAG > 2.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'R_MAG' '>' '2.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine tables A and B. In A, calculate a redshift (Z) estimate from comoving distance (DC_Mpc) using a flat LCDM cosmology.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='addcol Z distToZ(DC_Mpc)' in2=B.fits out=redshift_estimated.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve the checksum of a sample query (10 rows) against the PADC Astro server's table schema.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT TOP 10 * FROM TAP_SCHEMA.tables' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Count the number of available tables in the ESO TAP_CAT service using synchronous access.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT COUNT(*) FROM TAP_SCHEMA.tables' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query J-PLUS DR3 for galaxies, locally calculating a new color index (`g_mag - r_mag`) and sorting the result by this color in ascending order.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jplus-dr3 adql='SELECT TOP 50 g_mag, r_mag FROM jplus_dr3.master' ocmd='addcol COLOR \"g_mag - r_mag\"; sort \"COLOR\"' out=jplus_color_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'r_mag'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COLOR g_mag - r_mag\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'r_mag'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve the top 1000 Gaia DR3 sources with RA and Dec, saving the output as a VOTable file, running the query asynchronously.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 1000 source_id, ra, dec FROM gaiadr3.gaia_source' out=gaia_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the VizieR TAP service for the 2MASS Point Source Catalog (II/246/out) and output the results in IPAC text format.",
        "response": "stilts tapquery tapurl=http://cdsarc.cds.unistra.fr/saadavizier.tap/tap adql='SELECT TOP 10 * FROM \"II/246/out\"' ofmt=ipac out=2mass_ipac.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a table and output it as a text file, ensuring table parameters are **not** included.",
        "response": "stilts tcopy in=params.fits ofmt='text(params=false)' out=no_params.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match T_A and T_B. T_B has an array column 'FLUX_VEC'. Explode this array column into scalars before matching in 2D space (X, Y, FLUX_VEC_0).",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits icmd2='explodecols FLUX_VEC' matcher=3d params=1 values1='X Y FLUX_VEC_0' values2='X Y FLUX_VEC_0' out=exploded_array_3d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine tables, converting the output to VOTable format and setting the output version to 1.4.",
        "response": "stilts tcat in='v1.fits v2.fits' ofmt='votable(version=V14)' out=votable_v14.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create an order 9 MOC for circles whose radius is given by the expression $1 / (\text{DISTANCE_MODULUS} + 1)$.",
        "response": "stilts mocshape in=modulus.fits shape=circle coords='array(RA, DEC, 1.0 / (DM + 1.0))' order=9 out=modulus_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Use the assert filter to check if the total number of rows is exactly 500.",
        "response": "stilts tpipe in=fixed_list.fits cmd='assert \"$nrow == 500\"' omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '500'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $nrow == 500\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '500'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge two ECSV files and display the final concatenated table in the graphical user interface.",
        "response": "stilts tcat ifmt=ecsv in='e1.ecsv e2.ecsv' omode=gui",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Convert a CSV file to HTML output, ensuring the output is a full, standalone HTML document.",
        "response": "stilts tcopy in=data.csv ifmt=csv ofmt='html(standalone=true)' out=standalone_report.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plotting markers sized by $\\log_{10}(\\text{FLUX})$, turning autoscale off.",
        "response": "stilts plot2plane in=sources.fits layer=size x=RA y=DEC size='log10(FLUX)' autoscale=false out=log_size_fixed.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Copy a table from a simulation (Clifford attractor) and save it as a compressed Parquet file.",
        "response": "stilts tcopy in=':attractor:1e5,clifford' ofmt='parquet(compression=lz4_raw)' out=clifford.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the VizieR TAP service and output the result using VOTable serialization format BINARY.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT TOP 10 * FROM \"II/246/out\"' ofmt='votable(format=BINARY)' out=vizier_binary.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plotting $y = 1/x$, using fixed X range and logarithmic X scale.",
        "response": "stilts plot2plane layer=function fexpr='1/x' xmin=0.1 xmax=10 xscale=log out=reciprocal.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert a FITS file to a CSV file without the header row.",
        "response": "stilts tcopy in=data.fits ofmt='csv(header=false)' out=noheader.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Merge tables, keeping only columns with UCDs related to 'photometry.magnitude' and writing the final result as an ECSV file.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='keepcols ucd$phot.mag*' ofmt=ecsv out=phot_mag_only.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot error ellipses defined by X/Y errors and zero correlation (XYCORR=0) using the xycorr layer.",
        "response": "stilts plot2plane in=errors.fits layer=xycorr x=X y=Y xerr=X_ERR yerr=Y_ERR xycorr=0 out=xycorr_zero.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Ensure that the input table supports random access, copying it to temporary storage if necessary, for debugging purposes only.",
        "response": "stilts tpipe in=stream.fits cmd=random out=rand_access.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Run a synchronous query against the ARI Gaia service for 10 stars with high parallax error (parallax_error > 0.5 mas).",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 10 source_id, parallax FROM gaiadr3.gaia_source WHERE parallax_error > 0.5' sync=true out=ari_high_error.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Set a flag in the column 'QUALITY_FLAG' only if bit 0 is not set (i.e., bit 0 is 0).",
        "response": "stilts tpipe in=flags.fits cmd='addcol BIT0_FALSE \"!hasBit(QUALITY_FLAG, 0)\"' out=bit0_false.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol BIT0_FALSE !hasBit(QUALITY_FLAG, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB_NEW_2' converting J magnitude to AB and then to absolute magnitude using distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_NEW_2 \"MAG_J + VEGA_AB_J\"' cmd='addcol MAG_ABS_J_AB_NEW_2 \"MAG_J_AB_NEW_2 - distanceToModulus(DISTANCE_PC)\"' out=j_abs_ab_new_2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_NEW_2 MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Group match three tables, T1, T2, T3. T1 contains magnitude error in mas, convert it to arcsec (by dividing by 1000) and use it for `skyerr` matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=skyerr params=1 in1=T1.fits icmd1='replacecol ERR_ARCSEC ERR_MAS/1000.0' in2=T2.fits in3=T3.fits values1='RA DEC ERR_ARCSEC' values2='RA DEC ERR_ARCSEC' values3='RA DEC ERR_ARCSEC' out=converted_error_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Display the checksum of the table after removing columns using the UCD filter (e.g., all photometry).",
        "response": "stilts tpipe in=full_data.fits cmd='delcols ucd$phot_mag_*' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Map circles where the radius is a fixed 10 arcseconds, and the positions are derived from Ecliptic Lon/Lat coordinates.",
        "response": "stilts mocshape in=ecl_data.fits icmd='addskycoords ecliptic icrs ELON ELAT RA_ICRS DEC_ICRS' shape=circle coords='array(RA_ICRS, DEC_ICRS, 10.0 / 3600.0)' out=ecl_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Remove the columns whose names contain 'ERROR' and those with index greater than 10.",
        "response": "stilts tpipe in=data.fits cmd='delcols \"*ERROR* 11-\"' out=data_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot two layers: A (density shading, color red) and B (flat shading, color blue), ensuring layer B is drawn first (seq=_b,_a).",
        "response": "stilts plot2sky layer_a=mark in_a=d_a.fits lon_a=RA lat_a=DEC shading_a=density color_a=red layer_b=mark in_b=d_b.fits lon_b=RA lat_b=DEC shading_b=flat color_b=blue seq=_b,_a out=seq_density_flat.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a MOC (order 12) for sources where the radius is given by the distance modulus (DM) column scaled by $0.00001$.",
        "response": "stilts pixfoot in=dm_cat.fits ra=RA dec=DEC radius='DM * 0.00001' out=dm_scaled_o12.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query and ensure the search radius is fixed at 10 arcseconds, converting that value to degrees first.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=250.0 lat=0.0 radius='10.0 / 3600.0' out=ten_arcsec.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plotting elliptical error regions, filled, transparent (opaque=15).",
        "response": "stilts plot2plane in=data.fits layer=xyellipse x=X y=Y ra=A rb=B posang=P ellipse=filled_ellipse shading=transparent opaque=15 out=filled_trans_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve the names and descriptions of all tables provided by the AIP DaCHS TAP service.",
        "response": "stilts tapquery tapurl=http://gavo.aip.de/tap adql='SELECT table_name, description FROM TAP_SCHEMA.tables' out=aip_tables.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plotting a histogram where bars are horizontal.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE sideways=true out=sideways_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a 2D density map where the color represents the number of points per unit area (count-per-unit).",
        "response": "stilts plot2plane in=large_survey.fits layer=grid x=RA y=DEC combine=count-per-unit out=count_per_unit_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a line where the color varies according to the row index, using the 'sunset' map.",
        "response": "stilts plot2plane in=data.fits layer=line x=X y=Y aux='$0' auxmap=sunset out=indexed_color_line.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate an ASCII MOC (order 5) for all positions defined in input_data.vot.",
        "response": "stilts pixfoot in=input_data.vot ra=RA dec=DEC order=5 mocfmt=ascii out=lowres_moc.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q5' containing the 5th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q5 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.05)\"' out=q5_dist_1350pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.05)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q5 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.05)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.05)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine table T1 and T2. Table T2 (Parquet) needs its 'DEC' column converted from radians to degrees before combining with T1.",
        "response": "stilts tcatn nin=2 in1=t1_deg.fits in2=t2_rad.parquet icmd2='replacecol DEC_DEG radiansToDegrees(DEC_RAD)' out=deg_parquet.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 exactly on ID. After matching, sort the result by the sum of magnitudes MAG_1 + MAG_2 + MAG_3 descending.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_1 suffix2=_2 suffix3=_3 ocmd='addcol MAG_SUM MAG_1+MAG_2+MAG_3' ocmd='sort -down MAG_SUM' out=sorted_by_mag_sum.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Check the memory storage implementation used at this point in the pipeline.",
        "response": "stilts tpipe in=input.fits cmd=check out=checked.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge two tables. In T1, drop the final column by using its positional index '$NCOL'.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='delcols $ncol' in2=T2.fits out=final_col_dropped.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve data from VizieR TAP around RA 300, Dec 30, with a radius of 0.05 degrees, and sort the output by the resulting angular separation ('Separation' column).",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=300.0 lat=30.0 radius=0.05 ocmd='sort Separation' out=vizier_sorted_sep.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Crossmatch T1 and T2 using spherical polar coordinates (sky3d). T1 radial distance is derived from redshift Z (using zToDist function). Tolerance 5 Mpc.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='addcol DIST_M zToDist(Z)' in2=T2.fits matcher=sky3d params=5 values1='RA DEC DIST_M' values2='RA DEC DIST_M' out=redshift_3d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a polygon MOC (order 10) from coordinates supplied as a space-separated string column named 'VERT_LIST', using parseDoubles.",
        "response": "stilts mocshape in=vertex_list.fits shape=polygon coords='parseDoubles(VERT_LIST)' order=10 out=parsed_poly_o10.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). Filter T1 to only include rows where 'V_MAG' is brighter than 18.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=5 in1=T1.fits icmd1='select \"V_MAG < 18\"' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=T1_bright_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select V_MAG < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "What's the command to plot points with a size of 10 pixels?",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y size=10",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate multiple tables, ensuring the magnitude 'MAG' is replaced by NULL if it is less than 5 (i.e., too bright for the sensor).",
        "response": "stilts tcatn nin=3 in1=s1.fits in2=s2.fits in3=s3.fits ocmd='select \"MAG > 5 || NULL_MAG || replaceval MAG NULL MAG\"' out=filtered_bright.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5' '||' 'NULL_MAG' '||' 'replaceval' 'MAG' 'NULL' 'MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 5 || NULL_MAG || replaceval MAG NULL MAG\n\nUsage: select <expr>\n    (Unused arguments: '>' '5' '||' 'NULL_MAG' '||' 'replaceval' 'MAG' 'NULL' 'MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the PADC TAP Planetary server for observations of 'Mars' and locally add a column `IS_JPL` which is always true.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT TOP 5 * FROM epn_core.epn_core WHERE target_name = ''Mars''' ocmd='addcol IS_JPL true' out=mars_flag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T1, T2, T3 (pairs, T1 ref). Output should include the row index ($0) of T1 as a column named 'T1_INDEX'.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits ocmd='addcol T1_INDEX $0' out=T1_index_pair.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the European XMM-Newton Archive (XMM-Newton data and catalogues) for the top 5 observation entries and explicitly request TAP 1.1 protocol handling.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT TOP 5 * FROM ivoa.ObsCore' interface=tap1.1 out=xmm_tap11.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Count the number of objects classified as 'G' (Galaxy) in the SIMBAD basic catalogue, running synchronously.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT COUNT(*) FROM basic WHERE otype = ''G''' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot two layers: one marks sources brighter than MAG=15 (red), the other marks fainter ones (blue).",
        "response": "stilts plot2sky in=data.fits layer_b=mark icmd_b='select MAG < 15' color_b=red layer_f=mark icmd_f='select MAG >= 15' color_f=blue out=mag_split_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve table metadata from the KSB-ROB service synchronously.",
        "response": "stilts tapquery tapurl=http://vo-tap.oma.be/tap adql='SELECT * FROM TAP_SCHEMA.tables' sync=true omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 observations from the MAST MissionMAST service and locally add a column `T_START_ISO` by converting the `t_start` MJD value to ISO 8601 format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/missionmast/ adql='SELECT TOP 10 obs_id, t_start FROM hst.summary' ocmd='addcol T_START_ISO mjdToIso(t_start)' out=mast_iso_time.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy data from a simulated sky catalog of 1 million stars to a FITS file.",
        "response": "stilts tcopy in=:skysim:1000000 out=simulated_large.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine a table of photometry (phot.fits) with a table of spectra (spec.fits). The spectrum table has columns that must be renamed 'FLUX' and 'WAVELENGTH' for compatibility.",
        "response": "stilts tcatn nin=2 in1=phot.fits in2=spec.fits icmd2='colmeta -name FLUX SPEC_VAL; colmeta -name WAVELENGTH WAVE_VAL' out=spec_phot_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find rows in T_A that are NOT matched in T_B (sky 4 arcsec). Output the result metadata only.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=sky params=4 values1='RA DEC' values2='RA DEC' join=1not2 omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a plot from a table with a billion rows using density shading.",
        "response": "stilts plot2plane in=big_data.fits layer=mark x=X y=Y shading=density storage=disk out=density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Search the MAST TESS Input Catalog (TIC) near Galactic L=10, B=2.5, using a radius of 100 arcseconds, saving the output as ECSV.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic lon=10.0 lat=2.5 radius='100.0 / 3600.0' skysys=galactic ofmt=ecsv out=tic_100as.ecsv",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"100.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the GAVO TAP service near Ecliptic Lon 45, Lat 45, using $0.025$ degrees, and calculate a statistical checksum of the result.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=45.0 lat=45.0 radius=0.025 skysys=ecliptic omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Set the table name parameter of `my_table.fits` to 'My Awesome Catalog'.",
        "response": "stilts tpipe in=my_table.fits cmd='tablename \"My Awesome Catalog\"' out=my_table_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine two tables, adding an output column 'LOG_R' calculated as log10 of a 'DISTANCE' column.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol LOG_R log10(DISTANCE)' out=log_distance_calc.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the ESO TAP_OBS service and assert locally that the minimum exposure time ('dit') is greater than 1.0 second for all retrieved VIRCAM rows.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 dit FROM raw.vircam' ocmd='assert \"dit > 1.0\"' out=vircam_assert_dit.fits",
        "error": "Error: Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert dit > 1.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query the MAST TESS Input Catalog (TIC) for objects, and filter the data locally to keep only rows where the TESS magnitude is brighter than 14.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 100 * FROM tic.v8' ocmd='select \"Tmag < 14\"' out=tic_bright_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '14'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Tmag < 14\n\nUsage: select <expr>\n    (Unused arguments: '<' '14'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a table while explicitly stating both input and output formats.",
        "response": "stilts tcopy ifmt=fits ofmt=votable in=input.fits out=output.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match two tables on 3D Cartesian coordinates (X, Y, Z) within 5 units. Output should be written to a VOTable using BINARY2 serialization.",
        "response": "stilts tmatch2 in1=D1.fits in2=D2.fits matcher=3d params=5 values1='X Y Z' values2='X Y Z' ofmt='votable(format=BINARY2)' out=3d_binary2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Read a table using the generic test scheme with variable array columns (:test:10,v) and save it as a VOTable.",
        "response": "stilts tcopy in=':test:10,v' out=variable_arrays.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'MAG_KCORR' using the formula M_corr = M + K_corr, where K_corr is calculated using the photometric redshift (Z_PHOT).",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_KCORR \"MAG + kCorr(KCF_r, Z_PHOT, KCC_gr, G_MAG-R_MAG)\"' out=kcorr_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'kCorr(KCF_r,' 'Z_PHOT,' 'KCC_gr,' 'G_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_KCORR MAG + kCorr(KCF_r, Z_PHOT, KCC_gr, G_MAG-R_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'kCorr(KCF_r,' 'Z_PHOT,' 'KCC_gr,' 'G_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match A.fits and B.fits. A has proper motion components. Calculate total PM magnitude and match on 1D total PM (1 mas/yr tolerance).",
        "response": "stilts tmatch2 in1=A.fits icmd1='addcol PM_TOT \"hypot(PMRA, PMDEC)\"' in2=B.fits matcher=1d params=1 values1=PM_TOT values2=PM_TOT out=pm_total_1d_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOT hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 222.5797 and latitude 15.9507. Please use a search radius of 1.5058 degrees. Save the results to a votable file called query_results_69.votable. The coordinates are in the supergalactic system. Don't use compression for the download.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=222.5797 lat=15.9507 radius=1.5058 skysys=supergalactic compress=false omode=out ofmt=votable out=query_results_69.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Count the total number of ObsCore entries available in the OSA VST ATLAS Survey TAP service.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/osa adql='SELECT COUNT(*) FROM ivoa.ObsCore' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find all ULLYSES HLSP observations taken with the STIS instrument and calculate the checksum of the resulting table.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT * FROM ivoa.ObsCore WHERE instrument_name = ''STIS''' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a histogram of 'TEMPERATURE', normalized such that the total area under the bars equals one.",
        "response": "stilts plot2plane in=plasma.fits layer=histogram x=TEMPERATURE normalise=area out=area_norm_temp_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TEMPERATURE\"\n    (The name \"TEMPERATURE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot density contours over a scatter plot, setting the contour scaling to logarithmic ('log') and smoothing to 10 pixels.",
        "response": "stilts plot2plane in=data.fits layer_m=mark x_m=X y_m=Y layer_c=contour x_c=X y_c=Y scaling_c=log smooth_c=10 out=log_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match two catalogs using 3D anisotropic Cartesian coordinates (X, Y, Z) with tolerances 10, 10, and 5 units respectively.",
        "response": "stilts tmatch2 in1=D1.fits in2=D2.fits matcher=3d_anisotropic params='10 10 5' values1='X Y Z' values2='X Y Z' out=anisotropic_3d_join_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column of hexadecimal strings corresponding to the integer column 'ID'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ID_HEX toHex(ID)' out=hex_ids.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Please combine the results of matching `main.fits` (as ref) against `extra1.fits` and `extra2.fits`. In the final table, only keep the ID columns from each table.",
        "response": "stilts tmatchn nin=3 multimode=pairs iref=1 in1=main.fits in2=extra1.fits in3=extra2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' values3='RA DEC' fixcols=all suffix1=_m suffix2=_e1 suffix3=_e2 ocmd='keepcols \"ID_m ID_e1 ID_e2\"' out=id_triplets.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "From `star_survey.vot`, I only want the columns `ID`, `RA_DEG`, and `DEC_DEG`. Please write them to a CSV file named `star_positions.csv`.",
        "response": "stilts tpipe in=star_survey.vot cmd='keepcols \"ID RA_DEG DEC_DEG\"' ofmt=csv out=star_positions.csv",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read the first table element (#0) from a CDF file and convert it to FITS.",
        "response": "stilts tcopy in=ts_data.cdf#0 ifmt=cdf out=ts_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match `cosmos.fits` and `goods.fits`. Before matching, for both tables, create a new column `LOG_FLUX` as `log10(FLUX)`.",
        "response": "stilts tmatch2 in1=cosmos.fits in2=goods.fits icmd1='addcol LOG_FLUX log10(FLUX)' icmd2='addcol LOG_FLUX log10(FLUX)' matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=match_with_logflux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge two tables, adding a column named 'LOG_PARALLAX' calculated as log10(PARALLAX).",
        "response": "stilts tcat in='gaia_zone1.fits gaia_zone2.fits' ocmd='addcol LOG_PARALLAX log10(PARALLAX)' out=log_plx_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a FITS MOC for objects with `REDSHIFT > 2` from my quasar catalog.",
        "response": "stilts pixfoot in=quasar_catalog.fits icmd='select \"REDSHIFT > 2\"' out=high_z_qso.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select REDSHIFT > 2\n\nUsage: select <expr>\n    (Unused arguments: '>' '2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'RA_RAD_COS' calculating the cosine of the RA in radians, assuming RA is currently in degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_RAD_COS cos(degreesToRadians(RA))' out=ra_rad_cos.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch three catalogs (C1, C2, C3). C2 has coordinates in Galactic (GLON, GLAT). Convert C2 to ICRS before matching C1 and C3.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=3 in1=C1.fits in2=C2.fits icmd2='addskycoords galactic icrs GLON GLAT RA DEC' in3=C3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=gal_to_icrs_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a MOC from the central 50% of the rows in my catalog.",
        "response": "stilts mocshape in=mycat.fits icmd='select \"$0 > ($nrow*0.25) && $0 < ($nrow*0.75)\"' shape=point coords='array(RA,DEC)' out=central_50pct.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '($nrow*0.25)' '&&' '$0' '<' '($nrow*0.75)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 > ($nrow*0.25) && $0 < ($nrow*0.75)\n\nUsage: select <expr>\n    (Unused arguments: '>' '($nrow*0.25)' '&&' '$0' '<' '($nrow*0.75)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC from all sources except those in the Small Magellanic Cloud.",
        "response": "stilts mocshape in=allsky.fits icmd='select \"skyDistanceDegrees(RA,DEC,13.18,-72.82) > 5\"' shape=point coords='array(RA,DEC)' out=no_smc.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,13.18,-72.82) > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot error ellipses derived from correlation (skycorr), coloring by density using the 'pweighted' shading mode (private weighted density).",
        "response": "stilts plot2sky in=err_data.fits layer=skycorr lon=RA lat=DEC lonerr=ER laterr=ED corr=C shading=pweighted out=pweighted_corr.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a MOC (order 15) for sources where the radius is calculated using the algebraic expression $1/1000$ degrees.",
        "response": "stilts pixfoot in=data.vot ra=RA dec=DEC radius='1.0 / 1000.0' order=15 out=data_millideg.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the KOA TAP Service for SIA metadata near Galactic L=180, B=5, searching a 0.1 degree cone.",
        "response": "stilts cone serviceurl=https://koa.ipac.caltech.edu/TAP lon=180.0 lat=5.0 radius=0.1 servicetype=sia skysys=galactic out=koa_sia_gal.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a parameter 'MIN_MJD' with the minimum value of the 'TIME_MJD' column.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='setparam MIN_MJD minimum(TIME_MJD)' out=min_mjd_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine tables T1 and T2. T1's RA/DEC columns are in radians; T2's are in degrees. Convert T1's to degrees before combination.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='replacecol RA radiansToDegrees(RA); replacecol DEC radiansToDegrees(DEC)' in2=T2.fits out=deg_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a MOC with a radius of 0.1 degrees for the last 500 entries in `event_stream.fits`.",
        "response": "stilts pixfoot in=event_stream.fits icmd='tail 500' radius=0.1 out=last_500_events.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query MAST MissionMAST for the HST summary table and filter the columns locally to retain only the observation ID and facility name.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/missionmast/ adql='SELECT TOP 10 * FROM hst.summary' ocmd='keepcols \"obs_id facility_name\"' out=missionmast_subset.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'facility_name'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols obs_id facility_name\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'facility_name'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find resources in the Euclid TAP service around RA 160, Dec 10, using 20 milli-arcseconds (mas).",
        "response": "stilts cone serviceurl=https://eas.esac.esa.int/tap-server/tap lon=160.0 lat=10.0 radius='20.0 / 3600000.0' out=euclid_20mas.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"20.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate a JSON MOC (order 16) for sources around Galactic L=180, B=5, converting the coordinate system internally, using 0.0001 degrees.",
        "response": "stilts pixfoot in=gal_cat2.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC radius=0.0001 order=16 mocfmt=json out=gal_json_o16.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot points, but hide the coordinate grid lines entirely (grid=false).",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC grid=false out=no_grid_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find the maximum and mean value of the J-band magnitude error (`j_msigcom`) from the MAST PanSTARRS DR2 catalogue.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT j_msigcom FROM dbo.detection_object' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch four photometric catalogs (P1-P4) using sky position (3 arcsec) and proper motion (5 mas/yr) combined (sky+2d). Use anisotropic PM tolerance (5 mas/yr for both axes).",
        "response": "stilts tmatchn nin=4 multimode=group matcher=sky+2d_anisotropic params='3 5 5' values1='RA DEC PMRA PMDEC' values2='RA DEC PMRA PMDEC' values3='RA DEC PMRA PMDEC' values4='RA DEC PMRA PMDEC' in1=P1.fits in2=P2.fits in3=P3.fits in4=P4.fits out=spacetime_aniso.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create an all-sky plot using the Aitoff projection, ensuring the axis labels are written in decimal degrees (sex=false).",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC projection=aitoff sex=false out=aitoff_decimal.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Copy FITS data and output it as a FITS file, forcing the use of **variable-length arrays (fits-var)**.",
        "response": "stilts tcopy in=input.fits ofmt=fits-var out=output_var.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve 10 metadata entries for projects from the INAF IA2 resources in the highly efficient VOTable BINARY2 format.",
        "response": "stilts tapquery tapurl=http://archives.ia2.inaf.it:80/vo/tap/projects adql='SELECT TOP 10 * FROM TAP_SCHEMA.tables' ofmt='votable(format=BINARY2)'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw the nominal center positions (central layer) of UNIQ HEALPix cells, using the fat_cross shape.",
        "response": "stilts plot2sky in=hpx_cells.fits layer=central area=UNIQ_ID areatype=UNIQ shape=fat_cross out=uniq_centers_fatcross.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"UNIQ_ID\"\n    (The name \"UNIQ_ID\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query and then rename the 'source_id' column to 'GAIA_ID'.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 10 * FROM gaiadr3.gaia_source' ocmd='colmeta -name GAIA_ID source_id'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Calculate the statistical summary of the V_MAG column from the MAST GOODS HLSP photometry table.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/goods/ adql='SELECT V_MAG FROM goods.photometry' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a histogram where the bin color changes based on its height.",
        "response": "This is not a standard feature. You would have to use `tpipe` with `tgridmap` to calculate the histogram bins first, and then plot the resulting table with `plot2plane` using `shading=aux` where `aux` is the count column.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot X vs Y, using transparent density shading (density mode) with the 'plasma' color map.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=density densemap=plasma out=plasma_density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve the column metadata for the ObsCore table from the Official ALMA TAP service (ESO server).",
        "response": "stilts tapquery tapurl=https://almascience.eso.org/tap adql='SELECT * FROM ivoa.ObsCore' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Delete the columns named `TEMP_1`, `TEMP_2`, and `TEMP_3` from `instrument_log.fits`.",
        "response": "stilts tpipe in=instrument_log.fits cmd='delcols \"TEMP_1 TEMP_2 TEMP_3\"' out=instrument_log_clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables, replacing the magnitude column 'G_MAG' with a corrected value 'G_MAG + 0.01' in the final output.",
        "response": "stilts tcat in='raw1.fits raw2.fits' ocmd='replacecol G_MAG \"G_MAG + 0.01\"' out=zp_corrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol G_MAG G_MAG + 0.01\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' '0.01'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot filled circles of fixed radius 10 arcseconds (unit=arcsec), using transparent density shading.",
        "response": "stilts plot2sky in=targets.fits layer=area area='array(RA, DEC, 10.0 / 3600.0)' areatype=CIRCLE polymode=fill shading=transparent opaque=50 out=transp_circles.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"array(RA, DEC, 10.0 / 3600.0)\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find the average proper motion components (`pmra`, `pmdec`) for a sample of stars in ARI's Gaia TAP Service.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT AVG(pmra), AVG(pmdec) FROM gaiadr3.gaia_source' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Draw a horizontal line at Y=10.0 and label it 'Threshold' using the label layer.",
        "response": "stilts plot2plane layer_h=function fexpr_h=10.0 color_h=red layer_l=label in_l=:loop:1 end_l=1 x_l='(xmin+xmax)/2' y_l=10.0 label_l='Threshold' anchor_l=south out=threshold_label.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"(xmin+xmax)/2\"\n    (The name \"xmin\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the MAST CAOM service for observations near Galactic L=150, B=0, searching a cone of 0.01 arcminutes.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=150.0 lat=0.0 radius='0.01 / 60.0' servicetype=sia skysys=galactic out=caom_tiny_am.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.01 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Crossmatch two tables, T1 and T2. T1 columns suffixed '_1', T2 columns suffixed '_2'. Output table sorted by the Separation score.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=all suffix1=_1 suffix2=_2 ocmd='sort Separation' out=all_suffixed_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "My RA column contains null values. Will `mocshape` work?",
        "response": "`mocshape` will ignore rows where the coordinate expressions evaluate to a null value and only process the valid rows.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 14 MOC from polygons, applying a pre-filter to keep only polygons with an area greater than 1 square degree (assuming an 'AREA' column exists).",
        "response": "stilts mocshape in=areas.fits icmd='select \"AREA > 1.0\"' shape=polygon coords=VERTICES order=14 out=large_poly_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select AREA > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine a single table with a synthetic attractor dataset containing 1 million points, just to get a row count.",
        "response": "stilts tcatn nin=2 in1=real.fits in2=:attractor:1e6,clifford omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I need to query the VizieR TAP service for the first 10 rows of the 2MASS Point Source Catalogue (II/246/out).",
        "response": "stilts tapquery tapurl=http://tapvizier.u-strasbg.fr/tap adql='SELECT TOP 10 * FROM \"II/246/out\"'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'POS_GAL_Z' containing the Z (Galactic) Cartesian component derived from RA/DEC/PARALLAX.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_Z \"icrsToGal(astromXYZ(RA, DEC, PARALLAX))\"' out=galactic_z_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_Z icrsToGal(astromXYZ(RA, DEC, PARALLAX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch four tables using 2D elliptical regions (2d_ellipse). Characteristic size is 10 pixels.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=2d_ellipse params=10 values1='X Y A B PA' values2='X Y A B PA' values3='X Y A B PA' values4='X Y A B PA' in1=R1.fits in2=R2.fits in3=R3.fits in4=R4.fits out=elliptical_2d_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert a column of fractional years (`FRAC_YEAR`) to MJD.",
        "response": "stilts tpipe in=log.fits cmd='replacecol FRAC_YEAR decYearToMjd(FRAC_YEAR)' out=mjd_from_frac.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find spectra (SSA) from JVO's AKARI catalogue around RA 10, Dec -10, using 45 arcseconds, and compress the output.",
        "response": "stilts cone serviceurl=http://jvo.nao.ac.jp/skynode/do/tap/akari/spectrum/slitless_mir_spec lon=10.0 lat=-10.0 radius='45.0 / 3600.0' servicetype=ssa compress=true out=akari_ssa_45as_comp.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"45.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Perform a 3-way match, but for the third table, the RA values are in hours. How do I convert them?",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=group matcher=sky params=2 values1='RA DEC' values2='RA DEC' values3='hmsToDegrees(RA_HRS) DEC' out=hours_to_deg_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot vectors where the color is determined by the auxiliary column 'AGE', using Paux shading and the 'sunset' map, setting opacity to 2.",
        "response": "stilts plot2sky in=vectors.fits layer=skyvector lon=RA lat=DEC dlon=DX dlat=DY shading=paux aux=AGE pmap=sunset opaque=2 out=paux_age_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Merge tables, applying an input filter to keep only rows where $\\text{MAG_G} < 18$ before concatenation.",
        "response": "stilts tcat in='m1.fits m2.fits' icmd='select \"MAG_G < 18\"' out=mag_filtered_inputs.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_G < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Query MAST HSCv3 and define a post-processing operation to calculate the F475W - F814W color index and replace the existing magnitude column with this new value locally.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 10 * FROM hsc_v3.point' ocmd='replacecol F814W_MAG \"F475W_MAG - F814W_MAG\"' out=hsc_color.fits",
        "error": "Error: Unused arguments: '-' 'F814W_MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol F814W_MAG F475W_MAG - F814W_MAG\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' 'F814W_MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query the ESO TAP_CAT for sources within 0.001 degrees of RA 25.5, Dec -15.5, and limit the output to the column metadata only.",
        "response": "stilts cone serviceurl=http://archive.eso.org/tap_cat lon=25.5 lat=-15.5 radius=0.001 omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find rows in T_SUPP that are unmatched in T_MAIN (2 arcsec sky match). Use parallel execution.",
        "response": "stilts tmatch2 in1=T_MAIN.fits in2=T_SUPP.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' join=2not1 runner=parallel out=parallel_anti_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 279.3402 and latitude 57.2192. Please use a search radius of 0.8339 degrees. Instead of a file, just give me the checksum.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=279.3402 lat=57.2192 radius=0.8339 omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match two tables on a 1D cuboid separation on 'TIME' of 0.01 units. T1 is a simulated loop table (:loop:1000).",
        "response": "stilts tmatch2 in1=:loop:1000 in2=T2.fits matcher=1d_cuboid params=0.01 values1=i values2=TIME out=loop_time_cuboid_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve the list of schemas available on the LMD TAP service and save them in ECSV format.",
        "response": "stilts tapquery tapurl=http://vo.lmd.jussieu.fr/tap adql='SELECT * FROM TAP_SCHEMA.schemas' ofmt=ecsv out=lmd_schemas.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter the table to keep every 5th row exactly, without approximation.",
        "response": "stilts tpipe in=big_data.fits cmd='every -exact 5' out=exact_sample_5.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the best match (best2) for T2 from T1. T1 is a simulated sky catalog (:skysim:10000). Use best match.",
        "response": "stilts tmatch2 in1=:skysim:10000 in2=T2.fits matcher=sky params=5 values1='ra dec' values2='RA DEC' find=best2 out=simulated_best2_match_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match Survey X and Survey Y. Survey X contains Galactic coordinates (GLON, GLAT). Convert X to ICRS before performing a 1 arcsec sky match.",
        "response": "stilts tmatch2 in1=Survey_X.fits icmd1='addskycoords galactic icrs GLON GLAT RA DEC' in2=Survey_Y.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=galactic_preproc_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the MAST STScI CANDELS HLSP for photometry and locally rename the 'id' column to 'CANDELS_ID'.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT TOP 5 id FROM candels.photometry' ocmd='colmeta -name CANDELS_ID id' out=candels_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert an ASCII table to IPAC format, specifying a multi-space delimiter for input parsing (default ASCII behavior).",
        "response": "stilts tcopy in=multi_space.txt ifmt=ascii out=multi_space.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine tables, adding a column 'AGE_YR' calculated by converting a column 'AGE_DAY' using the 'SEC_PER_YEAR' constant.",
        "response": "stilts tcat in='p1.fits p2.fits' ocmd='addcol AGE_YR \"AGE_DAY / 365.25\"' out=age_in_years.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '365.25'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AGE_YR AGE_DAY / 365.25\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '365.25'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot Y error bars from an array-valued column Y_ERROR_ARRAY, using the 'yerrors' layer.",
        "response": "stilts plot2plane in=spectra.fits layer=yerrors xs=WAVE ys=FLUX yerrhis=Y_ERROR_ARRAY out=array_yerr_only.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVE\"\n    (The name \"WAVE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "What does the `delete` parameter in `tapquery` do?",
        "response": "The `delete` parameter in `tapquery` controls when an asynchronous UWS job is deleted from the server. Options are `finished` (default, deletes after completion), `never` (leaves the job on the server), `always` (deletes on command exit), and `now` (deletes immediately).",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC for sources where the radius is fixed at $0.000000001$ degrees (1 nanodegree).",
        "response": "stilts pixfoot in=nano.fits ra=RA dec=DEC radius=1.0e-9 out=nano_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "How do I get a MOC for all sources in `survey.fits` that lie on a specific HEALPix pixel, say index 1234 at order 5?",
        "response": "stilts pixfoot in=survey.fits icmd='select healpixRingIndex(5,RA,DEC)==1234' order=10 out=single_pixel_sources.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Draw filled quadrilaterals (poly4 layer), coloring them based on AUX value, using the Paux shading mode.",
        "response": "stilts plot2sky in=quads.fits layer=poly4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 polymode=fill shading=paux aux=VALUE pmap=viridis out=paux_quads.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot density contours on a Galactic plot, setting the contour scaling to logarithmic ('log').",
        "response": "stilts plot2sky in=gal_cat.fits viewsys=galactic layer=contour lon=L lat=B scaling=log out=gal_log_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L\"\n    (The name \"L\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a MOC for my CSV file `targets.csv`, assuming RA and Dec columns are named 'RA_DEG' and 'DEC_DEG'. Save it as a JSON MOC.",
        "response": "stilts pixfoot in=targets.csv ifmt=csv ra=RA_DEG dec=DEC_DEG mocfmt=json out=targets_coverage.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'MAG_ABS' using the distance modulus formula with parallax in mas: 5 * log10(100 / PLX) - 5.",
        "response": "stilts tpipe in=gaia_plx.fits cmd='addcol MAG_ABS \"5 * log10(100.0 / PARALLAX) - 5\"' out=abs_mag_calc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' 'log10(100.0' '/' 'PARALLAX)' '-' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_ABS 5 * log10(100.0 / PARALLAX) - 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'log10(100.0' '/' 'PARALLAX)' '-' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match A.fits and B.fits on magnitude and color (MAG_R, B_V_COLOR). Tolerances: 0.05 mag and 0.1 color. Use anisotropic matching (2d_anisotropic).",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=2d_anisotropic params='0.05 0.1' values1='MAG_R B_V_COLOR' values2='MAG_R B_V_COLOR' out=aniso_mag_color_match_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I need to match two tables, `sloan.dat` (ASCII) and `panstarrs.vot`. The coordinates in sloan are in radians (`ra_rad`, `dec_rad`). Can you convert them to degrees for a 5 arcsec sky match against the `RA`, `DEC` columns in panstarrs?",
        "response": "stilts tmatch2 ifmt1=ascii in1=sloan.dat in2=panstarrs.vot matcher=sky params=5 values1='radiansToDegrees(ra_rad) radiansToDegrees(dec_rad)' values2='RA DEC' out=sloan_ps_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Execute a cone query and use an output filter to convert a string magnitude column 'MAG_STR' into a numeric column 'MAG_NUM'.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=50.0 lat=0.0 radius=0.1 ocmd='addcol MAG_NUM parseDouble(MAG_STR)' out=numeric_mag.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine `obslog1.csv` and `obslog2.csv` and add two new columns: `FileNum` with the file sequence number, and `FileLoc` with the file location string.",
        "response": "stilts tcat ifmt=csv in=obslog1.csv in=obslog2.csv seqcol=FileNum loccol=FileLoc out=full_log.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Perform a 3D match between local_stars.fits (DISTANCE_PC) and nearby_galaxies.vot (DIST_MPC). Maximum separation 0.5 Mpc.",
        "response": "stilts tmatch2 in1=local_stars.fits in2=nearby_galaxies.vot matcher=sky3d params=0.5 values1='RA DEC DISTANCE_PC/1e6' values2='RA DEC DIST_MPC' out=3d_spatial_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the ESO TAP_CAT service for tables, and locally rename the metadata column `table_name` to `CAT_IDENTIFIER`.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT table_name FROM TAP_SCHEMA.tables' ocmd='colmeta -name CAT_IDENTIFIER table_name' out=eso_rename_meta.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query MAST HSCv3 near Ecliptic Lon 10, Lat 10, with a radius of $1000$ mas.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=10.0 lat=10.0 radius='1000.0 / 3600000.0' skysys=ecliptic out=hsc_1000mas_ecliptic.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1000.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge four tables (M1-M4) and remove duplicate rows based entirely on all column values in the result.",
        "response": "stilts tcatn nin=4 in1=M1.fits in2=M2.fits in3=M3.fits in4=M4.fits ocmd='uniq' out=fully_unique_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plotting objects, coloring them by density using the 'Asinh' scaling function to highlight differences across a large range.",
        "response": "stilts plot2sky in=crowded.fits layer=mark lon=RA lat=DEC shading=density densefunc=asinh out=asinh_density_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate the MOC of all sources in a given RA range, e.g., 200 < RA < 210.",
        "response": "stilts mocshape in=survey.fits icmd='select \"RA > 200 && RA < 210\"' shape=point coords='array(RA,DEC)' out=ra_slice.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '200' '&&' 'RA' '<' '210'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 200 && RA < 210\n\nUsage: select <expr>\n    (Unused arguments: '>' '200' '&&' 'RA' '<' '210'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Use the `symlog` scale to plot data with a large dynamic range around zero.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y yscale=symlog",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Concatenate three tables and add a column showing which file each row came from.",
        "response": "stilts tcatn nin=3 in1=f1.fits in2=f2.fits in3=f3.fits loccol=SourceFile out=with_files.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge T_LEFT and T_RIGHT. After combining, check for and remove any rows where 'Z' (redshift) is null.",
        "response": "stilts tcatn nin=2 in1=T_LEFT.fits in2=T_RIGHT.fits ocmd='select !NULL_Z' out=no_null_redshift.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match T1 and T2 (1 arcsec sky). T1 coordinates (RA_B, DEC_B) are in FK4 B1950. Convert T1 to ICRS J2000 coordinates before matching.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='addskycoords fk4 icrs RA_B DEC_B RA DEC' in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=fk4_preproc_match_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve 10 stellar abundance records from the Subaru SAGA database and locally convert the temperature column (`Teff`) from Kelvin to Celsius.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 10 Teff FROM saga.stellar_abundances' ocmd='replacecol T_CELSIUS \"Teff - 273.15\"' out=saga_celsius.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '273.15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol T_CELSIUS Teff - 273.15\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '273.15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find all rows in T1 that are NOT matched in T2 (sky 5 arcsec). T2 must first be filtered to keep only rows where magnitude MAG > 20.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='select \"MAG > 20\"' matcher=sky params=5 values1='RA DEC' values2='RA DEC' join=1not2 out=T1_unmatched_faint_T2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 20\n\nUsage: select <expr>\n    (Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "What does a zero radius mean for `shape=circle`?",
        "response": "A radius of zero means each position is treated as a single point on the sky. The MOC will cover the smallest HEALPix pixel at the given order that contains each point.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC showing 0.05 degree radius circles around the positions given in targets.vot, saving the output in JSON format.",
        "response": "stilts mocshape in=targets.vot shape=circle coords='array(RA, DEC, 0.05)' mocfmt=json out=target_circles.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the CSIRO Parkes Pulsar Data Archive for its tables, enforcing authentication for access.",
        "response": "stilts tapquery tapurl=https://data.csiro.au/psrdavo/tap adql='SELECT * FROM TAP_SCHEMA.tables' auth=true out=pulsar_tables_auth.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column that is the arc tangent of Y/X in degrees, suitable for position angle calculations.",
        "response": "stilts tpipe in=data.fits cmd='addcol ANGLE_DEG \"atan2Deg(Y, X)\"' out=angle_degrees.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'X)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ANGLE_DEG atan2Deg(Y, X)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'X)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter a catalog to select objects observed after 2018.0 (MJD 58119), convert RA/Dec from radians, and generate an order 11 MOC.",
        "response": "stilts mocshape in=rad_obs.fits icmd='select \"mjdToDecYear(MJD) > 2018.0\"' shape=point coords='array(radiansToDegrees(RA_RAD), radiansToDegrees(DEC_RAD))' order=11 out=recent_obs_o11.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '2018.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select mjdToDecYear(MJD) > 2018.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '2018.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match two tables on magnitude and redshift (1d+1d). Tolerances: 0.1 mag, 0.005 redshift.",
        "response": "stilts tmatch2 in1=P1.fits in2=P2.fits matcher=1d+1d params='0.1 0.005' values1='MAG Z' values2='MAG Z' out=mag_z_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve 10 PanSTARRS 1 DR1 RA/DEC positions and locally convert the Right Ascension from decimal degrees to sexagesimal HMS notation.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 10 RA, DEC FROM dbo.detection_object' ocmd='replacecol RA CoordsDegrees.degreesToHms(RA)' out=ps1_hms.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a table, filter rows where 'QUALITY' flag is not 0, then shuffle the remaining rows randomly.",
        "response": "stilts tpipe in=large.fits cmd='select \"QUALITY != 0\"' cmd='shuffle' out=shuffled_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select QUALITY != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot the positions of polygon centroids (central layer) derived from STC-S strings in the 'REGION' column.",
        "response": "stilts plot2plane in=obscore.fits layer=central area=REGION areatype=STC-S out=stc_central_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"REGION\"\n    (The name \"REGION\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 168.8275 and latitude 63.4894. Please use a search radius of 1.8458 degrees. Save the results to a votable file called query_results_29.votable. After the query, please run this processing command: 'sorthead 20 MAG'. The coordinates are in the icrs system.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=168.8275 lat=63.4894 radius=1.8458 skysys=icrs omode=out ofmt=votable out=query_results_29.votable ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate a very high-resolution MOC (order 16) for a small patch of sky defined by `RA > 180 AND RA < 181 AND DEC > 20 AND DEC < 21`.",
        "response": "stilts pixfoot in=all_sky.fits icmd='select \"RA > 180 && RA < 181 && DEC > 20 && DEC < 21\"' order=16 out=small_patch_hires.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '180' '&&' 'RA' '<' '181' '&&' 'DEC' '>' '20' '&&' 'DEC' '<' '21'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 180 && RA < 181 && DEC > 20 && DEC < 21\n\nUsage: select <expr>\n    (Unused arguments: '>' '180' '&&' 'RA' '<' '181' '&&' 'DEC' '>' '20' '&&' 'DEC' '<' '21'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Draw vectors representing the displacement field (DX, DY) at positions (X, Y), ensuring vectors are automatically scaled.",
        "response": "stilts plot2plane in=flow.fits layer=xyvector x=X y=Y xdelta=DX ydelta=DY autoscale=true out=auto_scaled_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Start an asynchronous query on VizieR for WISE sources with W1mag < 14, requesting the job be deleted automatically upon completion, and track progress.",
        "response": "stilts tapquery tapurl=http://cdsarc.cds.unistra.fr/saadavizier.tap/tap adql='SELECT * FROM \"I/337/wise\" WHERE W1mag < 14' delete=finished progress=true out=wise_async.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert 'gaia.fits' into an HTML table fragment for web display, ensuring it is not a standalone document.",
        "response": "stilts tcopy in=gaia.fits ofmt='html(standalone=false)' out=gaia_fragment.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Concatenate tables, adding a column named 'SOURCE_TYPE' derived from the original filename, assuming filenames are 'star_cat.fits' and 'gal_cat.fits'.",
        "response": "stilts tcat in='star_cat.fits gal_cat.fits' uloccol=SOURCE_TYPE out=typed_catalog.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "My RA column contains null values. Will `mocshape` work?",
        "response": "`mocshape` will ignore rows where the coordinate expressions evaluate to a null value and only process the valid rows.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the KoA TAP service for data around RA 150, Dec 50, using a radius of 10 degrees, and explicitly request that the SIA query uses version 2 of the protocol.",
        "response": "stilts cone serviceurl=https://koa.ipac.caltech.edu/TAP lon=150.0 lat=50.0 radius=10.0 servicetype=sia2 out=koa_sia2_10deg.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create a standalone LaTeX file from my table.",
        "response": "stilts tcopy in=my_table.fits ofmt='latex(standalone=true)' out=my_table.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Merge tables and ensure the resulting table is sorted first by 'CLASS' and then by 'REDSHIFT'.",
        "response": "stilts tcat in='z1.fits z2.fits' ocmd='sort \"CLASS REDSHIFT\"' out=double_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'REDSHIFT'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort CLASS REDSHIFT\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'REDSHIFT'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve 100 sources from ARI Gaia with high measured parallax (> 50 mas).",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 100 * FROM gaiadr3.gaia_source WHERE parallax > 50.0' out=ari_high_plx.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find resources in MAST CAOM (SIA) near Galactic L=95, B=-1, using a 1 arcminute radius, specifically requesting the output be FITS.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=95.0 lat=-1.0 radius='1.0 / 60.0' servicetype=sia skysys=galactic dataformat=image/fits out=mast_sia_fits.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find MAST GOODS HLSP photometry entries where `f160w_flag` is 0 (clean flag) and stream the output directly to TOPCAT.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/goods/ adql='SELECT * FROM goods.photometry WHERE f160w_flag = 0' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine tables, but keep only the columns: 'ID', 'X', 'Y', and any column starting with 'FLUX_'.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='keepcols \"ID X Y FLUX_*\"' out=xy_flux_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (pairs, T1 ref). For T2, keep only the first 100 rows before attempting the match.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits icmd2='head 100' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=t2_head_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I'm uploading a table for a crossmatch. How do I specify the VOTable format for the upload?",
        "response": "As an example stilts tapquery tapurl=... nupload=1 upload1=... upname1=... adql='...' upvotformat=BINARY2",
        "chat.jar": "skipped",
        "error": "Error: Bad value for parameter tapurl: Not a URL\n    (No scheme for URL: ...)\nUsage: tapurl=<url-value>\n\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter rows to keep only those where the proper motion in DEC is positive.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMDEC > 0.0\"' out=positive_pmdec_filter_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMDEC > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a circle MOC where the radius is calculated as the separation distance between two fixed points in the table.",
        "response": "stilts mocshape in=pairs.fits shape=circle coords='array(RA1, DEC1, skyDistanceDegrees(RA1, DEC1, RA2, DEC2))' out=dist_as_radius.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Copy data from the HAPI scheme for GRACE_A_MAG and save it as a local FITS file.",
        "response": "stilts tcopy in=':hapi:https://vires.services/hapi;GRACE_A_MAG;start=2009-01-01;stop=2009-01-02;include=header' out=hapi_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Transpose the table, setting the column names of the output rows from the 'ID' column of the input, and write the metadata only.",
        "response": "stilts tpipe in=data.fits cmd='transpose -namecol ID' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "My table has polygon vertices in a single space-separated string column named 'VERTICES'. How do I use it?",
        "response": "stilts mocshape in=polygon_strings.fits shape=polygon coords='parseDoubles(VERTICES)' out=string_polygons.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot UNIQ HEALPix IDs, generating ASCII MOC output (mocfmt=ascii).",
        "response": "stilts mocshape in=hpx_list.fits shape=uniq coords=HPX_ID mocfmt=ascii out=output_moc.txt",
        "chat.jar": "executed successfully",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate two time series tables, ensuring that the final output is sorted chronologically by the 'MJD' column.",
        "response": "stilts tcatn nin=2 in1=ts_early.fits in2=ts_late.fits ocmd='sort MJD' out=chronological.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a parameter 'PI_NAME' with the string 'John Smith' and ensure it has type string and description 'Principal Investigator'.",
        "response": "stilts tpipe in=meta.fits cmd='setparam -type string -desc \"Principal Investigator\" PI_NAME \"John Smith\"' out=pi_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch T1 and T2. T2 rows should always be included, and T1 rows only if they match T2 (right outer join). Match exactly on 'NAME'.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=NAME values2=NAME join=all2 out=name_right_outer.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate deep_field.fits with shallow_field.fits, ensuring the final table uses the VOTable BINARY2 serialization format.",
        "response": "stilts tcatn nin=2 in1=deep_field.fits in2=shallow_field.fits ofmt='votable(format=BINARY2)' out=combined.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the VizieR TAP service for all entries in the Messier catalogue (VII/118/messier) and save as a VOTable.",
        "response": "stilts tapquery tapurl=http://tapvizier.u-strasbg.fr/tap adql='SELECT * FROM \"VII/118/messier\"' out=messier_catalog.xml ofmt=votable",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine a VOTable and a multi-row FITS table extension read via standard input, converting the output to Parquet.",
        "response": "cat stream.fits | stilts tcatn nin=2 in1=local.vot in2=- ifmt2=fits ofmt=parquet out=piped_to_parquet.parquet",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge three tables, retaining only columns that possess a UCD, and outputting the final table in LaTeX format.",
        "response": "stilts tcatn nin=3 in1=D1.fits in2=D2.fits in3=D3.fits ocmd='keepcols ucd$*' ofmt=latex out=ucd_latex_report.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge two tables, T_SMALL and T_BIG. Ensure T_BIG has columns 'MAG_U', 'MAG_G', 'MAG_R' converted to 32-bit float types before concatenation.",
        "response": "stilts tcatn nin=2 in1=T_SMALL.fits in2=T_BIG.fits icmd2='replacecol MAG_U toFloat(MAG_U); replacecol MAG_G toFloat(MAG_G); replacecol MAG_R toFloat(MAG_R)' out=float_conversion.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve 10 ObsCore records from MAST CAOM, explicitly requesting communication via the TAP 1.1 interface version.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT TOP 10 * FROM ivoa.ObsCore' interface=tap1.1 out=caom_tap11.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine two tables. The first table uses 'X_PIX' and 'Y_PIX', and the second uses 'COL_1' and 'COL_2'. Align them so both use 'X' and 'Y'.",
        "response": "stilts tcatn nin=2 in1=t1.fits icmd1='colmeta -name X X_PIX; colmeta -name Y Y_PIX' in2=t2.fits icmd2='colmeta -name X COL_1; colmeta -name Y COL_2' out=xy_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert a local FITS file to a VOTable, ensuring the output is encoded in **UTF-16**.",
        "response": "stilts tcopy in=input.fits ofmt='votable(encoding=UTF-16)' out=utf16_output.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits using position. Filter B first to only include sources with quality flag 'Q_FLAG' > 0.9.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits icmd2='select \"Q_FLAG > 0.9\"' matcher=sky params=2 values1='RA DEC' values2='RA DEC' out=quality_filter_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Q_FLAG > 0.9\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot density using the Skydensity layer (level 8), combining the mean magnitude per square arcminute.",
        "response": "stilts plot2sky in=survey.fits layer=skydensity lon=RA lat=DEC level=8 weight=MAG combine=mean perunit=arcmin2 out=hpx8_mean_mag_arcmin2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plotting filled quadrilaterals defined by four corner coordinate columns.",
        "response": "stilts plot2plane in=corners.fits layer=poly4 x1=X1 y1=Y1 x2=X2 y2=Y2 x3=X3 y3=Y3 x4=X4 y4=Y4 polymode=fill color=cyan out=filled_quads_cyan.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Ensure a column named 'FLUX_ERR' is present in the table; if absent, add it with null values.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_ERR NULL' out=ensure_flux_err.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch T1 and T2 using coordinates RA, DEC, and proper motion error (skyerr_q). Error columns are E_POS and E_PM. Scaling factor 1.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=skyerr_q+1d_err_q params='1 1' values1='RA DEC E_POS PMRA E_PM' values2='RA DEC E_POS PMRA E_PM' out=combined_error_q_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match `main.fits` against `catA.fits` and `catB.fits`. I want to see every entry from `catA`, joined with its match in `main` and `catB` if they exist.",
        "response": "stilts tmatchn nin=3 in1=main.fits in2=catA.fits in3=catB.fits multimode=pairs iref=2 matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' join2=always out=catA_centric_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot the sky map, ensuring all axis and title labels are rendered using LaTeX font processing.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC texttype=latex title='\\textbf{Sky Map}' out=latex_formatted_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a MOC (order 14) for sources within a 1 degree radius, filtering the input table to only keep rows with positive Declination.",
        "response": "stilts pixfoot in=pos_dec.fits icmd='select \"DEC > 0\"' ra=RA dec=DEC radius=1.0 order=14 out=pos_dec_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 17.4568 and latitude -0.1974. Please use a search radius of 1.2627 degrees. Save the results to a csv file called query_results_64.csv.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=17.4568 lat=-0.1974 radius=1.2627 omode=out ofmt=csv out=query_results_64.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert 'large_survey.fits' to a Parquet file, ensuring the output uses **GZIP** compression.",
        "response": "stilts tcopy in=large_survey.fits ofmt='parquet(compression=gzip)' out=survey.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 258.8974 and latitude -86.2149. Please use a search radius of 1.1287 degrees. Instead of a file, just give me the meta. Use verbosity level 1.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=258.8974 lat=-86.2149 radius=1.1287 verb=1 omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine tables, ensuring that any missing time values (MJD) are replaced by the constant `55000.0`.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits ocmd='replacecol MJD \"NULL_MJD ? 55000.0 : MJD\"' out=mjd_defaulted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '55000.0' ':' 'MJD'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MJD NULL_MJD ? 55000.0 : MJD\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '55000.0' ':' 'MJD'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "I have 5 tables (P1-P5.fits). Merge them and add a column 'PartNum' indicating the original index order (1 through 5).",
        "response": "stilts tcatn nin=5 in1=P1.fits in2=P2.fits in3=P3.fits in4=P4.fits in5=P5.fits seqcol=PartNum out=indexed_parts.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "From `lightcurve.csv`, keep only rows with index from 100 to 200.",
        "response": "stilts tpipe ifmt=csv in=lightcurve.csv cmd='rowrange 100 200' out=lightcurve_slice.csv",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine tables A and B. A contains B1950 FK4 coordinates; propagate them to J2000 ICRS using epoch 1950.0 before combining.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='addskycoords fk4 icrs RA_FK4 DEC_FK4 RA_ICRS DEC_ICRS' in2=B.fits out=fk4_prop_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "My catalog has a `COVERAGE` column in degrees-squared. Create a MOC using a circular approximation.",
        "response": "stilts pixfoot in=coverage_areas.fits radius='sqrt(COVERAGE/PI)' out=coverage_approx.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a JSON MOC for objects where `PROBABILITY > 0.99`.",
        "response": "stilts pixfoot in=candidates.fits icmd='select \"PROBABILITY > 0.99\"' mocfmt=json out=high_prob_candidates.moc",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.99'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PROBABILITY > 0.99\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.99'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Crossmatch T1 and T2 (exact ID). T1 contains a column MAG_ERR with nulls marked by 99.0. Replace 99.0 with true nulls in T1 before matching.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='badval 99.0 MAG_ERR' in2=T2.fits matcher=exact values1=ID values2=ID out=null_cleaned_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I need a summary report of coverage for objects found within 15 arcminutes, calculated at order 11.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 15.0 / 60.0)' order=11 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine files A and B. In A, fields X_ERR and Y_ERR are in mas; convert them to degrees before joining.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='replacecol X_ERR X_ERR/3600000.0; replacecol Y_ERR Y_ERR/3600000.0' in2=B.fits out=mas_to_deg_convert.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate three FITS files. The second file is accessed via HTTP.",
        "response": "stilts tcatn nin=3 in1=local1.fits in2=http://archive.org/data.fits in3=local3.fits out=remote_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge CSV files (list.csv, other.csv) where fields are delimited by a semicolon, outputting the result in ECSV format.",
        "response": "stilts tcat ifmt='csv(delimiter=;)' in='list.csv other.csv' ofmt=ecsv out=semicolon_merge.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Perform a sky match between `c1.fits` and `c2.fits`, but for `c2.fits`, only consider rows where `QUALITY_FLAG` is 'A'.",
        "response": "stilts tmatch2 in1=c1.fits in2=c2.fits icmd2='select QUALITY_FLAG==\"A\"' matcher=sky params=3 values1='RA DEC' values2='RA DEC' out=quality_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Read input from a named pipe in CSV format, and output the total row count.",
        "response": "stilts tpipe in=\"< pipe.csv\" ifmt=csv omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a Feather file to Parquet, using a fixed number of reader threads (e.g., 4) during the input process.",
        "response": "stilts tcopy in=threads.fea ifmt='parquet(nThread=4)' out=threads.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column containing the velocity vector (XYZ) corresponding to the proper motion (PMRA, PMDEC, PARALLAX) of the object, assuming zero radial velocity.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_XYZ \"astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))\"' out=pm_xyz.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' '0.0))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_XYZ astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' '0.0))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a CSV file to HTML, ensuring that long cell contents are truncated at 150 characters.",
        "response": "stilts tcopy in=long_text.csv ifmt=csv ofmt='html(maxCell=150)' out=truncated.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate a MOC from a list of ASCII MOC strings, ensuring the output is written in the CDS FITS MOC format.",
        "response": "stilts mocshape in=ascii_mocs.txt ifmt=ascii shape=moc-ascii coords='$1' mocfmt=cds_fits out=mocs_cds_fits.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a parameter named 'DATE_TODAY' with the current date string (ISO-8601).",
        "response": "stilts tpipe in=meta.fits cmd='setparam DATE_TODAY now()' out=today_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Pair match T_MAIN (ref) against T2, T3, T4. T1 columns should keep original names, T2/T3/T4 duplicates suffixed '_A', '_B', '_C'. T1 has flux F_Jansky. Calculate MAG_AB before matching on (position, magnitude) combined.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky+1d params='2 0.2' in1=T_MAIN.fits icmd1='addcol MAG_AB janskyToAb(F_Jansky)' in2=T2.fits in3=T3.fits in4=T4.fits fixcols=dups suffix2=_A suffix3=_B suffix4=_C values1='RA DEC MAG_AB' values2='RA DEC MAG' values3='RA DEC MAG' values4='RA DEC MAG' out=flux_to_mag_crossmatch.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need the MOC for sources with a radius defined by $\frac{20 \text{ arcmin}}{60 \text{ arcmin}/\text{deg}}$ (0.333 deg).",
        "response": "stilts pixfoot in=div_am.fits ra=RA dec=DEC radius='20.0 / 60.0' out=div_am_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Join first_epoch.fits and second_epoch.fits on sky position. Add _E1 and _E2 suffixes to the columns from each table to avoid duplication.",
        "response": "stilts tmatch2 in1=first_epoch.fits in2=second_epoch.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=all suffix1=_E1 suffix2=_E2 out=epoch_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch T1 and T2 on MJD. T1 uses Decimal Year (DECYEAR). Convert T1 to MJD before matching (0.01 day tolerance).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='replacecol MJD decYearToMjd(DECYEAR)' in2=T2.fits matcher=1d params=0.01 values1=MJD values2=MJD out=decyear_to_mjd_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match two tables on time (MJD). T1 only includes the first 1000 rows. T2 time values are string ISO dates; convert them to MJD before matching.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='head 1000' in2=T2.fits icmd2='replacecol MJD isoToMjd(TIME_STR)' matcher=1d params=0.01 values1=MJD values2=MJD out=head_string_time_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "What does an `order` of 29 mean?",
        "response": "An `order` of 29 represents the highest possible resolution in HEALPix, corresponding to roughly 3.4 x 10^18 pixels covering the entire sky. This is an extremely fine grid, suitable only for very small regions of interest.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find all table schemas in the SIMBAD query engine and output the result in FITS format.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT * FROM TAP_SCHEMA.schemas' ofmt=fits out=simbad_schemas.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC for sources with a measurement epoch after 2015.0.",
        "response": "stilts mocshape in=epochs.fits icmd='select \"EPOCH > 2015.0\"' shape=point coords='array(RA,DEC)' out=post_2015.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '2015.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select EPOCH > 2015.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '2015.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter the table by keeping columns 1 to 5 and columns starting with 'FLUX'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"1-5 FLUX*\"' out=col_range_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match A and B. A contains an array column 'ERR_VEC'. Explode ERR_VEC to ERR_RA and ERR_DEC, and use skyerr_q matcher.",
        "response": "stilts tmatch2 in1=A.fits icmd1='explodecols ERR_VEC; colmeta -name E_RA ERR_VEC_0; colmeta -name E_DEC ERR_VEC_1' in2=B.fits matcher=skyerr_q params=1 values1='RA DEC E_RA' values2='RA DEC E_B' out=exploded_error_skyerrq.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I need to combine two tables, but the second table is missing the 'FLUX_ERR' column. How can I add it with null values?",
        "response": "stilts tcatn nin=2 in1=table1.fits in2=table2.fits icmd2='addcol FLUX_ERR null' ocmd='keepcols \"ID FLUX FLUX_ERR\"' out=complete.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find resources in the Euclid TAP service near RA 20, Dec 20, using $0.001$ degrees, and include a column calculated as $\text{ln}(\text{FLUX})$.",
        "response": "stilts cone serviceurl=https://eas.esac.esa.int/tap-server/tap lon=20.0 lat=20.0 radius=0.001 ocmd='addcol LOG_FLUX ln(FLUX)' out=euclid_ln_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot points with a variable size determined by the expression 'log10(FLUX) / 2'.",
        "response": "stilts plot2plane in=sources.fits layer=size x=X y=Y size='log10(FLUX)/2' autoscale=true out=log_size_expr.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot X vs Y, applying the asinh scaling option to the Y axis with the default linear width.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y yscale=asinh out=asinh_y.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot HEALPix data (healpix layer) and degrade its resolution by a factor of 4 (degrade=2), calculating the sum of values within the degraded pixel.",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=VALUE degrade=2 combine=sum out=hpx_sum_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Filter the input table to only include rows where the position angle (PA) is greater than 90 degrees, then generate the MOC.",
        "response": "stilts pixfoot in=rotational.fits icmd='select \"PA > 90.0\"' ra=RA dec=DEC out=pa_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '90.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PA > 90.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '90.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Group match three tables. T2 and T3 have coordinate system Ecliptic. Convert to ICRS before matching C1 (ICRS).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=4 in1=C1.fits in2=C2.fits icmd2='addskycoords ecliptic icrs ELON ELAT RA DEC' in3=C3.fits icmd3='addskycoords ecliptic icrs ELON ELAT RA DEC' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=ecl_to_icrs_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve 100 Gaia DR3 sources from ESA where the BP-RP color is redder than 3.0 magnitudes.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 100 * FROM gaiadr3.gaia_source WHERE bp_rp > 3.0' out=gaia_red_stars.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge a simulated catalogue of 10,000 stars with a real catalogue (real_cat.fits). Keep only the first 500 rows total, sorted by magnitude.",
        "response": "stilts tcatn nin=2 in1=:skysim:10000 in2=real_cat.fits ocmd='sort gmag' ocmd='head 500' out=mixed_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Is it possible to match two tables based on both their sky position (within 3 arcsec) and their proper motion in RA (`PMRA`) within 5 mas/yr?",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky+1d params='3 5' values1='RA DEC PMRA' values2='RA DEC PMRA' out=pos_pm_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge tables, and enforce that the output format is the metadata-rich FITS-plus format.",
        "response": "stilts tcat in='m1.fits m2.fits' ofmt=fits-plus out=metadata_fits_plus.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Read data from standard input (CSV format, delimited by tab) and output it as FITS.",
        "response": "cat tab_data.txt | stilts tcopy in=- ifmt='csv(delimiter=tab)' out=tab_stream.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'MAG_H_AB_V' converting 2MASS H magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_H_AB_V \"MAG_H + JOHNSON_AB_V\"' out=h_ab_v_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_H_AB_V MAG_H + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine tables, but before joining, remove the 'COMMENT' column from both inputs.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='delcols COMMENT' out=comment_free.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Calculate the photometric distance modulus (DM) from absolute magnitude (M_ABS) and apparent magnitude (M_APP).",
        "response": "stilts tpipe in=phot.fits cmd='addcol DM \"M_APP - M_ABS\"' out=phot_dm.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'M_ABS'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DM M_APP - M_ABS\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'M_ABS'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Synchronously retrieve 10 rows from the J-PLUS DR1 Catalogue and output the result as an HTML table.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jplus-dr1 adql='SELECT TOP 10 ra, dec FROM jplus_dr1.master' sync=true ofmt=html out=jplus_sample.html",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How can I join `cat1.fits` and `cat2.fits` and calculate a checksum of the output table?",
        "response": "stilts tmatch2 in1=cat1.fits in2=cat2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the XMM-Newton archive and assert locally that the 'ra' column contains no null values.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT TOP 10 ra FROM ivoa.ObsCore' ocmd='assert !NULL_ra' out=xmm_assert_ra.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch T1 and T2 using errors combined in quadrature (skyerr_q). T1 error values are in milliarcseconds (E_MAS). Convert to arcseconds.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='replacecol E_MAS E_MAS/1000.0' in2=T2.fits matcher=skyerr_q params=1 values1='RA DEC E_MAS' values2='RA DEC E_MAS' out=mas_error_quad_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate two tables, and then calculate the final table's checksum without saving the table itself.",
        "response": "stilts tcat in=t1.fits in=t2.fits omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Read a remote compressed VOTable via HTTPS and save it locally as an **uncompressed** FITS file.",
        "response": "stilts tcopy in=https://archive.org/cat.vot.gz out=cat_uncompressed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create an order 22 MOC using point data for extremely high resolution coverage.",
        "response": "stilts mocshape in=hires_cat.fits shape=point coords='array(RA, DEC)' order=22 out=hires_moc_o22.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a table of 100 random numbers sampled from a Gaussian distribution.",
        "response": "stilts tpipe in=:loop:100 cmd='addcol GAUSS randomGaussian(i)' cmd='delcols i' out=gaussian_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate two tables, and then keep only rows where the 'FLAG_INT' column has the 5th bit set (using the expression language).",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='select \"hasBit(FLAG_INT, 5)\"' out=bit_set_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(FLAG_INT, 5)\n\nUsage: select <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a MOC from positions in a TST table, explicitly setting the input format.",
        "response": "stilts pixfoot in=coords.tst ifmt=tst ra=RA dec=DEC out=tst_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find the row index of the row with the minimum value of the 'ENERGY' column, and return only the calculated statistics (MinPos, indicating row index).",
        "response": "stilts tpipe in=events.fits cmd='keepcols ENERGY' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch six tables (C1-C6) using sky position (1 arcsec). Execute in parallel mode.",
        "response": "stilts tmatchn nin=6 multimode=group matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA DEC' values6='RA DEC' in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits in5=C5.fits in6=C6.fits runner=parallel out=six_way_parallel.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Calculate the line-of-sight comoving distance (Mpc) for redshift Z using standard cosmology.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol COMOVING_DIST \"comovingDistanceL(Z, 70.0, 0.3, 0.7)\"' out=galaxies_comoving.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COMOVING_DIST comovingDistanceL(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine three tables. Before concatenation, for every table, remove columns named 'ERR_RA' and 'ERR_DEC'.",
        "response": "stilts tcat in='c1.fits c2.fits c3.fits' icmd='delcols \"ERR_RA ERR_DEC\"' out=errors_removed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Convert the input table to Parquet format, forcing DICT_ENCODING and saving the VOParquet metadata.",
        "response": "stilts tpipe in=input.fits ofmt='parquet(usedict=true,votmeta=true)' out=output_dict_meta.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine two tables, maintaining the metadata associated with the columns marked with the UCD 'target.name'.",
        "response": "stilts tcatn nin=2 in1=c1.fits icmd1='keepcols \"ucd$target_name *\"' in2=c2.fits icmd2='keepcols \"ucd$target_name *\"' out=target_name_join.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$target_name *\n\nUsage: keepcols <colid-list>\n    (Unused arguments: '*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the XMM-Newton archive for ObsCore entries, setting the maximum number of retrieved records to 100, and ensuring the asynchronous job is never automatically deleted.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore' maxrec=100 delete=never out=xmm_persistent.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers sized by the error value $1/(PLX_ERR)$, ensuring autoscale is used.",
        "response": "stilts plot2plane in=gaia.fits layer=size x=RA y=DEC size='1/PLX_ERR' autoscale=true out=parallax_error_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve all ObsCore entries for a specific target (`3C 273`) from the JVO ALMA service and limit the result to 10 rows.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/alma adql='SELECT TOP 10 * FROM alma.obscore WHERE target_name = ''3C 273''' out=alma_3c273.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a table to a text file, setting the maximum parameter value width to 500 characters.",
        "response": "stilts tcopy in=params.fits ofmt='text(maxParam=500)' out=wide_params.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Start a long asynchronous query on the XMM-Newton archive and guarantee that the job is never automatically destroyed by the service.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore WHERE em_max > 1000' delete=never executionduration=7200 out=xmm_persistent_long.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need the footprint for every source that is NOT flagged as an artifact (`ARTIFACT_FLAG == 0`).",
        "response": "stilts pixfoot in=sources.fits icmd='select \"ARTIFACT_FLAG == 0\"' out=clean_sources.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ARTIFACT_FLAG == 0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot error bars in both X and Y directions using arrays of errors (X_ERR_A, Y_ERR_A).",
        "response": "stilts plot2plane in=errors.fits layer=xyerrors xs=X_A ys=Y_A xerrhis=X_ERR_A yerrhis=Y_ERR_A errorbar=capped_lines out=array_xyerrors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_A\"\n    (The name \"X_A\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Draw a plot where markers are sized by the expression '2 + log(FLUX)' and save as EPS.",
        "response": "stilts plot2plane in=sources.fits layer=size x=RA y=DEC size='2 + log(FLUX)' out=log_flux_size.eps",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "To speed up my sky match of two huge catalogs, can I adjust the HEALPix level? Let's try k=8.",
        "response": "stilts tmatch2 in1=big_cat1.fits in2=big_cat2.fits matcher=sky params=10 values1='RA DEC' values2='RA DEC' tuning=8 out=tuned_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Join two tables using a cuboid match on 3D Cartesian coordinates (X, Y, Z) with tolerances 1, 10, and 1 units.",
        "response": "stilts tmatch2 in1=D1.fits in2=D2.fits matcher=3d_cuboid params='1 10 1' values1='X Y Z' values2='X Y Z' out=aniso_3d_cuboid.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a MOC from polygon string data, enforcing an output order 15 using the CDS JSON format.",
        "response": "stilts mocshape in=footprints.fits shape=polygon coords='VERTICES_STRING' order=15 mocfmt=cds_json out=polygons_cds_json.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC using the coordinates defined by the explicit result of the expression: `skyDistanceDegrees(RA, DEC, RA+1, DEC+1)`. (Note: RA/DEC must be supplied, expression used only as demonstration of capability.)",
        "response": "stilts mocshape in=shift_cat.fits shape=point coords='array(RA, DEC)' out=shifted_coords_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match three tables on a 1D value `FREQUENCY` with a tolerance of 100 Hz.",
        "response": "stilts tmatchn nin=3 in1=obs1.fits in2=obs2.fits in3=obs3.fits multimode=group matcher=1d params=100 values1=FREQUENCY values2=FREQUENCY values3=FREQUENCY out=freq_coincidence.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "My file is `data.tbl`. How do I plot it assuming IPAC format?",
        "response": "stilts plot2plane in=data.tbl ifmt=ipac layer=mark x=ra y=dec",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"ra\"\n    (The name \"ra\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Search MAST HSCv3 near RA 240, Dec -60, with a radius of 50 arcseconds, converting the output table to IPAC format.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=240.0 lat=-60.0 radius='50.0 / 3600.0' ofmt=ipac out=hsc_50as.tbl",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"50.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 176.7712 and latitude -82.6448. Please use a search radius of 1.4219 degrees. Save the results to a votable file called query_results_194.votable.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=176.7712 lat=-82.6448 radius=1.4219 omode=out ofmt=votable out=query_results_194.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge data from a remote HAPI service (GRACE_A_MAG) covering a short time range with local calibration data.",
        "response": "stilts tcatn nin=2 in1='https://vires.services/hapi/data?dataset=GRACE_A_MAG&start=2009-01-01&stop=2009-01-01&include=header' ifmt1=hapi in2=calib.fits out=hapi_local.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge two local tables and one table piped from standard input (TS_pipe). Output the row count only.",
        "response": "cat stream.csv | stilts tcatn nin=3 in1=TS1.fits in2=TS2.fits in3=- ifmt3=votable omode=count",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine tables C1, C2, and C3. C1 uses 'ID' for identification; C2 uses 'Name'; C3 uses 'UID'. Standardize all names to 'ID' using colmeta.",
        "response": "stilts tcatn nin=3 in1=C1.fits in2=C2.fits icmd2='colmeta -name ID Name' in3=C3.fits icmd3='colmeta -name ID UID' out=id_standardized.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the ESO Catalogue TAP service for sources near the Orion Nebula (RA 83.8, Dec -5.4) and stream the result directly to TOPCAT for viewing.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT * FROM TAP_SCHEMA.tables WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 83.8, -5.4, 0.5))' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match two tables on MJD time (0.001 day tolerance) and use parallel execution.",
        "response": "stilts tmatch2 in1=TS1.fits in2=TS2.fits matcher=1d params=0.001 values1=MJD values2=MJD runner=parallel out=time_match_parallel.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create a MOC (order 11) for objects within a radius equal to the square root of FLUX_ERR.",
        "response": "stilts pixfoot in=flux_err.fits ra=RA dec=DEC radius='sqrt(FLUX_ERR)' out=sqrt_err_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Convert a FITS table to CSV, ensuring **no header line** is written.",
        "response": "stilts tcopy in=no_header_in.fits ofmt='csv(header=false)' out=no_header_out.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the CDS VizieR service for the 2MASS catalogue and output the result using a comma delimiter in CSV format.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT TOP 10 * FROM \"II/246/out\"' ofmt=csv out=vizier_2mass_sample.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the statistical range (min/max/mean) of photometric redshifts (`z_phot`) in the Laurino 2011 photometric redshift catalogue hosted by INAF.",
        "response": "stilts tapquery tapurl=http://ia2-tap.oats.inaf.it:8080/wgetap adql='SELECT z_phot FROM laurino2011.master' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create an order 14 MOC, filtering on a calculated color (B-V > 1.0), and output in CDS FITS format.",
        "response": "stilts mocshape in=color_cat.fits icmd='select \"B_MAG - V_MAG > 1.0\"' shape=point coords='array(RA, DEC)' order=14 mocfmt=cds_fits out=red_sources_cds.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'V_MAG' '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select B_MAG - V_MAG > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'V_MAG' '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for rows where `EXTENDED_SOURCE` is true.",
        "response": "stilts pixfoot in=sources.fits icmd='select EXTENDED_SOURCE' out=extended_sources_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Count the total number of photometry entries available in the MAST CANDELS HLSP service.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT COUNT(*) FROM candels.photometry' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert the coordinate array 'POS_ARRAY' (RA, DEC) to an explicit Cartesian X, Y, Z vector, assuming unit distance.",
        "response": "stilts tpipe in=coords.fits cmd='addcol CARTESIAN \"polarXYZ(POS_ARRAY, POS_ARRAY, 1.0)\"' out=cartesian_vector.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'POS_ARRAY,' '1.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol CARTESIAN polarXYZ(POS_ARRAY, POS_ARRAY, 1.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'POS_ARRAY,' '1.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve 100 sources from ARI Gaia where proper motions in both RA and Dec are negative (third quadrant).",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 100 * FROM gaiadr3.gaia_source WHERE pmra < 0 AND pmdec < 0' out=ari_pm_quadrant.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I want to plot the `marks` layer type from an array of X and an array of Y coordinates.",
        "response": "stilts plot2plane in=trajectories.fits layer=marks xs=X_POS_ARRAY ys=Y_POS_ARRAY shape=open_diamond",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_POS_ARRAY\"\n    (The name \"X_POS_ARRAY\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert an ASCII file to FITS, using the **FITS-basic** format (no rich metadata).",
        "response": "stilts tcopy in=flat.txt ifmt=ascii ofmt=fits-basic out=basic.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Search ESA's Integral Science Archive TAP around RA 45, Dec 45, using a radius equivalent to 10 arcseconds, and output the result using VOTable BINARY2 format.",
        "response": "stilts cone serviceurl=https://isla.esac.esa.int/tap/tap lon=45.0 lat=45.0 radius='10.0 / 3600.0' ofmt='votable(format=BINARY2)' out=integral_binary2.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I have a table in MRT (Machine-Readable Table) format. Convert it to FITS.",
        "response": "stilts tcopy in=journal_table.mrt out=journal_table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I have a list of ASCII files in `sources.list`. How do I concatenate them all into a single FITS file, using lazy evaluation?",
        "response": "stilts tcat ifmt=ascii in=@sources.list ofmt=fits lazy=true out=sources.fits",
        "chat.jar": "fixed",
        "error": "Error: sources.list (No such file or directory)\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Execute a cone search with a 0.001 degree radius against the ESO TAP_CAT for MJD 56000 and output a statistical summary of the resulting table columns.",
        "response": "stilts cone serviceurl=http://archive.eso.org/tap_cat lon=160.0 lat=12.0 radius=0.001 servicetype=cone omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match four tables using Cartesian 3D coordinates (X, Y, Z) within 10 units. Include all columns but rename duplicates using numerical suffixes.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=3d params=10 values1='X Y Z' values2='X Y Z' values3='X Y Z' values4='X Y Z' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits fixcols=dups out=numbered_3d_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the WiggleZ survey service for 10,000 unique sources with a redshift greater than 2.0.",
        "response": "stilts tapquery tapurl=http://wiggleztap.asvo.nci.org.au/ncitap//tap adql='SELECT TOP 10000 * FROM wigglez_final.sources WHERE redshift > 2.0' maxrec=10000",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot points with a variable size given by the `LUMINOSITY` column.",
        "response": "stilts plot2plane in=sources.fits layer=size x=DISTANCE y=VELOCITY size=LUMINOSITY",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"DISTANCE\"\n    (The name \"DISTANCE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'MAG_U_KCORR' using the KCF_u filter at Z=0.1, leveraging the u-r color (KCC_ur).",
        "response": "stilts tpipe in=uv_data.fits cmd='addcol MAG_U_KCORR \"MAG_U - kCorr(KCF_u, 0.1, KCC_ur, U_MAG-R_MAG)\"' out=u_kcorr_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'kCorr(KCF_u,' '0.1,' 'KCC_ur,' 'U_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_KCORR MAG_U - kCorr(KCF_u, 0.1, KCC_ur, U_MAG-R_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'kCorr(KCF_u,' '0.1,' 'KCC_ur,' 'U_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find resources in the Euclid TAP service around RA 0, Dec -40, using 2 arcminutes, and ensure the result is compressed.",
        "response": "stilts cone serviceurl=https://eas.esac.esa.int/tap-server/tap lon=0.0 lat=-40.0 radius='2.0 / 60.0' compress=true out=euclid_2arcmin_comp.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"2.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find Chandra ObsCore entries with an exposure time greater than 50,000 seconds, requiring user authentication.",
        "response": "stilts tapquery tapurl=https://cda.harvard.edu/cxctap adql='SELECT obsid, t_exptime FROM ivoa.ObsCore WHERE t_exptime > 50000' auth=true out=chandra_long_auth.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Remove the column 'FLUX_ERR' and replace it with a constant value of 0.05, setting its unit to 'Jy'.",
        "response": "stilts tpipe in=data.fits cmd='replacecol -units Jy FLUX_ERR 0.05' out=constant_err.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Submit an asynchronous query to the European JWST Archive and set the destruction time to a period of 60 days.",
        "response": "stilts tapquery tapurl=https://jwst.esac.esa.int/server/tap adql='SELECT * FROM ivoa.ObsCore' destruction='+P60D' out=jwst_60day_job.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run a synchronous query against the PADC RR TAP server to get the metadata describing its tables.",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.tables' sync=true omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a Feather file to a Parquet file.",
        "response": "stilts tcopy in=feather.fea out=feather_to_parquet.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert a Feather file to a CSV, streaming the CSV output to standard output.",
        "response": "stilts tcopy in=feather.fea ofmt=csv out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine two tables, applying a velocity calculation to a column in the second table before joining, assuming distance 'dist_pc' is shared.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits icmd2='replacecol V_Z \"rvMasyrToKms(PM_Z, 1000/dist_pc)\"' out=vel_calc_join.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1000/dist_pc)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol V_Z rvMasyrToKms(PM_Z, 1000/dist_pc)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '1000/dist_pc)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Filter rows where proper motion in RA (PMRA) is greater than 10 mas/yr, then pipe the result to TOPCAT.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMRA > 10.0\"' omode=topcat",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the ESO TAP_CAT service for tables whose name contains 'VIRCAM', ensuring the connection uses HTTP compression.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT table_name FROM TAP_SCHEMA.tables WHERE table_name LIKE ''%vircam%''' compress=true out=eso_compressed_vircam.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find 10 XMM-Newton ObsCore records, and after retrieval, locally filter the output to keep only the unique facility names and display them to the console.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' ocmd='keepcols facility_name; uniq facility_name' out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T_REF (ref) against T2, T3. T3 contains magnitude in symmetric log scale. Match on position + magnitude (sky+1d, 1 arcsec, 1.0 symlog tolerance).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='1 1.0' values1='RA DEC MAG_SL' values2='RA DEC MAG_SL' values3='RA DEC MAG_SL' in1=T_REF.fits in2=T2.fits in3=T3.fits out=symlog_mag_pair.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate tables, and add a column 'BIT_COUNT' which is the number of set bits in an existing integer column 'FLAG_INT'.",
        "response": "stilts tcat in='b1.fits b2.fits' ocmd='addcol BIT_COUNT bitCount(FLAG_INT)' out=flag_bit_count.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I want a cone search on VizieR TAP within 0.1 arcminutes of RA 100, Dec 20, keeping only rows where 'MAG_V' is less than 12.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=100.0 lat=20.0 radius='0.1 / 60.0' ocmd='select MAG_V < 12.0' out=vizier_mag_filtered.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.1 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Crossmatch T1 and T2 using the symmetric best match (best) and execute using sequential runner.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 find=best runner=sequential values1='RA DEC' values2='RA DEC' out=sequential_best_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve Subaru SXDS point sources and locally sort the result by the R-band magnitude.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/sxds_v1 adql='SELECT TOP 100 * FROM sxds.point_source' ocmd='sort r_mag' out=sxds_r_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers, where the size is fixed at 10 pixels and the shading is proportional to density (opaque=20).",
        "response": "stilts plot2sky in=crowd.fits layer=mark lon=RA lat=DEC size=10 shading=transparent opaque=20 out=size10_transp20.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Crossmatch T_A and T_B using symmetric best match (find=best). T_B errors are in microarcseconds (uas); convert them to degrees before matching using skyerr.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits icmd2='addcol E_DEG E_UAS/3600000000.0' matcher=skyerr params=1 values1='RA DEC E_DEG' values2='RA DEC E_DEG' find=best out=uas_to_deg_best.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "How do I make a query and keep only the `source_id` and `parallax` columns from the result?",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT * FROM gaiadr3.gaia_source' ocmd='keepcols \"source_id parallax\"' maxrec=100",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need SIA metadata from MAST CAOM near Galactic L=10, B=2.5, searching a radius of 150 arcseconds.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=10.0 lat=2.5 radius='150.0 / 3600.0' servicetype=sia skysys=galactic out=galactic_sia_150as.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"150.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match T1 and T2 on 3D Cartesian coordinates (X, Y, Z) with anisotropic tolerances: 1 unit X, 10 units Y, 5 units Z.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=3d_anisotropic params='1 10 5' values1='X Y Z' values2='X Y Z' out=anisotropic_3d.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find rows in T_A that are NOT matched in T_B (sky 1 arcsec). Output the total number of unmatched rows.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' join=1not2 omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Select sources from VizieR's Hipparcos catalog (I/239/hip_main) that have a parallax greater than 100.",
        "response": "stilts tapquery tapurl=http://tapvizier.u-strasbg.fr/tap adql='SELECT HIP, RArad, DErad, Plx FROM \"I/239/hip_main\" WHERE Plx > 100' out=nearby_hipparcos.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query GAVO for images (`dataproduct_type='image'`) and then just count them.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM ivoa.obscore WHERE dataproduct_type = ''image''' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate an MOC where the circle radius is equal to the angular separation (skyDistanceDegrees) between their ICRS position and their Galactic position, at order 10.",
        "response": "stilts mocshape in=pos_diff.fits icmd='addskycoords icrs galactic RA DEC GLON GLAT' shape=circle coords='array(RA, DEC, skyDistanceDegrees(RA, DEC, GLON, GLAT))' order=10 out=coord_diff_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot the analytic function $y = log(x)$ (natural log) from $x=1$ to $x=10$.",
        "response": "stilts plot2plane layer=function fexpr='ln(x)' xmin=1 xmax=10 out=ln_curve.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Read a table, rename the original table name to 'InitialData', and explicitly set a table parameter 'VERSION' to 3.2.",
        "response": "stilts tpipe in=raw.fits cmd='tablename InitialData' cmd='setparam VERSION 3.2' out=versioned_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot X vs Y, applying a filter to use the symlog scale (threshold 1) only on the X axis, and setting the linear scaling factor to 0.1.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xscale='symlog(1,0.1)' out=symlog_x_custom.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match cat1.fits and cat2.fits using their individual errors stored in ERR_ARCSEC_1 and ERR_ARCSEC_2 respectively (skyerr matcher).",
        "response": "stilts tmatch2 in1=cat1.fits in2=cat2.fits matcher=skyerr params=5 values1='RA_1 DEC_1 ERR_ARCSEC_1' values2='RA_2 DEC_2 ERR_ARCSEC_2' out=match_with_errors.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot markers sized by magnitude and coloring them by density, but constrain the density color map to the upper half of its range (denseclip=0.5,1).",
        "response": "stilts plot2sky in=sources.fits layer=size lon=RA lat=DEC size=MAG shading=density denseclip=0.5,1 out=density_clipped_mag_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert an ECSV file to FITS, ensuring the output FITS file is written using **FITS-basic** format.",
        "response": "stilts tcopy in=input.ecsv ofmt=fits-basic out=basic_ecsv.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert degrees/min/sec components to a single decimal degree RA column, then delete the components.",
        "response": "stilts tpipe in=raw.fits cmd='replacecol RA \"hmsToDegrees(RA_H, RA_M, RA_S)\"' cmd='delcols \"RA_H RA_M RA_S\"' out=decimal_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA_M,' 'RA_S)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA hmsToDegrees(RA_H, RA_M, RA_S)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'RA_M,' 'RA_S)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Run an SSA query around RA 30, Dec 30, with a radius of 0.01 degrees, ensuring the requested data format is specifically VOTable XML.",
        "response": "stilts cone serviceurl=http://jvo.nao.ac.jp/skynode/do/tap/akari/spectrum/slitless_mir_spec lon=30.0 lat=30.0 radius=0.01 servicetype=ssa dataformat=application/x-votable+xml out=ssa_votable.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the GAVO Data Center for all ObsCore records and output the result in Feather format.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM ivoa.ObsCore' ofmt=feather out=gavo_obscore.feather",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T_REF has position in Ecliptic coordinates (ELON, ELAT). Convert to ICRS before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T_REF.fits icmd1='addskycoords ecliptic icrs ELON ELAT RA DEC' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=ecl_converted_ref_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve a sample of objects from the MAST Hubble Source Catalog Version 3 (HSCv3), locally removing the column named 'primary_id'.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 10 * FROM hsc_v3.point' ocmd='delcols primary_id' out=hsc_del_col.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert flux in Jansky to AB magnitude and add it as 'MAG_AB'.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol MAG_AB janskyToAb(FLUX_JY)' out=mag_ab_conv.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the input table to select only rows where magnitude is brighter than 16, and create an order 14 MOC with a 0.05 degree radius.",
        "response": "stilts pixfoot in=bright.fits icmd='select \"MAG < 16\"' ra=RA dec=DEC radius=0.05 order=14 out=bright_filtered_o14.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '16'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 16\n\nUsage: select <expr>\n    (Unused arguments: '<' '16'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T3 has coordinate RA/DEC in degrees but units are not specified. Force interpretation as degrees before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T_REF.fits in2=T2.fits in3=T3.fits icmd3='colmeta -units deg RA; colmeta -units deg DEC' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=forced_units_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Request the metadata for the output table resulting from querying the LMD TAP service for table schemas.",
        "response": "stilts tapquery tapurl=http://vo.lmd.jussieu.fr/tap adql='SELECT * FROM TAP_SCHEMA.schemas' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "My catalog `old_survey.dat` is in ASCII format and uses B1950 coordinates (`RA_1950`, `DEC_1950`). Can I still generate a J2000 MOC from it?",
        "response": "stilts pixfoot in=old_survey.dat ifmt=ascii icmd='addskycoords fk4 fk5 RA_1950 DEC_1950 RA_J2000 DEC_J2000' ra=RA_J2000 dec=DEC_J2000 out=old_survey_j2000_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query for Gaia sources and their 2MASS best neighbor, but only if the neighbor is brighter than K=12.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT g.source_id, t.tmass_oid, t.k_m FROM gaiadr3.gaia_source AS g JOIN gaiadr3.tmass_best_neighbour AS t ON g.source_id = t.source_id WHERE t.k_m < 12' maxrec=1000",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'LOG_ABS_FLUX_E' applying natural log scaling to the absolute value of flux.",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_ABS_FLUX_E ln(abs(FLUX))' out=log_abs_flux_e.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Join T1 and T2 using a full outer join (1or2). T1 uses columns X1, Y1. T2 uses X2, Y2. Columns should be explicitly suffixed '_1' and '_2'.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=2d params=5 values1='X1 Y1' values2='X2 Y2' join=1or2 fixcols=all suffix1=_1 suffix2=_2 out=full_outer_explicit_suffix.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot markers using Galactic coordinates (L, B), displaying coordinate labels using a monospaced font.",
        "response": "stilts plot2sky in=gal_data.fits viewsys=galactic layer=mark lon=L lat=B fontstyle=mono out=gal_mono_font.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L\"\n    (The name \"L\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Filter my table `events.fits` to only keep rows from index 5000 to 5100.",
        "response": "stilts tpipe in=events.fits cmd='rowrange 5000 +101' out=event_slice.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a circle MOC where the radius is equivalent to 10 mas/yr proper motion converted to angle/year at 1 kpc (parsec).",
        "response": "stilts mocshape in=pm_data.fits shape=circle coords='array(RA, DEC, (10.0 / 3600000.0) * 1000.0 / 206265.0)' out=pm_derived_rad.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Count the rows in the MAST ULLYSES HLSP ObsCore table where the facility name is 'HST'.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT COUNT(*) FROM ivoa.ObsCore WHERE facility_name = ''HST''' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Show a scatter plot where points are colored by one aux value and sized by another.",
        "response": "stilts plot2plane in=data.fits layer=size x=X y=Y size=SIZE_COL shading=aux aux=COLOR_COL",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine tables, using an ocmd to eliminate duplicate adjacent rows based on the 'RA' and 'DEC' columns.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='sort \"RA DEC\"; uniq \"RA DEC\"' out=position_deduplicated.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort RA DEC\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T3 contains magnitude in symmetric log scale. Match on position + log magnitude (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='1 1' values1='RA DEC MAG_SL' values2='RA DEC MAG_SL' values3='RA DEC MAG_SL' in1=T_REF.fits in2=T2.fits in3=T3.fits out=symlog_match_3way.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a table, sort it by 'TIME' descending, and output the calculated checksum of the sorted data.",
        "response": "stilts tpipe in=series.fits cmd='sort -down TIME' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert an ECSV file to a text file, ensuring that the ECSV is read automatically by content detection.",
        "response": "stilts tcopy in=data.ecsv out=data_out.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert an ECSV file to FITS, supplying an **external YAML header** file for metadata processing.",
        "response": "stilts tcopy in=data.csv ifmt='ecsv(header=metadata.yaml)' out=data_with_meta.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find groups of objects across three catalogs. The output table should only contain the columns from the first table.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=group matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 join1=match ocmd='keepcols \"*_1\"' out=t1_only_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Sort the table in descending order of the combination of 'MAG' and 'COLOR'.",
        "response": "stilts tpipe in=data.fits cmd='sort \"-down MAG COLOR\"' out=double_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'COLOR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort -down MAG COLOR\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'COLOR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 44.8408 and latitude 88.131. Please use a search radius of 1.5805 degrees. Instead of a file, just give me the out. The coordinates are in the fk4 system.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=44.8408 lat=88.131 radius=1.5805 skysys=fk4 omode=out",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Draw a filled area plot under the curve defined by columns X and Y, using semi-transparent blue.",
        "response": "stilts plot2plane in=curve.fits layer=fill x=X y=Y color=blue transparency=0.5 out=filled_area.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a scatter plot and disable the grid lines.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y grid=false out=no_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine two tables, but only if the 'QUALITY' flag is 'A' in the first table.",
        "response": "stilts tcatn nin=2 in1=t1.fits icmd1='select QUALITY==\"A\"' in2=t2.fits out=filtered.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match four tables using Cartesian 2D coordinates (X, Y) where the match radius is given by the combined error in quadrature (2d_err_q).",
        "response": "stilts tmatchn nin=4 multimode=group matcher=2d_err_q params=1 values1='X Y ERR' values2='X Y ERR' values3='X Y ERR' values4='X Y ERR' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits out=cartesian_2d_err_q_4way.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Apply a redshift zero-point correction of -0.001 to the 'Z_SPEC' column.",
        "response": "stilts tpipe in=spec_data.fits cmd='replacecol Z_SPEC \"Z_SPEC - 0.001\"' out=z_corrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '0.001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol Z_SPEC Z_SPEC - 0.001\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '0.001'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I have coordinates in hours and degrees (RA_H, DEC). Convert RA to degrees and search within 15 arcminutes.",
        "response": "stilts pixfoot in=hms_data.fits ra='RA_H * 15.0' dec=DEC radius='15.0 / 60.0' out=hms_15am.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Merge all tables from an external URL listing input files in ASCII format.",
        "response": "stilts tcat in=@http://example.com/filelist.txt out=remote_list_merge.fits",
        "chat.jar": "fixed",
        "error": "Error: http:/example.com/filelist.txt (No such file or directory)\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Find objects around RA 10h, Dec 50d. Convert RA to degrees, and use a radius calculated as 10 arcseconds plus 1 arcsecond.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon='hmsToDegrees(10.0, 0, 0)' lat=50.0 radius='(10.0 + 1.0) / 3600.0' out=gaia_11as.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(10.0, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate an order 0 MOC. What would that look like?",
        "response": "An order 0 MOC represents coverage using the 12 base HEALPix pixels. It is the coarsest possible MOC. `stilts mocshape in=mycat.fits shape=point coords='array(RA,DEC)' order=0 out=order0.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Pair match T_MAIN (ref) against three observational epochs (E1, E2, E3). Use a combined matcher: 2 arcsec sky separation AND 0.5 magnitude difference on column 'G_MAG'.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky+1d params='2 0.5' values1='RA DEC G_MAG' values2='RA DEC G_MAG' values3='RA DEC G_MAG' values4='RA DEC G_MAG' in1=T_MAIN.fits in2=E1.fits in3=E2.fits in4=E3.fits out=combined_sky_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add a column with the sine of the angle in degrees given by 'POS_ANG_DEG'.",
        "response": "stilts tpipe in=data.fits cmd='addcol POS_ANG_SIN sinDeg(POS_ANG_DEG)' out=sines.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate a distance modulus column (DIST_MOD) from parallax (PLX) and filter out any rows where PLX < 0.",
        "response": "stilts tpipe in=stars.fits cmd='select \"PLX > 0\"' cmd='addcol DIST_MOD \"5 * log10(1.0 / (PLX/1000.0)) - 5\"' out=dist_mod.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PLX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I have `file.fits` with array column `VALUES`. I want a new column which is the median of that array for each row.",
        "response": "stilts tpipe in=file.fits cmd='addcol MEDIAN_VAL median(VALUES)' out=file_medians.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need to get the MOC for the first 100 entries of my `s_region` column.",
        "response": "stilts mocshape in=obscore.fits icmd='head 100' shape=stc-s coords=s_region out=first_100_regions.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "What's the command to see just the first 10 rows of the table in `large_catalog.fits` on my screen?",
        "response": "stilts tpipe in=large_catalog.fits cmd='head 10' omode=out ofmt=text",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables, and apply an input filter to discard rows where 'DEC' is null.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='select !NULL_DEC' out=no_null_dec.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "My table has two radius columns, `R_MAJ` and `R_MIN`, and a position angle `PA`. Can I make an STC-S MOC?",
        "response": "Yes, by constructing the STC-S string first: `stilts mocshape in=ellipses.fits icmd='addcol stcs \"Ellipse ICRS \"+RA+\" \"+DEC+\" \"+R_MAJ+\" \"+R_MIN+\" \"+PA' shape=stc-s coords=stcs out=ellipses.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Join the `gaia_source` and `tmass_best_neighbour` tables in the Gaia archive on their common `source_id`.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 100 g.source_id, g.ra, g.dec, t.tmass_oid FROM gaiadr3.gaia_source AS g JOIN gaiadr3.tmass_best_neighbour AS t ON g.source_id=t.source_id' out=gaia_tmass_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Search MAST PS1 DR2 near Ecliptic Lon 200, Lat 50, with a radius of 1 arcminute, and save the resulting file in FITS format.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 lon=200.0 lat=50.0 radius='1.0 / 60.0' skysys=ecliptic out=ps1dr2_ecliptic_1am.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read a CSV file and convert it to FITS, explicitly specifying that **no rows are sampled** to determine column types (fastest metadata acquisition).",
        "response": "stilts tcopy in=known_types.csv ifmt='csv(maxSample=0)' out=fixed_types.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Count the total number of raw VIRCAM frames in the ESO archive that observed NGC 1316, running the query synchronously.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT COUNT(*) FROM raw.vircam WHERE target_name = ''NGC 1316''' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Upload a local table named 'targets.csv' and crossmatch it against the VizieR table 'II/246/out' (2MASS) within 1 arcsecond.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT * FROM \"II/246/out\" AS t JOIN TAP_UPLOAD.targets AS u ON 1=CONTAINS(POINT(''ICRS'', t.ra, t.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.0002777))' nupload=1 upload1=targets.csv upname1=targets out=2mass_match.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Join two tables, `table_a` and `table_b`, on KIS Data Centre, filtering by a specific time range.",
        "response": "stilts tapquery tapurl=http://dachs.sdc.leibniz-kis.de/tap adql='SELECT a.*, b.* FROM table_a AS a JOIN table_b AS b ON a.ID = b.ID WHERE a.t_start > 58000.0' out=kis_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 5 records from MAST SkyMapper DR4 synchronously, outputting the result in FITS-plus format to ensure rich metadata.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/skymapperdr4/ adql='SELECT TOP 5 * FROM smssdr4.master' sync=true ofmt=fits-plus out=skymapper_rich.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run a cone search on the GAVO Data Center around RA 10, Dec 5, searching for objects within a radius of 0.5 arcminutes.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=10.0 lat=5.0 radius='0.5 / 60.0' out=gavo_half_arcmin.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.5 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate an MOC where the circle radius is determined by parallax (PLX) error divided by the parallax value, assuming the result is in degrees.",
        "response": "stilts mocshape in=plx_cat.fits shape=circle coords='array(RA, DEC, PLX_ERR / PLX)' out=plx_distance_err.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column 'MAG_K_ABS' using the luminosity distance (Mpc) calculated from the Z column (using default cosmology).",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_K_ABS \"K_MAG - distanceToModulus(mToMpc(comovingDistanceL(Z, 70.0, 0.3, 0.7)))\"' out=k_abs_dist.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'distanceToModulus(mToMpc(comovingDistanceL(Z,' '70.0,' '0.3,' '0.7)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_K_ABS K_MAG - distanceToModulus(mToMpc(comovingDistanceL(Z, 70.0, 0.3, 0.7)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'distanceToModulus(mToMpc(comovingDistanceL(Z,' '70.0,' '0.3,' '0.7)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine tables, and apply an input filter to remove rows where 'DEC' is greater than 80 degrees or less than -80 degrees.",
        "response": "stilts tcat in='all_sky.fits near_pole.fits' icmd='select \"abs(DEC) < 80.0\"' out=polar_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '80.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC) < 80.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '80.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Make a plot from piped CSV data, where x is column 1 and y is column 2.",
        "response": "cat data.csv | stilts plot2plane ifmt=csv in=- layer=mark x=$1 y=$2",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find all Subaru Suprime-Cam point sources and locally calculate a new column `R_ABS` based on parallax (if available) and R magnitude.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/spcam adql='SELECT * FROM hsc_v3.point' ocmd='addcol R_ABS \"R_MAG - 5 * log10(parallax) + 5\"' out=spcam_abs_r.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '5' '*' 'log10(parallax)' '+' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol R_ABS R_MAG - 5 * log10(parallax) + 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '5' '*' 'log10(parallax)' '+' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 23.5095 and latitude 7.2476. Please use a search radius of 1.936 degrees. Save the results to a csv file called query_results_103.csv. The coordinates are in the galactic system.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=23.5095 lat=7.2476 radius=1.936 skysys=galactic compress=true omode=out ofmt=csv out=query_results_103.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot markers sized by the 'RADIUS' column, but disable automatic size scaling, treating RADIUS as pixels directly.",
        "response": "stilts plot2plane in=sources.fits layer=size x=RA y=DEC size=RADIUS autoscale=false out=pixel_size_radius.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot markers where the size is given by the expression $\\text{LUMINOSITY} \times 10^3$, forcing autoscale off.",
        "response": "stilts plot2plane in=sources.fits layer=size x=RA y=DEC size='LUMINOSITY * 1e3' autoscale=false out=high_fixed_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "How can I plot a histogram of the separation between two sets of coordinates in my table?",
        "response": "stilts plot2plane in=pairs.fits layer=histogram x='skyDistanceDegrees(RA1,DEC1,RA2,DEC2)*3600'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"skyDistanceDegrees(RA1,DEC1,RA2,DEC2)*3600\"\n    (The name \"RA1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot the mean of an array column FLUX_SPEC against WAVELENGTH, using the statline layer.",
        "response": "stilts plot2plane in=spectra.fits layer=statline xs=WAVELENGTH ys=FLUX_SPEC ycombine=mean thick=3 out=mean_spectrum_stat.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVELENGTH\"\n    (The name \"WAVELENGTH\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge tables, using `badval` to convert the string 'INVALID' to null in the 'QUALITY' column for all inputs.",
        "response": "stilts tcat in='q1.vot q2.vot' icmd='badval \"INVALID\" QUALITY' out=quality_cleaned.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Draw a line plot with a custom dash pattern of '10 on, 5 off'.",
        "response": "stilts plot2plane in=data.fits layer=line x=X y=Y dash='10,5' out=custom_10_5_dash.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Join T1 and T2 using a right outer join (all T2 rows included). Match exactly on 'OBS_ID'.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=OBS_ID values2=OBS_ID join=all2 out=obs_id_right_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the ASTRON VO Service for all tables and output the result as a CSV file using a pipe (|) delimiter.",
        "response": "stilts tapquery tapurl=https://vo.astron.nl/tap adql='SELECT * FROM TAP_SCHEMA.tables' ofmt='csv(delimiter=|)' out=astron_tables.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column that is a single-element array containing the value of the 'MAG' column.",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_ARRAY array(MAG)' out=mag_single_array.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve metadata about the ESO TAP_OBS ObsCore table, forcing the use of the TAP 1.1 interface version.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM ivoa.ObsCore' interface=tap1.1 omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a PDF plot of 'temp' vs 'pressure' with fat red crosses as markers.",
        "response": "stilts plot2plane in=atmosphere.dat ifmt=ascii layer=mark x=temp y=pressure shape=fat_cross color=red out=atmos.pdf",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"temp\"\n    (The name \"temp\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Read a remote HAPI stream for GRACE_A_MAG and save the result locally as a VOTable.",
        "response": "stilts tcopy in='https://vires.services/hapi/data?dataset=GRACE_A_MAG&start=2009-01-01&stop=2009-01-02&include=header' ifmt=hapi out=grace_data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert a FITS file to ECSV using spaces instead of commas.",
        "response": "stilts tcopy in=data.fits ofmt='ecsv(delimiter=space)' out=data.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch four files T1-T4 using anisotropic 2D matching (2d_anisotropic) on (FLUX_R, FLUX_B) with tolerances 10 and 5 units.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=2d_anisotropic params='10 5' values1='FLUX_R FLUX_B' values2='FLUX_R FLUX_B' values3='FLUX_R FLUX_B' values4='FLUX_R FLUX_B' in1=F1.fits in2=F2.fits in3=F3.fits in4=F4.fits out=aniso_flux_group_4way.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve the list of all tables from ESO TAP Catalogue service and output the result in FITS-plus format to retain all metadata.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT * FROM TAP_SCHEMA.tables' ofmt=fits-plus out=eso_tables.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How do I plot just the error bars without the central marker?",
        "response": "You can use two layers: one `xyerror` layer for the bars, and one `mark` layer. Then you can either omit the `mark` layer entirely or set `hide_mark=true` for the `xyerror` layer's dataset, though the simplest is just `stilts plot2plane in=data.fits layer=xyerror x=X y=Y xerrhi=XE yerrhi=YE`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match two tables using Cartesian 2D coordinates (X, Y) with per-object errors combined in quadrature (2d_err_q). Scale factor 3.",
        "response": "stilts tmatch2 in1=D1.fits in2=D2.fits matcher=2d_err_q params=3 values1='X Y ERR' values2='X Y ERR' out=2d_quadrature_scaled_3.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine two FITS files. T1 has coordinates RA_J2000 in radians, convert them to degrees before joining T2.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='replacecol RA_J2000 radiansToDegrees(RA_J2000)' in2=T2.fits out=rad_to_deg_preprocessed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find spectra (SSA) around RA 150, Dec 45, using a maximum search radius equivalent to 100 milli-arcseconds (mas).",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=150.0 lat=45.0 radius='100.0 / 3600000.0' servicetype=ssa out=ssa_mas.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"100.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read an MRT file and convert it to CSV format.",
        "response": "stilts tcopy in=input.mrt ifmt=mrt out=output.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match three catalogs (A, B, C). C has errors (ERR_C) that must be calculated in quadrature with a fixed 0.5 arcsec systematic error before skyerr matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=skyerr_q params=1 in1=A.fits in2=B.fits in3=C.fits icmd3='addcol TOT_ERR \"hypot(ERR_C, 0.5)\"' values1='RA DEC ERR_A' values2='RA DEC ERR_B' values3='RA DEC TOT_ERR' out=systematic_err_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol TOT_ERR hypot(ERR_C, 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Validate that the column 'MAG_ERR' only contains values that are small (less than 1.0) for all rows.",
        "response": "stilts tpipe in=errors.fits cmd='assert \"MAG_ERR < 1.0\"' out=small_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG_ERR < 1.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a boolean column 'HIGH_RA' that is true if the RA value is between 180 and 360 degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol HIGH_RA \"RA >= 180.0 && RA <= 360.0\"' out=high_ra_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '180.0' '&&' 'RA' '<=' '360.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HIGH_RA RA >= 180.0 && RA <= 360.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>=' '180.0' '&&' 'RA' '<=' '360.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a small region (0.01 degree radius) centered at L=0, B=0, viewing in Galactic coordinates.",
        "response": "stilts plot2sky in=gc_data.fits viewsys=galactic clon=0.0 clat=0.0 radius=0.01 layer=mark lon=L lat=B out=galactic_center_0p01deg.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L\"\n    (The name \"L\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert an ECSV file 'data.ecsv' to a Parquet file 'data.parquet'.",
        "response": "stilts tcopy in=data.ecsv out=data.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match two tables, `t1.fits` and `t2.fits`. Then, for the matched pairs, calculate the average magnitude, `(MAG_1 + MAG_2) / 2`.",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' ocmd='addcol AVG_MAG \"(MAG_1 + MAG_2) / 2\"' out=avg_mag_matches.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'MAG_2)' '/' '2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AVG_MAG (MAG_1 + MAG_2) / 2\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'MAG_2)' '/' '2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot density contours on a log-scaled density value grid (scaling=log) with zero contour level set to 1.0.",
        "response": "stilts plot2plane in=data.fits layer=contour x=X y=Y scaling=log zero=1.0 out=log_zero_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find rows where the magnitude 'MAG_J' is null and replace the value with 25.0.",
        "response": "stilts tpipe in=phot.fits cmd='replacecol MAG_J \"NULL_MAG_J ? 25.0 : MAG_J\"' out=imputed_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '25.0' ':' 'MAG_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_J NULL_MAG_J ? 25.0 : MAG_J\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '25.0' ':' 'MAG_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge data, forcing the output format to IPAC table (.tbl).",
        "response": "stilts tcat in='i1.fits i2.fits' ofmt=ipac out=ipac_output.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a FITS MOC at order 6 from a simulated dataset.",
        "response": "stilts mocshape in=:skysim:100000 shape=point coords='array(ra,dec)' order=6 out=sim_o6.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find the minimum, maximum, and mean redshift (`z_best`) for CANDELS HLSP objects in the COSMOS field (RA=150.1, Dec=2.2, radius=0.1 deg).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT z_best FROM candels.photometry WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 150.1, 2.2, 0.1))' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter the table to keep every 100th row, starting from row 50.",
        "response": "stilts tpipe in=data.fits cmd='every \"100\"' cmd='select \"($0 % 100) == 50\"' out=offset_100_sample.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '100)' '==' '50'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ($0 % 100) == 50\n\nUsage: select <expr>\n    (Unused arguments: '%' '100)' '==' '50'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a histogram where the bar width is exactly 0.05 units.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE binsize=0.05 out=fixed_width_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine T1 and T2. T1 is in FITS format, T2 is in Parquet. Output the result in the FITS column-oriented format (colfits).",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.parquet ofmt=colfits-plus out=combined.colfits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot points in ICRS system, but display the plot grid in Ecliptic coordinates, hiding the default ICRS grid (grid=false).",
        "response": "stilts plot2sky viewsys=equatorial grid=false layer_m=mark lon_m=RA lat_m=DEC layer_g=skygrid gridsys_g=ecliptic out=ecl_grid_only.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter in_m: null value not allowed\nUsage: in_m=<table>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the KIS Science Data Centre and enforce synchronous execution of the query.",
        "response": "stilts tapquery tapurl=http://dachs.sdc.leibniz-kis.de/tap adql='SELECT TOP 10 * FROM TAP_SCHEMA.tables' sync=true out=kis_sync.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match two tables using position AND proper motion (sky*2d), requiring the distance in the scaled 4D space to be less than 1. Tolerances 2 arcsec, 5 mas/yr for PMRA/PMDEC.",
        "response": "stilts tmatch2 in1=C1.fits in2=C2.fits matcher=sky*2d_anisotropic params='2 5 5' values1='RA DEC PMRA PMDEC' values2='RA DEC PMRA PMDEC' out=strict_pos_pm_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match two tables exactly on ID. Find the best match (best) symmetrically. Output the total row count.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID find=best omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I'm trying to find variable stars by matching two observations `obs1.fits` and `obs2.fits`. Find pairs within 1 arcsec and then select pairs where the magnitude difference is greater than 0.5.",
        "response": "stilts tmatch2 in1=obs1.fits in2=obs2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=all suffix1=_1 suffix2=_2 ocmd='select \"abs(MAG_1 - MAG_2) > 0.5\"' out=variable_candidates.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_2)' '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(MAG_1 - MAG_2) > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG_2)' '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Group match three catalogs (c1.fits, c2.fits, c3.fits) by sky position within 5 arcseconds (using RA, DEC in all). Output groups only if they contain sources from all three tables.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=5 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=c1.fits in2=c2.fits in3=c3.fits join1=match join2=match join3=match out=group_triples.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query MAST TESS Input Catalog (TIC) and locally calculate the base-10 logarithm of the TESS magnitude (TMAG) for the output table.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 100 tid, tmag FROM tic.v8' ocmd='addcol LOG_TMAG log10(tmag)' out=tic_log_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw a set of filled circles representing coverage, coloring them based on the 'EXPTIME' auxiliary column using the 'inferno' map, applying the Logarithmic scaling function.",
        "response": "stilts plot2sky in=targets.fits layer=area area='array(RA, DEC, RADIUS)' areatype=CIRCLE polymode=fill shading=aux aux=EXPTIME auxfunc=log auxmap=inferno out=log_exptime_inferno.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"EXPTIME\"\n    (The name \"EXPTIME\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "How can I find objects that are common to all three of my catalogs: `sdss.fits`, `panstarrs.fits`, and `wise.fits`? The match radius is 1.5 arcseconds and `sdss.fits` is the reference.",
        "response": "stilts tmatchn nin=3 in1=sdss.fits in2=panstarrs.fits in3=wise.fits multimode=pairs iref=1 matcher=sky params=1.5 values1='ra dec' values2='ra dec' values3='ra dec' join1=match join2=match join3=match out=common_sources.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Show the 1st and 3rd quartiles of my data distribution as lines on a scatter plot.",
        "response": "stilts plot2plane in=data.fits layer_m=mark x_m=X y_m=Y layer_q1=quantile x_q1=X y_q1=Y quantiles_q1=0.25 color_q1=blue layer_q3=quantile x_q3=X y_q3=Y quantiles_q3=0.75 color_q3=red",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine tables, and if the column 'FLAG' has the value '99', replace it with a null value in the output table.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replaceval 99 null FLAG' out=flag_null_replaced.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Submit an asynchronous query to the ESA Herschel Archive (HSA) to retrieve observation IDs and coordinates, reporting progress continuously.",
        "response": "stilts tapquery tapurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap adql='SELECT obs_id, s_ra, s_dec FROM ivoa.ObsCore' progress=true out=herschel_obs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How to save a plot as an SVG file?",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y out=plot.svg",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge tables, and replace any instance of value 99.0 with null in all columns starting with 'MAG_'.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='replaceval 99.0 null MAG_*' out=mag_null_99.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Read a table from a system command pipe where the output is a compressed FITS file.",
        "response": "gunzip -c data.fits.gz | stilts tcopy in=- ifmt=fits out=decompressed.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the ASI SSDC TAP Service for 5 ObsCore records and stream the output directly to standard output as plain text.",
        "response": "stilts tapquery tapurl=https://tools.ssdc.asi.it/TAPSSDC/tap adql='SELECT TOP 5 * FROM ivoa.ObsCore' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a JSON MOC (order 12) for points with a fixed radius of 3 arcminutes, writing to standard output.",
        "response": "stilts pixfoot in=targets.fits ra=RA dec=DEC radius='3.0 / 60.0' order=12 mocfmt=json out=-",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "After concatenating two tables, I want to remove any duplicate rows based on the 'ID' column.",
        "response": "stilts tcatn nin=2 in1=cat1.fits in2=cat2.fits ocmd='sort ID' ocmd='uniq ID' out=unique_sources.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "How to append a single row to a table using `tcatn`?",
        "response": "You can create a single-row table with `tpipe` and `head 1`, then `tcatn`. E.g., `stilts tpipe in=single_row_source.fits cmd='head 1' out=single_row.fits`, then `stilts tcatn nin=2 in1=main_table.fits in2=single_row.fits out=appended.fits`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch T1 and T2 using sky position (5 arcsec). T2 is an IPAC table. Output result to standard output in plain text format.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.tbl ifmt2=ipac matcher=sky params=5 values1='RA DEC' values2='RA DEC' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge a multi-extension FITS file (data.fits) selecting extension #2, with a single FITS file (cat.fits).",
        "response": "stilts tcatn nin=2 in1=data.fits#2 in2=cat.fits out=ext_2_merged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot points that are 50% transparent, where 5 points make the color fully opaque.",
        "response": "stilts plot2plane in=crowded.fits layer=mark x=X y=Y shading=transparent opaque=5 out=transparent_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T1 and T2 on 3D spherical polar coordinates (sky3d). T1 distance is in parsec, T2 is in parsec. Tolerance 50 pc.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky3d params=50 values1='RA DEC DIST_PC' values2='RA DEC DIST_PC' out=sky3d_50pc.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Replicate the input table three times, resulting in a table three times the original size, ensuring table-level concatenation.",
        "response": "stilts tpipe in=data.fits cmd='repeat -table 3' out=data_tripled.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a point MOC after converting input RA/DEC, which are in hours/degrees, to degrees.",
        "response": "stilts pixfoot in=hms_data.fits icmd='addcol RA_DEG \"hmsToDegrees(RA_H, RA_M, RA_S)\"' ra=RA_DEG dec=DEC out=hms_conversion_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA_M,' 'RA_S)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DEG hmsToDegrees(RA_H, RA_M, RA_S)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA_M,' 'RA_S)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find records in the Europlanet Telescope Network Database TAP service near RA 200, Dec 50, with a radius of 1.2 arcminutes, filtering for records where the magnitude column 'MAG' is between 12 and 16.",
        "response": "stilts cone serviceurl=http://parsec-europlanet.eu:81/tap lon=200.0 lat=50.0 radius='1.2 / 60.0' ocmd='select MAG >= 12.0 && MAG <= 16.0' out=parsec_mag_range.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.2 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine tables from two different Parquet files and output them as a compressed FITS file.",
        "response": "stilts tcat in='p1.parquet p2.parquet' ofmt=fits out=compressed_output.fits.gz",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables and then transpose the columns and rows of the resulting table.",
        "response": "stilts tcat in='v1.fits v2.fits' ocmd=transpose out=transposed_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve MAST ULLYSES HLSP ObsCore entries and assert locally that all rows have a non-null target name.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT TOP 10 target_name FROM ivoa.ObsCore' ocmd='assert !NULL_target_name' out=ullyses_assert.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a very low-resolution MOC (order 2) from a list of polygons.",
        "response": "stilts mocshape in=polygons.fits shape=polygon coords='parseDoubles(VERTICES)' order=2 out=lowres_polygons.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine data.fits with a table derived from executing a command pipeline: cat pipe.csv.",
        "response": "stilts tcatn nin=2 in1=data.fits in2='cat pipe.csv|' ifmt2=csv out=combined_pipe.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve metadata for a Cone Search (radius 0.1 deg) against the ESA Euclid TAP service, filtering by a geometric condition $RA > 50$ (but note the server will handle filtering).",
        "response": "stilts cone serviceurl=https://eas.esac.esa.int/tap-server/tap lon=50.1 lat=1.0 radius=0.1 omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Filter rows where the ICRS distance between (RA, DEC) and a fixed point (10, 5) is less than 0.1 degrees.",
        "response": "stilts tpipe in=cat.fits cmd='select \"skyDistanceDegrees(RA, DEC, 10.0, 5.0) < 0.1\"' out=cone_0_1.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' '10.0,' '5.0)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, 10.0, 5.0) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' '10.0,' '5.0)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I have an array column `FLUX_ARRAY`. How do I create a new column `MEAN_FLUX` which is the mean of the values in that array for each row?",
        "response": "stilts tpipe in=array_data.fits cmd='addcol MEAN_FLUX mean(FLUX_ARRAY)' out=mean_flux_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Count the number of unique position angles (`PA`) recorded in the Subaru MOIRCS data service summary table.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/moircs adql='SELECT COUNT(DISTINCT PA) FROM moircs.summary' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find rows in T_MAIN that are NOT matched in T_SUPP (exact ID match). T_MAIN must first be filtered to exclude rows where FLAG=1.",
        "response": "stilts tmatch2 in1=T_MAIN.fits icmd1='select FLAG!=1' in2=T_SUPP.fits matcher=exact values1=ID values2=ID join=1not2 out=filtered_anti_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a JSON MOC from every 10th row of a 1 million star simulation.",
        "response": "stilts pixfoot in=:skysim:1e6 icmd='every 10' ra=ra dec=dec mocfmt=json out=sim_subsample.moc.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the ESO TAP_OBS archive and output the result in FITS format, ensuring the creation of rich FITS-plus metadata.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 * FROM ivoa.ObsCore' ofmt=fits-plus out=eso_obs_fits_plus.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine two datasets and only keep rows where the final magnitude is between 18 and 19.",
        "response": "stilts tcatn nin=2 in1=d1.fits in2=d2.fits ocmd='select \"MAG>18 && MAG<19\"' out=mag_slice.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'MAG<19'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG>18 && MAG<19\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'MAG<19'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create an order 6 MOC for all distinct HEALPix UNIQ values present in a table.",
        "response": "stilts mocshape in=hpx_pixels.fits shape=uniq coords=HPX_PIXEL order=6 out=distinct_hpx.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Display a progress monitor on the console while calculating a large, slow transformation, but immediately discard the output table.",
        "response": "stilts tpipe in=huge_data.fits cmd='addcol SLOW_COL \"log10($0 * 1.0)\"' cmd=progress omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SLOW_COL log10($0 * 1.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q16_3KPC' containing the 16th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q16_3KPC \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.16)\"' out=q16_dist_3kpc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.16)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q16_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.16)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.16)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_I_AB_V' converting Johnson I magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_I_AB_V \"MAG_I + JOHNSON_AB_V\"' out=i_ab_v_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_I_AB_V MAG_I + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I want to create a density map of my data. How can I color the points by density using the viridis color map?",
        "response": "stilts plot2plane in=deep_field.fits layer=mark x=X_IMAGE y=Y_IMAGE shading=density densemap=viridis",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_IMAGE\"\n    (The name \"X_IMAGE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Crossmatch T1 and T2. T2 contains a column 'FLAG'. Only consider T2 rows where FLAG is TRUE before matching.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='select FLAG' matcher=exact values1=ID values2=ID out=T2_flagged_filter.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 354.5487 and latitude -23.2971. Please use a search radius of 0.137 degrees. Save the results to a fits file called query_results_4.fits. The coordinates are in the icrs system.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=354.5487 lat=-23.2971 radius=0.137 skysys=icrs omode=out ofmt=fits out=query_results_4.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Remove all rows containing a null value in any column in the table.",
        "response": "stilts tpipe in=raw_data.fits cmd='select !hasNull($0)' out=no_nulls.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a local VOTable to FITS, specifying the output VOTable version as 1.3.",
        "response": "stilts tcopy in=data.vot ofmt='votable(version=V13)' out=v13_out.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve 10 ObsCore records from ESA Herschel TAP, filtering for observations made with the 'MIPS' instrument.",
        "response": "stilts tapquery tapurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore WHERE instrument_name = ''MIPS''' out=herschel_mips.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the total row count of the MAST MissionMAST summary table for HST Science Data.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/missionmast/ adql='SELECT COUNT(*) FROM hst.summary' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Group match five tables. Filter T4 to keep only rows where the calculated parallax error (1000/ERR_PLX) is less than 0.1.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=2 in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits icmd4='select \"1000/ERR_PLX < 0.1\"' in5=T5.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA DEC' out=low_parallax_err_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select 1000/ERR_PLX < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot a spherical grid (spheregrid) around a central point (CX, CY, CZ) using fixed Cartesian coordinates.",
        "response": "stilts plot2cube x=X y=Y z=Z layer_m=mark layer_g=spheregrid cx_g=0 cy_g=0 cz_g=0 radius_g=-0.5 out=centered_sphere_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter in_m: null value not allowed\nUsage: in_m=<table>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve 10 MAST STScI Registry resource identifiers and short names and save the output in FITS format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/registry adql='SELECT TOP 10 ivoid, short_name FROM reg.resource' ofmt=fits out=mast_reg_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge time series from a remote HAPI service URL and a local VOTable. Output the result to standard output in plain text.",
        "response": "stilts tcatn nin=2 in1='https://vires.services/hapi/data?dataset=GRACE_A_MAG&start=2009-01-01&stop=2009-01-02' ifmt1=hapi in2=local_events.vot ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a MOC at extremely high resolution (order 25) for the exact point positions listed in deep_catalog.fits.",
        "response": "stilts pixfoot in=deep_catalog.fits ra=RA dec=DEC radius=0 order=25 out=deep_cat_o25.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate tables T1 and T2. After combining, sort the output randomly.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits ocmd='shuffle' out=random_order_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'ERROR_COND_4' that is 1.0 if 'ERR_A' is greater than 1.0, and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_4 \"ERR_A > 1.0 ? 1.0 : 0.0\"' out=conditional_error_4.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_4 ERR_A > 1.0 ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '1.0' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T2 has columns 'RA_H', 'DEC_H' in sexagesimal format. Convert T2 coordinates before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=5 in1=T1.fits in2=T2.fits icmd2='replacecol RA hmsToDegrees(RA_H); replacecol DEC dmsToDegrees(DEC_H)' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=sexagesimal_preprocessed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Pair match T_REF against T2, T3, T4. Use Cartesian 3D coordinates (X, Y, Z) and match on distance error quadrature (3d_err_q).",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=3d_err_q params=1 values1='X Y Z ERR' values2='X Y Z ERR' values3='X Y Z ERR' values4='X Y Z ERR' in1=T_REF.fits in2=T2.fits in3=T3.fits in4=T4.fits out=err_q_3d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine tables, forcing the output format to LaTeX table format for publication.",
        "response": "stilts tcat in='small_a.fits small_b.fits' ofmt=latex out=pub_table.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Copy a table and output it as a text file, ensuring parameters are included.",
        "response": "stilts tcopy in=data.fits ofmt='text(params=true)' out=with_params.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XY' containing the quadrature sum of X_ERR and Y_ERR.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XY \"hypot(X_ERR, Y_ERR)\"' out=xy_quad_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Y_ERR)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XY hypot(X_ERR, Y_ERR)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_ERR)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a FITS MOC from a 10 million star simulation at order 9.",
        "response": "stilts mocshape in=:skysim:1e7 shape=point coords='array(ra,dec)' order=9 mocfmt=json out=sim_10M_o9.moc.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Can I plot a 2D histogram where the color shows the standard deviation of a 'TEMP' column in each bin?",
        "response": "stilts plot2plane in=gas_cloud.fits layer=grid x=X y=Y weight=TEMP combine=stdev",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a MOC for circles whose radius is `0.1 * log10(FLUX)`.",
        "response": "stilts mocshape in=flux_cat.fits shape=circle coords='array(RA,DEC,0.1*log10(FLUX))' out=flux_scaled_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column 'POS_GAL_R_MAG' containing the magnitude of the Galactic Cartesian position vector squared.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_R_MAG \"square(hypot(icrsToGal(astromXYZ(RA, DEC, PARALLAX))))\"' out=galactic_r_sq_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_R_MAG square(hypot(icrsToGal(astromXYZ(RA, DEC, PARALLAX))))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a 2D density map using the 'skydensity' layer (HEALPix level 9), combining the maximum 'TEMP' value per square arcsecond.",
        "response": "stilts plot2sky in=temp_survey.fits layer=skydensity lon=RA lat=DEC level=9 weight=TEMP combine=max perunit=arcsec2 out=max_temp_arcsec2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a MOC for circles where the radius in degrees is given by `sqrt(AREA_SQDEG/PI)`.",
        "response": "stilts mocshape in=source_areas.fits shape=circle coords='array(RA, DEC, sqrt(AREA_SQDEG/PI))' out=areas_as_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I have coordinates in radians (RA=0.5 rad, Dec=-0.1 rad). Convert them and run a cone search against Gaia TAP with 1 arcminute radius.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon='radiansToDegrees(0.5)' lat='radiansToDegrees(-0.1)' radius='1.0 / 60.0' out=gaia_rad_1arcmin.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"radiansToDegrees(0.5)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Retrieve the statistical summary of the observation duration (`duration`) column from the Subaru MOIRCS summary table.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/moircs adql='SELECT duration FROM moircs.summary' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC from an ASCII column containing polygon strings, setting the output resolution to order 8.",
        "response": "stilts mocshape in=poly_strings.txt ifmt=ascii shape=polygon coords='$1' order=8 out=string_polys_o8.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query for Gaia sources with high proper motion (> 500 mas/yr).",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, pmra, pmdec FROM gaiadr3.gaia_source WHERE pmra*pmra+pmdec*pmdec > 500*500' out=high_pm_stars.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine catalog.fits with table.vot. After concatenation, show the first 20 rows to the screen as text output.",
        "response": "stilts tcatn nin=2 in1=catalog.fits in2=table.vot ocmd='head 20' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a 2D grid plot of X vs Y where the color represents the median of the 'TEMP' column in each bin.",
        "response": "stilts plot2plane in=gas_cloud.fits layer=grid x=X y=Y weight=TEMP combine=median out=median_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot error ellipses defined by X and Y errors and a correlation coefficient (XYCORR) column.",
        "response": "stilts plot2plane in=gaia_data.fits layer=xycorr x=PMRA y=PMDEC xerr=PMRA_ERROR yerr=PMDEC_ERROR xycorr=PMRA_PMDEC_CORR out=corr_errors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"PMRA\"\n    (The name \"PMRA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Draw a filled region between two curves defined by Y_UPPER and Y_LOWER columns, using the fill layer.",
        "response": "stilts plot2plane in=data.fits layer=fill x=X y=Y_UPPER y0=Y_LOWER color=lightcoral out=two_line_fill.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Synchronously query SIMBAD for a famous star and calculate the resulting checksum, explicitly setting sync mode.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT main_id, ra, dec FROM basic WHERE main_id = ''Betelgeuse''' sync=true omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. For T1, only include rows with 'COLOR > 0.5'.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits icmd1='select \"COLOR > 0.5\"' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=T1_color_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select COLOR > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot two datasets on the same axes: data1.fits (red crosses) and data2.fits (blue circles).",
        "response": "stilts plot2plane layer_1=mark in_1=data1.fits x_1=X_POS y_1=Y_POS color_1=red shape_1=cross layer_2=mark in_2=data2.fits x_2=XPOS y_2=YPOS color_2=blue shape_2=open_circle out=multi_layer.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_POS\"\n    (The name \"X_POS\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Join two tables on a combination of 2D Cartesian position (X, Y) and 1D magnitude (MAG). Tolerances 5 units and 0.2 mag.",
        "response": "stilts tmatch2 in1=D1.fits in2=D2.fits matcher=2d+1d params='5 0.2' values1='X Y MAG' values2='X Y MAG' out=cartesian_mag_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find all Subaru HDS Spectrum data with an exposure time greater than 300 seconds.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/hds/ adql='SELECT * FROM hds.spectrum WHERE exp_time > 300' out=hds_long_exposure.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to match my `target_list.csv` against three large survey FITS files. Can I show progress?",
        "response": "stilts tmatchn nin=4 ifmt1=csv in1=target_list.csv in2=s1.fits in3=s2.fits in4=s3.fits multimode=pairs iref=1 matcher=sky params=3 values1='ra dec' values2='ra dec' values3='ra dec' values4='ra dec' progress=log out=target_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Upload a local table containing ID and FLUX values to the MAST CANDELS HLSP service and crossmatch against photometry based on ID, requiring all columns from the remote table.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT t.* FROM candels.photometry AS t JOIN TAP_UPLOAD.local AS u ON t.id = u.id' nupload=1 upload1=my_fluxes.fits upname1=local out=candels_flux_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine the footprints of `survey_a.fits` (points) and `survey_b.fits` (STC-S polygons).",
        "response": "stilts tcatn nin=2 in1=survey_a.fits icmd1='addcol region array(RA,DEC)' in2=survey_b.fits icmd2='addcol region s_region' out=combined.fits | stilts mocshape in=combined.fits shape=stc-s coords=region out=combined_surveys.moc.fits",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: mocshape: not found\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Copy a table from a synthetic attractor simulation (Henon, 1e7 points) to a Parquet file.",
        "response": "stilts tcopy in=:attractor:1e7,henon out=henon_large.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the ESO Catalogue TAP service for table names and descriptions.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT table_name, description FROM TAP_SCHEMA.tables' out=eso_cat_desc.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a table using the loop scheme from 1 to 1000, step 1, and output to a Feather format file.",
        "response": "stilts tpipe in=:loop:1,1001,1 ofmt=feather out=indexed.feather",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the J-PLUS DR3 catalogue for objects where the `r_mag` minus `i_mag` color is less than -0.5, saving the output in CSV format.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jplus-dr3 adql='SELECT * FROM jplus_dr3.master WHERE r_mag - i_mag < -0.5' ofmt=csv out=jplus_blue_sample.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the best match (best2) for T2 from T1. Output columns from T1 suffixed '_T1', T2 columns suffixed '_T2'.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=best2 fixcols=all suffix1=_T1 suffix2=_T2 out=best2_suffixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 115.1171 and latitude -45.3392. Please use a search radius of 1.4214 degrees. Save the results to a votable file called query_results_176.votable. After the query, please run this processing command: 'sorthead 20 MAG'. The coordinates are in the fk4 system. Use verbosity level 2.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=115.1171 lat=-45.3392 radius=1.4214 skysys=fk4 verb=2 omode=out ofmt=votable out=query_results_176.votable ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Group match three tables. T1 has a column 'NAME' that needs to be truncated to the first 10 characters before matching on NAME.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=SHORT_NAME values2=NAME values3=NAME in1=T1.fits icmd1='addcol SHORT_NAME \"substring(NAME, 0, 10)\"' in2=T2.fits in3=T3.fits out=truncated_name_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0,' '10)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SHORT_NAME substring(NAME, 0, 10)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0,' '10)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Execute an SIA query (SIAv1) using the MAST MissionMAST service near RA 110, Dec 15, with a 3 arcminute search radius.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/missionmast/ lon=110.0 lat=15.0 radius='3.0 / 60.0' servicetype=sia1 out=missionmast_3arcmin.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"3.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine three observations (O1.fits, O2.fits, O3.fits). O2 has magnitude in AB units; add 20.0 to O1 and O3's magnitude column (MAG) to match.",
        "response": "stilts tcatn nin=3 in1=O1.fits icmd1='replacecol MAG MAG+20.0' in2=O2.fits in3=O3.fits icmd3='replacecol MAG MAG+20.0' out=magnitude_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Upload a catalog named 'local_data.fits' to ARI Gaia and filter the table locally before it is uploaded to keep only sources brighter than magnitude 15.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT g.* FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.mydata AS u ON g.source_id = u.source_id' nupload=1 upload1=local_data.fits upname1=mydata ucmd1='select MAG<15' out=ari_filtered_upload.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Check the validity of an ADQL statement involving a complex join on the NOIRLab Data Lab service without performing the search or generating output.",
        "response": "stilts tapquery tapurl=https://datalab.noirlab.edu/tap adql='SELECT a.ra, b.dec FROM schema1.tableA AS a JOIN schema2.tableB AS b ON a.id = b.id WHERE a.ra > 10' parse=true omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 202.7516 and latitude -88.4897. Please use a search radius of 0.5987 degrees. Save the results to a ascii file called query_results_17.ascii.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=202.7516 lat=-88.4897 radius=0.5987 compress=true omode=out ofmt=ascii out=query_results_17.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Can you show me a `tcat` command that takes two CSVs, adds a column with the source file number, and then outputs a new CSV?",
        "response": "stilts tcat ifmt=csv in=input1.csv in=input2.csv seqcol=SourceID ofmt=csv out=output.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables and then transpose the final table so rows become columns and vice versa.",
        "response": "stilts tcat in='row_data1.fits row_data2.fits' ocmd=transpose out=transposed_result_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve the top 5 ULLYSES HLSP ObsCore entries and output the result in LaTeX table format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT TOP 5 * FROM ivoa.ObsCore' ofmt=latex out=ullyses_sample.tex",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Join T_A and T_B. T_A has position in Ecliptic coordinates (ELON, ELAT). Convert T_A to ICRS J2000 before a 1 arcsec sky match.",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='addskycoords ecliptic icrs ELON ELAT RA DEC' in2=T_B.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=ecl_to_icrs_join_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve 10 Sun observations from the CLIMSO coronagraphs EPN-TAP service.",
        "response": "stilts tapquery tapurl=https://epntap.climso.ovgso.fr/tap adql='SELECT TOP 10 * FROM epn_core.epn_core WHERE target_name = ''Sun''' out=climso_sun.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot vectors using the capped lines shape, with thickness 2, coloring them based on density, using translucent shading (translevel=0.3).",
        "response": "stilts plot2sky in=flow.fits layer=skyvector lon=RA lat=DEC dlon=DX dlat=DY arrow=capped_lines thick=2 shading=translucent translevel=0.3 out=trans_capped_vec.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the ESO TAP_OBS service around Galactic L=90, B=0, with a radius equivalent to 100 milli-arcseconds (mas).",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=90.0 lat=0.0 radius='100.0 / 3600000.0' skysys=galactic out=eso_100mas.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"100.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot lines connecting objects, sorting them by their magnitude MAG before connecting them.",
        "response": "stilts plot2sky in=data.fits icmd='sort MAG' layer=line lon=RA lat=DEC out=line_sorted_mag.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter layer: Unknown value \"line\" - must be one of mark, size, sizexy, skyvector, skyellipse, skycorr, link2, mark2, poly4, mark4, polygon, area, central, label, arealabel, contour, skydensity, healpix, skygrid\nUsage: layer=<layer-type> <layer-specific-params>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plotting a grid showing mean of 'Z_VALUE', custom binsize 40.",
        "response": "stilts plot2plane in=data.fits layer=grid x=X y=Y weight=Z_VALUE combine=mean xbinsize=-40 ybinsize=-40 out=mean_z_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine five tables (A-E.fits). Then apply a row filter to keep only every 50th row globally.",
        "response": "stilts tcatn nin=5 in1=A.fits in2=B.fits in3=C.fits in4=D.fits in5=E.fits ocmd='every 50' out=sparse_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a MOC at order 13, which is the default.",
        "response": "stilts pixfoot in=my_sources.fits order=13 out=my_sources_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot sources where RA > 300 degrees, using a size proportional to FLUX_K.",
        "response": "stilts plot2sky in=data.fits icmd='select \"RA > 300.0\"' layer=size lon=RA lat=DEC size=FLUX_K out=high_ra_sized.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"RA > 300.0\" (The name \"RA\" is unknown.)\n        (The name \"RA\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a MOC from only rows 1 to 1000, setting the input format to VOTable and output to ASCII.",
        "response": "stilts mocshape in=input.vot icmd='head 1000' shape=point coords='array(RA, DEC)' mocfmt=ascii out=small_sample.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot error ellipses using the xyellipse layer, defining the center and the two principal radii (A, B) but setting the position angle to zero.",
        "response": "stilts plot2plane in=ellipses.fits layer=xyellipse x=X y=Y ra=A rb=B posang=0 out=zero_pa_ellipses.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert a local VOTable to Parquet format, ensuring the Parquet file uses Snappy compression for efficiency.",
        "response": "stilts tcopy in=local.vot ofmt='parquet(compression=snappy)' out=snappy.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Copy a table from the loop scheme and output it as an IPAC file.",
        "response": "stilts tcopy in=:loop:50 out=loop_ipac.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Start an asynchronous query on the PADC planetary server searching for 'Earth' observations, guaranteeing the job persists for 1 year.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT * FROM epn_core.epn_core WHERE target_name = ''Earth''' destruction='+P1Y' out=earth_epn_1yr.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match Survey A and Survey B. A is a multi-extension FITS file, use extension #3. B is a compressed VOTable file.",
        "response": "stilts tmatch2 in1=Survey_A.fits#3 in2=Survey_B.vot.gz matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=ext3_gzip_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 199.0269 and latitude 88.7827. Please use a search radius of 1.1124 degrees. Save the results to a fits file called query_results_132.fits. After the query, please run this processing command: 'sorthead 20 MAG'. Use verbosity level 3.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=199.0269 lat=88.7827 radius=1.1124 verb=3 omode=out ofmt=fits out=query_results_132.fits ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Select Gaia sources where the number of observations is greater than 100.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, astrometric_n_good_obs_al FROM gaiadr3.gaia_source WHERE astrometric_n_good_obs_al > 100'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a coverage map where the radius is fixed at 1000 micro-arcseconds (\u00b5as).",
        "response": "stilts pixfoot in=targets.fits ra=RA dec=DEC radius='1000.0 / 3600000000.0' out=fixed_1000uas.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a table of 10,000 rows using the `:loop:` scheme and save it as a FITS file.",
        "response": "stilts tcopy in=:loop:10000 out=loop_table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Take `catalog.fits` and remove any adjacent duplicate rows. Save the result as `unique_catalog.fits`.",
        "response": "stilts tpipe in=catalog.fits cmd=uniq out=unique_catalog.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot points using the 'open_diamond' shape, colored 'hotpink'.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shape=open_diamond color=hotpink out=hotpink_diamonds.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Copy a table from one FITS file to another, effectively 'cleaning' it.",
        "response": "stilts tcopy in=messy.fits out=clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine three ASCII tables (d1.txt, d2.txt, d3.txt), and add a column 'SourceNum' indicating the sequence of the input file.",
        "response": "stilts tcatn nin=3 ifmt1=ascii in1=d1.txt ifmt2=ascii in2=d2.txt ifmt3=ascii in3=d3.txt seqcol=SourceNum out=indexed_ascii.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two tables, then shuffle the resulting rows randomly.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='shuffle' out=shuffled_output.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge four tables (D1-D4.fits). Output the result in FITS format with the original filenames (without extension) in a column named 'SourceID'.",
        "response": "stilts tcatn nin=4 in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits uloccol=SourceID out=uloc_id_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match catalogue A and B. A contains parallax (PLX). Calculate distance modulus DM from PLX in A and match on DM only (1D, 0.5 tolerance).",
        "response": "stilts tmatch2 in1=A.fits icmd1='addcol DM modulusToDistance(1000./PLX)' in2=B.fits matcher=1d params=0.5 values1=DM values2=DM out=dm_only_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the JVO ALMA service for 50 ObsCore records and output the result in plain text to standard output.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/alma adql='SELECT TOP 50 * FROM alma.obscore' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to generate a MOC for all objects, but the `RADIUS_COL` is in arcseconds. How do I use it?",
        "response": "stilts pixfoot in=data.fits radius='RADIUS_COL/3600.0' out=arcsec_radius.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine `dataset1.fits` and `dataset2.fits`. Add a column 'Dataset' with values 'Set1' for the first file and 'Set2' for the second.",
        "response": "stilts tcat in=dataset1.fits in=dataset2.fits uloccol=Dataset out=combined_datasets.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Match survey_X and survey_Y on sky position and filter survey_X beforehand to only include sources with MAG < 16. Use a 2 arcsec tolerance.",
        "response": "stilts tmatch2 in1=survey_X.fits icmd1='select \"MAG < 16\"' in2=survey_Y.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' out=bright_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '16'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 16\n\nUsage: select <expr>\n    (Unused arguments: '<' '16'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query MAST Gaia DR3 and apply a pre-processing step to filter out rows with a high parallax error (> 1.0 mas) before writing the output.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT * FROM gaiadr3.gaia_source' maxrec=1000 ocmd='select \"parallax_error < 1.0\"' out=mast_gaia_low_err.fits",
        "error": "Error: Unused arguments: '<' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select parallax_error < 1.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert input ICRS coordinates in radians to degrees, replacing the existing columns.",
        "response": "stilts tpipe in=rad_coords.fits cmd='replacecol RA radiansToDegrees(RA); replacecol DEC radiansToDegrees(DEC)' out=deg_coords.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve the ObsCore entries from the ESA Herschel Archive, ensuring the job is deleted immediately upon command exit ('now').",
        "response": "stilts tapquery tapurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' delete=now out=herschel_immediate_delete.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the Europlanet Telescope Network Database TAP service (SSA) and only retain records where the frequency coverage exceeds 10 MHz.",
        "response": "stilts cone serviceurl=http://parsec-europlanet.eu:81/tap lon=20.0 lat=30.0 radius=0.1 servicetype=ssa ocmd='select \"MAX_FREQ - MIN_FREQ > 10.0\"' out=wide_freq.vot",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MIN_FREQ' '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAX_FREQ - MIN_FREQ > 10.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MIN_FREQ' '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'DEC_ICRS_DEG_3' converting FK4 RA/DEC (B1950) to ICRS DEC (J2000) using the old function.",
        "response": "stilts tpipe in=data.fits cmd='addcol DEC_ICRS_DEG_3 \"decFK4toFK5degrees(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_dec_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_ICRS_DEG_3 decFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "How can I plot a cumulative histogram?",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE cumulative=true",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert a FITS file to an **uncompressed** Parquet file.",
        "response": "stilts tcopy in=input.fits ofmt='parquet(compression=uncompressed)' out=uncompressed.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the MAST Registry for the top 10 resources.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/registry adql='SELECT TOP 10 * FROM reg.resource' out=mast_reg_top10.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the XMM-Newton catalogue (4XMM) for sources where the positional uncertainty is less than 0.5 arcseconds, limiting the result to 100 records.",
        "response": "stilts tapquery tapurl=https://xcatdb.unistra.fr/xtapdb adql='SELECT * FROM dbo.xcat_source WHERE SC_POSERR < 0.5' maxrec=100 out=xmm_precise.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine an ECSV file and a Parquet file. Before combining, drop columns with constant values from both inputs.",
        "response": "stilts tcatn nin=2 in1=meta.ecsv ifmt1=ecsv icmd1='constcol' in2=binary.parquet icmd2='constcol' out=clean_const.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine observations where the first table has coordinates (RA, DEC) in degrees, and the second has them in Galactic coordinates (GLON, GLAT). Standardize output to Galactic coordinates.",
        "response": "stilts tcatn nin=2 in1=t1.fits icmd1='addskycoords icrs galactic RA DEC GLON_T1 GLAT_T1' in2=t2.fits icmd2='keepcols \"GLON GLAT MAG\"' ocmd='colmeta -name GLON GLON_T1; colmeta -name GLAT GLAT_T1; keepcols \"GLON GLAT MAG\"' out=to_galactic.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve the statistical summary of metallicity (`fe_h`) values for all stellar abundances recorded in the Subaru SAGA database.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT fe_h FROM saga.stellar_abundances' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need the footprint for sources where the flux error is less than 5% of the flux.",
        "response": "stilts mocshape in=fluxes.fits icmd='select \"FLUX_ERR < (0.05 * FLUX)\"' shape=point coords='array(RA,DEC)' out=low_relative_error.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '(0.05' '*' 'FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX_ERR < (0.05 * FLUX)\n\nUsage: select <expr>\n    (Unused arguments: '<' '(0.05' '*' 'FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "How do I combine a CSV file and a VOTable into a new FITS file?",
        "response": "stilts tcatn nin=2 in1=data.csv ifmt1=csv in2=more_data.vot out=combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine tables from a piped input stream (VOTable format) and a local FITS file.",
        "response": "cat stream.vot | stilts tcat in=- ifmt=votable in2=local.fits out=piped_merge_b.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcat"
    },
    {
        "prompt": "I have two tables with elliptical regions defined in a 2D plane (columns `x`, `y`, `a`, `b`, `theta`). How can I find the overlapping regions? The characteristic size is about 50 units.",
        "response": "stilts tmatch2 in1=regions1.fits in2=regions2.fits matcher=2d_ellipse params=50 values1='x y a b theta' values2='x y a b theta' out=overlapping_regions.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "What does an order of 29 mean?",
        "response": "An order of 29 is the highest resolution for a MOC, corresponding to an extremely fine grid of pixels on the sky. It is suitable only for very small regions. Example: `stilts mocshape in=small.fits order=29 ...`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for all sources that are present in both `cat_A.fits` and `cat_B.fits`.",
        "response": "Starting with merging the catalogues; stilts tmatch2 in1=cat_A.fits in2=cat_B.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=cat_ab.fits \n\n Now we can create the moc. stilts mocshape in=cat_ab.fits shape=point coords='array(RA_1,DEC_1)' out=common_AB.moc.fits",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: mocshape: not found\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Read a CDF file, selecting the table extension by name 'MAG_FIELD', and save it as FITS.",
        "response": "stilts tcopy in=data.cdf#MAG_FIELD ifmt=cdf out=mag_field.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q16' containing the 16th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q16 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.16)\"' out=q16_dist_1350pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.16)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q16 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.16)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.16)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the FAI archives service for the access URLs of its top 10 available tables.",
        "response": "stilts tapquery tapurl=https://dachs.fai.kz/tap adql='SELECT TOP 10 access_url FROM TAP_SCHEMA.tables' out=fai_access_urls.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a CSV file to ECSV, explicitly setting `colcheck=FAIL` to enforce strict consistency between header and data columns.",
        "response": "stilts tcopy in=data.csv ifmt='ecsv(colcheck=FAIL)' out=strict.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match T1 and T2 on a 1D magnitude (MAG) within a 0.05 tolerance. T2 is a Parquet file.",
        "response": "stilts tmatch2 in1=T1.fits ifmt2=parquet in2=T2.parquet matcher=1d params=0.05 values1=MAG values2=MAG out=parquet_1d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I have two tables, `t1.fits` and `t2.fits`. Match them on `RA`, `DEC`. The separation should be named 'dist'. Then, select only matches with `dist < 0.5` arcsec.",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' scorecol=dist ocmd='select \"dist < 0.5/3600.\"' out=close_matches.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.5/3600.'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select dist < 0.5/3600.\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.5/3600.'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match two tables using elliptical 2D error regions (2d_ellipse) where the characteristic size is 20 pixels.",
        "response": "stilts tmatch2 in1=R1.fits in2=R2.fits matcher=2d_ellipse params=20 values1='X Y A B PA' values2='X Y A B PA' out=ellipse_2d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Filter the input catalog to remove rows where magnitude is exactly null, then generate an order 11 circle MOC (radius 0.02 deg).",
        "response": "stilts mocshape in=faint_cat.fits icmd='select !NULL_MAG' shape=circle coords='array(RA, DEC, 0.02)' order=11 out=not_null_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I have three tables, `t1.fits`, `t2.fits`, `t3.fits`. Combine them and add a column named 'SourceTable' indicating which file each row came from.",
        "response": "stilts tcatn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits seqcol=SourceTable out=combined_with_source.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 162.2138 and latitude 60.9336. Please use a search radius of 0.9654 degrees. Save the results to a fits file called query_results_30.fits. The coordinates are in the supergalactic system.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=162.2138 lat=60.9336 radius=0.9654 skysys=supergalactic omode=out ofmt=fits out=query_results_30.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine two ASCII tables where fields are fixed-width and space-separated.",
        "response": "stilts tcat ifmt=ascii in='fixed_t1.txt fixed_t2.txt' out=fixed_width_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Join T_A and T_B. A is provided via HTTP URL. Match on position (1 arcsec).",
        "response": "stilts tmatch2 in1=http://archive.com/A.fits in2=B.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=http_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Join T1 (all rows) and T2 (matched rows only). After joining, apply a column meta filter to rename the final separation column to 'DistDeg'.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=360 values1='RA DEC' values2='RA DEC' join=all1 scorecol=Separation ocmd='colmeta -name DistDeg Separation' out=left_outer_renamed_sep.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a raw binary MOC stream (order 9) from positions derived using astrometric propagation functions on epoch data.",
        "response": "stilts mocshape in=epoch_data.fits icmd='addcol RA_PROP \"epochProp(10.0, array(RA, DEC, PLX, PMRA, PMDEC, RV))\"' icmd='addcol DEC_PROP \"epochProp(10.0, array(RA, DEC, PLX, PMRA, PMDEC, RV))[1]\"' shape=point coords='array(RA_PROP, DEC_PROP)' order=9 mocfmt=raw out=propagated_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PLX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_PROP epochProp(10.0, array(RA, DEC, PLX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PLX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Merge three tables, then calculate the total checksum of the combined table without writing the data.",
        "response": "stilts tcat in='c1.fits c2.fits c3.fits' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve metadata about the ESO catalogue structure (TAP_SCHEMA) and display it using omode=meta.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT * FROM TAP_SCHEMA.schemas' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Use the 'assert' filter to check that the table has columns 'RA' and 'DEC'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"RA DEC\"' cmd='assert \"$ncol == 2L\"' omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $ncol == 2L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '2L'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine three tables and keep a custom column derived from the combined ID and an added source identifier.",
        "response": "stilts tcatn nin=3 in1=a.fits in2=b.fits in3=c.fits seqcol=SourceNum ocmd='addcol UniqueID \"concat(ID, toString(SourceNum))\"' out=id_with_num.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'toString(SourceNum))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol UniqueID concat(ID, toString(SourceNum))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'toString(SourceNum))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the MAST ULLYSES HLSP for observations taken with a specific instrument (e.g., COS) and output the accession reference and coordinates in CSV format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT access_ref, ra, dec FROM ivoa.ObsCore WHERE instrument_name = ''COS''' ofmt=csv out=ullyses_cos.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query MAST CAOM for images around Galactic L=350, B=0, with a radius equivalent to 10 arcminutes, requesting FITS output serialization.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=350.0 lat=0.0 radius='10.0 / 60.0' skysys=galactic ofmt=fits out=galactic_10arcmin_fits.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge tables, ensuring output is in ASCII format, and then apply a filter to remove redundant rows.",
        "response": "stilts tcat in='a1.fits a2.fits' ofmt=ascii ocmd='uniq *' out=unique_ascii.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "What is the command to run a synchronous TAP query on the GAVO service?",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 10 * FROM ivoa.obscore' sync=true",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a MOC from the rows where the error in magnitude is less than 0.05.",
        "response": "stilts pixfoot in=photometry.fits icmd='select \"MAG_ERR < 0.05\"' out=low_error_phot.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR < 0.05\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.05'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine tables, and add a column that tracks the unique part of the filename, assuming inputs like 'catalog_filter_R.vot' and 'catalog_filter_G.vot', yielding 'R' and 'G'.",
        "response": "stilts tcat in='catalog_filter_R.vot catalog_filter_G.vot' uloccol=FILTER_ID out=filter_merged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine `cat1.vot` and `cat2.vot`. For each input table, replace the value -999 in the `FLUX` column with a null value. Save as `cat_cleaned.vot`.",
        "response": "stilts tcat in=cat1.vot in=cat2.vot icmd='badval -999 FLUX' out=cat_cleaned.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Read a FITS file and output it as a VOTable document using the efficient **BINARY2** serialization.",
        "response": "stilts tcopy in=source_cat.fits ofmt='votable(format=BINARY2)' out=binary2_cat.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot a Gaussian fit over a histogram of the 'FLUX' column, coloring the Gaussian curve blue.",
        "response": "stilts plot2plane in=data.fits layer_h=histogram x_h=FLUX layer_g=gaussian x_g=FLUX color_g=blue thick_g=3 out=gaussian_blue.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"FLUX\"\n    (The name \"FLUX\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 139.699 and latitude 46.809. Please use a search radius of 1.7002 degrees. Instead of a file, just give me the meta.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=139.699 lat=46.809 radius=1.7002 compress=true omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the MAST STScI Registry TAP service for the top 5 resources and save the checksum of the result.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/registry adql='SELECT TOP 5 * FROM reg.resource' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Join T1 and T2 on 3D Cartesian coordinates (X, Y, Z). After matching, sort the output by the Z coordinate descending.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=3d params=5 values1='X Y Z' values2='X Y Z' fixcols=dups suffix1=_1 ocmd='sort -down Z_1' out=3d_z_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match A.fits and B.fits exactly on 'ID'. Output result to a LaTeX file.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID ofmt=latex out=exact_match_latex.tex",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Convert a VOTable to FITS, ensuring the data arrays are stored using **variable-length arrays** in the FITS format (fits-var).",
        "response": "stilts tcopy in=array_data.vot ofmt=fits-var out=array_data_var.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate a table from 0.0 to 1.0 in steps of 0.1 and save as FITS.",
        "response": "stilts tcopy in=:loop:0,1.01,0.1 ofmt=fits out=steps.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a low-resolution JSON MOC (order 3) for 5 arcminute circles around targets.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 5.0 / 60.0)' order=3 mocfmt=json out=coarse_circles_o3.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine two tables where the second one needs its 'RA_HMS' column converted to decimal degrees.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits icmd2='replacecol RA hmsToDegrees(RA_HMS)' ocmd='keepcols \"RA DEC\"' out=degrees_out.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Use the `head` filter to select the first 100 rows, then apply the `tail` filter to keep the last 10 rows of that selection (rows 91-100).",
        "response": "stilts tpipe in=data.fits cmd='head 100' cmd='tail 10' out=rows_91_100.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the median value of the G-band magnitude in the MAST Gaia DR3 catalogue, using statistical output mode.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT phot_g_mean_mag FROM gaiadr3.gaia_source' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC (order 12) for circles where the radius is 100 mas, using an explicit expression for conversion.",
        "response": "stilts pixfoot in=mas_sources.fits ra=RA dec=DEC radius='100.0 * 0.00000027777777777' out=mas_calc_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "From `data.fits`, create a table containing only unique rows, and add a column that counts the number of duplicates for each unique row.",
        "response": "stilts tpipe in=data.fits cmd='sort *' cmd='uniq -count *' out=unique_counts.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add columns converting Galactic coordinates (GLON, GLAT) to ICRS (RA, DEC) using the expression language directly.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA degreesToRadians(GLON)' cmd='addcol DEC degreesToRadians(GLAT)' out=icrs_raw.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge two tables, T_LEFT and T_RIGHT. Only include rows from T_RIGHT where the quality flag 'QC' is not null.",
        "response": "stilts tcatn nin=2 in1=T_LEFT.fits in2=T_RIGHT.fits icmd2='select !NULL_QC' out=qc_clean_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'KCORR_B' using the KCF_B filter at Z=0.2, leveraging the B-Rc color (KCC_BRc).",
        "response": "stilts tpipe in=phot.fits cmd='addcol KCORR_B \"kCorr(KCF_B, 0.2, KCC_BRc, MAG_B-MAG_RC)\"' out=kcorr_b.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.2,' 'KCC_BRc,' 'MAG_B-MAG_RC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_B kCorr(KCF_B, 0.2, KCC_BRc, MAG_B-MAG_RC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.2,' 'KCC_BRc,' 'MAG_B-MAG_RC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Include all rows from cat_a, and include matched data from cat_b where available. Use a 4 arcsec radius.",
        "response": "stilts tmatch2 in1=cat_a.fits in2=cat_b.fits matcher=sky params=4 values1='RA DEC' values2='RA DEC' join=all1 out=cat_a_with_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Convert a Feather file back to a VOTable.",
        "response": "stilts tcopy in=from_python.feather out=for_vo.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Join T_REF (FITS) and T_SUPP (IPAC table, T_SUPP.tbl) on sky position (1 arcsec).",
        "response": "stilts tmatch2 in1=T_REF.fits ifmt2=ipac in2=T_SUPP.tbl matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=fits_ipac_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Perform a syntax check on an ADQL query against the DaCHS server for LMD TAP service, discarding the results.",
        "response": "stilts tapquery tapurl=http://vo.lmd.jussieu.fr/tap adql='SELECT ra, dec FROM some_table WHERE quality_flag > 0.99' parse=true omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter rows to keep only those where 'MAG' is numerically smaller than 10.0.",
        "response": "stilts tpipe in=cat.fits cmd='select \"MAG < 10.0\"' out=very_bright_cat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 10.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a MOC (order 18) for circles where the radius is $\text{PI} \times 10^{-6}$ degrees.",
        "response": "stilts pixfoot in=pi_data.fits ra=RA dec=DEC radius='PI * 1.0e-6' order=18 out=pi_radius_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match survey_A and survey_B using positions in galactic coordinates (GLON, GLAT) within 10 arcseconds. Survey_A has equatorial RA/DEC; convert A to Galactic first.",
        "response": "stilts tmatch2 in1=survey_A.fits icmd1='addskycoords icrs galactic RA DEC GLON GLAT' in2=survey_B.fits matcher=sky params=10 values1='GLON GLAT' values2='GLON GLAT' out=equatorial_to_galactic_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve the top 10 HDS spectra records from the Subaru HDS service and output the result as ECSV.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/hds/ adql='SELECT TOP 10 * FROM hds.spectrum' ofmt=ecsv out=hds_spectra.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a string column that is the uppercase version of 'SURVEY_NAME'.",
        "response": "stilts tpipe in=data.fits cmd='addcol SURVEY_UPPER toUpperCase(SURVEY_NAME)' out=survey_upper.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Map coverage from STC-S strings, running validation checks in the input stream (icmd='check').",
        "response": "stilts mocshape in=stc_data.vot icmd='check' shape=stc-s coords=STC_REGION out=checked_stc_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a point MOC for targets within a narrow band of Declination (e.g., 0.1 degrees wide centered at DEC=30).",
        "response": "stilts mocshape in=narrow_band.fits icmd='select \"abs(DEC - 30.0) < 0.05\"' shape=point coords='array(RA, DEC)' out=narrow_band_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '30.0)' '<' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC - 30.0) < 0.05\n\nUsage: select <expr>\n    (Unused arguments: '-' '30.0)' '<' '0.05'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a PDF with a color-magnitude diagram for two clusters from two different files.",
        "response": "stilts plot2plane layer_1=mark in_1=cluster1.fits x_1=B-V y_1=V color_1=blue layer_2=mark in_2=cluster2.fits x_2=B-V y_2=V color_2=red yflip=true out=clusters.pdf",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"B-V\"\n    (The name \"B\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert all numeric column names to a fixed case (lowercase) for easier use in scripting.",
        "response": "stilts tpipe in=mixed_case.fits cmd=fixcolnames out=lowercase.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Join table_A.fits and table_B.fits, then output the metadata of the final combined table.",
        "response": "stilts tcatn nin=2 in1=table_A.fits in2=table_B.fits omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert an IPAC table to FITS, ensuring the IPAC parameters are suppressed during output.",
        "response": "stilts tcopy in=input.tbl ifmt=ipac ofmt='ipac(params=false)' out=no_ipac_params.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find all pairs (all) between T1 and T2 (sky 1 arcsec). Output the separation in arcseconds in column 'SeparationArcsec'.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=all scorecol=SeparationArcsec out=all_pairs_arcsec.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Read a table, set the column unit of 'MASS' to 'solMass' and the UCD to 'phys.mass'.",
        "response": "stilts tpipe in=gals.fits cmd='colmeta -units solMass -ucd phys.mass MASS' out=mass_ucd.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve 10 entries from the MAST PanSTARRS 1 DR2 catalogue, requiring authentication.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT TOP 10 * FROM dbo.detection_object' auth=true out=ps2_auth_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 5 table descriptions from the ESO Catalogue TAP service, outputting the result in the verbose VOTable TABLEDATA format.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT TOP 5 table_name, description FROM TAP_SCHEMA.tables' ofmt='votable(format=TABLEDATA)' out=eso_cat_ascii.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query ESO TAP_OBS (SSA) with a search radius of 600 arcseconds around RA 10, Dec 10, and sort the result by observation date.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=10.0 lat=10.0 radius='600.0 / 3600.0' servicetype=ssa ocmd='sort DATE_OBS' out=ssa_sorted_date.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"600.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the CSIRO ASKAP Science Data Archive for 50 ObsCore records and output the checksum.",
        "response": "stilts tapquery tapurl=https://casda.csiro.au/casda_vo_tools/tap adql='SELECT TOP 50 * FROM obs_core' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch T1 and T2. T1 contains an array column 'FLUXES'. Calculate the mean flux and use it for matching (1d matcher, 0.5 tolerance).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='addcol MEAN_FLUX mean(FLUXES)' in2=T2.fits matcher=1d params=0.5 values1=MEAN_FLUX values2=MEAN_FLUX out=array_mean_1d.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I need the footprint for the second HDU of my FITS file `multi_data.fits`.",
        "response": "stilts pixfoot in=multi_data.fits#2 out=hdu2_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 110.3229 and latitude -68.3467. Please use a search radius of 1.9803 degrees. Instead of a file, just give me the count. Don't use compression for the download.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=110.3229 lat=-68.3467 radius=1.9803 compress=false omode=count",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine T1 and T2. T2 contains a column 'ARRAY_COORDS' which is a 3-element array (x, y, z). Explode this into three scalar columns: 'X', 'Y', 'Z' before joining.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='addcol X ARRAY_COORDS; addcol Y ARRAY_COORDS[1]; addcol Z ARRAY_COORDS[2]; delcols ARRAY_COORDS' out=array_elements_extracted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find targets within 10 degrees of Galactic coordinates L=20, B=0, outputting the result as a CSV file.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=20.0 lat=0.0 radius=10.0 skysys=galactic ofmt=csv out=galactic_wide.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Upload a list of source IDs to VizieR and join it against a remote catalogue using an exact match on the ID column.",
        "response": "stilts tapquery tapurl=http://cdsarc.cds.unistra.fr/saadavizier.tap/tap adql='SELECT t.ra, u.mag FROM \"J/A+A/525/A5\" AS t JOIN TAP_UPLOAD.ids AS u ON t.ID = u.ID' nupload=1 upload1=target_ids.fits upname1=ids out=vizier_id_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC for objects where the `OBS_TYPE` column is 'SPECTROSCOPY'.",
        "response": "stilts mocshape in=obs_log.fits icmd='select OBS_TYPE==\"SPECTROSCOPY\"' shape=point coords='array(RA,DEC)' out=spectroscopy_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query ARI Gaia for 10 sources, explicitly requesting the use of the TAP 1.1 interface version.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 10 * FROM gaiadr3.gaia_source' interface=tap1.1 out=ari_tap11.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T1 and T2. T1 has magnitude 99.99 for bad values. Replace 99.99 with null before matching on magnitude (1d, 0.1 tolerance).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='badval 99.99 MAG' in2=T2.fits matcher=1d params=0.1 values1=MAG values2=MAG out=badval_1d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Run a query using the astronomical constant PI to define the radius (e.g., PI/100 degrees).",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=12.0 lat=-12.0 radius='PI / 100.0' out=pi_radius.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"PI / 100.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a specific table from a multi-table VOTable file.",
        "response": "stilts tcopy in=multi.vot#2 out=table2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find all possible pairs between dense_field_A.fits and dense_field_B.fits within 10 arcseconds, and include the separation in arcseconds in a column named 'AngSep'.",
        "response": "stilts tmatch2 in1=dense_field_A.fits in2=dense_field_B.fits matcher=sky params=10 values1='RA DEC' values2='RA DEC' find=all scorecol=AngSep out=all_pairs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine two survey tables. The second table has an array column 'FLUX_VALUES' that must be fully exploded into scalar columns.",
        "response": "stilts tcatn nin=2 in1=S1.fits in2=S2.fits icmd2='explodeall' out=scalarized_concat.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the XMM-Newton archive for ObsCore entries, forcing the query to run synchronously.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT TOP 1 * FROM ivoa.ObsCore' sync=true out=xmm_sync_test.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the PADC Maser catalog for sources with a frequency greater than 60 GHz.",
        "response": "stilts tapquery tapurl=http://voparis-tap-maser.obspm.fr/tap adql='SELECT ra, dec, source_id FROM maser_catalog WHERE freq > 60' out=maser_high_freq.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers sized by magnitude (MAG), where the size scaling uses the Inverse Hyperbolic Sine function (sizefunc=asinh).",
        "response": "stilts plot2sky in=sources.fits layer=size lon=RA lat=DEC size=MAG sizefunc=asinh autoscale=true out=asinh_mag_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find objects in the MAST TESS Input Catalog (TIC) around Galactic L=10, B=-10, using a radius of 0.01 degrees, then delete all but the first 10 rows.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic lon=10.0 lat=-10.0 radius=0.01 skysys=galactic ocmd='head 10' out=tic_head10.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine tables A and B. Table B contains array columns that need to be flattened into scalar columns before combination.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits icmd2='explodeall' out=flattened_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query ARI Gaia to count the total number of sources available in the Gaia DR3 table.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT COUNT(*) FROM gaiadr3.gaia_source' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run a synchronous query on the XMM-Newton archive for one ObsCore record, and only return the resulting table metadata.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT TOP 1 * FROM ivoa.ObsCore' sync=true omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find rows in T2 that match T1. Only keep the best match for T2 (best2). Output count only.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' find=best2 omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 5.7502 and latitude 75.0683. Please use a search radius of 0.2193 degrees. Save the results to a fits file called query_results_151.fits.",
        "response": "stilts cone servicetype=sia2 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=5.7502 lat=75.0683 radius=0.2193 omode=out ofmt=fits out=query_results_151.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create a scatter plot with logarithmic scaling on both axes.",
        "response": "stilts plot2plane in=data.fits layer=mark x=FLUX y=FLUX_ERROR xlog=true ylog=true",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"FLUX\"\n    (The name \"FLUX\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine files A and B. In A, there are columns 'Luminosity' and 'Distance_Mpc'. Calculate absolute magnitude 'ABS_MAG' before combining.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='addcol ABS_MAG \"-2.5*log10(Luminosity) - 5*(log10(Distance_Mpc*1e6)-1)\"' in2=B.fits out=abs_mag_combined.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '5*(log10(Distance_Mpc*1e6)-1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ABS_MAG -2.5*log10(Luminosity) - 5*(log10(Distance_Mpc*1e6)-1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '5*(log10(Distance_Mpc*1e6)-1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a MOC from a simulated catalog where the radius of each point is a random number between 0 and 0.1 degrees.",
        "response": "stilts pixfoot in=:skysim:10000 icmd='addcol rand_rad random()*0.1' ra=ra dec=dec radius=rand_rad out=random_radius_sim.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Retrieve 10 stellar abundances from the Subaru SAGA database and output them in the verbose VOTable TABLEDATA format.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 10 * FROM saga.stellar_abundances' ofmt='votable(format=TABLEDATA)' out=saga_tabledata.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the MAST TESS Input Catalog (TIC) for 50 records and locally add a column `TEFF_K` by multiplying the `TEFF` column by 1.0 (utility operation).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 50 Teff FROM tic.v8' ocmd='addcol TEFF_K \"Teff * 1.0\"' out=tic_teff_copy.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol TEFF_K Teff * 1.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "What are the output format options for `mocfmt`?",
        "response": "The `mocfmt` parameter supports `ascii`, `fits`, `json`, `raw`, `summary`, `cds_ascii`, `cds_json`, and `cds_fits` formats.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "What's the command to convert a FITS BINTABLE to a FITS ASCII table?",
        "response": "This is not directly supported by `tcopy`'s `ofmt` options, which only writes BINTABLE extensions. You would need a different tool for that specific conversion.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the GAVO TAP service near RA 100, Dec 10, with 0.1 mas radius (ultra-precise search).",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=100.0 lat=10.0 radius='0.1 / 3600000.0' out=gavo_0p1mas.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.1 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I need to query the ESA JWST Archive TAP and immediately visualize the result in a GUI window.",
        "response": "stilts cone serviceurl=https://jwst.esac.esa.int/server/tap lon=53.0 lat=-28.0 radius=0.05 omode=gui",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate a MOC (order 16) for objects whose proper motion vector length is greater than $100$ mas/yr.",
        "response": "stilts pixfoot in=pm_vectors.fits icmd='select \"hypot(PMRA, PMDEC) > 100.0\"' ra=RA dec=DEC order=16 out=high_pm_moc_o16.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 100.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Calculate the coverage for a specific 10 arcsecond radius cone search, outputting the raw UNIQ binary stream.",
        "response": "stilts mocshape in=cones.csv ifmt=csv shape=circle coords='array(RA, DEC, 10.0 / 3600.0)' mocfmt=raw out=cone_footprint.raw",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match T1, T2, T3. T1 is reference. Output rows from T2 and T3 should always be included, resulting in a full outer join relative to T1.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits join2=always in3=T3.fits join3=always out=T1_multi_outer_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Can you display the metadata of the table generated by `:skysim:10`?",
        "response": "stilts tpipe in=:skysim:10 omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Identify constant columns, remove them, and ensure their constant value is preserved as a table parameter.",
        "response": "stilts tpipe in=data.fits cmd='constcol' out=data_with_params.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 267.0164 and latitude 65.2722. Please use a search radius of 1.4523 degrees. Save the results to a ascii file called query_results_46.ascii. The coordinates are in the fk4 system. Don't use compression for the download.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=267.0164 lat=65.2722 radius=1.4523 skysys=fk4 compress=false omode=out ofmt=ascii out=query_results_46.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find objects within 2 arcsec AND have a magnitude difference (MAG) of less than 0.25 (sky+1d matcher).",
        "response": "stilts tmatch2 in1=cat_X.fits in2=cat_Y.fits matcher=sky+1d params='2 0.25' values1='RA DEC MAG' values2='RA DEC MAG' out=pos_mag_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plotting a cumulative reverse histogram.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE cumulative=reverse out=cumul_reverse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Pair match T_REF against T2, T3, T4. Use strict spatial and 1D magnitude matching (sky*1d, 1 arcsec, 0.1 mag).",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky*1d params='1 0.1' values1='RA DEC MAG' values2='RA DEC MAG' values3='RA DEC MAG' values4='RA DEC MAG' in1=T_REF.fits in2=T2.fits in3=T3.fits in4=T4.fits out=strict_pos_mag_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a gzipped FITS file from a URL and save it locally as a VOTable.",
        "response": "stilts tcopy in=http://archive.org/data.fits.gz out=remote_data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Use the CASDA TAP service to retrieve 10 ObsCore entries and save them as an ASCII text file.",
        "response": "stilts tapquery tapurl=https://casda.csiro.au/casda_vo_tools/tap adql='SELECT TOP 10 obs_id, s_ra, s_dec FROM ivoa.ObsCore' ofmt=ascii out=casda_sample.txt",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a table to CSV, but use a pipe character '|' as the delimiter.",
        "response": "stilts tcopy in=my_table.fits ofmt='csv(delimiter=|)' out=pipe_delimited.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a MOC from the positions in `my_data.fits`, but give me an error if any of the coordinates are null.",
        "response": "stilts mocshape in=my_data.fits icmd='assert \"!NULL_RA && !NULL_DEC\"' shape=point coords='array(RA,DEC)' out=asserted_coords.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert !NULL_RA && !NULL_DEC\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the MAST CAOM service for observations within 0.001 degrees of Ecliptic Lon 350, Lat 10.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=350.0 lat=10.0 radius=0.001 servicetype=sia skysys=ecliptic out=caom_ecl_hires.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the ESO TAP_CAT service for tables, running asynchronously, and explicitly setting the polling interval to 500ms (0.5 seconds).",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT * FROM TAP_SCHEMA.tables' poll=500 progress=true out=eso_fast_poll.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'MAG_MOD_NEW' using distance modulus derived from 'DISTANCE_PC' and set its UCD to 'phot.mag.dist'.",
        "response": "stilts tpipe in=data.fits cmd='addcol -ucd \"phot.mag.dist\" MAG_MOD_NEW distanceToModulus(DISTANCE_PC)' out=mod_new_ucd.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge file1.fits and file2.fits. In file1, change the name of column $3 to 'Z_SPEC' and ensure it's kept as a 32-bit integer.",
        "response": "stilts tcatn nin=2 in1=file1.fits icmd1='colmeta -name Z_SPEC $3; replacecol Z_SPEC toInteger(Z_SPEC)' in2=file2.fits out=spec_z_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert the input table to Parquet format, explicitly turning off dictionary encoding.",
        "response": "stilts tpipe in=input.fits ofmt='parquet(usedict=false)' out=output_nodict.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Simulate 500 rows, generate a random Gaussian value for each, and output the first 10 rows in IPAC format.",
        "response": "stilts tpipe in=:loop:500 cmd='addcol GAUSS randomGaussian($0)' cmd='head 10' ofmt=ipac out=gaussian_sample.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine two tables, and then output the result as a LaTeX table snippet.",
        "response": "stilts tcat in=small_a.fits in=small_b.fits ofmt=latex out=output_table.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables and then perform an internal sort by 'FLUX' before outputting only the last 100 rows.",
        "response": "stilts tcat in='big1.fits big2.fits' ocmd='sort FLUX; tail 100' out=flux_sorted_tail.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, adding a column 'PARALLAX_PC' using the expression $1000.0/\\text{PARALLAX}$ to calculate distance in parsecs.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol PARALLAX_PC \"1000.0 / PARALLAX\"' out=parallax_to_pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'PARALLAX'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_PC 1000.0 / PARALLAX\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'PARALLAX'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Add a column 'RA_SIN' which is sine of the RA in radians, assuming RA is currently in degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_SIN sin(degreesToRadians(RA))' out=ra_sin_calc.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find all unique values in the 'SPECTRUM_ID' column and output the resulting table (containing only one column of unique IDs).",
        "response": "stilts tpipe in=spectra.fits cmd='keepcols SPECTRUM_ID' cmd='sort SPECTRUM_ID' cmd='uniq SPECTRUM_ID' out=unique_spectra.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "My table has FK4 coordinates. Can I generate a MOC directly?",
        "response": "No, MOCs are defined in ICRS. You must first convert the coordinates using a filter: `stilts mocshape in=fk4.fits icmd='addskycoords fk4 fk5 RA_FK4 DEC_FK4 RA_ICRS DEC_ICRS' shape=point coords='array(RA_ICRS, DEC_ICRS)' out=fk4_converted.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Count the total number of records stored in the SIMBAD basic database.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT COUNT(*) FROM basic' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a 2D grid colored by the median of the `TEMP` column.",
        "response": "stilts plot2plane in=data.fits layer=grid x=X y=Y weight=TEMP combine=median",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Group match five catalogs (C1-C5). C4 columns must be renamed using numerical suffixes only (suffix4=_4).",
        "response": "stilts tmatchn nin=5 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID values5=ID in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits fixcols=dups suffix4=_4 in5=C5.fits out=C4_numeric_suffixed_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find the minimum, maximum, and mean orbital period (`t_min`) recorded for all Jupiter observations in the Planetary FUB server's EPN-TAP collection.",
        "response": "stilts tapquery tapurl=http://dachs.planet.fu-berlin.de/tap adql='SELECT t_min FROM epn_core.epn_core WHERE target_name = ''Jupiter''' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find rows in T1 that match T2. Include all rows from T1 (join=all1). Then remove duplicate column 'ID_2' added from T2.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID join=all1 fixcols=dups suffix2=_2 ocmd='delcols ID_2' out=T1_left_delete_dup.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate tables, and then explode all multi-dimensional array columns into separate scalar columns.",
        "response": "stilts tcat in='array_data1.fits array_data2.fits' ocmd=explodeall out=scalar_exploded_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, and add a column that converts 'JD' (Julian Date) to 'MJD' (Modified Julian Date).",
        "response": "stilts tcat in='j1.fits j2.fits' ocmd='addcol MJD jdToMjd(JD)' out=mjd_times_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Add a column 'FLUX_RECIP' containing the element-wise reciprocal of the array column 'FLUX_ARR'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_RECIP reciprocal(FLUX_ARR)' out=reciprocals.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'KCORR_UV' using the KCF_FUV filter at Z=0.3, leveraging the FUV-NUV color (KCC_FUVNUV).",
        "response": "stilts tpipe in=uv_data.fits cmd='addcol KCORR_UV \"kCorr(KCF_FUV, 0.3, KCC_FUVNUV, FUV-NUV)\"' out=kcorr_uv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.3,' 'KCC_FUVNUV,' 'FUV-NUV)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_UV kCorr(KCF_FUV, 0.3, KCC_FUVNUV, FUV-NUV)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.3,' 'KCC_FUVNUV,' 'FUV-NUV)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw polygon outlines from an array column, coloring them based on the inverse of their area (1/AREA).",
        "response": "stilts plot2sky in=regions.fits layer=polygon coords=VERTICES polymode=outline aux='1.0/AREA' auxmap=inferno out=inv_area_outline.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert a remote compressed VOTable to a local FITS file.",
        "response": "stilts tcopy in=http://example.com/data/table.vot.gz out=table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine table1.fits and table2.fits, but discard all rows where the 'FLAG' column in the first table is non-zero.",
        "response": "stilts tcatn nin=2 in1=table1.fits icmd1='select \"FLAG == 0\"' in2=table2.fits out=flag_zero_concat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG == 0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Group match three tables. T2 has columns X, Y. T3 is in IPAC format. Match on (X, Y) 2D coordinates.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=2d params=10 values1='X Y' values2='X Y' values3='X Y' in1=T1.fits in2=T2.fits in3=T3.tbl ifmt3=ipac out=ipac_2d_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3. Calculate the standard deviation of the final combined magnitude column (MAG) over all rows.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits ocmd='addcol SD MAG' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Use the 'assert' filter to check that the total number of columns ($ncol) is less than 50.",
        "response": "stilts tpipe in=wide_table.fits cmd='assert \"$ncol < 50L\"' out=narrow_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '50L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $ncol < 50L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '50L'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an order 5 MOC using polygon data, extracting the coordinate string from column $3, assuming ASCII input.",
        "response": "stilts mocshape in=data.txt ifmt=ascii shape=polygon coords='$3' order=5 out=col3_poly_o5.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match two tables on X, Y, Z coordinates using per-object errors combined in quadrature (3d_err_q). Scale 1.5.",
        "response": "stilts tmatch2 in1=D1.fits in2=D2.fits matcher=3d_err_q params=1.5 values1='X Y Z ERR' values2='X Y Z ERR' out=3d_quadrature_scaled.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "What's the command to get a statistical summary of the matched objects between `table1.fits` and `table2.fits`?",
        "response": "stilts tmatch2 in1=table1.fits in2=table2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot ellipses defined by major axis (MAJ), minor axis (MIN), and position angle (PA) columns.",
        "response": "stilts plot2plane in=galaxy_shapes.fits layer=xyellipse x=X_CEN y=Y_CEN ra=MAJ rb=MIN posang=PA out=ellipses.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_CEN\"\n    (The name \"X_CEN\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find all J-PLUS DR3 sources with RA > 300 degrees and DEC > 0 degrees, limiting the result to 1000 rows.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jplus-dr3 adql='SELECT * FROM jplus_dr3.master WHERE ra > 300 AND dec > 0' maxrec=1000 out=jplus_quadrant.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Remove the parameter 'OBS_ID' from the table metadata.",
        "response": "stilts tpipe in=meta.fits cmd='clearparams OBS_ID' out=meta_cleared.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an order 10 MOC for objects whose proper motion vector length (hypot(PMRA, PMDEC)) exceeds 50 mas/year.",
        "response": "stilts mocshape in=pm_cat.fits icmd='select \"hypot(PMRA, PMDEC) > 50.0 / 3600000.0 * 3600.0\"' shape=point coords='array(RA, DEC)' order=10 out=high_pm_o10.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '50.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 50.0 / 3600000.0 * 3600.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '50.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I have two tables, A and B. I want to combine them and ensure the final table name is 'Master_Catalog'.",
        "response": "stilts tcat in='A.fits B.fits' ocmd='tablename Master_Catalog' out=master.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, and immediately send the final processed table to the SAMP hub.",
        "response": "stilts tcat in='s1.fits s2.fits' omode=samp",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a plot from a strange attractor simulation with 1 million points and save it as a high-res PNG.",
        "response": "stilts plot2plane in=:attractor:1e6,clifford layer=mark x=x y=y shading=density xpix=1024 ypix=1024 out=attractor.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"x\"\n    (The name \"x\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Replace null values in magnitude columns named 'MAG_*' with the numerical value 99.0.",
        "response": "stilts tpipe in=phot.fits cmd='replaceval NULL 99.0 MAG_*' out=mag_imputed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine two tables, but rename the 'MAG' column to 'V_MAG' in the first table before doing so.",
        "response": "stilts tcatn nin=2 in1=t1.fits icmd1='colmeta -name V_MAG MAG' in2=t2.fits out=renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC for circles whose radius is `0.1 * log10(FLUX)`.",
        "response": "stilts mocshape in=flux_cat.fits shape=circle coords='array(RA,DEC,0.1*log10(FLUX))' out=flux_scaled_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column 'ERROR_COND_8' that is 1.0 if 'ERR_A' is not equal to 'ERR_B', and 0.0 otherwise, using numerical comparison.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_8 \"ERR_A != ERR_B ? 1.0 : 0.0\"' out=conditional_error_8.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_8 ERR_A != ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "How can I find triplets of stars from `cat_R.fits`, `cat_G.fits`, and `cat_B.fits` that are aligned on the sky within a certain tolerance?",
        "response": "This is a complex geometric problem, not a simple proximity match. `tmatchn` can find groups of three nearby stars, but you would need to use `tpipe` on the output to apply an additional geometric filter (e.g., calculating angles between the three points) to test for alignment.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Join T1 and T2 using a full outer join (1or2). Match on 3D Cartesian coordinates (X, Y, Z) within 1 unit.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=3d params=1 values1='X Y Z' values2='X Y Z' join=1or2 out=full_outer_3d.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query SIMBAD TAP for objects around 15h 30m 00s, +5d 00m 00s. Convert the RA/Dec to degrees first, using a 15 arcsecond search radius.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon='hmsToDegrees(15.5, 0, 0)' lat='dmsToDegrees(5.0, 0, 0)' radius='15.0 / 3600.0' out=simbad_hms.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(15.5, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine tables, adding a column 'PARALLAX_M' calculated as parallax in micro-arcseconds, assuming input parallax is in mas.",
        "response": "stilts tcat in='p1.fits p2.fits' ocmd='addcol PARALLAX_M \"parallax * 1000.0\"' out=micro_parallax.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_M parallax * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot points where markers are sized by one column and colored by another, and markers are semi-transparent (opaque limit 10).",
        "response": "stilts plot2plane in=data.fits layer=size x=X y=Y size=SIZE_COL shading=aux aux=COLOR_COL opaque=10 out=semi_transparent_aux.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine observation data from multiple non-standard file formats (MRT and PDS4).",
        "response": "stilts tcatn nin=2 in1=obs.mrt ifmt1=mrt in2=planets.xml ifmt2=pds4 out=multi_planet_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot a density map using density shading, applying the logarithmic scaling function to the density values.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=density densefunc=log out=log_density_map.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T_A and T_B. T_A errors (E_A) are in degrees; T_B errors (E_B) are in arcsec. Convert E_A to arcsec before matching using skyerr.",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='addcol E_ARCSEC E_A*3600.0' in2=T_B.fits matcher=skyerr params=1 values1='RA DEC E_ARCSEC' values2='RA DEC E_B' out=mixed_error_unit_skyerr.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q84' containing the 84th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q84 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.84)\"' out=q84_dist_1350pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.84)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q84 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.84)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.84)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot markers sized by a column, applying a normalization to the Aux color range using auxclip=0.2, 0.8.",
        "response": "stilts plot2sky in=data.fits layer=size lon=RA lat=DEC size=S shading=aux aux=C auxclip=0.2,0.8 out=clip_aux_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Merge tables, converting the output format to VOTable with BASE64 encoding for inline streaming.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt='votable(format=BINARY, inline=true)' out=inline_binary.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Read a VOTable, forcing the use of the FITS-plus reader to detect rich metadata.",
        "response": "stilts tcopy in=input.fits ifmt=fits-plus out=rich_meta_read.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "My table has two sets of corners for a bowtie shape. How can I represent this?",
        "response": "For `shape=polygon`, a `NaN, NaN` pair in the coordinate array delimits distinct polygons for a single row. So you can use an expression like `coords='array(RA1,D1,RA2,D2,RA3,D3, NaN,NaN, RA4,D4,RA5,D5,RA6,D6)'`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Concatenate two tables. For the first table, remove all columns except 'ID' and 'Z'. For the second table, keep only 'ID' and 'REDSHIFT', renaming 'REDSHIFT' to 'Z'.",
        "response": "stilts tcatn nin=2 in1=t1.fits icmd1='keepcols \"ID Z\"' in2=t2.fits icmd2='colmeta -name Z REDSHIFT; keepcols \"ID Z\"' out=z_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Filter the table to keep only rows where the integer value of 'QUALITY_FLAG' has the bit pattern 0x04 set.",
        "response": "stilts tpipe in=data.fits cmd='select \"hasBit(QUALITY_FLAG, 2)\"' out=flag_4_set.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(QUALITY_FLAG, 2)\n\nUsage: select <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "How do I find the single best counterpart in `cat2.fits` for each object in `cat1.fits` within 5 arcsec?",
        "response": "stilts tmatch2 in1=cat1.fits in2=cat2.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' find=best1 out=best_counterparts.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I need a full statistical summary of all columns from a Cone Search result (radius 0.1 deg) around RA 30, Dec 40.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=30.0 lat=40.0 radius=0.1 omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find spectra (SSA) from ESO around RA 150, Dec 0, using a 10 arcsecond radius, filtering for only records where 'TARGET_NAME' is 'GALAXY'.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=150.0 lat=0.0 radius='10.0 / 3600.0' servicetype=ssa ocmd='select equals(TARGET_NAME,\"GALAXY\")' out=ssa_galaxy_filter.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Copy data from a synthetic table (:test:10,is) and save it as a VOTable.",
        "response": "stilts tcopy in=':test:10,is' out=scalar_test.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Copy FITS data to VOTable, requesting the BINARY2 serialization and explicitly setting version 1.3.",
        "response": "stilts tcopy in=input.fits ofmt='votable(format=BINARY2,version=V13)' out=binary2_v13.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Download data and then add a new column 'LOG_FLUX' to the result.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT phot_g_mean_flux FROM gaiadr3.gaia_source' ocmd='addcol LOG_FLUX log10(phot_g_mean_flux)'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the total number of distinct source IDs in the VSA (VISTA Science Archive) TAPER data table without retrieving any data.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/vsa adql='SELECT COUNT(DISTINCT sourceID) FROM vsa.TAPER' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need a summary report of coverage for all sources with velocity (Z) greater than 0.1, calculated at order 9.",
        "response": "stilts mocshape in=velocity.fits icmd='select \"Z > 0.1\"' shape=point coords='array(RA, DEC)' order=9 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 0.1\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial separation between the two positions (RA1, DEC1) and (RA2, DEC2) is exactly 0.0 arcseconds.",
        "response": "stilts tpipe in=pairs.fits cmd='select \"skyDistanceDegrees(RA1, DEC1, RA2, DEC2) * 3600.0 == 0.0\"' out=exact_pos_pairs.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC1,' 'RA2,' 'DEC2)' '*' '3600.0' '==' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA1, DEC1, RA2, DEC2) * 3600.0 == 0.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC1,' 'RA2,' 'DEC2)' '*' '3600.0' '==' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a plot where the coordinate grid is drawn in a semi-transparent cyan color (gridtrans=0.4).",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC grid=true gridcolor=cyan gridtrans=0.4 out=transp_cyan_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine photometry data from Phot1, Phot2, Phot3. Phot1's column 'Err_R' must be renamed to 'R_ERR' to match the others.",
        "response": "stilts tcatn nin=3 in1=Phot1.fits icmd1='colmeta -name R_ERR Err_R' in2=Phot2.fits in3=Phot3.fits out=error_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Run a synchronous query against the PADC Astro server to retrieve table column metadata and only return the resulting metadata description.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.columns' sync=true omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine tables and write the final result as a VOTable document with no internal XML line breaks (compact mode).",
        "response": "stilts tcat in='t1.fits t2.fits' ofmt='votable(compact=true)' out=compact.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the GAVO TAP service near Ecliptic Lon 30, Lat -5, with a radius of 0.00001 degrees, discarding the output data.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=30.0 lat=-5.0 radius=0.00001 skysys=ecliptic omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate two tables, applying the logarithmic scaling function `symlog(1, 0.5, X)` to column `X` in both before merging.",
        "response": "stilts tcatn nin=2 in1=D1.fits icmd1='replacecol X \"symlog(1, 0.5, X)\"' in2=D2.fits icmd2='replacecol X \"symlog(1, 0.5, X)\"' out=symlog_scaled.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.5,' 'X)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol X symlog(1, 0.5, X)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '0.5,' 'X)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a MOC where the radius for each object is 5 times its `pos_error` in arcsec.",
        "response": "stilts pixfoot in=err_cat.fits radius='5 * pos_error / 3600.0' out=scaled_error_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 234.6017 and latitude 54.7224. Please use a search radius of 0.8764 degrees. Save the results to a csv file called query_results_51.csv.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=234.6017 lat=54.7224 radius=0.8764 omode=out ofmt=csv out=query_results_51.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Search the GAVO TAP near RA 30, Dec 0, using 2 arcminutes radius, and add a column converting the RA coordinate to Galactic longitude.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=30.0 lat=0.0 radius='2.0 / 60.0' ocmd='addskycoords icrs galactic RA DEC GLON GLAT' out=gavo_with_gal.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"2.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read a table, convert the string array column 'VERTICES_STR' into a numeric array column 'VERTICES_NUM' using `parseDoubles`.",
        "response": "stilts tpipe in=polygons.fits cmd='addcol VERTICES_NUM parseDoubles(VERTICES_STR)' out=numeric_vertices.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "How can I check if any rows in `data_check.fits` have a `FLUX` value of exactly zero?",
        "response": "stilts tpipe in=data_check.fits cmd='select FLUX==0' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find all table schemas in the MAST PanSTARRS 1 DR2 catalogue and output the checksum.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT * FROM TAP_SCHEMA.schemas' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run an asynchronous query on the XMM-Newton archive, explicitly setting a maximum duration of 90 minutes (5400 seconds).",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT TOP 100 * FROM ivoa.ObsCore' executionduration=5400 out=xmm_90min_job.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to query a service and force it to use TAP 1.1 protocol rules.",
        "response": "stilts tapquery tapurl=http://some.service/tap adql='SELECT TOP 10 * FROM some.table' interface=tap1.1",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert the array column 'ERROR_ARRAY' of fixed shape into a scalar column containing the sum of its elements.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol ERROR_SUM sum(ERROR_ARRAY)' out=error_sum_scalar.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "How can I match my table `targets.fits` against `surveyA.fits`, `surveyB.fits`, and `surveyC.fits` and get a statistical summary of the results?",
        "response": "stilts tmatchn nin=4 multimode=pairs iref=1 in1=targets.fits in2=surveyA.fits in3=surveyB.fits in4=surveyC.fits matcher=sky params=4 values1='ra dec' values2='ra dec' values3='ra dec' values4='ra dec' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert my table `publication_data.fits` into a LaTeX table format.",
        "response": "stilts tpipe in=publication_data.fits ofmt=latex out=pub_table.tex",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 15.0793 and latitude -68.9871. Please use a search radius of 0.6826 degrees. Instead of a file, just give me the out.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=15.0793 lat=-68.9871 radius=0.6826 compress=true omode=out",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Upload a local FITS table containing IDs and V magnitudes, and join it against Gaia DR3 using an exact match on the source_id column.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT g.source_id, u.Vmag FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.local AS u ON g.source_id = u.source_id' nupload=1 upload1=bright_stars.fits upname1=local out=gaia_vmag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC from the positions in positions.csv, using the constant PI/1000 degrees as the radius for all sources.",
        "response": "stilts mocshape in=positions.csv ifmt=csv shape=circle coords='array(RA, DEC, PI / 1000.0)' out=pi_radius_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Convert the input table to a multi-table FITS file format (FITS-plus column oriented).",
        "response": "stilts tpipe in=data.fits ofmt='fits(col=true,primary=votable)' out=data.colfits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need to plot a cumulative histogram of the 'TEMP' column.",
        "response": "stilts plot2plane in=events.fits layer=histogram x=TEMP cumulative=forward out=cumulative_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TEMP\"\n    (The name \"TEMP\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine ASCII tables, adding a column named 'SOURCE_ORIGIN' containing the unique part of each input filename, assuming inputs like 'catalog_deep.txt' and 'catalog_shallow.txt'.",
        "response": "stilts tcat ifmt=ascii in='catalog_deep.txt catalog_shallow.txt' uloccol=SOURCE_ORIGIN out=unique_origin_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 327.1414 and latitude -34.0603. Please use a search radius of 1.2995 degrees. Save the results to a votable file called query_results_73.votable. After the query, please run this processing command: 'sorthead 20 MAG'. Use verbosity level 3.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=327.1414 lat=-34.0603 radius=1.2995 verb=3 omode=out ofmt=votable out=query_results_73.votable ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I want to plot a set of rectangles defined by four corner points from columns X1,Y1...X4,Y4.",
        "response": "stilts plot2plane in=rectangles.fits layer=poly4 x1=X1 y1=Y1 x2=X2 y2=Y2 x3=X3 y3=Y3 x4=X4 y4=Y4 polymode=outline",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 10 ObsCore entries from the ESA Herschel TAP service and locally sort the result by observation duration (`t_exptime`) in ascending order.",
        "response": "stilts tapquery tapurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' ocmd='sort t_exptime' out=herschel_sorted_time.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a coverage map where the radius is the maximum allowed (90 degrees).",
        "response": "stilts pixfoot in=input.fits ra=RA dec=DEC radius=90.0 out=hemisphere_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Count the total number of unique identifiers and their coordinates in the SIMBAD database without generating a full table.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT COUNT(DISTINCT main_id), COUNT(DISTINCT ra) FROM basic' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC (order 13) for sources where the radius is 1 arcminute minus 30 arcseconds.",
        "response": "stilts pixfoot in=am_minus_as.fits ra=RA dec=DEC radius='(60.0 - 30.0) / 3600.0' order=13 out=30as_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Read a table, filter rows to keep those where the value of 'FLAG' is not 0, and shuffle the resulting rows randomly.",
        "response": "stilts tpipe in=data.fits cmd='select \"FLAG != 0\"' cmd=shuffle out=filtered_shuffled.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve a sample of CANDELS HLSP photometry data and rename the column `z_best` to `REDSHIFT` locally.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT TOP 20 * FROM candels.photometry' ocmd='colmeta -name REDSHIFT z_best' out=candels_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a raw binary MOC (order 15) for sources that are in the input table but fail an external check (FLAG_BAD is true).",
        "response": "stilts mocshape in=checks.fits icmd='select FLAG_BAD' shape=point coords='array(RA, DEC)' order=15 mocfmt=raw out=bad_flags_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find the coverage for sources around RA 12h, Dec 30d. Convert RA to degrees and use a 0.01 degree radius.",
        "response": "stilts pixfoot in=hms_cat2.fits ra='12.0 * 15.0' dec=30.0 radius=0.01 out=hms_0p01deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Read a table with string column names containing spaces, automatically fix those names, and select only the fixed columns.",
        "response": "stilts tpipe in=messy.fits cmd='fixcolnames' cmd='keepcols \"ID_OBJ RA_DEG DEC_DEG\"' out=clean_names.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA_DEG' 'DEC_DEG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID_OBJ RA_DEG DEC_DEG\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'RA_DEG' 'DEC_DEG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine an ASCII table and an ECSV table. Use the optional ECSV header feature for the ECSV file.",
        "response": "stilts tcatn nin=2 in1=data.txt ifmt1=ascii in2=data.ecsv ifmt2='ecsv(header=ecsv_meta.yaml)' out=meta_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch five tables using sky position (2 arcsec). For T5, calculate a new coordinate column 'RA_NEW' = RA + 0.01 deg before matching.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=2 in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits in5=T5.fits icmd5='addcol RA_NEW \"RA + 0.01\"' values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA_NEW DEC' out=T5_shifted_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_NEW RA + 0.01\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '0.01'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a table using the generic scheme specification for a test table (:test:10,is) and save it as an IPAC file.",
        "response": "stilts tcopy in=:test:10,is out=test_ipac.tbl ifmt=ipac",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plotting X vs Y using the `asinh` scale for both axes (linear width 1).",
        "response": "stilts plot2plane in=wide_range.fits layer=mark x=X y=Y xscale='asinh(1)' yscale='asinh(1)' out=asinh_asinh.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a coverage map for objects that have non-zero proper motion in RA (PMRA).",
        "response": "stilts pixfoot in=pm_cat.fits icmd='select \"PMRA != 0.0\"' ra=RA dec=DEC out=pm_detected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA != 0.0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a FITS MOC from a list of circles with 1 arcminute radii.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA,DEC,1.0/60.0)' mocfmt=fits out=arcmin_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine two tables. T1 has Cartesian coordinates (X, Y). T2 has cylindrical coordinates (R, THETA). Convert T2 to Cartesian before merging.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='addcol X R*cos(THETA); addcol Y R*sin(THETA)' out=cartesian_merged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create the footprint of all sources with a parallax measurement (`PARALLAX` is not null).",
        "response": "stilts mocshape in=gaia_sample.fits icmd='select !NULL_PARALLAX' shape=point coords='array(ra,dec)' out=parallax_sources_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Merge all FITS files in a list and ensure the output is written using the VOTable FITS serialization format.",
        "response": "stilts tcat in='*.fits' ofmt='votable(format=FITS)' out=fits_votable_multi.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a 2D weighted density map where the color represents the mean temperature in each bin.",
        "response": "stilts plot2plane in=simulation.fits layer=grid x=POS_X y=POS_Y weight=TEMPERATURE combine=mean",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"POS_X\"\n    (The name \"POS_X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find best match (best2) from T1 for each row in T2. T1 is an IPAC file, T2 is a VOTable. Output metadata only.",
        "response": "stilts tmatch2 ifmt1=ipac in1=T1.tbl in2=T2.vot matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=best2 omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch T1 and T2. T1 column 'MAG' has -999 for nulls. Replace -999 with null in T1 before matching on magnitude (1d, 0.1 tolerance).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='badval -999 MAG' in2=T2.fits matcher=1d params=0.1 values1=MAG values2=MAG out=badval_match_1d.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve the names and descriptions of all tables provided by the PADC Astro server, outputting the table metadata only.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT table_name, description FROM TAP_SCHEMA.tables' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve photometry from the MAST CANDELS HLSP, and sort the result locally by the Z_BEST redshift estimate.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT * FROM candels.photometry' maxrec=500 ocmd='sort Z_BEST' out=candels_sorted_z.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run a synchronous query against ARI Gaia for 5 sources, then assert locally that all retrieved parallaxes are positive.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 5 * FROM gaiadr3.gaia_source' sync=true ocmd='assert \"parallax > 0\"' out=ari_positive_plx.vot",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert parallax > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Set a new table parameter 'PROCESSING_DATE' to the current MJD.",
        "response": "stilts tpipe in=data.fits cmd='setparam PROCESSING_DATE mjd()' out=data_with_mjd_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find Chandra Source Catalog Release 2 sources and output the calculated checksum.",
        "response": "stilts tapquery tapurl=https://cda.cfa.harvard.edu/csc2tap adql='SELECT * FROM csc.master_source' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a low-resolution MOC (order 4) for a random sample of 10000 stars from a simulation.",
        "response": "stilts mocshape in=:skysim:10000 shape=point coords='array(ra, dec)' order=4 out=sim_sample_lowres.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine `cat1.fits`, `cat2.fits`, `cat3.fits`, and `cat4.fits`, and add a sequence number column.",
        "response": "stilts tcatn nin=4 in1=cat1.fits in2=cat2.fits in3=cat3.fits in4=cat4.fits seqcol=CAT_ID out=all_cats.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Pair match T_MAIN (ref) against two supplemental tables. Before matching, T_MAIN must be filtered to remove rows where 'BAD_FLAG' is set.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=T_MAIN.fits icmd1='select !BAD_FLAG' in2=SUPP1.fits in3=SUPP2.fits out=main_filtered_ref.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert a local FITS file to a VOTable, ensuring the output uses **ISO-8859-1** character encoding.",
        "response": "stilts tcopy in=input.fits ofmt='votable(encoding=ISO-8859-1)' out=latin1.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot vectors showing velocity components VX, VY, ensuring the 'medium_arrow' shape is used.",
        "response": "stilts plot2plane in=particles.fits layer=xyvector x=X y=Y xdelta=VX ydelta=VY autoscale=true arrow=medium_arrow out=medium_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot error ellipses for Gaia data using the error and correlation columns.",
        "response": "stilts plot2plane in=gaia_data.fits layer=xycorr x=pmra y=pmdec xerr=pmra_error yerr=pmdec_error xycorr=pmra_pmdec_corr",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"pmra\"\n    (The name \"pmra\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert the astronomical catalogue 'source_data.fits' into a standard VOTable document named 'source_data.vot'.",
        "response": "stilts tcopy in=source_data.fits out=source_data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Submit a query and request an execution duration of no more than 300 seconds.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM ivoa.obscore' sync=false executionduration=300",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve the column names and data types, sorted by name, as a result table (using the `meta` filter).",
        "response": "stilts tpipe in=my_table.fits cmd=meta cmd='sort Name' out=meta_sorted.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge files, and then add a column 'IS_FAINT' that is true if 'MAG' > 21 and false otherwise, writing the output as an ECSV file.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol IS_FAINT \"MAG > 21\"' ofmt=ecsv out=faint_ecsv.ecsv",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '21'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 21\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '21'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "How do I combine the first 100 rows of `table1.fits` with the first 100 rows of `table2.fits`?",
        "response": "stilts tcat in=table1.fits in=table2.fits icmd='head 100' out=top100s.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 265.8002 and latitude 2.1441. Please use a search radius of 1.8266 degrees. Save the results to a fits file called query_results_102.fits. The coordinates are in the ecliptic system. Don't use compression for the download.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=265.8002 lat=2.1441 radius=1.8266 skysys=ecliptic compress=false omode=out ofmt=fits out=query_results_102.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Filter a table to keep only the second and third table columns (using $ID notation).",
        "response": "stilts tpipe in=full.fits cmd='keepcols \"$2 $3\"' out=cols2_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '$3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols $2 $3\n\nUsage: keepcols <colid-list>\n    (Unused arguments: '$3'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 63.1822 and latitude -66.6824. Please use a search radius of 0.4463 degrees. Save the results to a csv file called query_results_186.csv. After the query, please run this processing command: 'sorthead 20 MAG'.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=63.1822 lat=-66.6824 radius=0.4463 omode=out ofmt=csv out=query_results_186.csv ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Can `tcopy` read from a `.zip` file?",
        "response": "Not directly. `tcopy` can read `.gz` and `.bz2` files, but you would need to unzip a `.zip` archive first, for instance using a command pipeline: `unzip -p archive.zip table.fits | stilts tcopy in=- out=table.vot`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Crossmatch T1 and T2 using position and proper motion (sky+2d_anisotropic). Tolerances: 1 arcsec, 5 mas/yr (PMRA), 15 mas/yr (PMDEC).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky+2d_anisotropic params='1 5 15' values1='RA DEC PMRA PMDEC' values2='RA DEC PMRA PMDEC' out=pos_pm_anisotropic_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Convert a FITS file to a VOTable, enforcing the FITS serialization method within the XML.",
        "response": "stilts tcopy in=raw.fits ofmt='votable(format=FITS)' out=raw_votable_fits.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create an all-sky plot in Galactic coordinates (L, B) using the Aitoff projection, coloring points based on the logarithm of FLUX using the 'magma' color map.",
        "response": "stilts plot2sky in=stars.fits viewsys=galactic projection=aitoff layer=mark lon=L lat=B shading=aux aux=FLUX auxfunc=log auxmap=magma out=gal_aitoff_logflux.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L\"\n    (The name \"L\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match T_Main against T_Sup, where T_Main coordinates (GLON, GLAT) are Galactic. Convert T_Main coordinates to ICRS before matching (1 arcsec).",
        "response": "stilts tmatch2 in1=T_Main.fits icmd1='addskycoords galactic icrs GLON GLAT RA DEC' in2=T_Sup.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=galactic_converted_ref.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge tables, and then output the final table as an IPAC format file.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=ipac out=merged_ipac.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot markers sized by MAGNITUDE, where the sizing is scaled logarithmically (sizefunc=log).",
        "response": "stilts plot2sky in=sources.fits layer=size lon=RA lat=DEC size=MAGNITUDE sizefunc=log out=log_size_mag.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Draw markers that are sized independently in X (X_MAJ) and Y (Y_MIN) directions.",
        "response": "stilts plot2plane in=shapes.fits layer=sizexy x=X y=Y xsize=X_MAJ ysize=Y_MIN out=sizexy_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Copy a table from a synthetic test scheme that includes basic scalar columns and fixed arrays (:test:10,bf) to FITS.",
        "response": "stilts tcopy in=':test:10,bf' out=fixed_array_test.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Make a scatter plot with large, semi-transparent blue open squares.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shape=open_square color=blue size=10 shading=transparent opaque=3",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a MOC from positions in a parquet file, reading the input explicitly as parquet format.",
        "response": "stilts pixfoot in=coords.parquet ifmt=parquet ra=RA dec=DEC out=parquet_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Copy an IPAC table to a CSV file, ensuring the CSV output does **not** include a header row.",
        "response": "stilts tcopy in=data.tbl ifmt=ipac ofmt='csv(header=false)' out=no_header.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine multiple tables, ensuring the output format is the FITS column-oriented format (colfits-plus).",
        "response": "stilts tcatn nin=2 in1=data1.fits in2=data2.fits ofmt='fits(col=true,primary=votable)' out=combined.colfits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Join tables, and then remove any column containing null values in all cells (using the constcol filter trick).",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='constcol -noparam' out=non_constant_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I have two tables from different instruments. `inst1.fits` has coords `X1`, `Y1`. `inst2.fits` has `X2`, `Y2`. Match them with a 2-pixel tolerance, find all pairs, and output as an ECSV file.",
        "response": "stilts tmatch2 in1=inst1.fits in2=inst2.fits matcher=2d params=2 values1='X1 Y1' values2='X2 Y2' find=all ofmt=ecsv out=instrument_pairs.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create an all-sky density plot (Aitoff) using the 'hotcold' color map.",
        "response": "stilts plot2sky in=survey.fits layer=mark lon=RA lat=DEC projection=aitoff shading=density densemap=hotcold out=aitoff_hotcold.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert a local VOTable to FITS, ensuring the FITS uses VOTable version 1.3 metadata in the Primary HDU.",
        "response": "stilts tcopy in=input.vot ofmt='fits(primary=votable1.3)' out=phdu_v13.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Draw error ellipses derived from correlation, using the 'crosshair_rectangle' shape.",
        "response": "stilts plot2sky in=errors.fits layer=skycorr lon=RA lat=DEC lonerr=EL laterr=EB corr=C ellipse=crosshair_rectangle out=corr_crosshair_rect.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate three FITS files: data_01.fits, data_02.fits, and data_03.fits, and display the resulting table's metadata.",
        "response": "stilts tcat in=data_01.fits in=data_02.fits in=data_03.fits omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Read a table, convert the ISO-8601 time string to Modified Julian Date (MJD), and output the first 10 rows to standard output.",
        "response": "stilts tpipe in=obs_log.fits cmd='addcol MJD isoToMjd(TIME_ISO)' cmd='head 10' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert an IPAC table to a CSV file using a semicolon as the delimiter.",
        "response": "stilts tcopy in=input.tbl ifmt=ipac ofmt='csv(delimiter=;)' out=semicolon.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve the top 5 tables from the KIS Science Data Centre and output the result in ECSV format.",
        "response": "stilts tapquery tapurl=http://dachs.sdc.leibniz-kis.de/tap adql='SELECT TOP 5 * FROM TAP_SCHEMA.tables' ofmt=ecsv out=kis_tables_ecsv.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the ASI SSDC ObsCore service for Fermi data, forcing authentication, and ensuring the job is queued asynchronously with a maximum runtime of 1 hour.",
        "response": "stilts tapquery tapurl=https://tools.ssdc.asi.it/TAPSSDC/tap adql='SELECT * FROM ivoa.ObsCore WHERE facility_name = ''Fermi''' auth=true executionduration=3600 out=fermi_long_job.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a VOTable and output it as a LaTeX table fragment (non-standalone document).",
        "response": "stilts tcopy in=small_data.vot ofmt='latex(standalone=false)' out=table_fragment.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q99' containing the 99th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q99 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.99)\"' out=q99_dist_1350pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.99)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q99 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.99)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.99)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the Chandra X-ray Archive ObsCore table for observations longer than 10000 seconds, and send results to TOPCAT.",
        "response": "stilts tapquery tapurl=https://cda.harvard.edu/cxctap adql='SELECT * FROM ivoa.ObsCore WHERE t_exptime > 10000' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Verify that the final output table contains only columns whose names start with 'ID' or 'FLUX'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"ID* FLUX*\"' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge time series data and then add a column 'TIME_STRING' containing the time converted from MJD to ISO-8601 string format.",
        "response": "stilts tcat in='ts1.fits ts2.fits' ocmd='addcol TIME_STRING mjdToIso(MJD)' out=ts_iso.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Filter rows to keep only those where the time difference between 'TIME_END' and 'TIME_START' is less than 100 units.",
        "response": "stilts tpipe in=logs.fits cmd='select \"TIME_END - TIME_START < 100.0\"' out=short_events.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'TIME_START' '<' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TIME_END - TIME_START < 100.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'TIME_START' '<' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at http://archive.eso.org/ssap? I'm looking for objects around longitude 171.3119 and latitude 39.3781. Please use a search radius of 0.7157 degrees. Save the results to a csv file called query_results_25.csv.",
        "response": "stilts cone servicetype=ssa serviceurl=http://archive.eso.org/ssap lon=171.3119 lat=39.3781 radius=0.7157 omode=out ofmt=csv out=query_results_25.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Join A.fits and B.fits with a left outer join (all A rows). T_B has an array column 'FLUX_VEC'. Discard this column before joining.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits icmd2='delcols FLUX_VEC' matcher=exact values1=ID values2=ID join=all1 out=array_discarded_left_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot data from a piped CSV stream, using the first column for X and second for Y, and display it in a GUI window.",
        "response": "cat data.csv | stilts plot2plane ifmt=csv in=- layer=mark x=$1 y=$2 omode=gui",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve photometry from the J-PLUS EDR Catalogue, keeping only 100 rows and the 'mag_g' and 'mag_r' columns locally.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jpas-edr adql='SELECT * FROM jpas_edr.master' ocmd='head \"100\"; keepcols \"mag_g mag_r\"' out=jpas_subset.fits",
        "error": "Error: Unused arguments: 'mag_r'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols mag_g mag_r\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'mag_r'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I need a search for images (SIA) around a non-standard coordinate, say lon=-150, lat=45, with radius 0.5 degrees, and the response should be output as a CSV file.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=-150.0 lat=45.0 radius=0.5 servicetype=sia ofmt=csv out=sia_raw.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "How do I specify a bold, italic, 10-point serif font for my plot labels?",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y fontstyle=serif fontweight=bold_italic fontsize=10",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T1, T2, T3, T4. Use T3 as the reference table (pairs). T1 and T2 should always be included, T4 should only be included if matched.",
        "response": "stilts tmatchn nin=4 multimode=pairs iref=3 matcher=sky params=2 in1=T1.fits join1=always in2=T2.fits join2=always in3=T3.fits in4=T4.fits join4=match values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' out=mixed_join_t3_ref.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Is it possible to submit a query and get the result as an HTML table?",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 20 * FROM ivoa.obscore' ofmt=html",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate tables, and add a column 'SourceTableIdx' that lists the table's 1-based input sequence number.",
        "response": "stilts tcat in='t1.fits t2.fits t3.fits' seqcol=SourceTableIdx out=source_indexed_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Find all objects from the GAVO service that have an associated spectrum.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM ivoa.obscore WHERE dataproduct_type = ''spectrum''' out=spectral_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need the exact count of matches from VizieR TAP near RA 18h 0m 0s, Dec 0d 0m 0s (convert RA/Dec), using 4 arcseconds.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=270.0 lat=0.0 radius='4.0 / 3600.0' omode=count",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"4.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Draw lines connecting two positions (X1, Y1) to (X2, Y2) from each row, colored green.",
        "response": "stilts plot2plane in=pairs.fits layer=link2 x1=X1 y1=Y1 x2=X2 y2=Y2 color=green out=linked_pairs.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert coordinates from Equatorial (RA, DEC) to Supergalactic (SGL, SGB) and output the first 10 rows to standard output.",
        "response": "stilts tpipe in=gals.fits cmd='addskycoords icrs supergalactic RA DEC SGL SGB' cmd='head 10' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Copy data from the synthetic loop scheme (`:loop:5000`) and save the index column as a FITS file.",
        "response": "stilts tcopy in=:loop:5000 out=index_list.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch T1, T2, T3, T4. T2 has an array column 'FLUX_SPEC' that must be discarded before matching on scalar ID.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID in1=T1.fits in2=T2.fits icmd2='delcols FLUX_SPEC' in3=T3.fits in4=T4.fits out=T2_array_discarded.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert a PDS4 file 'mars_data.xml' into an ECSV table.",
        "response": "stilts tcopy in=mars_data.xml ifmt=pds4 out=mars_data.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the PADC TAP Planetary server for EPN core observations of 'Jupiter' and save the output in the specialized FITS-plus format.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT * FROM epn_core.epn_core WHERE target_name = ''Jupiter''' ofmt=fits-plus out=jupiter_rich.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the ESA Euclid archive for the ObsCore table and assert locally that the 'release_date' column exists.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT TOP 1 * FROM ivoa.ObsCore' ocmd='assert !NULL_release_date, \"Release date missing!\"' out=euclid_assert_release.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a table from the loop scheme and output the resulting TST format to the terminal.",
        "response": "stilts tcopy in=:loop:20 ofmt=tst out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match five tables using group mode. T3 has its errors in MAS; convert them to ARCSEC (1 mas = 0.001 arcsec) before matching using `skyerr`.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=skyerr params=1 values1='RA DEC ERR' values2='RA DEC ERR' in3=T3.fits icmd3='replacecol ERR ERR/1000' values3='RA DEC ERR' values4='RA DEC ERR' values5='RA DEC ERR' in1=T1.fits in2=T2.fits in4=T4.fits in5=T5.fits out=mas_converted_skyerr.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate a MOC for positions derived from Galactic Longitude (L) and Latitude (B), converting to ICRS before MOC creation.",
        "response": "stilts mocshape in=galactic_cat.fits icmd='addskycoords galactic icrs GLON GLAT RA_ICRS DEC_ICRS' shape=point coords='array(RA_ICRS, DEC_ICRS)' out=converted_galactic_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine two tables, sorting the final table by 'ID' and keeping the 'ID' column as the final table's primary column.",
        "response": "stilts tcatn nin=2 in1=a.fits in2=b.fits ocmd='sort \"ID\"; keepcols \"ID *\"' out=id_first_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols ID *\n\nUsage: keepcols <colid-list>\n    (Unused arguments: '*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the MAST PS1 DR2 archive with a 1 degree radius and output the resulting table directly as a VOTable document using BINARY2 serialization.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 lon=140.0 lat=5.0 radius=1.0 out=ps1_cone.vot ofmt='votable(format=BINARY2)'",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate an ASCII MOC (order 7) for sources in the Equatorial region (DEC between -10 and +10).",
        "response": "stilts mocshape in=sky_data.fits icmd='select \"DEC >= -10 && DEC <= 10\"' shape=point coords='array(RA, DEC)' order=7 mocfmt=ascii out=eq_belt_o7.txt",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '-10' '&&' 'DEC' '<=' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC >= -10 && DEC <= 10\n\nUsage: select <expr>\n    (Unused arguments: '>=' '-10' '&&' 'DEC' '<=' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Pair match T_MAIN (ref) against T_AUX1, T_AUX2. Only keep rows from T_MAIN where there was NO match found in T_AUX1 or T_AUX2.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T_MAIN.fits in2=T_AUX1.fits in3=T_AUX2.fits join1=nomatch values1='RA DEC' values2='RA DEC' values3='RA DEC' out=T_MAIN_only_singles.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Run a synchronous query against the ASI SSDC TAP Service for 5 records and output the checksum.",
        "response": "stilts tapquery tapurl=https://tools.ssdc.asi.it/TAPSSDC/tap adql='SELECT TOP 5 * FROM ivoa.ObsCore' sync=true omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How do I read a TST file and write it out as a VOTable?",
        "response": "stilts tcopy ifmt=tst in=old_data.tst out=new_data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 78.8539 and latitude 77.618. Please use a search radius of 0.9332 degrees. Save the results to a ascii file called query_results_197.ascii. After the query, please run this processing command: 'sorthead 20 MAG'. The coordinates are in the fk5 system. Use verbosity level 2.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=78.8539 lat=77.618 radius=0.9332 skysys=fk5 verb=2 omode=out ofmt=ascii out=query_results_197.ascii ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "What's the command to create an ASCII MOC for circles of 15 arcsec around each source in `source_list.txt`?",
        "response": "stilts pixfoot in=source_list.txt ifmt=ascii radius=15.0/3600.0 mocfmt=ascii out=source_circles.moc.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Convert 'raw_data.csv' (comma-separated values) to the ECSV format.",
        "response": "stilts tcopy in=raw_data.csv ifmt=csv out=processed.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I need to combine three tables, but the second one is gzipped.",
        "response": "stilts tcatn nin=3 in1=t1.fits in2=t2.fits.gz in3=t3.fits out=t_all.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine data files from two different instruments. The first has X, Y coordinates, and the second has X_P, Y_P. Rename to 'X' and 'Y' before joining.",
        "response": "stilts tcatn nin=2 in1=inst1.fits in2=inst2.fits icmd2='colmeta -name X X_P; colmeta -name Y Y_P' out=instrument_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "What's the ADQL syntax for a cross join in a TAP query?",
        "response": "You can perform a cross join by listing multiple tables in the FROM clause, for example: `... adql='SELECT TOP 10 * FROM table1, table2'`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a coverage map for objects in catalog.csv, assuming RA and DEC are in columns 1 and 2. Save it as a JSON MOC.",
        "response": "stilts pixfoot in=catalog.csv ifmt=csv ra=$1 dec=$2 mocfmt=json out=catalog_moc.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "My RA coordinates are in hours in column `RA_HMS`. Convert them to degrees before creating the footprint.",
        "response": "stilts pixfoot in=my_catalog.fits ra='hmsToDegrees(RA_HMS)' dec=DEC out=hms_converted_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Copy a table from a JDBC query (assuming proper configuration) and save the results as an ASCII file.",
        "response": "stilts tcopy in='jdbc:mysql://localhost/db1#SELECT ra, dec FROM table' out=sql_dump.txt ofmt=ascii",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Upload a table containing three columns (ID, RA, DEC) to ARI Gaia and join it against Gaia DR3 on RA and DEC, returning both the local and remote IDs (assuming the local columns are named ID_local, RA, and DEC).",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT u.ID_local, g.source_id FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.local_targets AS u ON 1=CONTAINS(POINT(''ICRS'', g.ra, g.dec), CIRCLE(''ICRS'', u.RA, u.DEC, 0.0001))' nupload=1 upload1=targets.csv upname1=local_targets out=ari_multi_column_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match two catalogs using position and error bars (skyerr_q). T2 errors are given by 'E_SQRT' which needs squaring to get variance.",
        "response": "stilts tmatch2 in1=C1.fits in2=C2.fits icmd2='addcol E_VAR E_SQRT*E_SQRT' matcher=skyerr_q params=1 values1='RA DEC E_VAR' values2='RA DEC E_VAR' out=error_variance_q_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Run an SIA query against the MAST CAOM service near Galactic L=95, B=-1, searching with a radius of 0.008333 degrees (30 arcsec).",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=95.0 lat=-1.0 radius=0.008333 servicetype=sia skysys=galactic out=caom_30as_gal.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "After concatenating, I want a new column which is the logarithm of the 'FLUX' column.",
        "response": "stilts tcatn nin=2 in1=f1.fits in2=f2.fits ocmd='addcol LOG_FLUX log10(FLUX)' out=with_log.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I have a FITS file with multiple tables. How do I copy just the first one?",
        "response": "stilts tcopy in=multi.fits out=first_table.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a MOC (order 12) from an ASCII file input, using column indices 1 and 2 for coordinates.",
        "response": "stilts pixfoot in=data.txt ifmt=ascii ra=$1 dec=$2 order=12 out=ascii_index_o12.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC from positions in a CSV file that uses ';' as a delimiter, explicitly setting the input format.",
        "response": "stilts pixfoot in=data.csv ifmt='csv(delimiter=;)' ra=RA dec=DEC out=semicolon_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate three tables, preserving the full location string (URL/path) in a column 'SourceLoc' for debugging provenance.",
        "response": "stilts tcatn nin=3 in1=a/b/c1.fits in2=http://remote/c2.fits in3=c/c3.fits loccol=SourceLoc out=full_loc_provenance.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge two tables, but keep only the last 100 rows of the combined result.",
        "response": "stilts tcat in='big1.fits big2.fits' ocmd='tail 100' out=last_100.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Synchronously retrieve 5 table names from the ESO Catalogue TAP service and output them to standard output in ASCII format.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT TOP 5 table_name FROM TAP_SCHEMA.tables' sync=true ofmt=ascii out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T1 and T2 on MJD. T2 time values are in seconds since Unix epoch. Convert T2 to MJD before matching (1d, 1e-6 tolerance).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='replacecol MJD unixSecToMjd(TIME_UNIX)' matcher=1d params=1e-6 values1=MJD values2=MJD out=unix_to_mjd_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot the analytic function $y = \\sqrt{x}$ from $x=1$ to $x=10$.",
        "response": "stilts plot2plane layer=function fexpr='sqrt(x)' xmin=1 xmax=10 out=sqrt_curve.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a MOC (order 17) for a radius of 5 micro-arcseconds ($mu$as).",
        "response": "stilts pixfoot in=microas_data.fits ra=RA dec=DEC radius='5.0 / 3600000000.0' order=17 out=five_microas.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Join three tables, then transpose the resulting single table so that columns become rows.",
        "response": "stilts tcatn nin=3 in1=a.fits in2=b.fits in3=c.fits ocmd='transpose' out=transposed_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the VSA VISTA Science Archive VHS table for sources with H-band magnitude (Hmag) brighter than 15.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/vsa adql='SELECT ra, dec, Hmag FROM vhs.point_source WHERE Hmag < 15' out=vsa_bright_h.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate tables and ensure the final output file is written using the VOTable FITS serialization format.",
        "response": "stilts tcat in='a.vot b.vot' ofmt='votable(format=FITS)' out=fits_votable.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "What does a negative radius in a `shape=circle` coordinate mean?",
        "response": "A negative radius is physically meaningless for a circle. `mocshape` will likely ignore rows where the radius expression evaluates to a negative number, so they will not contribute to the final MOC.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Draw a small region (1 arcminute radius) centered at Galactic L=30, B=0, setting the text type to antialias.",
        "response": "stilts plot2sky in=targets.fits viewsys=galactic clon=30.0 clat=0.0 radius='1.0 / 60.0' layer=mark lon=L lat=B texttype=antialias out=antialias_zoom.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L\"\n    (The name \"L\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match two tables using position and error bars (skyerr). T1 has ERR_MAS in milliarcseconds. Convert to arcseconds before matching (0.5 arcsec scale).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='replacecol E_ARCSEC ERR_MAS/1000.0' in2=T2.fits matcher=skyerr params=0.5 values1='RA DEC E_ARCSEC' values2='RA DEC E_ARCSEC' out=mas_error_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Read an ASCII table, explicitly excluding 16-bit integer types during type inference.",
        "response": "stilts tcopy in=numeric.txt ifmt='ascii(notypes=short)' out=long_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "How do I make the plot legend have an opaque white background?",
        "response": "The legend background is opaque by default. You cannot set the color, but `legopaque=true` is the default setting.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge files, and then add a column 'Distance_kpc' derived from 'PARALLAX' (in mas) using the expression '1000.0/PARALLAX'.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol Distance_kpc 1000.0/PARALLAX' out=distance_catalog_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Add a new column 'MAG_CHECK' that is 1 if 'MAG_G' is null, and 'MAG_G' otherwise (using the conditional operator).",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_CHECK \"NULL_MAG_G ? 1 : MAG_G\"' out=checked_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '1' ':' 'MAG_G'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_CHECK NULL_MAG_G ? 1 : MAG_G\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '?' '1' ':' 'MAG_G'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Filter a table to keep rows where 'V_MAG' < 10, then duplicate the entire resulting selection three times using `repeat`.",
        "response": "stilts tpipe in=bright.fits cmd='select \"V_MAG < 10\"' cmd='repeat \"3\"' out=tripled_bright.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select V_MAG < 10\n\nUsage: select <expr>\n    (Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate four FITS files, then keep only the first 100 rows of the total combined output.",
        "response": "stilts tcatn nin=4 in1=s1.fits in2=s2.fits in3=s3.fits in4=s4.fits ocmd='head 100' out=first_100_rows.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve ULLYSES HLSP observations and locally filter the resulting table to retain only the access URL column.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT TOP 100 access_url, ra, dec FROM ivoa.ObsCore' ocmd='keepcols access_url' out=ullyses_urls.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Keep only the first 50 rows, then export the table to a Parquet file.",
        "response": "stilts tpipe in=data.fits cmd='head 50' ofmt=parquet out=head50.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot the 25th percentile line of Y data binned by X, coloring it darkred and using dashed lines.",
        "response": "stilts plot2plane in=data.fits layer=quantile x=X y=Y quantiles=0.25 color=darkred thick=2 join=lines dash=dash out=q1_line_dash.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a simulated star catalog of 5000 rows and convert it to a Parquet file.",
        "response": "stilts tcopy in=:skysim:5000 out=sim_stars.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Filter a table to keep rows 10 to 19 (inclusive), and then duplicate each remaining row once.",
        "response": "stilts tpipe in=data.fits cmd='rowrange 10 19' cmd='repeat -row 2' out=duplicated_slice.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw a set of crosshairs representing position uncertainty (crosshair_ellipse), coloring them flat orange.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra=A rb=B posang=P unit=arcsec ellipse=crosshair_ellipse shading=flat color=orange out=orange_crosshairs.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Calculate the difference between the mean and median of the array column 'FLUX_ARRAY' per row.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol MEAN_MEDIAN_DIFF \"mean(FLUX_ARRAY) - median(FLUX_ARRAY)\"' out=mean_median_diff.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'median(FLUX_ARRAY)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MEAN_MEDIAN_DIFF mean(FLUX_ARRAY) - median(FLUX_ARRAY)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'median(FLUX_ARRAY)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot X vs Y, coloring points based on the 'Z' column using the 'paux' shading mode and the 'cubehelix' map.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=paux aux=Z pmap=cubehelix out=paux_cubehelix.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert the entire table to a single VOTable stream encoded using BINARY2 format.",
        "response": "stilts tpipe in=input.fits ofmt='votable(format=BINARY2)' out=output.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "What does a zero radius mean for `shape=circle`?",
        "response": "A radius of zero means each position is treated as a single point on the sky. The MOC will cover the smallest HEALPix pixel at the given order that contains each point.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Select the bottom 25 rows of a table and output them in IPAC format.",
        "response": "stilts tpipe in=full_log.fits cmd='tail 25' ofmt=ipac out=log_tail.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you combine a PDS4 file with a CDF file?",
        "response": "stilts tcatn nin=2 in1=data.xml ifmt1=pds4 in2=data.cdf ifmt2=cdf ocmd='keepcols \"TIME VALUE\"' out=combined_space.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match A.fits and B.fits using positional errors (skyerr). T_A error is in microarcseconds (uas). Convert A error to degrees.",
        "response": "stilts tmatch2 in1=A.fits icmd1='addcol E_DEG E_UAS/3600000000.0' in2=B.fits matcher=skyerr params=1 values1='RA DEC E_DEG' values2='RA DEC E_DEG' out=uas_to_deg_skyerr.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Run a general search on the MAST HSCv3 catalogue near Galactic L=280, B=-50, with 1/6 degree radius.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=280.0 lat=-50.0 radius='1.0 / 6.0' skysys=galactic out=hsc_1sixth_deg.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 6.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Count the number of objects classified as 'Star' in the SIMBAD basic database, running asynchronously.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT COUNT(*) FROM basic WHERE otype = ''Star''' sync=false omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need the footprint for a 0.2 arcmin radius around each source.",
        "response": "stilts pixfoot in=sources.fits radius=0.2/60.0 out=point_two_arcmin.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a polygon MOC for a table where vertices are defined by 8 columns (X1, Y1, X2, Y2, X3, Y3, X4, Y4).",
        "response": "stilts mocshape in=corners.fits shape=polygon coords='array(X1, Y1, X2, Y2, X3, Y3, X4, Y4)' out=quad_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot position vectors (unit=arcsec) using the 'capped_lines' shape and thick lines (thick=3).",
        "response": "stilts plot2sky in=pm_data.fits layer=skyvector lon=RA lat=DEC dlon=PMRA dlat=PMDEC unit=arcsec arrow=capped_lines thick=3 out=thick_capped_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find the coverage for all sources with a radius defined by $\text{hypot}(\text{X_ERR}, \text{Y_ERR})$ in degrees.",
        "response": "stilts pixfoot in=err_hypot.fits ra=RA dec=DEC radius='hypot(X_ERR, Y_ERR)' out=hypot_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Crossmatch T1, T2, T3, T4 (pairs, T1 ref). Only output the statistical summary of the resulting table.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=exact values1=ID values2=ID values3=ID values4=ID in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a table from a synthetic strange attractor scheme (Clifford) and output it as a FITS file.",
        "response": "stilts tcopy in=:attractor:1e5,clifford out=clifford_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I have multiple spectra. Can I plot markers at the position of the peak flux for each?",
        "response": "stilts plot2plane in=spectra.fits layer=handles xs=param$WAVELENGTHS ys=FLUX_ARRAY placement=ymax",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"param\"\n    (The name \"param\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Draw vectors representing the displacement field (DX, DY) at positions (X, Y), ensuring vectors are automatically scaled.",
        "response": "stilts plot2plane in=flow.fits layer=xyvector x=X y=Y xdelta=DX ydelta=DY autoscale=true out=auto_scaled_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Synchronously retrieve the table names from the KSB-ROB TAP service and output them in ASCII format.",
        "response": "stilts tapquery tapurl=http://vo-tap.oma.be/tap adql='SELECT table_name FROM TAP_SCHEMA.tables' sync=true ofmt=ascii out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine list1.vot and list2.vot. In the final output, replace the magic value -999.0 with null in the 'MAG' column.",
        "response": "stilts tcatn nin=2 in1=list1.vot in2=list2.vot ocmd='badval -999.0 MAG' out=cleaned_mag.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3. T3 contains 'LOG_MAG'. Match on 1D position (X) and 1D log magnitude (1d+1d, 5 units, 0.1 units).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d+1d params='5 0.1' values1='X LOG_MAG' values2='X LOG_MAG' values3='X LOG_MAG' in1=T1.fits in2=T2.fits in3=T3.fits out=1d_log_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate four tables, ensuring the output is written to standard output as text.",
        "response": "stilts tcatn nin=4 in1=c1.fits in2=c2.fits in3=c3.fits in4=c4.fits ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match four tables and output the result as a multi-table FITS file, where each output table corresponds to one of the input tables but only contains the matched rows.",
        "response": "This is not a standard output of `tmatchn`. You would run `tmatchn` to get the matched IDs, then use `tpipe` with a `select` filter on each of the original tables to create the four separate output tables, and finally `tmulti` to combine them.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find 50 sources from MAST PanSTARRS 1 DR1 and ensure the output uses the TAP 1.1 interface standard.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 50 * FROM dbo.detection_object' interface=tap1.1 out=ps1_tap11.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers sized by distance (R) and initially filtered to include only objects where R < 100 parsecs.",
        "response": "stilts plot2sky in=local_stars.fits icmd='select \"R < 100\"' layer=size lon=RA lat=DEC size=R unit=parsec autoscale=true out=close_stars_sized.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"R < 100\" (The name \"R\" is unknown.)\n        (The name \"R\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate tables from two remote URLs and stream the input data to minimize local memory footprint.",
        "response": "stilts tcat in='http://archive.org/t1.fits http://archive.org/t2.fits' istream=true out=streamed_remote.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Attempt to parse the ADQL syntax against the NOIRLab Data Lab service, explicitly setting the language to ADQL.",
        "response": "stilts tapquery tapurl=https://datalab.noirlab.edu/tap adql='SELECT COUNT(*) FROM some_huge_table' language=ADQL parse=true out=datalab_syntax_check.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a plot of X vs Y where the Y-axis uses a logarithmic scale.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y yscale=log out=log_y_scale.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Show the metadata (column names, types, descriptions) for the rr_source table from the PADC RR TAP server.",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.columns WHERE table_name = ''rr.rr_source''' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Count the total number of unique tables available in the HEASARC Xamin Catalog Interface.",
        "response": "stilts tapquery tapurl=https://heasarc.gsfc.nasa.gov/xamin/vo/tap adql='SELECT COUNT(DISTINCT table_name) FROM TAP_SCHEMA.tables' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers from a simulated catalog of 100,000 points, viewed in Supergalactic coordinates, converting from ICRS.",
        "response": "stilts plot2sky in=:skysim:100000 viewsys=supergalactic layer=mark lon=RA lat=DEC datasys=equatorial out=sim_sgl.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a parameter 'DATA_VERSION' with value 1.0, explicitly typing it as double.",
        "response": "stilts tpipe in=meta.fits cmd='setparam -type double DATA_VERSION 1.0' out=version_double_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match two catalogs using position and individual error bars (skyerr). T1 error comes from column E_POS1, T2 error from E_POS2.",
        "response": "stilts tmatch2 in1=C1.fits in2=C2.fits matcher=skyerr params=1 values1='RA DEC E_POS1' values2='RA DEC E_POS2' out=per_object_error_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'DEC_DMS_3' converting DEC in degrees to DMS string format with 3 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_3 \"degreesToDms(DEC, 3)\"' out=dms_dec_3s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_3 degreesToDms(DEC, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch T1 and T2. T2 coordinates are sexagesimal strings (RA_H:M:S, DEC_D:M:S). Convert T2 coordinates to degrees in the values parameter.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='hmsToDegrees(RA_H) dmsToDegrees(DEC_D)' out=inline_sexagesimal_degree.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a MOC from my `bright_stars.vot` table, but only for stars with a V magnitude brighter than 10.",
        "response": "stilts pixfoot in=bright_stars.vot icmd='select \"VMAG < 10\"' out=vmag_lt_10.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select VMAG < 10\n\nUsage: select <expr>\n    (Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Merge VOTables and discard all rows where the 'MAG_ERR' column is null.",
        "response": "stilts tcat in='v1.vot v2.vot' ocmd='select !NULL_MAG_ERR' out=non_null_errors.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge survey files, adding a sequence column 'TileID' to label input order and outputting to VOTable 1.4 version.",
        "response": "stilts tcatn nin=3 in1=tile1.fits in2=tile2.fits in3=tile3.fits seqcol=TileID ofmt='votable(version=V14)' out=v14_indexed.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query VizieR for SDSS DR9 galaxies (V/139/sdss9) and output to an IPAC table.",
        "response": "stilts tapquery tapurl=http://tapvizier.u-strasbg.fr/tap adql='SELECT * FROM \"V/139/sdss9\" WHERE cl=3' ofmt=ipac out=sdss_galaxies.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the ESO Catalogue TAP service for a list of table names and output the result in standalone HTML format.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT table_name FROM TAP_SCHEMA.tables' ofmt=html out=eso_tables.html",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How do I handle polygons with holes in `mocshape`?",
        "response": "The documentation notes that for STC-S, POLYGON winding direction is ignored, and for TFCat, holes are not displayed correctly. This suggests that `mocshape` may not handle polygons with holes correctly and might fill them in.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Can you generate a MOC for my data and name the RA column `ALPHA` and the Dec column `DELTA`?",
        "response": "stilts pixfoot in=my_data.fits ra=ALPHA dec=DELTA out=alpha_delta_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot a 2D density map where the color represents the number of points per unit area (count-per-unit).",
        "response": "stilts plot2plane in=large_survey.fits layer=grid x=RA y=DEC combine=count-per-unit out=count_per_unit_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the XMM-Newton data and catalogues service to find the 20 ObsCore entries that used the PN detector, setting the execution duration to 30 minutes (1800 seconds).",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT TOP 20 * FROM ivoa.ObsCore WHERE instrument_name = ''PN''' executionduration=1800 out=xmm_pn_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot the nominal center of STC-S regions (central layer), filtering the input to only include regions with area greater than 0.1 sq deg.",
        "response": "stilts plot2sky in=regions.fits icmd='select \"Area > 0.1\"' layer=central area=S_REGION areatype=STC-S out=large_stcs_centers.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"Area > 0.1\" (The name \"Area\" is unknown.)\n        (The name \"Area\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve 50 sources from MAST PanSTARRS 1 DR1 where the detection count in the G band is greater than 10, and output the result in ECSV format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 50 * FROM dbo.detection_object WHERE n_det_g > 10' ofmt=ecsv out=ps1_high_ndet.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a MOC (order 14) and apply a filter to replace null values in the MAGNITUDE column with 99.0 (though the magnitude itself isn't used for the MOC).",
        "response": "stilts pixfoot in=null_mag.fits icmd='replaceval null 99.0 MAGNITUDE' ra=RA dec=DEC out=cleaned_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T2 coordinates are in degrees, T3 are in radians. Convert T3 to degrees via an inline expression.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='radiansToDegrees(RA_RAD) radiansToDegrees(DEC_RAD)' in1=T1.fits in2=T2.fits in3=T3.fits out=t3_inline_rad_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a plot where the output image size is 800 pixels wide and 600 pixels high.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xpix=800 ypix=600 out=large_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Filter the input table to keep only the first 100 rows, then generate an order 17 MOC with a 2 arcsecond radius.",
        "response": "stilts pixfoot in=large_cat.fits icmd='head 100' ra=RA dec=DEC radius='2.0 / 3600.0' order=17 out=head100_2as.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find 50 Seyfert galaxies in the NED database and calculate the statistical summary of their reported redshifts.",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT TOP 50 redshift FROM object WHERE obj_type = ''Seyfert''' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers, setting the output image size to 1000x1000 pixels.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC xpix=1000 ypix=1000 out=square_1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Use row indices as coordinates (0, 1, 2, ...) to map positions, then create a point MOC (order 5), demonstrating the implicit index column $0$.",
        "response": "stilts mocshape in=:loop:1000 shape=point coords='array($0 / 10.0, $0 / 10.0)' order=5 out=index_points_o5.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need to join a WDC format file and a CSV file.",
        "response": "stilts tcatn nin=2 in1=data.wdc ifmt1=wdc in2=data.csv ifmt2=csv ocmd='keepcols \"TIME VALUE\"' out=combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot 'V_MAG' vs 'B_V_COLOR' and overplot a line of best linear fit.",
        "response": "stilts plot2plane in=stars.fits layer_pts=mark x_pts=B_V_COLOR y_pts=V_MAG layer_fit=linearfit x_fit=B_V_COLOR y_fit=V_MAG yflip=true out=fit_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"B_V_COLOR\"\n    (The name \"B_V_COLOR\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match four catalogs and output the results as a LaTeX table.",
        "response": "stilts tmatchn nin=4 in1=t1.fits in2=t2.fits in3=t3.fits in4=t4.fits multimode=group matcher=sky params=5 values1='ra dec' values2='ra dec' values3='ra dec' values4='ra dec' ofmt=latex out=4way_match.tex",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query VizieR for 100 sources in 2MASS (II/246/out) that have J-band magnitude error less than 0.1.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT TOP 100 * FROM \"II/246/out\" WHERE e_Jmag < 0.1' out=2mass_low_err.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert an IPAC table `wise_data.tbl` to a Parquet file.",
        "response": "stilts tpipe ifmt=ipac in=wise_data.tbl ofmt=parquet out=wise_data.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate two tables, but exclude rows from the resulting table where the 'ERROR' column is less than zero or null.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='select \"ERROR >= 0 && !NULL_ERROR\"' out=clean_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0' '&&' '!NULL_ERROR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ERROR >= 0 && !NULL_ERROR\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0' '&&' '!NULL_ERROR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 336.9321 and latitude -13.4105. Please use a search radius of 1.3372 degrees. Instead of a file, just give me the count. The coordinates are in the ecliptic system. Don't use compression for the download.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=336.9321 lat=-13.4105 radius=1.3372 skysys=ecliptic compress=false omode=count",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a very coarse MOC (order 0) representing the points in all_sky.fits.",
        "response": "stilts pixfoot in=all_sky.fits ra=RA dec=DEC order=0 out=coarse_o0.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Set the output mode to view the statistics, explicitly ensuring parallel execution.",
        "response": "stilts tpipe in=data.fits cmd='stats -parallel' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the total number of records available in the MAST SkyMapper DR4 master catalogue.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/skymapperdr4/ adql='SELECT COUNT(*) FROM smssdr4.master' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run a synchronous query against the PADC TAP Planetary server and output the entire table metadata description.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT TOP 1 * FROM epn_core.epn_core' sync=true omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create an all-sky Aitoff plot and explicitly disable the scale bar.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC projection=aitoff scalebar=false out=aitoff_no_scalebar.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert a VOTable to FITS, using VOTable version 1.4 metadata in the FITS Primary HDU (fits(primary=votable1.4)).",
        "response": "stilts tcopy in=input.vot out=phdu_v14.fits ofmt='fits(primary=votable1.4)'",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find rows present in T1 but NOT T2 (anti-join). T2 columns are suffixed '_T2'.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID join=1not2 suffix2=_T2 out=t1_anti_join_suffix.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'ERROR_RATIO_INV' calculated as the inverse ratio of 'ERR_A' to 'ERR_B'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_RATIO_INV \"ERR_B / ERR_A\"' out=inverse_error_ratio.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'ERR_A'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_RATIO_INV ERR_B / ERR_A\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'ERR_A'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine three tables (A.fits, B.csv, C.vot). A and C use magnitude MAG; in B (CSV format), calculate MAG = 25 - 2.5 * log10(FLUX) before joining.",
        "response": "stilts tcatn nin=3 in1=A.fits in2=B.csv ifmt2=csv icmd2='addcol MAG \"25 - 2.5 * log10(FLUX)\"' in3=C.vot out=combined_mag_calc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '2.5' '*' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG 25 - 2.5 * log10(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '2.5' '*' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "From `test.fits`, keep only the columns from `COL_A` to `COL_F`.",
        "response": "stilts tpipe in=test.fits cmd='keepcols COL_A-COL_F' out=test_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Asynchronously submit a query to the ESO TAP_OBS for VIRCAM raw data, and explicitly request job destruction upon successful retrieval.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM raw.vircam WHERE target_name = ''NGC 253''' delete=finished out=vircam_n253.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate tables T1.fits and T2.fits. For T1, keep only the first 50 rows before appending T2.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='head 50' in2=T2.fits out=head_50_plus.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match T1 and T2 using isotropic 4D Cartesian coordinates (X, Y, Z, T) within 2 units.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=4d params=2 values1='X Y Z T' values2='X Y Z T' out=cartesian_4d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine two tables, adding a column 'PAR_VOL' calculated as `parallax * parallax * parallax` in the final output.",
        "response": "stilts tcatn nin=2 in1=C1.fits in2=C2.fits ocmd='addcol PAR_VOL \"pow(parallax, 3)\"' out=parallax_volume.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PAR_VOL pow(parallax, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Join `set1.fits`, `set2.fits`, and `set3.fits`. After joining, add a column `RAND_ID` with a random number for each row.",
        "response": "stilts tcat in=\"set1.fits set2.fits set3.fits\" ocmd='addcol RAND_ID random($0)' out=randomized_set.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the ESO TAP_OBS service around RA 10, Dec 10, using 0.00001 degrees, and filter to keep rows where 'EXPTIME' > 3600 seconds.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=10.0 lat=10.0 radius=0.00001 ocmd='select \"EXPTIME > 3600\"' out=eso_long_exposures.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '3600'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select EXPTIME > 3600\n\nUsage: select <expr>\n    (Unused arguments: '>' '3600'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine two tables and immediately send the final table to TOPCAT.",
        "response": "stilts tcat in=t1.fits in=t2.fits omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plotting correlated errors (PMRA, PMDEC, CORR) using the crosshair ellipse shape.",
        "response": "stilts plot2plane in=gaia_pm.fits layer=xycorr x=PMRA y=PMDEC xerr=PMRA_ERR yerr=PMDEC_ERR xycorr=PM_CORR ellipse=crosshair_ellipse out=pm_corr_cross.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"PMRA\"\n    (The name \"PMRA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find the coverage MOC (order 12) for a radius calculated as 5 arcminutes divided by 3.",
        "response": "stilts pixfoot in=div_rad.fits ra=RA dec=DEC radius='(5.0 / 3.0) / 60.0' order=12 mocfmt=ascii out=div_am_o12.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query MAST CAOM for a small sample, explicitly enforcing the TAP 1.1 interface version for communication.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT TOP 10 * FROM ivoa.ObsCore' interface=tap1.1 out=caom_tap11.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 ObsCore rows from the European JWST Archive and output the result in FITS-plus format.",
        "response": "stilts tapquery tapurl=https://jwst.esac.esa.int/server/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' ofmt=fits-plus out=jwst_rich_meta.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw lines connecting pairs of positions (link2 layer), coloring the lines based on the auxiliary velocity (V_RAD), and ensuring antialiasing is applied.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 aux=V_RAD out=vrad_colored_links.png gridaa=true",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Join two IPAC tables `tbl1.tbl` and `tbl2.tbl` into a new FITS file `joined.fits`.",
        "response": "stilts tcat ifmt=ipac in=tbl1.tbl in=tbl2.tbl ofmt=fits out=joined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the WiggleZ Final Data Release TAP for sources near RA 150, Dec 1, within 0.1 degree, running synchronously.",
        "response": "stilts tapquery tapurl=http://wiggleztap.asvo.nci.org.au/ncitap//tap adql='SELECT * FROM wigglez_final.sources WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 150.0, 1.0, 0.1))' sync=true out=wigglez_cone.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge tables and write the final output using the IPAC format, ensuring table parameters are included.",
        "response": "stilts tcat in='p1.fits p2.fits' ofmt='ipac(params=true)' out=combined.ipac",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a table of all rows from main_survey.fits (join=all1), indicating the best match (find=best1) from supplemental.fits if one exists within 5 arcseconds.",
        "response": "stilts tmatch2 in1=main_survey.fits in2=supplemental.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' find=best1 join=all1 out=main_with_supplemental.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the ESO TAP Catalogue service for tables related to VISTA Public Surveys and output the row count of matching tables.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT COUNT(*) FROM TAP_SCHEMA.tables WHERE description LIKE ''%VISTA Public Survey%''' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine T1 and T2. T1 is remote (URL); T2 is piped via standard input (VOTable).",
        "response": "cat stream.vot | stilts tcatn nin=2 in1=http://remote.org/cat.fits in2=- ifmt2=votable out=remote_piped.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a JSON MOC from a list of circles with 10 arcsecond radii.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA,DEC,10.0/3600.0)' mocfmt=json out=target_circles.moc.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T2 has an extra header parameter 'EPOCH' (string). Include this epoch as a scalar column in T2 before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=exact values1=ID values2=ID values3=ID in1=T_REF.fits in2=T2.fits icmd2='addcol EPOCH_STR param$EPOCH' in3=T3.fits out=param_to_col_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert my table to a CSV file where the delimiter is a semicolon.",
        "response": "stilts tcopy in=data.fits ofmt='csv(delimiter=;)' out=data.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find objects around RA 2h 30m 0s, Dec 45d 0m 0s. Convert these coordinates to degrees, and search within a 0.05 degree cone.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon='hmsToDegrees(2.5, 0, 0)' lat=45.0 radius=0.05 out=hms_0p05deg.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(2.5, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Run a synchronous query to MAST Gaia DR3 for the brightest 50 stars (G < 15) and save the result as a FITS file.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT TOP 50 * FROM gaiadr3.gaia_source WHERE phot_g_mean_mag < 15' sync=true ofmt=fits out=mast_bright.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 190.052 and latitude -33.5352. Please use a search radius of 0.246 degrees. Save the results to a fits file called query_results_47.fits. The coordinates are in the fk4 system.",
        "response": "stilts cone servicetype=sia2 serviceurl=http://irsa.ipac.caltech.edu/sia lon=190.052 lat=-33.5352 radius=0.246 skysys=fk4 omode=out ofmt=fits out=query_results_47.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Remove the parameter 'OBS_END_TIME' and set a new parameter 'DURATION' equal to 10.0 seconds.",
        "response": "stilts tpipe in=meta.fits cmd='clearparams OBS_END_TIME' cmd='setparam DURATION 10.0' out=new_meta.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plotting X and Y columns, ensuring the plot has a 1:1 aspect ratio.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y aspect=1 out=isotropic_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Copy a table from a strange attractor simulation (:attractor:1e4,henon) and save it as a CSV.",
        "response": "stilts tcopy in=:attractor:1e4,henon out=henon_data.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create an order 8 MOC for circles with radius 5 arcseconds, writing the output to standard output as JSON.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 5.0 / 3600.0)' order=8 mocfmt=json out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Count the total number of columns available in the PADC Maser TAP server's schema table, running synchronously.",
        "response": "stilts tapquery tapurl=http://voparis-tap-maser.obspm.fr/tap adql='SELECT COUNT(*) FROM TAP_SCHEMA.columns' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XYZ' containing the quadrature sum of X_ERR, Y_ERR, and Z_ERR.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XYZ \"hypot(X_ERR, Y_ERR, Z_ERR)\"' out=xyz_quad_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Y_ERR,' 'Z_ERR)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XYZ hypot(X_ERR, Y_ERR, Z_ERR)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_ERR,' 'Z_ERR)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Count the number of core entries available in the CDPP EPN-TAP server.",
        "response": "stilts tapquery tapurl=http://cdpp-epntap.irap.omp.eu:80/tap adql='SELECT COUNT(*) FROM epn_core.epn_core' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot errors using skyellipse layer, setting the ellipse shape to a filled triangle.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra=A rb=B posang=P ellipse=filled_triangle out=filled_triangle_errors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot the mean of multiple spectra, coloring the mean line red and making it thick.",
        "response": "stilts plot2plane in=spectra.fits layer=statline xs=WAVE ys=FLUX_ARRAY ycombine=mean color=red thick=4 out=thick_mean_line.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVE\"\n    (The name \"WAVE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a circle MOC where the radius is calculated as $10$ mas $\times \text{sqrt}(\text{S/N})$ ratio.",
        "response": "stilts mocshape in=snr.fits shape=circle coords='array(RA, DEC, (10.0 * sqrt(SN_RATIO)) / 3600000.0)' out=snr_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the proper motion vector is always physically defined (i.e., non-null).",
        "response": "stilts tpipe in=data.fits cmd='assert \"!NULL_PMRA && !NULL_PMDEC\"' out=pm_non_null.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert !NULL_PMRA && !NULL_PMDEC\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "How to use `tcat` to combine `one.fits` and `two.fits` into a single file and ensure the output format is `colfits`?",
        "response": "stilts tcat in=one.fits in=two.fits ofmt=colfits-plus out=combined.colfits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, and immediately send the result to TOPCAT for visualization without saving an intermediate file.",
        "response": "stilts tcat in='v1.fits v2.fits' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Find the statistical distribution of the exposure time (`T_EXPTIME`) for a sample of MAST CAOM ObsCore observations.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT T_EXPTIME FROM ivoa.ObsCore WHERE T_EXPTIME IS NOT NULL' maxrec=1000 omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve ULLYSES HLSP observations and calculate the checksum of the entire ObsCore table.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT * FROM ivoa.ObsCore WHERE obs_collection = ''ULLYSES''' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot density contours using logarithmic scaling, restricting the output coordinate range using densesub=0.01, 0.99 for enhanced contrast.",
        "response": "stilts plot2sky in=dense.fits layer=contour lon=RA lat=DEC scaling=log densesub=0.01,0.99 out=clipped_log_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find all table names in the PADC TAP Server on voparis-tap-rr.obspm.fr, outputting the result in ECSV format.",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT table_name FROM TAP_SCHEMA.tables' ofmt=ecsv out=padc_rr_tables.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw filled triangles defined by three coordinate pairs, using the poly4 layer.",
        "response": "stilts plot2plane in=tris.fits layer=poly4 x1=X1 y1=Y1 x2=X2 y2=Y2 x3=X3 y3=Y3 x4=X1 y4=Y1 polymode=fill out=filled_triangles.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'RA_HMS' converting the RA in degrees to HMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS \"degreesToHms(RA, 2)\"' out=hms_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS degreesToHms(RA, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge a simulated star field (:skysim:1000) with local data.fits. Only keep sources with magnitude G < 18 in the final output.",
        "response": "stilts tcatn nin=2 in1=data.fits in2=:skysim:1000 ocmd='select \"G < 18\"' out=sim_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert a FITS table to VOTable, ensuring that the XML output version is **1.3**.",
        "response": "stilts tcopy in=input.fits ofmt='votable(version=V13)' out=v13_strict.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch T1, T2, T3, T4 (group mode). Filter the final result to keep only groups where T1, T2, T3, AND T4 are all present.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID in1=T1.fits join1=match in2=T2.fits join2=match in3=T3.fits join3=match in4=T4.fits join4=match out=full_overlap_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a PDS4 planetary data XML file, explicitly focusing on observational files only.",
        "response": "stilts tcopy in=pds_mission.xml ifmt='pds4(observational=true)' out=obs_pds4.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Can `mocshape` handle non-ICRS coordinates in STC-S strings?",
        "response": "The documentation notes that for STC-S, `<frame>`, `<refpos>` and `<flavor>` metadata are ignored. This implies that all coordinates are treated as ICRS degrees, so you may need to preprocess them into ICRS first.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Join T1.fits and T2.fits using a full outer join (1or2). Match on 3D Cartesian coordinates (X, Y, Z) within 5 units and ensure columns use numerical suffixes.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=3d params=5 values1='X Y Z' values2='X Y Z' join=1or2 fixcols=dups out=full_outer_3d_suffixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot markers, setting the output format to GIF and directing output to standard output.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC ofmt=gif out=-",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine a FITS table with a remote, gzipped VOTable file.",
        "response": "stilts tcatn nin=2 in1=local.fits in2=http://archive.org/data.vot.gz out=remote_gzipped.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the AISASCR VO Services for table column metadata and output the result in VOTable format using the BINARY serialization.",
        "response": "stilts tapquery tapurl=http://vos2.asu.cas.cz/tap adql='SELECT * FROM TAP_SCHEMA.columns' ofmt='votable(format=BINARY)' out=aiascr_binary_meta.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine a FITS table with a remote VOTable. Rename the combined table to 'Remote_Local_Join'.",
        "response": "stilts tcatn nin=2 in1=local.fits in2=http://remote.org/remote.vot ocmd='tablename Remote_Local_Join' out=remote_local.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query SIMBAD TAP for objects around the North Ecliptic Pole (Lon=90, Lat=66.56) within 0.1 degrees.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=90.0 lat=66.56 radius=0.1 skysys=ecliptic out=nep_simbad.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot elliptical regions defined by MAJ, MIN axes and PA, coloring them based on the aux map 'cubehelix'.",
        "response": "stilts plot2plane in=shapes.fits layer=xyellipse x=X y=Y ra=MAJ rb=MIN posang=PA shading=aux aux=COLOR_CODE auxmap=cubehelix out=colored_ellipses.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate tables, adding a column 'LOG_TIME' calculated using the natural logarithm of a 'TIME' column.",
        "response": "stilts tcat in='t1.fits t2.fits' ocmd='addcol LOG_TIME ln(TIME)' out=natural_log_time.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Upload a local FITS file 'source_list.fits' with ID, RA, DEC columns to ESA Gaia and join against gaiadr3.gaia_source, selecting only columns from the Gaia table.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT g.* FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.mylist AS u ON g.source_id = u.source_id' nupload=1 upload1=source_list.fits upname1=mylist out=gaia_join_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a MOC (order 14) from UNIQ identifiers, running a pipeline to exclude all but the necessary column first.",
        "response": "stilts mocshape in=data.fits icmd='keepcols UNIQ_VAL' shape=uniq coords=UNIQ_VAL order=14 out=filtered_uniq.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Group match four tables (D1-D4). Output should only contain the columns from D1 and D4 (all D1/D4 columns suffixed '_1' and '_4').",
        "response": "stilts tmatchn nin=4 multimode=group matcher=sky params=1 in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits fixcols=all suffix1=_1 suffix4=_4 ocmd='keepcols \"*_1 *_4\"' values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' out=D1D4_subset_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find the IDs, RA, and DEC for all sources in the Subaru/XMM-Newton Deep Survey (SXDS) catalogue that are brighter than 24th magnitude in the R-band.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/sxds_v1 adql='SELECT ID, RA, DEC FROM sxds.point_source WHERE R_MAG < 24.0' out=sxds_bright.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch three FITS files, `cat_A.fits`, `cat_B.fits`, and `cat_C.fits`, on sky position with a 3 arcsecond radius. Find groups of objects that are linked across any of the tables.",
        "response": "stilts tmatchn nin=3 in1=cat_A.fits in2=cat_B.fits in3=cat_C.fits multimode=group matcher=sky params=3 values1='RA DEC' values2='RA DEC' values3='RA DEC' out=tri-survey_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the Subaru HDS Spectrum data service, requiring explicit authentication to access the data.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/hds/ adql='SELECT TOP 10 * FROM hds.spectrum' auth=true out=hds_auth.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the APPLAUSE plate archive for the top 10 plate IDs taken after MJD 50000, and discard the results, only checking if the query executes.",
        "response": "stilts tapquery tapurl=https://www.plate-archive.org/tap adql='SELECT TOP 10 plate_id FROM apl.plate_meta WHERE t_min > 50000.0' omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a HEALPix map (healpix layer) and degrade its resolution by a factor of 16 (degrade=4), calculating the median value (combine=median).",
        "response": "stilts plot2sky in=HPX_MAP.fits layer=healpix value=VALUE degrade=4 combine=median out=hpx_degrade4_median.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Filter the input catalog to keep only rows where magnitude G_MAG is brighter than 18, then generate the point MOC.",
        "response": "stilts pixfoot in=gaia.fits icmd='select \"G_MAG < 18\"' ra=RA dec=DEC out=bright_gaia.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G_MAG < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the fractional error (FLUX_ERR/FLUX) is never greater than 0.2.",
        "response": "stilts tpipe in=data.fits cmd='assert \"FLUX_ERR / FLUX <= 0.2\"' out=fractional_err_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX' '<=' '0.2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX_ERR / FLUX <= 0.2\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'FLUX' '<=' '0.2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need to query the ESA Integral Science Archive TAP around RA 300, Dec 10 (radius 0.1 deg), and only keep columns where the value of column 'QUALITY_FLAG' is 0.",
        "response": "stilts cone serviceurl=https://isla.esac.esa.int/tap/tap lon=300.0 lat=10.0 radius=0.1 ocmd='select \"QUALITY_FLAG == 0\"' out=integral_clean.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select QUALITY_FLAG == 0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the CSIRO Parkes Pulsar Data Archive for 100 pulsars with period greater than 1.0 second.",
        "response": "stilts tapquery tapurl=https://data.csiro.au/psrdavo/tap adql='SELECT * FROM PSRD.cat WHERE period > 1.0' maxrec=100 out=parkes_long_period.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'Z_COMOVING_ABS_DIST_3' converting Z to absolute magnitude (M_ABS) via angular diameter distance.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol ABS_MAG_ANG \"MAG_V - distanceToModulus(angularDiameterDistance(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC)\"' out=galaxies_abs_mag_angular.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'distanceToModulus(angularDiameterDistance(Z,' '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ABS_MAG_ANG MAG_V - distanceToModulus(angularDiameterDistance(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'distanceToModulus(angularDiameterDistance(Z,' '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you match `sources.fits` against `detections.fits` and send the results directly to TOPCAT for me to inspect? Use a 3 arcsecond radius.",
        "response": "stilts tmatch2 in1=sources.fits in2=detections.fits matcher=sky params=3 values1='RA DEC' values2='RA DEC' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate `bright_stars.vot` and `faint_stars.fits`, then sort the final combined table by magnitude.",
        "response": "stilts tcatn nin=2 in1=bright_stars.vot in2=faint_stars.fits ocmd='sort V_MAG' out=sorted_stars.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate tables, restricting the output to only the last 100 rows of the combined dataset.",
        "response": "stilts tcat in='large*.fits' ocmd='tail 100' out=last100_result.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Count the number of non-null parallax measurements in the ARI Gaia DR3 catalogue.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT COUNT(parallax) FROM gaiadr3.gaia_source' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate five ASCII files into one single output file, adding a sequence column named 'Part'.",
        "response": "stilts tcatn nin=5 ifmt1=ascii in1=p1.txt in2=p2.txt in3=p3.txt in4=p4.txt in5=p5.txt seqcol=Part out=five_part_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the ESO TAP_OBS service for VIRCAM raw data, and locally filter the results to keep only rows where the detector integration time (DIT) is exactly 10.0 seconds.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM raw.vircam' ocmd='select \"dit == 10.0\"' out=vircam_10s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select dit == 10.0\n\nUsage: select <expr>\n    (Unused arguments: '==' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "I have a plain text file. How can I see what `tcopy` makes of it?",
        "response": "stilts tcopy ifmt=ascii in=data.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve J-PLUS DR2 Catalogue entries, and locally remove the redshift column (`Z_MEDIAN`) if it exists.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jplus-dr2 adql='SELECT TOP 10 * FROM jplus_dr2.master' ocmd='delcols Z_MEDIAN' out=jplus_no_z.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need the coverage map for all objects with non-null Proper Motion in both RA and DEC.",
        "response": "stilts pixfoot in=pm_cat.fits icmd='select \"!NULL_PMRA && !NULL_PMDEC\"' ra=RA dec=DEC out=pm_non_null.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_PMRA && !NULL_PMDEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate an MOC from a simulated sky catalog of 10,000 stars.",
        "response": "stilts pixfoot in=:skysim:10000 ra=ra dec=dec out=simulated_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match two tables based on Cartesian 2D coordinates (X, Y) where error is based on quadrature summation of ERR_X and ERR_Y.",
        "response": "stilts tmatch2 in1=D1.fits in2=D2.fits matcher=2d_err_q params=1 values1='X Y ERR' values2='X Y ERR' out=cartesian_quad_err.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a plot centered on the Virgo Cluster (RA 187.7, DEC 12.4, radius 5 degrees) using Plate Carr\u00e9e projection (CAR), showing Equatorial grid lines in sexagesimal format.",
        "response": "stilts plot2sky in=targets.fits clon=187.7 clat=12.4 radius=5.0 projection=car layer=mark lon=RA dec=DEC grid=true sex=true out=virgo_car.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lat: null value not allowed\nUsage: lat=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'ERROR_RATIO' calculated as the ratio of 'ERR_A' to 'ERR_B'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_RATIO \"ERR_A / ERR_B\"' out=error_ratio.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'ERR_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_RATIO ERR_A / ERR_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'ERR_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Output the final table to a PostgreSQL database table named 'processed_temp', dropping the existing table first.",
        "response": "stilts tpipe in=final.fits omode=tosql protocol=postgresql host=db_host db=mydb dbtable=processed_temp write=dropcreate user=dbuser",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Check the whole table for constant-valued columns and remove them, promoting their values to parameters.",
        "response": "stilts tpipe in=meta.fits cmd=constcol out=meta_collapsed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine two ASCII files where fields are separated by a tab character.",
        "response": "stilts tcat ifmt='csv(delimiter=tab)' in='tab1.txt tab2.txt' out=tab_delimited_output.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Join two event lists (e1.fits, e2.fits) on time (MJD) within 0.0001 days. Use parallel execution for speed.",
        "response": "stilts tmatch2 in1=e1.fits in2=e2.fits matcher=1d params=0.0001 values1=MJD values2=MJD runner=parallel out=time_coincidence_parallel.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate files listed in `huge_list.txt`, enabling lazy reading and tracking the sequential order of input tables.",
        "response": "stilts tcat in=@huge_list.txt lazy=true seqcol=FileIndex out=lazy_indexed.fits",
        "chat.jar": "fixed",
        "error": "Error: huge_list.txt (No such file or directory)\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot error ellipses using XYERROR layer, but plot them as filled rectangles.",
        "response": "stilts plot2plane in=errors.fits layer=xyerror x=X y=Y xerrhi=XE yerrhi=YE errorbar=filled_rectangle out=filled_error_rect.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Replicate the table rows four times, ensuring row-level concatenation (1, 2, 3, 1, 2, 3...).",
        "response": "stilts tpipe in=data.fits cmd='repeat -row 4' out=data_x4_row.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a 2D grid where each cell color is the maximum 'VALUE' of points falling into it.",
        "response": "stilts plot2plane in=data.fits layer=grid x=X y=Y weight=VALUE combine=max",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Copy a VOTable and output it to standard output as a VOTable with **TABLEDATA** serialization.",
        "response": "stilts tcopy in=input.vot ofmt='votable(format=TABLEDATA)' out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query MAST HSCv3 and assert locally that the table contains at least 10 columns.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 1 * FROM hsc_v3.point' ocmd='assert \"$ncol > 10\"' out=hsc_assert_cols.fits",
        "error": "Error: Unused arguments: '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $ncol > 10\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Create an order 4 MOC, but use a logarithmic scale expression for the radius: log10(DISTANCE) degrees.",
        "response": "stilts pixfoot in=log_dist.fits ra=RA dec=DEC radius='log10(DISTANCE)' order=4 out=log_radius_o4.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 25.0153 and latitude 10.6306. Please use a search radius of 1.421 degrees. Save the results to a votable file called query_results_107.votable. Use verbosity level 2. Don't use compression for the download.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=25.0153 lat=10.6306 radius=1.421 verb=2 compress=false omode=out ofmt=votable out=query_results_107.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find 50 entries in 2MASS (II/246/out) whose ID matches a pattern, filtering the output to keep only ID and Jmag columns.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT TOP 50 ID, Jmag FROM \"II/246/out\" WHERE ID LIKE ''%12345%''' ocmd='keepcols \"ID Jmag\"' out=vizier_2mass_sub.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T2 is a CSV file, T3 is VOTable. Rename T1 columns with suffix '_A', T2 with '_B', T3 with '_C'.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=3 in1=T1.fits in2=T2.csv ifmt2=csv in3=T3.vot fixcols=all suffix1=_A suffix2=_B suffix3=_C values1='RA DEC' values2='RA DEC' values3='RA DEC' out=hetero_suffixed_all.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate two tables, but before joining, convert the 'DEC_RAD' column from radians to degrees in both inputs.",
        "response": "stilts tcat in='r1.fits r2.fits' icmd='replacecol DEC_DEG radiansToDegrees(DEC_RAD)' out=degrees_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a summary report showing the tile count for a MOC generated from sources in a Parquet file.",
        "response": "stilts mocshape in=data.parquet shape=point coords='array(RA, DEC)' mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need a polygon MOC where the input vertices array has a varying length per row.",
        "response": "stilts mocshape in=variable_poly.fits shape=polygon coords='VERTICES_ARRAY' out=variable_polygon_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column 'FLUX_SUM' calculated as the element-wise sum of two array columns, 'FLUX_A' and 'FLUX_B'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_SUM \"add(FLUX_A, FLUX_B)\"' out=array_sum.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_SUM add(FLUX_A, FLUX_B)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Search the European HST Archive TAP at RA 20.0, Dec 0.0, using a radius of 0.005 degrees, and inspect the resulting table metadata only.",
        "response": "stilts cone serviceurl=https://hst.esac.esa.int/tap-server/tap lon=20.0 lat=0.0 radius=0.005 omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the planetary EPN core table at PADC for observations of Venus where the time resolution is greater than 100 seconds.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT * FROM epn_core.epn_core WHERE target_name = ''Venus'' AND time_res > 100' out=venus_slow_obs.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve all rows from the synthetic spectra 'Pollux' service's tap_schema, and explicitly request VQL (VOTable Query Language) for the query.",
        "response": "stilts tapquery tapurl=https://pollux.oreme.org/vo/datalink/speconvol? adql='SELECT * FROM tap_schema.tables' language=VQL out=pollux_vql.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot points using X and Y coordinates, ensuring the aspect ratio is 1:1 (isotropic).",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y aspect=1 out=isotropic_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the GAVO Data Center for 100 rows, requesting the data to be streamed using HTTP compression.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 100 * FROM tap_schema.tables' compress=true out=gavo_stream.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find sources in the European HST Archive TAP around RA 190, Dec 15, using 8 arcseconds.",
        "response": "stilts cone serviceurl=https://hst.esac.esa.int/tap-server/tap lon=190.0 lat=15.0 radius='8.0 / 3600.0' out=hst_8as.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"8.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot markers sized by a column (SIZE_COL), ensuring the size scaling follows the empirical data distribution (sizefunc=histogram).",
        "response": "stilts plot2sky in=data.fits layer=size lon=RA lat=DEC size=SIZE_COL sizefunc=histogram out=histogram_size_scaling.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a string column named 'SOURCE_TYPE' and set its value to 'GALAXY' for all rows.",
        "response": "stilts tpipe in=sources.fits cmd='addcol SOURCE_TYPE \"GALAXY\"' out=classified_sources.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find all objects in `main_cat.fits` that have a counterpart within 2 arcsec in `cat_A.fits` AND `cat_B.fits` AND `cat_C.fits`.",
        "response": "stilts tmatchn nin=4 multimode=pairs iref=1 in1=main_cat.fits in2=cat_A.fits in3=cat_B.fits in4=cat_C.fits matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' values4='ra dec' join1=match join2=match join3=match join4=match out=fully_matched_main.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot error bars in the X direction only, where the error magnitude is 20% of the X value.",
        "response": "stilts plot2plane in=data.fits layer=xyerror x=X y=Y xerrhi='0.2*X' yerrhi=0 out=relative_x_err.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "What does `multimode=group` mean for a 3-table match?",
        "response": "`multimode=group` finds groups where each member is linked to at least one other member by a pairwise match. For three tables A, B, and C, a group could be (a1, b1), or (b2, c2), or (a3, b3, c3), or even (a4, b4) and (b4, c4) which would group a4, b4, and c4 together, even if a4 and c4 do not directly match [1, 4].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "How can I get a count of all objects in the `twomass.data` table from the GAVO TAP service?",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT COUNT(*) FROM twomass.data' omode=out ofmt=text",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve all rows from a small local table 'my_targets.csv' and upload it to the ESA Euclid Archive (EAS) to crossmatch against the Euclid ObsCore table within 5 arcseconds.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT t.ra, t.dec, u.target_name FROM ivoa.ObsCore AS t JOIN TAP_UPLOAD.targets AS u ON 1=CONTAINS(POINT(''ICRS'', t.s_ra, t.s_dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.0013889))' nupload=1 upload1=my_targets.csv upname1=targets ofmt=fits out=euclid_xmatch.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge catalog.fits and errors.fits. The errors table has a 'SIGMA' column; convert it from mas to arcseconds before joining.",
        "response": "stilts tcatn nin=2 in1=catalog.fits in2=errors.fits icmd2='replacecol SIGMA_ARCSEC \"SIGMA_MAS / 1000.0\"' out=mas_to_arcsec_merge.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol SIGMA_ARCSEC SIGMA_MAS / 1000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "I have an ASCII file with space-separated values. Can `tcopy` convert it to FITS?",
        "response": "stilts tcopy ifmt=ascii in=space_separated.txt ofmt=fits out=table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine three files. Calculate the checksum of the resulting combined data structure.",
        "response": "stilts tcatn nin=3 in1=D1.fits in2=D2.fits in3=D3.fits omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Ensure that the table is read fully into memory, even if it could be streamed.",
        "response": "stilts tpipe in=huge_data.fits cmd=cache out=force_cached.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a MOC from UNIQ IDs and enforce the use of the `mocimpl=bits` implementation.",
        "response": "stilts mocshape in=hpx_in.fits shape=uniq coords=UNIQ_ID mocimpl=bits out=bits_impl_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine ECSV files, and then shuffle the rows of the final output table randomly.",
        "response": "stilts tcat ifmt=ecsv in='e1.ecsv e2.ecsv' ocmd=shuffle out=shuffled_ecsv.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot markers using the Supergalactic system, converting input coordinates (RA/DEC).",
        "response": "stilts plot2sky in=data.fits viewsys=supergalactic datasys=equatorial layer=mark lon=RA lat=DEC out=sgl_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Remove all rows that have duplicate values in the 'OBS_ID' column (assuming they are adjacent or presorted).",
        "response": "stilts tpipe in=obs.fits cmd='sort OBS_ID' cmd='uniq OBS_ID' out=unique_obs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw lines (link2 layer) connecting pairs of positions (L1, B1) and (L2, B2) in Galactic coordinates, colored flat blue.",
        "response": "stilts plot2sky in=pairs.fits viewsys=galactic layer=link2 lon1=L1 lat1=B1 lon2=L2 lat2=B2 shading=flat color=blue out=gal_links_flat.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L1\"\n    (The name \"L1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate the first four data segments (D1, D2, D3, D4.fits). In D3, select only rows where FLAG is 1.",
        "response": "stilts tcatn nin=4 in1=D1.fits in2=D2.fits in3=D3.fits icmd3='select FLAG==1' in4=D4.fits out=filtered_batch.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at http://archive.eso.org/ssap? I'm looking for objects around longitude 325.068 and latitude 71.7031. Please use a search radius of 0.5821 degrees. Save the results to a ascii file called query_results_71.ascii. Don't use compression for the download.",
        "response": "stilts cone servicetype=ssa serviceurl=http://archive.eso.org/ssap lon=325.068 lat=71.7031 radius=0.5821 compress=false omode=out ofmt=ascii out=query_results_71.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine tables, and add a column that shows the unique part of each input filename.",
        "response": "stilts tcatn nin=2 in1=data_field_A.fits in2=data_field_B.fits uloccol=FieldID out=combined_uloc.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate three files. Add a location column named 'SourceFile' detailing the full path/URL of each original file.",
        "response": "stilts tcatn nin=3 in1=data/A.fits in2=http://remote/B.fits in3=C.fits loccol=SourceFile out=full_location_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read data from a JDBC query using the scheme specification and save the output as a Tab-Separated Table (TST) file.",
        "response": "stilts tcopy in=':jdbc:sqlite:///db.sqlite#SELECT * FROM sources' ofmt=tst out=sqlite_dump.tst",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Pair match T_MAIN (ref) against T_SUPP1 and T_SUPP2. T_SUPP1 has coordinates in radians; convert to degrees before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T_MAIN.fits in2=T_SUPP1.fits icmd2='replacecol RA radiansToDegrees(RA); replacecol DEC radiansToDegrees(DEC)' in3=T_SUPP2.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=rad_converted_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match four catalogs using anisotropic cuboid matching (3d_cuboid) with unequal tolerances 1, 5, 10 units on X, Y, Z.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=3d_cuboid params='1 5 10' values1='X Y Z' values2='X Y Z' values3='X Y Z' values4='X Y Z' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits out=aniso_cuboid_3d.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find the top 50 sources in the PanSTARRS DR2 catalog at MAST that have valid photometric quality flags (quality_flag > 0) and output the raw table metadata.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT TOP 50 * FROM dbo.detection_object WHERE quality_flag > 0' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy FITS data to a VOTable, ensuring the output uses UTF-16 XML character encoding.",
        "response": "stilts tcopy in=unicode.fits ofmt='votable(encoding=UTF-16)' out=utf16_data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot only the last 500 rows of a table.",
        "response": "stilts plot2plane in=large_data.fits icmd='tail 500' layer=mark x=X y=Y out=tail_500_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Crossmatch three tables based on magnitude + redshift (1d+1d). Tolerances 0.2 mag and 0.005 redshift.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d+1d params='0.2 0.005' values1='MAG Z' values2='MAG Z' values3='MAG Z' in1=P1.fits in2=P2.fits in3=P3.fits out=mag_z_1d_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate tables A and B. In B, replace any missing string values in 'TARGET_NAME' with the placeholder 'UNKNOWN'.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits icmd2='replaceval null \"UNKNOWN\" TARGET_NAME' out=strings_filled.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find the coverage for objects where the radius is given by 0.001 degrees times the SQUARE of the 'ERROR_FACTOR' column.",
        "response": "stilts pixfoot in=error_scaled.fits ra=RA dec=DEC radius='0.001 * square(ERROR_FACTOR)' out=scaled_error_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine four survey parts (S1-S4). Label the original file location using the unique filename part (S1, S2, etc.) in a column named 'SurveyID'.",
        "response": "stilts tcatn nin=4 in1=S1.fits in2=S2.fits in3=S3.fits in4=S4.fits uloccol=SurveyID out=provenance_uloc.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the ESO TAP_OBS for VIRCAM raw data and locally perform an operation to calculate the square root of the 'dit' exposure time.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 dit FROM raw.vircam' ocmd='addcol SQRT_DIT sqrt(dit)' out=vircam_sqrt.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'MAG_V_AB_OLD' converting Johnson V magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_V_AB_OLD \"MAG_V + JOHNSON_AB_V\"' out=v_ab_old_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_V_AB_OLD MAG_V + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a string column that contains the absolute value of 'FLUX', rounded to 2 decimal places.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_STR \"formatDecimal(abs(FLUX), 2)\"' out=abs_flux_str.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_STR formatDecimal(abs(FLUX), 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an order 13 MOC for objects within a radius equal to the square root of a flux column ('FLUX').",
        "response": "stilts mocshape in=flux_data.fits shape=circle coords='array(RA, DEC, sqrt(FLUX))' order=13 out=sqrt_flux_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot markers colored by density, using the Pweighted shading mode and the 'magma' color map.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=pweighted weight=1.0 pmap=magma out=pweighted_density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find sources in Gaia TAP near RA 180, Dec 180, with radius 5 mas, filtering only sources brighter than magnitude 10.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=180.0 lat=180.0 radius='5.0 / 3600000.0' ocmd='select PHOT_G_MEAN_MAG < 10.0' out=gaia_bright_5mas.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "My table has four corner coordinates for each entry: RA1, DEC1, RA2, DEC2, RA3, DEC3, RA4, DEC4. How do I make a MOC from these polygons?",
        "response": "stilts mocshape in=detector_footprints.fits shape=polygon coords='array(RA1,DEC1,RA2,DEC2,RA3,DEC3,RA4,DEC4)' out=detector_mosaic.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column 'MAG_R_AB' converting Johnson R magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_R_AB \"MAG_R + JOHNSON_AB_R\"' out=r_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_R_AB MAG_R + JOHNSON_AB_R\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (T1 ref). Use parallel execution and output the result to FITS-plus format.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=3 in1=T1.fits in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' runner=parallel ofmt=fits-plus out=parallel_fits_plus.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. Output only rows that are in T1 or T2, but exclude rows matched with T3.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits in2=T2.fits join2=always in3=T3.fits join3=nomatch values1='RA DEC' values2='RA DEC' values3='RA DEC' out=t1_or_t2_not_t3.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match three tables on 2D coordinates (X, Y) where the match radius is defined by the larger of the two inputs' error columns (2d_err).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=2d_err params=1 values1='X Y ERR' values2='X Y ERR' values3='X Y ERR' in1=A.fits in2=B.fits in3=C.fits out=max_error_2d_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need the footprint of `my_data.fits`, but only keep every 15th row.",
        "response": "stilts pixfoot in=my_data.fits icmd='every 15' out=data_every15.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine tables, enforcing that the column 'ERROR' has only non-negative values, replacing negatives with 0.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='replacecol ERROR \"max(ERROR, 0.0)\"' out=non_negative_errors_b.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol ERROR max(ERROR, 0.0)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '0.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Find sources in the GAVO TAP near Galactic L=150, B=10, with a radius defined by $\\sqrt{0.01^2}$ degrees.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=150.0 lat=10.0 radius='sqrt(0.01 * 0.01)' skysys=galactic out=gavo_sqrt.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"sqrt(0.01 * 0.01)\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Copy a FITS table to FITS, ensuring that **no Primary HDU** is written, which is useful when appending to an existing FITS chain.",
        "response": "stilts tcopy in=input.fits ofmt='fits(primary=none)' out=extension_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Count the total number of resource records available in the MAST STScI Registry.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/registry adql='SELECT COUNT(*) FROM reg.resource' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run an SSA query against the ESO TAP_OBS service around RA 10.5, Dec 1.5, using a cone defined by 12 arcseconds.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=10.5 lat=1.5 radius='12.0 / 3600.0' servicetype=ssa out=ssa_12as.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"12.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Group match four tables (C1-C4) using exact match on 'UID'. Add a column 'IS_COMPLETE' that is true if GroupSize is exactly 4.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=exact values1=UID values2=UID values3=UID values4=UID in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits ocmd='addcol IS_COMPLETE GroupSize==4' out=complete_group_flag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Run a synchronous count query against the MAST MissionMAST service for HST summary records.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/missionmast/ adql='SELECT COUNT(*) FROM hst.summary' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC at the lowest possible HEALPix order (order 1) for a simple list of positions.",
        "response": "stilts pixfoot in=simple_points.fits ra=RA dec=DEC radius=0 order=1 out=coarse_o1.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Synchronously query the PADC helio server and retrieve only the row count.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT COUNT(*) FROM some_helio_table' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query for all Hubble observations from the GAVO obscore table.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM ivoa.obscore WHERE facility_name = ''HST''' out=hst_obs.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a 20-row test table and display it in `text` format.",
        "response": "stilts tcopy in=:test:20 ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits (sky 2 arcsec). Output columns from A suffixed '_A'. Output columns from B suffixed '_B'. Discard the intermediate score column.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' fixcols=all suffix1=_A suffix2=_B scorecol=null out=no_score_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find sources around RA=5, Dec=5, within a search cone corresponding to 0.005 degrees, and apply a final filter to add a calculated 'COLOR' column.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=5.0 lat=5.0 radius=0.005 ocmd='addcol COLOR \"MAG_A - MAG_B\"' out=gavo_with_color.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COLOR MAG_A - MAG_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create a plot with a serif font for the title and labels.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y title='My Plot' fontstyle=serif",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the ESO TAP_OBS for all observation coordinates, and explicitly request that the query language used is 'ADQL' (default) running synchronously.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT s_ra, s_dec FROM ivoa.ObsCore' language=ADQL sync=true out=eso_sync_coords.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I'm matching `a.fits` and `b.fits`. I want an output table that contains every row from both original tables, with matched rows joined and unmatched rows having nulls for the other table's columns.",
        "response": "stilts tmatch2 in1=a.fits in2=b.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' join=1or2 out=full_outer_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine tables T1 and T2. T2 contains J2000 coordinates (RA, DEC) in radians. Convert them to degrees in T2 and keep only the degree columns before joining T1.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='replacecol RA_DEG \"radiansToDegrees(RA)\"; replacecol DEC_DEG \"radiansToDegrees(DEC)\"; keepcols \"RA_DEG DEC_DEG\"' out=rad_to_deg_prejoin.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_DEG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols RA_DEG DEC_DEG\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'DEC_DEG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a plot where markers are sized by the 'LUMINOSITY' column and shaded flat blue.",
        "response": "stilts plot2plane in=sources.fits layer=size x=DISTANCE y=VELOCITY size=LUMINOSITY shading=flat color=blue autoscale=true out=sized_markers.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"DISTANCE\"\n    (The name \"DISTANCE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot points, coloring by density using the logarithmic function, clipping the range to 0.1, 0.9.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=log densesub=0.1,0.9 out=log_clip_density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query for data at RA 120, Dec 45, limiting the output to columns with UCD starting with 'phot.' and only outputting the column definitions (omode=meta).",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=120.0 lat=45.0 radius=0.01 ocmd='keepcols \"ucd$phot_*\"' omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Sort a table by 'Z' ascending, then by 'MAG' descending, and output the first 50 results as a LaTeX table.",
        "response": "stilts tpipe in=data.fits cmd='sort \"Z -down MAG\"' cmd='head \"50\"' ofmt=latex out=top_z_mag.tex",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-down' 'MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort Z -down MAG\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '-down' 'MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw filled quadrilaterals defined by four corner coordinate columns.",
        "response": "stilts plot2plane in=ccd_corners.fits layer=poly4 x1=X1 y1=Y1 x2=X2 y2=Y2 x3=X3 y3=Y3 x4=X4 y4=Y4 polymode=fill",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge data files F1 and F2. F2 contains magnitude errors (MAG_ERR) in percent. Convert these to linear magnitude errors before combining.",
        "response": "stilts tcatn nin=2 in1=F1.fits in2=F2.fits icmd2='replacecol MAG_ERR \"MAG_ERR / 100.0\"' out=linear_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_ERR MAG_ERR / 100.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read the table extension identified by the name 'GALAXY_CAT' from a multi-extension FITS file 'survey.fits'.",
        "response": "stilts tcopy in=survey.fits#GALAXY_CAT out=galaxy_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "My coordinates are `ALPHA` and `DELTA`. Create a MOC for them from `star_catalog.fits`.",
        "response": "stilts pixfoot in=star_catalog.fits ra=ALPHA dec=DELTA out=alpha_delta_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Convert an IPAC table to a LaTeX file.",
        "response": "stilts tcopy in=ipac.tbl ifmt=ipac ofmt=latex out=ipac_report.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate two tables. Output column 'FLUX_MJD' is calculated as FLUX * MJD post-combination.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits ocmd='addcol FLUX_MJD \"FLUX * MJD\"' out=multiplied_column.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' 'MJD'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_MJD FLUX * MJD\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'MJD'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create an MOC for $1 / 360$ degree radius, ensuring the column names in the output table are clean (fixcolnames applied internally).",
        "response": "stilts pixfoot in=clean_names.fits icmd='fixcolnames' ra=RA dec=DEC radius='1.0 / 360.0' out=clean_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC from my `astropy_table.fits` file. The radius of each circle should be 1/parallax.",
        "response": "stilts pixfoot in=astropy_table.fits radius='1.0/parallax' out=parallax_inverted_radius.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Join T_A and T_B exactly on 'SOURCE_ID'. T_A is FITS, T_B is Parquet. T_A columns suffixed '_A', T_B columns suffixed '_B'.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.parquet ifmt2=parquet matcher=exact values1=SOURCE_ID values2=SOURCE_ID fixcols=all suffix1=_A suffix2=_B out=parquet_exact_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Copy an ASCII file 'numeric.txt' to a FITS file, explicitly setting the input format to ignore short integers during type detection.",
        "response": "stilts tcopy in=numeric.txt ifmt='ascii(notypes=short)' out=long_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find sources in Gaia TAP near RA 200, Dec 10, with a radius of $1$ arcminute, and output directly to TOPCAT for visualization.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=200.0 lat=10.0 radius='1.0 / 60.0' omode=topcat",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I want to plot vectors showing proper motion. My columns are RA, DEC, PMRA, and PMDEC.",
        "response": "stilts plot2plane in=propermotion.fits layer=xyvector x=RA y=DEC xdelta=PMRA ydelta=PMDEC autoscale=true",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Run a cross-catalogue search (Cone) on VizieR TAP around RA 100, Dec 10, with a search radius of 5 arcminutes, ensuring the coordinates are treated as Equatorial (ICRS).",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=100.0 lat=10.0 radius='5.0 / 60.0' skysys=icrs out=vizier_icrs.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I have two tables of events, `events_a.fits` and `events_b.fits`. Match them if their `TIME` is within 10 seconds and their `ENERGY` is within 50 keV.",
        "response": "stilts tmatch2 in1=events_a.fits in2=events_b.fits matcher=2d_anisotropic params='10 50' values1='TIME ENERGY' values2='TIME ENERGY' out=time_energy_coincidence.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Convert a FITS file to Parquet, explicitly setting the **dictionary encoding to false**.",
        "response": "stilts tcopy in=input.fits ofmt='parquet(usedict=false)' out=no_dict.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot density contours on a Plate Carr\u00e9e plot (CAR0), coloring the contours blue.",
        "response": "stilts plot2sky in=data.fits projection=car0 layer=contour lon=RA lat=DEC color=blue out=car0_blue_contours.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the GAVO Data Center around RA 5, Dec 5, using a radius of $15 / 3600$ degrees, and retain only columns that are numeric and non-array valued.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=5.0 lat=5.0 radius='15.0 / 3600.0' ocmd='keepcols \"!datatype$string ucd$meta.id\"' out=gavo_numeric_only.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"15.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read a CSV file using a pipe delimiter, delete the 'FLAG' column, and output the result to a VOTable using BINARY2 format.",
        "response": "stilts tpipe in=obs.csv ifmt='csv(delimiter=|)' cmd='delcols FLAG' ofmt='votable(format=BINARY2)' out=clean_obs.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a CSV file to HTML output, setting the maximum cell width to 500 characters.",
        "response": "stilts tcopy in=data.csv ifmt=csv ofmt='html(maxCell=500)' out=html_limited.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the APPLAUSE plate archive and post-process the table to remove the column named 'plate_id'.",
        "response": "stilts tapquery tapurl=https://www.plate-archive.org/tap adql='SELECT TOP 50 * FROM apl.plate_meta' ocmd='delcols plate_id' out=applause_filtered.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate data.fits and header.vot. Header.vot contains table parameters; discard the row data from header.vot before merging, keeping only parameters.",
        "response": "stilts tcatn nin=2 in1=data.fits in2=header.vot icmd2='head 0' out=data_with_header.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve all tables from the KSB-ROB TAP service and count the resulting total number of records if concatenated.",
        "response": "stilts tapquery tapurl=http://vo-tap.oma.be/tap adql='SELECT * FROM TAP_SCHEMA.tables' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Search VizieR TAP near 04h 00m 00s, -30d 00m 00s, converting coordinates, with a radius of $0.05$ degrees, and pipe to TOPCAT.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon='hmsToDegrees(4.0, 0, 0)' lat='dmsToDegrees(-30.0, 0, 0)' radius=0.05 omode=topcat",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(4.0, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot sources, setting the grid lines to be fully opaque (gridtrans=0).",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC grid=true gridtrans=0 out=opaque_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 using Cartesian 2D coordinates (X, Y) within a cuboid tolerance of 2 units in X and 5 units in Y.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=2d_cuboid params='2 5' values1='X Y' values2='X Y' values3='X Y' in1=D1.fits in2=D2.fits in3=D3.fits out=aniso_cuboid_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve all table schemas from ARI Gaia, running synchronously, and pipe the output directly to TOPCAT.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT * FROM TAP_SCHEMA.schemas' sync=true omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column containing the velocity (km/s) derived from the redshift (Z) using the speed of light constant (approximate conversion).",
        "response": "stilts tpipe in=data.fits cmd='addcol VELOCITY_KMS \"Z * C_KMS / 1000.0\"' out=vel_kms.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' 'C_KMS' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VELOCITY_KMS Z * C_KMS / 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'C_KMS' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "From my catalog `stars.fits`, I need to select the 10 stars with the largest parallax.",
        "response": "stilts tpipe in=stars.fits cmd='sorthead -down 10 parallax' out=nearest_stars.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a sky density map (level 6), calculating the population standard deviation (stdev_pop) of the 'REDSHIFT' column per pixel.",
        "response": "stilts plot2sky in=galaxies.fits layer=skydensity lon=RA lat=DEC level=6 weight=REDSHIFT combine=stdev_pop out=stdev_pop_redshift.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find spectroscopic records (SSA) at a target location and use a final filter to compute the ratio of two flux columns ('FLUX_A' / 'FLUX_B').",
        "response": "stilts cone serviceurl=http://jvo.nao.ac.jp/skynode/do/tap/akari/spectrum/slitless_mir_spec lon=15.0 lat=-5.0 radius=0.1 servicetype=ssa ocmd='addcol FLUX_RATIO \"FLUX_A / FLUX_B\"' out=flux_ratio_spec.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_RATIO FLUX_A / FLUX_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find rows present in either catA or catB, but NOT in both (symmetric difference), using sky position (3 arcsec).",
        "response": "stilts tmatch2 in1=catA.fits in2=catB.fits matcher=sky params=3 values1='RA DEC' values2='RA DEC' join=1xor2 out=symmetric_diff.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot a histogram where the maximum bar height is exactly 100 units.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE ymax=100 out=ymax_100_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the Subaru HDS Spectrum data service for 10 records and locally remove all columns except RA and DEC.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/hds/ adql='SELECT TOP 10 * FROM hds.spectrum' ocmd='keepcols \"ra dec\"' out=hds_coords_only.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'dec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ra dec\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'dec'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "How to make a plot with a black background?",
        "response": "There is no direct parameter for background color in `plot2plane`. This is typically handled by the viewing or image editing software after the plot is generated with a transparent background (`ofmt=png-transp`).",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine tables and write the result as an IPAC table, ensuring table parameters are included.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=ipac out=ipac_output.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "My tables `cat_left.fits` and `cat_right.fits` have position errors in separate `ra_err` and `dec_err` columns. Can I match them using a 2D error ellipse defined by these errors?",
        "response": "stilts tmatch2 in1=cat_left.fits in2=cat_right.fits matcher=2d_ellipse params=1 values1='RA DEC ra_err dec_err 0' values2='RA DEC ra_err dec_err 0' out=error_ellipse_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "What is the command to create a plot using `storage=persistent` for faster re-plotting?",
        "response": "stilts plot2plane in=large_data.fits layer=mark x=X y=Y storage=persistent",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine two tables, keeping only the rows where the total flux, 'FLUX_TOT', is greater than the average flux of the combined set.",
        "response": "stilts tcatn nin=2 in1=f1.fits in2=f2.fits ocmd='select \"FLUX_TOT > mean(FLUX_TOT)\"' out=above_average_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' 'mean(FLUX_TOT)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX_TOT > mean(FLUX_TOT)\n\nUsage: select <expr>\n    (Unused arguments: '>' 'mean(FLUX_TOT)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch T1 and T2 using 3D Cartesian coordinates (X, Y, Z). After joining, keep only the unmatched rows from T2 (2not1).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=3d params=1 values1='X Y Z' values2='X Y Z' join=2not1 out=T2_anti_join_3d.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Convert a FITS table to ECSV, where the output ECSV file uses **space** rather than comma as the delimiter.",
        "response": "stilts tcopy in=input.fits ofmt='ecsv(delimiter=space)' out=space_delimited.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot a spherical grid (spheregrid) with a radius of 100 Mpc, overlaid on galactic positions (L, B, DIST).",
        "response": "stilts plot2sphere in=gal_cat.fits lon=L lat=B r=DIST layer_m=mark layer_g=spheregrid radius_g=100 out=sphere_grid_100mpc.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L\"\n    (The name \"L\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot the mean of an array column `SPEC_ARRAY` vs wavelength.",
        "response": "stilts plot2plane in=spectra.fits layer=statline xs=param$WAVELENGTHS ys=SPEC_ARRAY xcombine=mean ycombine=mean",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"param\"\n    (The name \"param\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'MAG_K_AB' converting 2MASS K magnitude (Vega) to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_K_AB \"MAG_K + VEGA_AB_K\"' out=k_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_K'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_K_AB MAG_K + VEGA_AB_K\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_K'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve photometry for the F160W filter band from the MAST CANDELS HLSP service.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT * FROM candels.photometry WHERE band = ''F160W''' out=candels_f160w.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'FLUX_CONV' converting flux to luminosity, assuming unit distance of 1 Mpc.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol FLUX_CONV \"fluxToLuminosity(FLUX, 3.086e22)\"' out=luminosities.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3.086e22)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_CONV fluxToLuminosity(FLUX, 3.086e22)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3.086e22)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a VOTable, replace all instances of the text 'quasar' in the 'TYPE' column with 'QSO'.",
        "response": "stilts tpipe in=objects.vot cmd='replaceval \"quasar\" \"QSO\" TYPE' out=qso_renamed.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate two tables and write the final output as a LaTeX table snippet to 'table_snippet.tex'.",
        "response": "stilts tcat in=small1.fits in=small2.fits ofmt=latex out=table_snippet.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot a histogram using the step bar style (barform=steps) and normalizing by the maximum bar height.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE barform=steps normalise=maximum out=max_norm_steps.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot marks at the four corners of a detector defined by coordinate columns, using filled circles.",
        "response": "stilts plot2sky in=detector.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=filled_circle out=filled_mark4.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I have a list of FITS files in a text file called `file_list.txt`. How do I use this list with `tcat` to create `master_catalog.fits`?",
        "response": "stilts tcat in=@file_list.txt out=master_catalog.fits",
        "chat.jar": "fixed",
        "error": "Error: file_list.txt (No such file or directory)\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Add a column containing the angle in radians corresponding to the galactic position angle (POS_ANG_GAL_DEG).",
        "response": "stilts tpipe in=data.fits cmd='addcol POS_ANG_RAD degreesToRadians(POS_ANG_GAL_DEG)' out=pos_ang_rad.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 288.8962 and latitude 70.4928. Please use a search radius of 0.413 degrees. Save the results to a votable file called query_results_162.votable.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=288.8962 lat=70.4928 radius=0.413 omode=out ofmt=votable out=query_results_162.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match two tables exactly on column 'OBSID'. Before matching, filter T2 to ensure OBSID is not null.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='select !NULL_OBSID' matcher=exact values1=OBSID values2=OBSID out=null_filtered_exact.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 162.6285 and latitude -54.0246. Please use a search radius of 1.9711 degrees. Instead of a file, just give me the count. The coordinates are in the fk4 system.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=162.6285 lat=-54.0246 radius=1.9711 skysys=fk4 omode=count",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the PADC TAP Astro server for column data and assert locally that the number of columns is greater than 10.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.columns' ocmd='assert \"$ncol > 10\"' out=padc_assert_cols.vot",
        "error": "Error: Unused arguments: '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $ncol > 10\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert a FITS file to VOTable, ensuring the output uses **VOTable version 1.4**.",
        "response": "stilts tcopy in=data.fits ofmt='votable(version=V14)' out=v14.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "What is the simplest `tcat` command to combine `file1.fits` and `file2.fits`?",
        "response": "stilts tcat in=file1.fits in=file2.fits out=output.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, and add a column 'LOG_COUNT' calculated as 'log10($0 + 1)' where $0 is the row index.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol LOG_COUNT \"log10($0 + 1)\"' out=log_row_index.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_COUNT log10($0 + 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve 10 rows from the MAST HSCv3 point source catalogue and output the results in ECSV format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 10 * FROM hsc_v3.point' ofmt=ecsv out=hsc_sample_ecsv.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a table to a text file, setting the sampled rows for width determination to 1000.",
        "response": "stilts tcopy in=huge.fits ofmt='text(sampledRows=1000)' out=sampled_width.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read a table, and perform a horizontal reflection of the coordinates: `RA_NEW = 360 - RA`.",
        "response": "stilts tpipe in=coords.fits cmd='replacecol RA \"360.0 - RA\"' out=reflected_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'RA'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA 360.0 - RA\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' 'RA'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine three tables, dropping the columns named 'ERROR_RA' and 'ERROR_DEC' from all inputs before combining.",
        "response": "stilts tcatn nin=3 in1=C1.fits icmd1='delcols \"ERROR_RA ERROR_DEC\"' in2=C2.fits icmd2='delcols \"ERROR_RA ERROR_DEC\"' in3=C3.fits icmd3='delcols \"ERROR_RA ERROR_DEC\"' out=error_stripped.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate three tables, preserving only columns named ID, RA, DEC, and MAG from all inputs.",
        "response": "stilts tcatn nin=3 in1=a.fits icmd1='keepcols \"ID RA DEC MAG\"' in2=b.fits icmd2='keepcols \"ID RA DEC MAG\"' in3=c.fits icmd3='keepcols \"ID RA DEC MAG\"' out=uniform_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "What is the role of the `tuning` parameter in `tmatchn`?",
        "response": "The `tuning` parameter provides values to adjust the internal algorithms of the chosen `matcher`. For example, for the `sky` matcher, it controls the HEALPix level used for spatial indexing. Adjusting it does not change the result of the match, but can affect performance in terms of CPU time and memory usage [1, 5].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "How can I change the font size of the axis labels?",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xlabel=X-Axis ylabel=Y-Axis fontsize=16",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. Output should include T1 rows matched with T2 OR T3 (full outer join relative to T1).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits join2=always in3=T3.fits join3=always values1='RA DEC' values2='RA DEC' values3='RA DEC' out=T1_outer_multi.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add a column 'DEC_DMS_2S' converting DEC in degrees to DMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_2S \"degreesToDms(DEC, 2)\"' out=dms_dec_2s_new.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_2S degreesToDms(DEC, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the GAVO Data Center using Equatorial (ICRS) coordinates 150.0, 5.0, with a radius of 60 arcminutes, and rename the 'ID' column to 'SRC_ID' in the output.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=150.0 lat=5.0 radius='60.0 / 60.0' ocmd='colmeta -name SRC_ID ID' out=renamed_src_id.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"60.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot points with X/Y error bars from array columns X_ERR_ARR and Y_ERR_ARR using the xyerrors layer.",
        "response": "stilts plot2plane in=arrays.fits layer=xyerrors xs=X_ARR ys=Y_ARR xerrhis=X_ERR_ARR yerrhis=Y_ERR_ARR out=array_xyerrors_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_ARR\"\n    (The name \"X_ARR\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve summary information for the top 10 observations in the MAST MissionMAST archive.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/missionmast/ adql='SELECT TOP 10 * FROM hst.summary' out=mast_mission_summary.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a CSV file to LaTeX format, using a **semicolon delimiter** in the output CSV data block.",
        "response": "stilts tcopy in=input.csv ifmt=csv ofmt='csv(delimiter=;)' out=semicolon_latex.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate tables T1, T2, T3. In T3, keep only the first 100 rows and randomly shuffle them.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='head 100' icmd3='shuffle' out=shuffled_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert an IPAC table to ECSV.",
        "response": "stilts tcopy ifmt=ipac in=data.tbl ofmt=ecsv out=data.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match five tables using group mode and display the resulting table metadata.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=2 in1=c1.fits in2=c2.fits in3=c3.fits in4=c4.fits in5=c5.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA DEC' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert an ASCII file where fields are separated by multiple spaces, relying on the ASCII parser's default delimiter handling.",
        "response": "stilts tcopy in=spaced_data.txt ifmt=ascii out=spaced_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Start an asynchronous query on the ESA Euclid Archive and set the destruction time to expire exactly 30 days from now using ISO 8601 duration format.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' destruction='+P30D' out=euclid_30d_job.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to do an authenticated TAP query and have it run asynchronously without deleting the job.",
        "response": "stilts tapquery tapurl=https://my.secure.service/tap adql='SELECT * FROM my_project_data' auth=true sync=false delete=never",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a table, convert the string column 'DATE_TIME' (ISO 8601) to Unix seconds, and explicitly set the output column type to 64-bit integer.",
        "response": "stilts tpipe in=log.csv ifmt=csv cmd='addcol -type \"long UNIX_TIME isoToUnixSec(DATE_TIME)\"' out=unix_time.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'UNIX_TIME' 'isoToUnixSec(DATE_TIME)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type long UNIX_TIME isoToUnixSec(DATE_TIME)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'UNIX_TIME' 'isoToUnixSec(DATE_TIME)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch three tables T1, T2, T3 (group mode). T2 contains position errors in degrees (E_DEG). Convert E_DEG to arcsec (E_DEG * 3600) for matching using skyerr.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=skyerr params=1 in1=T1.fits in2=T2.fits icmd2='replacecol E_DEG E_DEG*3600' in3=T3.fits values1='RA DEC E_ARCSEC' values2='RA DEC E_DEG' values3='RA DEC E_ARCSEC' out=converted_error_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the JVO ALMA VO Service and output the result in VOTable format using the BINARY serialization.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/alma adql='SELECT TOP 5 * FROM alma.obscore' ofmt='votable(format=BINARY)' out=alma_binary.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create an ASCII MOC (order 7) for all points, where the radius is fixed at 100 micro-arcseconds (\u00b5as).",
        "response": "stilts pixfoot in=precise.fits ra=RA dec=DEC radius='100.0 / 3600000000.0' order=7 mocfmt=ascii out=uas_moc.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot a Gaussian curve (gaussian layer) and display the mean position (showmean=true) with a vertical line.",
        "response": "stilts plot2plane in=data.fits layer_h=histogram x_h=VALUE layer_g=gaussian x_g=VALUE out=gaussian_with_mean.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Concatenate multiple tables, extracting only the three columns corresponding to X, Y, and Z coordinates.",
        "response": "stilts tcatn nin=4 in1=c1.fits icmd1='keepcols \"X Y Z\"' in2=c2.fits icmd2='keepcols \"X Y Z\"' in3=c3.fits icmd3='keepcols \"X Y Z\"' in4=c4.fits icmd4='keepcols \"X Y Z\"' out=xyz_only_multi.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'KCORR_V' using the KCF_V filter at Z=0.1, leveraging the V-Rc color (KCC_VRc).",
        "response": "stilts tpipe in=phot.fits cmd='addcol KCORR_V \"kCorr(KCF_V, 0.1, KCC_VRc, MAG_V-MAG_RC)\"' out=kcorr_v.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.1,' 'KCC_VRc,' 'MAG_V-MAG_RC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_V kCorr(KCF_V, 0.1, KCC_VRc, MAG_V-MAG_RC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.1,' 'KCC_VRc,' 'MAG_V-MAG_RC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a filled histogram where the color is semi-transparent.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=X barform=filled transparency=0.5",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Concatenate log_A.csv and log_B.csv. Log_A uses a comma delimiter; log_B uses a pipe delimiter. Output the result as a single FITS file.",
        "response": "stilts tcatn nin=2 in1=log_A.csv ifmt1=csv in2=log_B.csv ifmt2='csv(delimiter=|)' out=pipe_delimited_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match four tables T1-T4 exactly on ID. Filter the final table to include a column 'GROUP_MEMBER_COUNT' indicating GroupSize.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits ocmd='addcol GROUP_MEMBER_COUNT GroupSize' out=group_count_added.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need to display a `densogram` for my data.",
        "response": "stilts plot2plane in=data.fits layer=densogram x=VALUE",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a MOC for all sources in `mycat.fits` that are near (within 0.1 deg) the celestial equator.",
        "response": "stilts pixfoot in=mycat.fits icmd='select \"abs(DEC) < 0.1\"' out=equator_sources.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot an error ellipse using X/Y errors and correlation, setting the shape to 'filled_rectangle'.",
        "response": "stilts plot2plane in=errors.fits layer=xycorr x=X y=Y xerr=X_ERR yerr=Y_ERR xycorr=CORR ellipse=filled_rectangle out=filled_rect_corr.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query VizieR TAP service for the NOMAD catalogue (I/297/out) and calculate the checksum of the first 100 results.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT TOP 100 * FROM \"I/297/out\"' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine two tables, and then shuffle the rows of the final table.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd=shuffle out=shuffled.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 316.2117 and latitude 55.1901. Please use a search radius of 0.2427 degrees. Save the results to a csv file called query_results_165.csv. The coordinates are in the fk4 system.",
        "response": "stilts cone servicetype=sia1 serviceurl=http://irsa.ipac.caltech.edu/sia lon=316.2117 lat=55.1901 radius=0.2427 skysys=fk4 compress=true omode=out ofmt=csv out=query_results_165.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I want to join `table_x.fits` and `table_y.fits`. Before matching, I need to filter table_x to only include sources with `FLUX > 100`. The match should be on sky coordinates `pos_ra`, `pos_dec` with a 3 arcsec tolerance.",
        "response": "stilts tmatch2 in1=table_x.fits icmd1='select \"FLUX > 100\"' in2=table_y.fits matcher=sky params=3 values1='pos_ra pos_dec' values2='pos_ra pos_dec' out=filtered_join.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate two tables, but only if the 'QUALITY' flag is true in both input tables.",
        "response": "stilts tcat in='q1.fits q2.fits' icmd='select QUALITY' out=quality_filtered_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine ObsCore metadata (obs.fits) and an external EPN-TAP planetary service result (epn.vot). Only keep rows in obs.fits if 'time_exp' > 100s.",
        "response": "stilts tcatn nin=2 in1=obs.fits icmd1='select \"time_exp > 100\"' in2=epn.vot out=filtered_obscore.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select time_exp > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables, dropping the columns named 'RA_ERR' and 'DEC_ERR' only from the second input table.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='delcols \"RA_ERR DEC_ERR\"' out=error_dropped.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits using position and velocity (sky+2d). A.fits only includes sources with Z > 0.1. Tolerances 2 arcsec, 10 km/s, 10 km/s.",
        "response": "stilts tmatch2 in1=A.fits icmd1='select \"Z > 0.1\"' in2=B.fits matcher=sky+2d_anisotropic params='2 10 10' values1='RA DEC VX VY' values2='RA DEC VX VY' out=high_z_velocity_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 0.1\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 293.0606 and latitude 35.7493. Please use a search radius of 1.6674 degrees. Save the results to a votable file called query_results_27.votable.",
        "response": "stilts cone servicetype=sia1 serviceurl=http://irsa.ipac.caltech.edu/sia lon=293.0606 lat=35.7493 radius=1.6674 omode=out ofmt=votable out=query_results_27.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the MAST PanSTARRS 1 DR2 catalogue, retrieving the position and the G-R color index (`g_mean_mag - r_mean_mag`).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT ra, dec, g_mean_mag - r_mean_mag AS g_r_color FROM dbo.detection_object' maxrec=100 out=ps1_color.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot error ellipses derived from correlation (skycorr), using the 'rectangle' shape.",
        "response": "stilts plot2sky in=errors.fits layer=skycorr lon=RA lat=DEC lonerr=EL laterr=EB corr=C ellipse=rectangle out=corr_rectangle.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Copy an ASCII file and output it in the IPAC format, limiting maximum cell width to 50 characters.",
        "response": "stilts tcopy in=strings.txt ifmt=ascii ofmt='ipac(maxCell=50)' out=ipac_trunc.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q95' containing the 95th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q95 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.95)\"' out=q95_dist_1350pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.95)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q95 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.95)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.95)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a FITS file to CSV, setting the output cell width limit to 100 characters.",
        "response": "stilts tcopy in=input.fits ofmt='csv(maxCell=100)' out=width_limited.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read a FITS file, identify all constant-valued columns, and promote those values to table parameters, removing the columns from the row data.",
        "response": "stilts tpipe in=survey.fits cmd='constcol' out=survey_with_params.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables and then apply the `transpose` filter, then output the result as an HTML table.",
        "response": "stilts tcat in='small1.fits small2.fits' ocmd=transpose ofmt=html out=transposed.html",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Perform an SIA search on MAST CAOM for images around RA 120, Dec -5, where the radius is given by the expression hypot(0.01, 0.02) degrees.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=120.0 lat=-5.0 radius='hypot(0.01, 0.02)' servicetype=sia out=mast_hypot_radius.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"hypot(0.01, 0.02)\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate a table containing spectra arrays (spec.fits) with a simple catalog table (cat.fits), adding the array columns.",
        "response": "stilts tcatn nin=2 in1=spec.fits in2=cat.fits out=spec_catalog.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read a table using a JDBC connection to SQLite and save the results as FITS.",
        "response": "stilts tcopy in='jdbc:sqlite:mydata.db#SELECT id, time FROM log' out=sqlite_log.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate a MOC (order 10) for sources in data.csv with a 2 arcminute search radius.",
        "response": "stilts pixfoot in=data.csv ifmt=csv ra=RA dec=DEC radius='2.0 / 60.0' order=10 out=data_2am_o10.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find objects around RA 22h, Dec 60d, converting RA/Dec, using 15 mas.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=330.0 lat=60.0 radius='15.0 / 3600000.0' out=simbad_15mas.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"15.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a histogram where the X axis is logarithmic and the Y axis is cumulative forward.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE xlog=true cumulative=forward out=log_cumul_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot points, only keeping rows where the proper motion hypotenuse exceeds 5 mas/yr.",
        "response": "stilts plot2plane in=pm_cat.fits icmd='select \"hypot(PMRA, PMDEC) > 5.0\"' layer=mark x=RA y=DEC out=high_pm_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"hypot(PMRA, PMDEC) > 5.0\" (The name \"PMRA\" is unknown.)\n        (The name \"PMRA\" is unknown.))\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I want to find the top 5 brightest stars (lowest `G_MAG`) in `field_of_view.fits`.",
        "response": "stilts tpipe in=field_of_view.fits cmd='sorthead 5 G_MAG' out=top5_brightest.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Join T1 and T2, both FITS. T1 only includes the first 1000 rows. T2 only includes rows with FLAG=0. Match on exact ID.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='head 1000' in2=T2.fits icmd2='select FLAG==0' matcher=exact values1=ID values2=ID out=head_select_exact.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a legend to a multi-layer plot.",
        "response": "stilts plot2plane layer_A=mark in_A=catA.fits x_A=X y_A=Y leglabel_A='Catalog A' layer_B=mark in_B=catB.fits x_B=X y_B=Y leglabel_B='Catalog B' legend=true",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert an IPAC table to ECSV.",
        "response": "stilts tcopy in=star.tbl ifmt=ipac out=star.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the MAST SkyMapper DR4 around RA 300, Dec 50, and extract only the first 5 columns of the resulting table.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/skymapperdr4/ lon=300.0 lat=50.0 radius=0.01 ocmd='keepcols \"$1 $2 $3 $4 $5\"' out=first_five.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match four catalogs (`a.fits`, `b.fits`, `c.fits`, `d.fits`) with `a.fits` as reference. Include all rows from `a.fits`, and indicate which of the other catalogs it has a match in.",
        "response": "stilts tmatchn nin=4 multimode=pairs iref=1 in1=a.fits in2=b.fits in3=c.fits in4=d.fits matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' values4='ra dec' join1=always out=a_with_match_flags.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge tables, and then calculate the final table's checksum without writing the data to an output file.",
        "response": "stilts tcat in='chk1.fits chk2.fits' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Match four tables using Cartesian 2D coordinates (X, Y). T2 coordinates are computed by rotation (90 degrees).",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=2d params=5 in1=T1.fits in2=T2.fits icmd2='addcol X_ROT \"X*cosDeg(90) - Y*sinDeg(90)\"; addcol Y_ROT \"X*sinDeg(90) + Y*cosDeg(90)\"' in3=T3.fits in4=T4.fits values1='X Y' values2='X_ROT Y_ROT' values3='X Y' values4='X Y' out=rotated_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'Y*sinDeg(90)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol X_ROT X*cosDeg(90) - Y*sinDeg(90)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'Y*sinDeg(90)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the Pithia VO datacenter for its table schemas and write the resulting table's checksum.",
        "response": "stilts tapquery tapurl=http://pithia.cbk.waw.pl/tap adql='SELECT * FROM TAP_SCHEMA.schemas' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a small region (1 arcsec radius) centered at RA=150, DEC=30, ensuring the plot boundary includes axis labels (insets=auto).",
        "response": "stilts plot2sky in=micro_field.fits clon=150.0 clat=30.0 radius=1.0/3600.0 layer=mark lon=RA lat=DEC insets=auto out=arcsec_auto_insets.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Group match three catalogs (C1, C2, C3). C1 has position errors (E1) in degrees; convert to arcsec before skyerr matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=skyerr params=1 in1=C1.fits icmd1='replacecol E1 E1*3600' in2=C2.fits in3=C3.fits values1='RA DEC E1' values2='RA DEC E2' values3='RA DEC E3' out=deg_to_arcsec_err.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q5_3KPC' containing the 5th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q5_3KPC \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.05)\"' out=q5_dist_3kpc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.05)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q5_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.05)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.05)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query ESO TAP OBS for the column definitions and metadata related to the raw VIRCAM data table.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM TAP_SCHEMA.columns WHERE table_name = ''raw.vircam''' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match four tables using Cartesian 2D error (2d_err). T1 has errors in pixels (E_PIX); T2 in arcsec (E_ARCSEC). Convert T2 error to pixel scale (1 arcsec = 10 pixels) before matching.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=2d_err params=1 in1=T1.fits in2=T2.fits icmd2='replacecol ERR E_ARCSEC*10' in3=T3.fits in4=T4.fits values1='X Y E_PIX' values2='X Y ERR' values3='X Y E_PIX' values4='X Y E_PIX' out=mixed_error_unit_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create an MOC (order 15) for $0.001$ degrees radius, filtering the input table to keep only every 10th row.",
        "response": "stilts pixfoot in=sampled_cat2.fits icmd='every 10' ra=RA dec=DEC radius=0.001 order=15 out=sampled_o15_001.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that all values in a floating point column 'WEIGHT' are less than 1.0.",
        "response": "stilts tpipe in=data.fits cmd='assert \"WEIGHT < 1.0\"' out=weight_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert WEIGHT < 1.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "My `csv` file has columns ra_sex and dec_sex. Make me a MOC.",
        "response": "stilts pixfoot in=data.csv ifmt=csv ra='hmsToDegrees(ra_sex)' dec='dmsToDegrees(dec_sex)' out=data_sex.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create an MOC for positions derived from Ecliptic Lon/Lat, converting to Galactic coordinates for the MOC. (Requires dual conversion.)",
        "response": "stilts mocshape in=ecl_to_gal.fits icmd='addskycoords ecliptic galactic ELON ELAT GLON GLAT' shape=point coords='array(GLON, GLAT)' out=ecliptic_galactic_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Crossmatch four tables using 1D matching on 'FLUX' within 10 units. Use parallel processing for efficiency.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=1d params=10 values1=FLUX values2=FLUX values3=FLUX values4=FLUX in1=F1.fits in2=F2.fits in3=F3.fits in4=F4.fits runner=parallel out=parallel_1d_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate the footprint for all sources where `FLAG` bit 3 is set.",
        "response": "stilts pixfoot in=flagged_sources.fits icmd='select hasBit(FLAG,3)' out=flagged_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Output the table as FITS, forcing the conversion of the boolean column 'FLAG' to a numerical integer (0/1).",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLAG toInteger(FLAG)' out=int_flag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate T1 and T2. T2 contains columns RA_MAS and DEC_MAS in milliarcseconds. Convert them to degrees before combining.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='addcol RA_DEG RA_MAS/3600000.0; addcol DEC_DEG DEC_MAS/3600000.0' out=mas_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find objects near RA 200, Dec 5, with a 3 arcsecond radius, and explicitly send the table directly to TOPCAT.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=200.0 lat=5.0 radius='3.0 / 3600.0' omode=topcat",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"3.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Draw lines linking two positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Ensure that the table has sequential access only (useful for debugging streaming I/O).",
        "response": "stilts tpipe in=data.fits cmd=seqview out=sequential.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "How to concatenate two tables where one has a column 'magnitude' and the other 'mag'?",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits icmd2='colmeta -name magnitude mag' ocmd='keepcols magnitude' out=consistent_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "How do I set a maximum record limit of 5000 for my TAP query?",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM twomass.data' maxrec=5000",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a JSON MOC at order 14.",
        "response": "stilts pixfoot in=data.fits order=14 mocfmt=json out=data_o14.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need the MOC for sources within 2 arcseconds, but ensure the output column names are syntactically safe (fixcolnames).",
        "response": "stilts pixfoot in=weird_names.fits icmd='fixcolnames' ra=RA dec=DEC radius='2.0 / 3600.0' out=clean_names_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Retrieve 10 spectra records from the Subaru HDS Spectrum data service and output the result in IPAC format.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/hds/ adql='SELECT TOP 10 * FROM hds.spectrum' maxrec=10 ofmt=ipac out=hds_spectra.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Take a table from a URL, convert it to CSV",
        "response": "stilts tcopy in=http://example.com/data.vot ofmt=csv out=data.csv",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: other_command: not found\n",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot a histogram where the bar style is just the top line (barform=tops).",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE barform=tops color=black out=tops_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Read a table, delete columns by index starting from $5 up to the end of the table.",
        "response": "stilts tpipe in=wide_cat.fits cmd='delcols 5-' out=narrow_cat.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DISTANCE_MODULUS' derived from distance in parsecs (DISTANCE_PC).",
        "response": "stilts tpipe in=data.fits cmd='addcol DISTANCE_MODULUS distanceToModulus(DISTANCE_PC)' out=distance_mod.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw lines connecting positions (X1, Y1) to (X2, Y2) from each row, where the line thickness is 2 pixels.",
        "response": "stilts plot2plane in=pairs.fits layer=link2 x1=X1 y1=Y1 x2=X2 y2=Y2 thick=2 out=thick_linked_pairs.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a 2D binned histogram (grid plot) of X vs Y, counting points per unit area.",
        "response": "stilts plot2plane in=large_survey.fits layer=grid x=RA y=DEC combine=count-per-unit out=count_per_unit.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I only need the column names and basic types from the result table, without any data.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=90.0 lat=0.0 radius=0.001 omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the ESO TAP_OBS archive and manually set the progress monitoring polling interval to 20 seconds (20000 milliseconds).",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM ivoa.ObsCore' progress=true poll=20000 out=eso_slow_poll.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge tables, then keep only rows where the 'ID' column has unique values, eliminating duplicates based on all column content.",
        "response": "stilts tcat in='dup1.fits dup2.fits' ocmd='uniq *' out=fully_unique.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "My table has two radius columns, `R1` and `R2`. I need to use the larger of the two for the MOC.",
        "response": "stilts mocshape in=radii.fits shape=circle coords='array(RA,DEC,max(R1,R2))' out=max_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match two tables on a 1D magnitude (MAG) only. T1 magnitude values are derived from a log expression: 25 - 2.5 * log10(FLUX).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='addcol MAG \"25 - 2.5 * log10(FLUX)\"' in2=T2.fits matcher=1d params=0.1 values1=MAG values2=MAG out=calculated_mag_1d.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '2.5' '*' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG 25 - 2.5 * log10(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '2.5' '*' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "From `gaia_sample.fits`, calculate the absolute magnitude in a new column `ABS_G` using the formula `phot_g_mean_mag + 5 * log10(parallax*0.001) + 5`.",
        "response": "stilts tpipe in=gaia_sample.fits cmd='addcol ABS_G \"phot_g_mean_mag + 5 * log10(parallax*0.001) + 5\"' out=gaia_abs_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Using `t1.fits` as a reference, find all its rows that have NO match in `t2.fits` OR `t3.fits` within 5 arcseconds.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=pairs iref=1 matcher=sky params=5 values1='ra dec' values2='ra dec' values3='ra dec' join1=match join2=nomatch join3=nomatch out=isolated_t1_sources.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match four tables using Cartesian 2D cuboid coordinates (X, Y). T1 and T4 should always be included in the output (join=always).",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=2d_cuboid params='5 5' in1=D1.fits join1=always in2=D2.fits in3=D3.fits in4=D4.fits join4=always values1='X Y' values2='X Y' values3='X Y' values4='X Y' out=D1D4_outer_cuboid.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate two tables, but filter out all rows where 'Z_REDSHIFT' is greater than 5.0.",
        "response": "stilts tcatn nin=2 in1=high_z.fits in2=low_z.fits ocmd='select \"Z_REDSHIFT <= 5.0\"' out=z_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z_REDSHIFT <= 5.0\n\nUsage: select <expr>\n    (Unused arguments: '<=' '5.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Draw filled polygons defined by corner points, shading them based on the aux value 'MAGNITUDE'.",
        "response": "stilts plot2plane in=footprints.fits layer=poly4 x1=X1 y1=Y1 x2=X2 y2=Y2 x3=X3 y3=Y3 x4=X4 y4=Y4 polymode=fill shading=aux aux=MAGNITUDE out=mag_colored_polys.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a circle MOC where the radius is exactly $\frac{100 \text{ mas}}{3}$ for a high-precision catalog.",
        "response": "stilts mocshape in=high_prec_cat.fits shape=circle coords='array(RA, DEC, (100.0 / 3.0) / 3600000.0)' out=prec_circles_expr.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter rows where the absolute magnitude is brighter than -20.",
        "response": "stilts tpipe in=qso.fits cmd='select \"M_ABS < -20.0\"' out=ultra_bright.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '-20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select M_ABS < -20.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '-20.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T2 has an array column 'POS_VEC' (RA, DEC). Explode this column into RA and DEC before matching T_REF.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T_REF.fits in2=T2.fits icmd2='addcol RA POS_VEC; addcol DEC POS_VEC[4]; delcols POS_VEC' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=t2_vec_exploded.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert a column of integer status flags into an array of booleans representing the bits set in the flag.",
        "response": "stilts tpipe in=flags.fits cmd='addcol BIT_ARRAY bitvector(STATUS_FLAG)' out=bit_arrays.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate an order 10 FITS MOC for the coverage defined by a catalogue containing HEALPix UNIQ identifiers, using standard FITS output format.",
        "response": "stilts mocshape in=hpx_data.fits shape=uniq coords=HPX_ID order=10 mocfmt=fits out=hpx_o10_standard.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Run an SSA query around RA 100, Dec 10, with a radius given by dividing 5 arcseconds by 10 (0.5 arcsec).",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=100.0 lat=10.0 radius='(5.0 / 10.0) / 3600.0' servicetype=ssa out=ssa_half_arcsec.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"(5.0 / 10.0) / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine data.fits with a table derived from a simple loop, only including every 10th row from the loop table.",
        "response": "stilts tcatn nin=2 in1=data.fits in2='tpipe in=:loop:1000 cmd=\"every 10\" omode=out' out=sparse_loop_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a plot where the color is determined by a flat value, but the size is from an `aux` column.",
        "response": "This is a bit unusual. You would use the `size` layer and set `shading=flat` and `color=...`, while providing the size from the `size=...` parameter: `stilts plot2plane layer=size in=data.fits x=X y=Y size=SIZE_COL shading=flat color=blue`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find groups of objects across `spec.fits`, `phot.fits`, and `xray.fits`, and for each group, report the mean redshift from the `spec.fits` table.",
        "response": "This is a two-step process. First, run `tmatchn` to identify the groups and get the IDs. Then, join the `spec.fits` table with the `tmatchn` output on ID and use `tgroup` to calculate the mean redshift per group.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need to ensure no output file is created, but I want to validate if the query runs successfully with a small radius (0.0001 deg).",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=10.0 lat=10.0 radius=0.0001 omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot a Kernel Density Estimate (KDE) instead of a histogram.",
        "response": "stilts plot2plane in=data.fits layer=kde x=VALUE",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Concatenate `t1.csv` and `t2.csv`, keeping only the `RA`, `DEC`, and `MAG` columns from each before joining.",
        "response": "stilts tcat ifmt=csv in=t1.csv in=t2.csv icmd='keepcols \"RA DEC MAG\"' out=t_combined_subset.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Find targets around Galactic L=30.0, B=0.0, within a 2 arcminute search radius, outputting a VOTable.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=30.0 lat=0.0 radius='2.0 / 60.0' skysys=galactic out=galactic_2arcmin.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"2.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge spectroscopic tables, filtering each input to only keep rows where the 'WAVELENGTH' column is greater than 5000 Angstroms.",
        "response": "stilts tcat in='spec*.fits' icmd='select \"WAVELENGTH > 5000\"' out=long_wave_spectra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select WAVELENGTH > 5000\n\nUsage: select <expr>\n    (Unused arguments: '>' '5000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a JSON MOC for a 2-degree radius around a small list of superclusters.",
        "response": "stilts pixfoot in=superclusters.vot radius=2.0 mocfmt=json out=supercluster_areas.moc.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC from the positions in `mrt_table.txt`, which is in MRT format.",
        "response": "stilts pixfoot in=mrt_table.txt ifmt=mrt out=mrt_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Read an ASCII file, forcing all numbers to be detected as floating point (double) by excluding integer types.",
        "response": "stilts tcopy in=int_float.txt ifmt='ascii(notypes=int;long)' out=forced_float.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a circle MOC with radius defined by the constant 1 mas, converted to degrees.",
        "response": "stilts mocshape in=mas_targets.fits shape=circle coords='array(RA, DEC, 1.0 / 3600000.0)' out=one_mas_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter a catalog by proper motion (PM > 10 mas/yr) and generate a raw binary MOC stream (order 18).",
        "response": "stilts mocshape in=pm.fits icmd='select \"hypot(PMRA, PMDEC) > 10.0\"' shape=point coords='array(RA, DEC)' order=18 mocfmt=raw out=high_pm_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 10.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve column metadata from the European JWST Archive and filter the result locally to only show columns with `UCD` specified.",
        "response": "stilts tapquery tapurl=https://jwst.esac.esa.int/server/tap adql='SELECT column_name, ucd FROM TAP_SCHEMA.columns' ocmd='select !NULL_ucd' out=jwst_ucd_only.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "For each row, calculate the angular distance between two sets of coordinates (RA1, DEC1) and (RA2, DEC2) and name the column 'SEPARATION'.",
        "response": "stilts tpipe in=pairs.fits cmd='addcol SEPARATION skyDistanceDegrees(RA1,DEC1,RA2,DEC2)*3600.0' out=pairs_with_sep.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Join a Feather file with a FITS file.",
        "response": "stilts tcatn nin=2 in1=data.feather in2=data.fits out=combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query NED, explicitly requesting the 'CUSTOM_SQL' language and limiting results to 100.",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT ra, dec FROM object' language=CUSTOM_SQL maxrec=100 out=ned_custom.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Use the conditional operator to create a column 'MAG_CLEAN' which is 'MAG' if 'MAG_FLAG' is false, otherwise it is null.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_CLEAN \"MAG_FLAG == false ? MAG : NULL\"' out=phot_conditional.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' 'false' '?' 'MAG' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_CLEAN MAG_FLAG == false ? MAG : NULL\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '==' 'false' '?' 'MAG' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the SIMBAD TAP using Ecliptic coordinates (Lon=270, Lat=0) with a search size of 2 arcminutes.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=270.0 lat=0.0 radius='2.0 / 60.0' skysys=ecliptic out=ecliptic_simbad_2arcmin.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"2.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine tables, ensuring any empty string fields in the inputs are explicitly converted to null values during reading.",
        "response": "stilts tcat ifmt='csv(notypes=blank)' in='empty1.csv empty2.csv' out=clean_empty_strings.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve the access URLs for 10 Chandra observations that used the ACIS-S detector.",
        "response": "stilts tapquery tapurl=https://cda.harvard.edu/cxctap adql='SELECT TOP 10 access_url, t_exptime FROM ivoa.ObsCore WHERE instrument_name = ''ACIS-S''' out=chandra_acis.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need a MOC with a fixed radius of 0.001 degrees for all points.",
        "response": "stilts mocshape in=points.fits shape=circle coords='array(RA,DEC,0.001)' out=small_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Convert RA and Dec strings in HMS/DMS format to numeric degrees, assuming they are in columns 'RA_HMS' and 'DEC_DMS'.",
        "response": "stilts tpipe in=string_coords.fits cmd='addcol RA_DEG hmsToDegrees(RA_HMS)' cmd='addcol DEC_DEG dmsToDegrees(DEC_DMS)' out=numeric_coords.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables, converting the output format to CSV where fields are delimited by a tab character.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt='csv(delimiter=tab)' out=tab_delimited_output.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Convert a table to a VOTable using TABLEDATA encoding explicitly.",
        "response": "stilts tcopy in=data.fits ofmt='votable(format=TABLEDATA)' out=data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve the 5 stellar abundance records from the Subaru SAGA database where the effective temperature (teff) is greater than 6000 K and metallicity (fe_h) is less than -1.0.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 5 * FROM saga.stellar_abundances WHERE teff > 6000 AND fe_h < -1.0' out=saga_metal_poor.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Map coverage from STC-S strings, outputting the raw binary stream.",
        "response": "stilts mocshape in=stc.fits shape=stc-s coords=REGION mocfmt=raw out=stc_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 350.0311 and latitude -59.2478. Please use a search radius of 0.4518 degrees. Save the results to a votable file called query_results_75.votable. The coordinates are in the galactic system.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=350.0311 lat=-59.2478 radius=0.4518 skysys=galactic omode=out ofmt=votable out=query_results_75.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Use 'setparam' to record the average 'FLUX' of the whole table as a parameter named 'AVG_FLUX'.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='setparam AVG_FLUX mean(FLUX)' out=flux_avg_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Start an asynchronous job on the PADC Astro server and ensure it is kept permanently by setting the delete policy.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT TOP 10 * FROM TAP_SCHEMA.tables' delete=never out=padc_job_keep.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge tables, ensuring the output includes a column named 'SourceLocation' containing the full path or URL of the input file.",
        "response": "stilts tcat in='local_file.fits http://remote.com/data.vot' loccol=SourceLocation out=location_tracking.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Use the rowrange filter to extract rows 1000 through 1199 (a range of 200 rows).",
        "response": "stilts tpipe in=full_set.fits cmd='rowrange 1000 +200' out=subset_200.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve 10 stellar abundance records from the Subaru SAGA database and only keep the coordinate columns after local processing.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 10 RA_ICRS, DEC_ICRS, fe_h FROM saga.stellar_abundances' ocmd='keepcols \"RA_ICRS DEC_ICRS\"' out=saga_feh.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 281.4332 and latitude -23.3277. Please use a search radius of 1.8844 degrees. Save the results to a ascii file called query_results_143.ascii.",
        "response": "stilts cone servicetype=sia1 serviceurl=http://irsa.ipac.caltech.edu/sia lon=281.4332 lat=-23.3277 radius=1.8844 omode=out ofmt=ascii out=query_results_143.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I need the MOC for 1 arcminute radius circles, forcing the order to be high enough to represent the circle sharply (e.g., order 15).",
        "response": "stilts pixfoot in=circles.fits ra=RA dec=DEC radius='1.0 / 60.0' order=15 out=sharp_circles_o15.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Merge spectroscopic tables (spec*.fits), but ensure the final table is sorted by 'WAVELENGTH' then by 'TIME'.",
        "response": "stilts tcat in='spec*.fits' ocmd='sort \"WAVELENGTH TIME\"' out=sorted_spectra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'TIME'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort WAVELENGTH TIME\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'TIME'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Filter a table to keep only every 100th row, then display the resulting table in a GUI window.",
        "response": "stilts tpipe in=large_survey.fits cmd='every 100' omode=gui",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "The radius of each source is its `PSF_WIDTH` in arcseconds divided by 2. Generate the footprint.",
        "response": "stilts mocshape in=psf_data.fits shape=circle coords='array(RA,DEC,PSF_WIDTH/2.0/3600.0)' out=psf_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot error ellipses derived from correlation (skycorr), setting the ellipse shape to 'crosshair_rectangle', unit=arcsec.",
        "response": "stilts plot2sky in=errors.fits layer=skycorr lon=RA lat=DEC lonerr=ER laterr=ED corr=C unit=arcsec ellipse=crosshair_rectangle out=crosshair_rect_errors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a histogram where the bar style is drawn as 'spikes'.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE barform=spikes out=spikes_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'PLX_MEDIAN' containing the median of the array column 'PLX_ARRAY'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol PLX_MEDIAN median(PLX_ARRAY)' out=array_median.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw filled elliptical footprints (A, B, PA in arcsec) and color them based on a continuous AUX variable (T_EFF), using the 'magma' map.",
        "response": "stilts plot2sky in=ellipses.fits layer=skyellipse lon=RA lat=DEC ra=A rb=B posang=PA unit=arcsec ellipse=filled_ellipse shading=aux aux=T_EFF auxmap=magma out=temp_magma_ellipses.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find objects around Ecliptic Lon 40, Lat 5, using a radius of 2 mas.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=40.0 lat=5.0 radius='2.0 / 3600000.0' skysys=ecliptic out=gaia_2mas_ecl.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"2.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine multiple photometric tables, ensuring all 'MAG' columns are converted to 32-bit floats.",
        "response": "stilts tcatn nin=3 in1=p1.fits icmd1='replacecol MAG toFloat(MAG)' in2=p2.fits icmd2='replacecol MAG toFloat(MAG)' in3=p3.fits icmd3='replacecol MAG toFloat(MAG)' out=float_mags.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate 1000 synthetic stars, calculate the total proper motion vector magnitude (PM_MAG), and find the statistical minimum and maximum of that new column.",
        "response": "stilts tpipe in=:skysim:1000 cmd='addcol PM_MAG \"hypot(pmra, pmdec)\"' cmd='keepcols \"PM_MAG\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_MAG hypot(pmra, pmdec)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine `first_half.fits` and `second_half.fits`. Beforehand, for each table, rename the column `MAGNITUDE` to `MAG`.",
        "response": "stilts tcat in=first_half.fits in=second_half.fits icmd='colmeta -name MAG MAGNITUDE' out=full_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Read a table, calculate the total length of the 'COMMENT_ARRAY' array column, and ensure the resulting table is random-access by caching.",
        "response": "stilts tpipe in=data.fits cmd='addcol COMMENT_LENGTH size(COMMENT_ARRAY)' cmd=cache out=cached_lengths.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I have coordinates (RA=1.0 rad, Dec=0.0 rad). Convert these and search Gaia TAP with a search radius of 1 degree divided by PI.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon='radiansToDegrees(1.0)' lat='radiansToDegrees(0.0)' radius='1.0 / PI' out=gaia_pi_radius.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"radiansToDegrees(1.0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the KOA TAP Service for 100 ObsCore entries and locally rename the columns to conform to a specific format (`RA_J2000`, `DEC_J2000`).",
        "response": "stilts tapquery tapurl=https://koa.ipac.caltech.edu/TAP adql='SELECT TOP 100 * FROM ivoa.ObsCore' ocmd='colmeta -name RA_J2000 ra; colmeta -name DEC_J2000 dec' out=koa_renamed_coords.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw a line plot of `y=x` on top of a scatter plot.",
        "response": "stilts plot2plane in=data.fits layer_s=mark x_s=X y_s=Y layer_l=function fexpr_l=x color_l=red",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "In a table of astrometric measurements, propagate the RA and DEC to a new epoch, setting the epoch difference to 5.0 years.",
        "response": "stilts tpipe in=astrom.fits cmd='addcol RA_NEW \"epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\"' cmd='addcol DEC_NEW \"epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))[6]\"' out=propagated_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_NEW epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Change the data type of the column 'ID' from integer to long integer (64-bit).",
        "response": "stilts tpipe in=input.fits cmd='replacecol ID toLong(ID)' out=long_id.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the GAVO Data Center for targets around RA 100, Dec 20, using a radius of 6 arcminutes, and rename the output table extension to 'VO_RESULTS'.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=100.0 lat=20.0 radius='6.0 / 60.0' ocmd='tablename VO_RESULTS' out=gavo_6arcmin.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"6.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot error ellipses derived from correlation (skycorr) where units are degrees, using a scale of 0.1.",
        "response": "stilts plot2sky in=errors.fits layer=skycorr lon=RA lat=DEC lonerr=EL laterr=EB corr=C unit=degree scale=0.1 out=corr_deg_scale0p1.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Explode an array column 'FLUXES' and locally rename the resulting scalar columns to 'F0', 'F1', 'F2', etc.",
        "response": "stilts tpipe in=spec.fits cmd='explodecols FLUXES' cmd='colmeta -name F0 FLUXES_0; colmeta -name F1 FLUXES_1; colmeta -name F2 FLUXES_2' out=scalar_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a parameter 'SQL_QUERY_USED' containing a placeholder string.",
        "response": "stilts tpipe in=data.fits cmd='setparam SQL_QUERY_USED \"SELECT * FROM table\"' out=sql_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find all sources in the Gaia TAP within 5 arcseconds of RA 140, Dec 20, saving the output.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=140.0 lat=20.0 radius='5.0 / 3600.0' out=gaia_5arcsec.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Submit an asynchronous job to the Infra ISO TAP service, requesting continuous progress updates, and setting the polling interval to 10 seconds (10000 milliseconds).",
        "response": "stilts tapquery tapurl=http://nida.esac.esa.int/nida-sl-tap/tap adql='SELECT TOP 100 * FROM ivoa.ObsCore' progress=true poll=10000 out=iso_slow_poll.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Search the GAVO Data Center near Galactic L=200, B=10, using $10$ mas, and suppress normal console output (verb=1).",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=200.0 lat=10.0 radius='10.0 / 3600000.0' skysys=galactic verb=1 out=gavo_10mas_quiet.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Copy data from a simulation scheme (`:skysim:`) generating 500 stars and save it as a CSV file.",
        "response": "stilts tcopy in=:skysim:500 out=sim_stars.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert the input CSV table to IPAC format, using a semi-transparent output colour.",
        "response": "stilts tpipe in=input.csv ifmt=csv ofmt=ipac out=output.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge data, ensuring that the second table (T2) is entirely included, but only if the magnitude 'MAG' is non-null.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='select !NULL_MAG' out=mag_nonnull_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read a local VOTable and output it as a VOTable, but forcing the version to **VOTable 1.1**.",
        "response": "stilts tcopy in=input.vot ofmt='votable(version=V11)' out=v11_output.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert the coordinate string 'RA_DMS_STR' (DMS format) to numeric degrees.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_DEG dmsToDegrees(RA_DMS_STR)' out=dms_to_deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I have multiple spectra in array columns. Plot the 10th-90th percentile range.",
        "response": "stilts plot2plane in=spectra.fits layer=arrayquantile xs=param$WAVELENGTHS ys=FLUX_ARRAY quantiles='0.1,0.9'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"param\"\n    (The name \"param\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'MAG_J_AB' converting 2MASS J magnitude (Vega) to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB \"MAG_J + VEGA_AB_J\"' out=j_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a HEALPix map and color it using the pweighted shading mode, combining the max FLUX (combine=max).",
        "response": "stilts plot2sky in=hpx_map.fits layer=healpix value=VALUE shading=pweighted weight=FLUX combine=max pmap=inferno out=pweighted_max_flux_hpx.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a test table and save it as an ECSV file.",
        "response": "stilts tcopy in=:test:100,bs ofmt=ecsv out=test_data.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine tables, sorting the final output primarily by 'RA' ascending, then secondarily by 'DEC' descending.",
        "response": "stilts tcatn nin=2 in1=c1.fits in2=c2.fits ocmd='sort \"RA -down DEC\"' out=multi_sort.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-down' 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort RA -down DEC\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '-down' 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'RA_HMS_3' converting RA in degrees to HMS string format with 3 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_3 \"degreesToHms(RA, 3)\"' out=hms_ra_3s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_3 degreesToHms(RA, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Change the name of the table itself to 'Final_DR3_Catalog'.",
        "response": "stilts tpipe in=input.fits cmd='tablename \"Final_DR3_Catalog\"' out=renamed_table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a histogram where the count values are accumulated per unit (combine=count-per-unit).",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE combine=count-per-unit out=per_unit_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge FITS files from the current directory, disabling format auto-detection to enforce FITS reading.",
        "response": "stilts tcat in='*.fits' ifmt=fits out=directory_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the SIMBAD basic database and filter the output locally to ensure only sources classified as 'GALAXY' are included.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT main_id, otype FROM basic' maxrec=1000 ocmd='select otype=\"GALAXY\"' out=simbad_galaxies.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a polygon MOC (order 12) from vertices stored in a column named 'VEC_ARRAY', assuming the vector format [X1, Y1, X2, Y2, ...].",
        "response": "stilts mocshape in=vector_poly.fits shape=polygon coords='VEC_ARRAY' order=12 out=vector_poly_o12.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter rows to keep only those with non-null values for both 'RA' and 'DEC'.",
        "response": "stilts tpipe in=data.fits cmd='select \"!NULL_RA && !NULL_DEC\"' out=clean_coords.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_RA && !NULL_DEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge spectroscopic data, where each input file has a column 'FLUX_ARRAY'. Explode this array column into individual scalar columns after concatenation.",
        "response": "stilts tcat in='spec1.fits spec2.fits' ocmd='explodecols FLUX_ARRAY' out=flux_scalars.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Overlay density contours on a Plate Carr\u00e9e plot (CAR0), setting 8 contour levels and using the 'inferno' color map for the contours themselves.",
        "response": "stilts plot2sky in=data.fits projection=car0 layer=contour lon=RA lat=DEC nlevel=8 color=inferno out=car0_inferno_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot points with size=10 pixels, and transparency set by an opaque limit of 2 (very translucent).",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y size=10 shading=transparent opaque=2 out=large_transp_mark.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I want to match on magnitude and color, with different tolerances. Match within 0.1 for magnitude (`mag_r`) and 0.2 for color (`g_minus_r`).",
        "response": "stilts tmatch2 in1=phot1.fits in2=phot2.fits matcher=2d_anisotropic params='0.1 0.2' values1='mag_r g_minus_r' values2='mag_r g_minus_r' out=mag_color_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate an HTM pixel index at level 20 for sources with coordinates RA and DEC.",
        "response": "stilts tpipe in=coords.fits cmd='addcol HTM20 \"htmIndex(20, RA, DEC)\"' out=htm_indexed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA,' 'DEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HTM20 htmIndex(20, RA, DEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA,' 'DEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Copy a table to a text output, limiting the maximum width of any cell to **20 characters**.",
        "response": "stilts tcopy in=wide_columns.fits ofmt='text(maxCell=20)' out=narrow_text.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match four tables using 'sky' (2 arcsec). After matching, only return the total number of matched rows.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky params=2 in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need the precise count of sources found by querying the Gaia TAP within a radius of 0.0001 radians.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=180.0 lat=45.0 radius='radiansToDegrees(0.0001)' omode=count",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"radiansToDegrees(0.0001)\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate two CSV files, ensuring that the input column names (e.g., 'RA.deg') are fixed to simple identifiers (e.g., 'RA_deg') during reading.",
        "response": "stilts tcat ifmt=csv in='bad_col_names1.csv bad_col_names2.csv' icmd=fixcolnames out=fixed_csv_names.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Upload two local tables (t1.fits, t2.fits) and join them against the ESA Gaia DR3 table based on a shared source ID.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT g.source_id, u1.A, u2.B FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.up1 AS u1 ON g.source_id=u1.id JOIN TAP_UPLOAD.up2 AS u2 ON g.source_id=u2.id' nupload=2 upload1=t1.fits upname1=up1 upload2=t2.fits upname2=up2 out=gaia_two_upload.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch T1, T2, T3. T1 is reference. T2 has columns 'GLON', 'GLAT'. T3 has columns 'RA', 'DEC'. Convert T2 and T3 coordinates to ICRS and match on ICRS RA/DEC.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits in2=T2.fits icmd2='addskycoords galactic icrs GLON GLAT RA DEC' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=mixed_coord_prep.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find KOA ObsCore observations taken after the year 2020 (MJD > 58849) and limit the output to 100 records.",
        "response": "stilts tapquery tapurl=https://koa.ipac.caltech.edu/TAP adql='SELECT * FROM ivoa.ObsCore WHERE t_min > 58849.0' maxrec=100 out=koa_recent_obs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the MAST CAOM service for observations within $0.0005$ radians of Galactic L=20, B=5.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=20.0 lat=5.0 radius='radiansToDegrees(0.0005)' servicetype=sia skysys=galactic out=caom_small_rad.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"radiansToDegrees(0.0005)\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the MAST GOODS HLSP service and output the result in CSV format, ensuring no header row is included.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/goods/ adql='SELECT TOP 10 ra, dec FROM goods.photometry' ofmt='csv(header=false)' out=goods_no_header.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to run a very long query asynchronously and I don't want to see progress updates.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT * FROM gaiadr3.gaia_source' sync=false progress=false",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the ESO TAP Catalogue service for tables containing the description 'VIRCAM' and output the list in plain text to the console.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT table_name, description FROM TAP_SCHEMA.tables WHERE description LIKE ''%VIRCAM%''' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find all ULLYSES HLSP observations taken after 2020 (DecYear > 2020.0), saving the results in FITS-plus format for rich metadata retention.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT * FROM ivoa.ObsCore WHERE decYear > 2020.0' ofmt=fits-plus out=ullyses_recent.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a table to a VOTable with data in an external FITS file.",
        "response": "stilts tcopy in=data.csv ofmt='votable(format=FITS,inline=false)' out=data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch T1 and T2. T2 should only contribute its single best match (best2). Use parallel execution.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=best2 runner=parallel out=best2_parallel_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Draw a set of filled rectangles (poly4 layer) defined by four corner coordinates, coloring them flat red.",
        "response": "stilts plot2sky in=rectangles.fits layer=poly4 lon1=L1 lat1=D1 lon2=L2 lat2=D2 lon3=L3 lat3=D3 lon4=L4 lat4=D4 polymode=fill shading=flat color=red out=red_filled_rects.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L1\"\n    (The name \"L1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate an ASCII MOC (order 14), explicitly setting the output name and ensuring no input format is guessed.",
        "response": "stilts pixfoot in=input.fits ra=RA dec=DEC order=14 mocfmt=ascii out=manual_moc.txt ifmt='(auto)'",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 165.8803 and latitude 4.44. Please use a search radius of 0.856 degrees. Save the results to a csv file called query_results_19.csv. Use verbosity level 3.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=165.8803 lat=4.44 radius=0.856 verb=3 omode=out ofmt=csv out=query_results_19.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 129.4148 and latitude -58.0392. Please use a search radius of 1.7713 degrees. Save the results to a csv file called query_results_137.csv. The coordinates are in the fk4 system. Use verbosity level 2.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=129.4148 lat=-58.0392 radius=1.7713 skysys=fk4 verb=2 omode=out ofmt=csv out=query_results_137.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Calculate the maximum and minimum values of the 's_ra' coordinate in the ALMA ObsCore table.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/alma adql='SELECT s_ra FROM alma.obscore' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need a MOC for sources within 1 arcsecond, converting the input coordinates from radians to degrees via an intermediate filter.",
        "response": "stilts pixfoot in=rad_in.fits icmd='addcol RA_DEG radiansToDegrees(RA_RAD); addcol DEC_DEG radiansToDegrees(DEC_RAD)' ra=RA_DEG dec=DEC_DEG radius='1.0 / 3600.0' out=rad_converted_1as.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Select every 5th row and send the table to all registered SAMP clients.",
        "response": "stilts tpipe in=data.fits cmd='every 5' omode=samp",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine tables and then enforce that the output table format is FITS-plus, including the rich metadata.",
        "response": "stilts tcat in='m1.fits m2.fits' ofmt=fits-plus out=metadata_rich.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I'm looking for high proper motion candidates by comparing three epochs. Find groups of objects within 1 arcsec, then select only groups where the total sky motion between epoch 1 and 3 is large.",
        "response": "stilts tmatchn nin=3 in1=epoch1.fits in2=epoch2.fits in3=epoch3.fits multimode=group matcher=sky params=1 values1='ra dec' values2='ra dec' values3='ra dec' fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 ocmd='select \"skyDistanceDegrees(ra_1,dec_1,ra_3,dec_3) > 1./3600.\"' out=high_pm_groups.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1./3600.'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(ra_1,dec_1,ra_3,dec_3) > 1./3600.\n\nUsage: select <expr>\n    (Unused arguments: '>' '1./3600.'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the MAST CAOM ObsCore service for rows where `dataproduct_type` is 'spectrum' and retrieve the calculated checksum.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT * FROM ivoa.ObsCore WHERE dataproduct_type = ''spectrum''' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the ESO TAP_OBS for DIT and NDIT parameters and calculate a new local column 'TOTAL_EXP' (DIT * NDIT).",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT dit, ndit FROM raw.vircam' ocmd='addcol TOTAL_EXP dit*ndit' out=eso_exp_calc.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate an ASCII MOC (order 10) for 1 arcsecond radius circles, outputting to standard output.",
        "response": "stilts pixfoot in=as_1.fits ra=RA dec=DEC radius='1.0 / 3600.0' order=10 mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Check if there is a parameter named 'SOURCE_EPOCH' and set its type to string.",
        "response": "stilts tpipe in=meta.fits cmd='setparam -type string SOURCE_EPOCH \"param$SOURCE_EPOCH\"' out=epoch_string_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "My input table `survey_radians.fits` has coordinates in radians. How do I use `pixfoot`?",
        "response": "stilts pixfoot in=survey_radians.fits ra='radiansToDegrees(RA_RAD)' dec='radiansToDegrees(DEC_RAD)' out=radians_converted.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Convert a Parquet file to a Feather file, specifying a multi-threaded read using 8 parallel reader threads.",
        "response": "stilts tcopy in=input.parquet ifmt='parquet(nThread=8)' out=feather_parallel.fea",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find sources in the MAST PanSTARRS 1 DR1 catalogue near M82 (RA 148.9, DEC 69.6) within 0.01 degree, and output the row count.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT COUNT(*) FROM dbo.detection_object WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 148.9, 69.6, 0.01))' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot two markers from the same row (mark2 layer), showing the result in the Swing GUI.",
        "response": "stilts plot2sky in=pairs.fits layer=mark2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 omode=swing",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a string column containing the bibcode URL derived from the existing 'BIBCODE' column.",
        "response": "stilts tpipe in=pubs.fits cmd='addcol BIB_URL bibcodeUrl(BIBCODE)' out=pubs_with_url.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Count the total number of records available in the PADC Helio server's tables schema.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT COUNT(*) FROM TAP_SCHEMA.tables' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 17.6861 and latitude 49.3201. Please use a search radius of 1.7856 degrees. Save the results to a votable file called query_results_128.votable. Don't use compression for the download.",
        "response": "stilts cone servicetype=sia2 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=17.6861 lat=49.3201 radius=1.7856 compress=false omode=out ofmt=votable out=query_results_128.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find rows in T_B that are NOT matched in T_A (exact ID match). T_A columns should be suffixed '_A', T_B columns suffixed '_B'.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=exact values1=ID values2=ID join=2not1 fixcols=all suffix1=_A suffix2=_B out=T_B_only_suffixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the ESO TAP_OBS service for data around RA 100, Dec 0, with a radius of 1 arcsecond, writing the output in ECSV format.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=100.0 lat=0.0 radius='1.0 / 3600.0' ofmt=ecsv out=eso_1arcsec.ecsv",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create a MOC for circles whose radius is `10**LOG_RADIUS_DEG`.",
        "response": "stilts pixfoot in=log_radii.fits radius='pow(10,LOG_RADIUS_DEG)' out=log_radii_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot markers sized by FLUX and colored by density, restricting transparency so 50 points achieve full opacity.",
        "response": "stilts plot2sky in=data.fits layer=size lon=RA lat=DEC size=FLUX shading=transparent opaque=50 out=sized_transp_density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find sources in Gaia TAP near RA 15, Dec 15, with a radius of $0.00005$ degrees, and rename the 'SOURCE_ID' column to 'ID_GAIA'.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=15.0 lat=15.0 radius=0.00005 ocmd='colmeta -name ID_GAIA SOURCE_ID' out=gaia_renamed_id.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a VOTable to FITS, writing column metadata into the FITS primary HDU (fits-plus convention).",
        "response": "stilts tcopy in=meta.vot ofmt='fits(primary=votable)' out=meta_phdu.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find the statistical summary of pulsar periods (`period`) recorded in the CSIRO Parkes Pulsar Data Archive.",
        "response": "stilts tapquery tapurl=https://data.csiro.au/psrdavo/tap adql='SELECT period FROM PSRD.cat' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve the top 50 sources from Chandra Source Catalog Release 2.1 and save the output in Feather format.",
        "response": "stilts tapquery tapurl=https://cda.cfa.harvard.edu/csc21tap adql='SELECT TOP 50 * FROM csc.master_source' ofmt=feather out=csc.feather",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a MOC from a sample of rows where the row index is a prime number (up to a limit).",
        "response": "stilts mocshape in=huge_catalog.fits icmd='select isPrime($0)' shape=point coords='array(RA,DEC)' out=prime_rows.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Can `mocshape` generate a footprint from image files?",
        "response": "No, `mocshape` requires a tabular input with columns specifying sky shapes. It cannot directly process image files like FITS images.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Search MAST HSCv3 near Galactic L=10, B=10, with a radius of $0.0002$ degrees, and perform a detailed column statistic calculation.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=10.0 lat=10.0 radius=0.0002 skysys=galactic omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a column 'RA_DMS_2' converting RA in degrees to DMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_2 \"degreesToDms(RA, 2)\"' out=dms_ra_2s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_2 degreesToDms(RA, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot the X and Y columns using transparent shading where density is the controlling factor, and use the 'plasma' map.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=density densemap=plasma out=plasma_density_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the GAVO Data Center for all table names whose table schema name contains 'sdss' and output the results as an HTML table.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT table_name FROM TAP_SCHEMA.tables WHERE schema_name LIKE ''%sdss%''' ofmt=html out=gavo_sdss_tables.html",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a remote, compressed FITS file via URL and output it to the terminal in human-readable text format.",
        "response": "stilts tcopy in=http://archive.org/data.fits.gz ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I need images from MAST CAOM (SIA) near RA 180, Dec 30, searching a cone of $0.05 \times 0.5$ degrees.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=180.0 lat=30.0 radius='0.05 * 0.5' servicetype=sia out=sia_0p025deg.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.05 * 0.5\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a column `SNR` calculated as `FLUX / FLUX_ERROR` and then keep only rows where `SNR` is greater than 5.",
        "response": "stilts tpipe in=detections.fits cmd='addcol SNR \"FLUX/FLUX_ERROR\"' cmd='select \"SNR > 5\"' out=high_snr.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select SNR > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a MOC from all sources that have a valid proper motion measurement.",
        "response": "stilts mocshape in=pm.fits icmd='select \"!NULL_PMRA && !NULL_PMDEC\"' shape=point coords='array(RA,DEC)' out=pm_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_PMRA && !NULL_PMDEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Convert a FITS table to Parquet, using **LZ4_RAW** compression.",
        "response": "stilts tcopy in=input.fits ofmt='parquet(compression=lz4_raw)' out=lz4_data.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert a Parquet file to a FITS file, specifying that the metadata should be provided by an external VOTable file, overriding any internal metadata.",
        "response": "stilts tcopy in=input.parquet ifmt='parquet(votable=meta.vot)' out=meta_override.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the GAVO Data Center near Galactic L=100, B=5, using a radius determined by $\frac{10 \text{ arcmin}}{5}$.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=100.0 lat=5.0 radius='(10.0 / 5.0) / 60.0' skysys=galactic out=gavo_2arcmin_expr.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"(10.0 / 5.0) / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query ESO TAP_CAT near RA 315, Dec 15, using $0.0005$ degrees, and filter to keep only non-null values in the 'QUALITY' column.",
        "response": "stilts cone serviceurl=http://archive.eso.org/tap_cat lon=315.0 lat=15.0 radius=0.0005 ocmd='select !NULL_QUALITY' out=eso_non_null_quality.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I need a circle MOC (radius $0.005$ degrees) that is written to standard output as a standard ASCII MOC string.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 0.005)' mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine tables T1 and T2. T2 contains an array column 'PM_VEC'. Explode this array column into scalar components named 'PM_VEC_0', 'PM_VEC_1', etc.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='explodecols PM_VEC' out=pm_vector_exploded.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Explode a 4-element array column 'CORNERS' into 4 scalar columns: 'X1', 'Y1', 'X2', 'Y2'.",
        "response": "stilts tpipe in=boxes.fits cmd='explodecols CORNERS' cmd='colmeta -name X1 C1; colmeta -name Y1 C2; colmeta -name X2 C3; colmeta -name Y2 C4' cmd='keepcols \"!C\"' out=scalars.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate tables, and then add a column 'IS_TRUE' with a constant boolean value 'true'.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='addcol IS_TRUE true' out=constant_true.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Draw a scatter plot using thick red lines (thick=3) for the markers.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y thick=3 color=red out=thick_markers.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine two VOTables and output the result as a LaTeX document table.",
        "response": "stilts tcatn nin=2 in1=small_1.vot in2=small_2.vot ofmt=latex out=report.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Execute an SIA query (SIAv2 preferred) on the KOA TAP service around RA 135, Dec -40, limiting the search cone to 1.5 arcminutes.",
        "response": "stilts cone serviceurl=https://koa.ipac.caltech.edu/TAP lon=135.0 lat=-40.0 radius='1.5 / 60.0' servicetype=sia2 out=koa_1p5arcmin.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.5 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match three tables on a 2D Cartesian plane (X, Y) within a cuboid tolerance of 5 units in X and 2 units in Y.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=2d_cuboid params='5 2' values1='X Y' values2='X Y' values3='X Y' in1=t1.fits in2=t2.fits in3=t3.fits out=cuboid_2d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate a coverage map, forcing the output format to be VOTable BINARY2 serialization (via the CDS FITS MOC format).",
        "response": "stilts pixfoot in=sources.fits ra=RA dec=DEC mocfmt=fits out=moc_binary2.vot",
        "chat.jar": "fixed",
        "error": "Error: Bad value for parameter mocfmt: Unknown value \"cds_fits\" - must be one of fits, json, ascii\nUsage: mocfmt=fits|json|ascii\n\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC from the rows where the `MAG_ERROR` is less than 0.05.",
        "response": "stilts mocshape in=photometry.fits icmd='select \"MAG_ERR < 0.05\"' shape=point coords='array(RA,DEC)' out=low_error_phot.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR < 0.05\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.05'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Calculate the ratio of the number of rows where 'FLUX' is positive to the total number of rows.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='addcol POS_RATIO \"toDouble(sum(FLUX > 0)) / $nrow\"' out=ratio_table.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0))' '/' '$nrow'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_RATIO toDouble(sum(FLUX > 0)) / $nrow\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0))' '/' '$nrow'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot an all-sky map of sources in Ecliptic coordinates using the Plate Carr\u00e9e projection (CAR), explicitly disabling longitude reflection.",
        "response": "stilts plot2sky in=data.fits viewsys=ecliptic projection=car reflectlon=false layer=mark lon=ELON lat=ELAT out=ecl_car_no_reflect.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"ELON\"\n    (The name \"ELON\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert a GBIN file to FITS (assuming I have the necessary Gaia libraries on my classpath).",
        "response": "stilts tcopy ifmt=gbin in=my_data.gbin ofmt=fits out=my_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot a histogram where bars are horizontal instead of vertical.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE sideways=true out=sideways_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot points with a variable size determined by the error column ERR, scaling the size by 5.",
        "response": "stilts plot2plane in=data.fits layer=size x=X y=Y size=ERR scale=5 autoscale=false out=scaled_error_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 10 sources from MAST SkyMapper DR4 and locally add a column `G_R_COLOR` calculated from `G_MAG` and `R_MAG`.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/skymapperdr4/ adql='SELECT TOP 10 G_MAG, R_MAG FROM smssdr4.master' ocmd='addcol G_R_COLOR \"G_MAG - R_MAG\"' out=smss_color_calc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'R_MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol G_R_COLOR G_MAG - R_MAG\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'R_MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find rows in T1 that are unmatched in T2 (anti-join). T1 coordinate RA is in hours. Convert RA to degrees inline.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='hoursToDegrees(RA_H) DEC' values2='RA DEC' join=1not2 out=inline_hours_anti_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "What are the min, max, and mean values of the A_B amplitude measurement column in the MACHO catalogue?",
        "response": "stilts tapquery tapurl=http://machotap.asvo.nci.org.au/ncitap//tap adql='SELECT A_B FROM machotap.master' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Filter the table to keep rows where the distance (DIST) is between 100 and 200 parsecs.",
        "response": "stilts tpipe in=data.fits cmd='select \"DISTANCE_PC >= 100.0 && DISTANCE_PC <= 200.0\"' out=mid_dist.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '100.0' '&&' 'DISTANCE_PC' '<=' '200.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DISTANCE_PC >= 100.0 && DISTANCE_PC <= 200.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '100.0' '&&' 'DISTANCE_PC' '<=' '200.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I want to match two tables and only keep the unmatched rows from the second table.",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' join=2not1 out=unmatched_t2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Start an asynchronous query on the ESA Herschel Archive, setting the job destruction time to automatically delete the job upon command exit.",
        "response": "stilts tapquery tapurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap adql='SELECT TOP 100 obs_id FROM ivoa.ObsCore' delete=always out=herschel_delete.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Verify that the average magnitude (MAG) is numerically finite and assert it.",
        "response": "stilts tpipe in=data.fits cmd='cache' cmd='assert isFinite(mean(MAG))' out=finite_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve the column metadata for the MAST STScI Registry resource table, explicitly enforcing TAP 1.1 interface version.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/registry adql='SELECT * FROM reg.resource' interface=tap1.1 omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "What's the difference between `multimode=pairs` and `multimode=group` in `tmatchn`?",
        "response": "In `pairs` mode, one table is designated as the reference table, and pair matches are found between it and each of the other tables. In `group` mode, the command identifies groups of objects across all input tables that are mutually linked by pair matches in a 'friends of friends' manner, with no single table being privileged as the reference [1-4].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a CSV file, calculate the base-10 logarithm of 'FLUX', and save the result as a portable FITS-plus file to retain metadata.",
        "response": "stilts tpipe in=photometry.csv ifmt=csv cmd='addcol LOG_FLUX log10(FLUX)' ofmt=fits-plus out=log_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables, converting a string column 'RA_STR' (HMS format) to a numeric column 'RA_DEG' in every input table.",
        "response": "stilts tcat in='s1.fits s2.fits' icmd='addcol RA_DEG hmsToDegrees(RA_STR)' out=hms_to_deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Upload a local table to VizieR TAP service, filtering the local table first to include only objects with a quality flag of 1 (`ucmd1`).",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT * FROM \"II/246/out\" AS t JOIN TAP_UPLOAD.targets AS u ON 1=CONTAINS(POINT(''ICRS'', t.ra, t.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.001))' nupload=1 upload1=local_data.fits upname1=targets ucmd1='select QUALITY_FLAG==1' out=vizier_clean_xmatch.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate tables and, after joining, shuffle the resulting rows randomly.",
        "response": "stilts tcat in='s1.fits s2.fits' ocmd=shuffle out=randomly_shuffled.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Calculate the checksum of a query retrieving a single ObsCore row from the Chandra X-ray Observatory Data Archive.",
        "response": "stilts tapquery tapurl=https://cda.harvard.edu/cxctap adql='SELECT TOP 1 * FROM ivoa.ObsCore' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Overlay an Equatorial grid onto a Galactic view plot, coloring the overlaid grid red and setting the transparency to 0.7.",
        "response": "stilts plot2sky viewsys=galactic layer_m=mark lon_m=L lat_m=B layer_g=skygrid gridsys_g=equatorial gridcolor_g=red transparency_g=0.7 out=gal_eq_transp_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter in_m: null value not allowed\nUsage: in_m=<table>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Filter the table to remove rows where the magnitude 'MAG' is outside the range 10 to 20.",
        "response": "stilts tpipe in=cat.fits cmd='select \"MAG >= 10.0 && MAG <= 20.0\"' out=mag_range_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '10.0' '&&' 'MAG' '<=' '20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG >= 10.0 && MAG <= 20.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '10.0' '&&' 'MAG' '<=' '20.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Count the total number of table schemas available on the MAST CAOM ObsCore service.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT COUNT(*) FROM TAP_SCHEMA.schemas' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "My DEC column is in radians `DEC_RAD` but RA is in degrees `RA_DEG`. How to make the MOC?",
        "response": "stilts pixfoot in=mixed_units.fits ra=RA_DEG dec='radiansToDegrees(DEC_RAD)' out=mixed_units_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Can you plot a line connecting points, sorted by their x-value?",
        "response": "stilts plot2plane in=unsorted.fits layer=line x=X y=Y sortaxis=X",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Calculate statistics on `data.fits` after applying a filter from the file `my_selection.stilts`.",
        "response": "stilts tpipe in=data.fits cmd=@my_selection.stilts omode=stats",
        "chat.jar": "fixed",
        "error": "Error: my_selection. (No such file or directory)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the VizieR TAP service and explicitly use a post-processing command to remove all table parameters (metadata).",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT TOP 10 * FROM \"II/246/out\"' ocmd='clearparams *' out=vizier_no_params.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I have two FITS files. In the second file, the coordinates (RA_FK4, DEC_FK4) are in the old FK4 system; convert them to ICRS before concatenating.",
        "response": "stilts tcatn nin=2 in1=t_icrs.fits in2=t_fk4.fits icmd2='addskycoords fk4 icrs RA_FK4 DEC_FK4 RA DEC' ocmd='keepcols \"RA DEC\"' out=icrs_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column containing the name of the input file itself.",
        "response": "stilts tpipe in=large_file.fits cmd='addcol FILENAME param$in' out=file_provenance.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a Gaussian curve and explicitly turn off the automatic plotting of the mean line.",
        "response": "stilts plot2plane in=velocities.fits layer=gaussian x=VELOCITY showmean=false out=gaussian_no_mean.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VELOCITY\"\n    (The name \"VELOCITY\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T1, T2, T3 using Cartesian 2D cuboid coordinates (X, Y) with 1 unit tolerance in X and 10 units in Y.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=2d_cuboid params='1 10' values1='X Y' values2='X Y' values3='X Y' in1=T1.fits in2=T2.fits in3=T3.fits out=cuboid_aniso_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine three tables. For all inputs, filter to include only rows where 'QUALITY_FLAG' is not null.",
        "response": "stilts tcatn nin=3 in1=Q1.fits icmd1='select !NULL_QUALITY_FLAG' in2=Q2.fits icmd2='select !NULL_QUALITY_FLAG' in3=Q3.fits icmd3='select !NULL_QUALITY_FLAG' out=no_null_quality.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the ESO TAP_OBS service for ObsCore entries and locally calculate the row count.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM ivoa.ObsCore' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "My radius column `DIAM_ARCSEC` is a diameter in arcseconds. How do I use it with `shape=circle`?",
        "response": "stilts mocshape in=diameters.fits shape=circle coords='array(RA,DEC,DIAM_ARCSEC / 2.0 / 3600.0)' out=diameters_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Check if every row in 'CLEAN_FLAG' is true, aborting if not, then discard the output table.",
        "response": "stilts tpipe in=data.fits cmd='assert CLEAN_FLAG' omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Upload `my_sources.fits`, preprocess it to select only sources with `FLAG==0`, and then match against `twomass.data` at GAVO.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap nupload=1 upload1=my_sources.fits ucmd1='select FLAG==0' upname1=clean_src adql='SELECT t.*, s.* FROM twomass.data AS t JOIN TAP_UPLOAD.clean_src AS s ON 1=CONTAINS(POINT(\"J2000\",t.raj2000,t.dej2000),CIRCLE(\"J2000\",s.ra,s.dec,2.0/3600.))' out=clean_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw a line fit (linearfit) where the fit ignores data points outside the range X=[1].",
        "response": "stilts plot2plane in=data.fits layer_m=mark x_m=X y_m=Y layer_f=linearfit x_f=X y_f=Y icmd_f='select X>=0 && X<=1' out=linearfit_filtered.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot the median position (statmark layer) for an array-valued position column POS_ARRAY.",
        "response": "stilts plot2plane in=data.fits layer=statmark xs=POS_ARRAY ys=POS_ARRAY[1] xcombine=median ycombine=median size=5 shape=cross out=median_mark.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"POS_ARRAY\"\n    (The name \"POS_ARRAY\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find all pairs within 2 arcsec between `cat1.fits` and `cat2.fits`. In the output, I want a column `SCORE` which is a combination of positional separation and magnitude difference.",
        "response": "stilts tmatch2 in1=cat1.fits in2=cat2.fits matcher=sky*1d params='2 1.0' values1='RA DEC MAG' values2='RA DEC MAG' find=all out=weighted_score_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find matches within a 5 pixel radius using detector coordinates (X_IMAGE, Y_IMAGE).",
        "response": "stilts tmatch2 in1=chip1.fits in2=chip2.fits matcher=2d params=5 values1='X_IMAGE Y_IMAGE' values2='X_IMAGE Y_IMAGE' out=detector_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot the analytic function $y = x^2$ (layer 1, red) and $y = 5x$ (layer 2, blue) on the same plot, X range [-1, 6].",
        "response": "stilts plot2plane xmin=-1 xmax=6 layer_1=function fexpr_1='x*x' color_1=red layer_2=function fexpr_2='5*x' color_2=blue out=dual_function.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Copy a remote FITS file and convert it to the **simple ASCII format** on standard output.",
        "response": "stilts tcopy in=http://archive.com/file.fits ofmt=ascii out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match four catalogs using isotropic 4D Cartesian coordinates (X, Y, Z, T) within 10 units.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=4d params=10 values1='X Y Z T' values2='X Y Z T' values3='X Y Z T' values4='X Y Z T' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits out=cartesian_4d_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add a column 'PLX_INV_SAFE' calculated as the inverse of parallax, returning a safe default of 0.0 if parallax is null or non-positive.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_INV_SAFE \"PARALLAX > 0.0 ? 1.0 / PARALLAX : 0.0\"' out=safe_inverse_parallax.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0' '?' '1.0' '/' 'PARALLAX' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_INV_SAFE PARALLAX > 0.0 ? 1.0 / PARALLAX : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0.0' '?' '1.0' '/' 'PARALLAX' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve 50 records from the Subaru MOIRCS summary table and locally calculate the total observation time in minutes (assuming a column `duration` is in seconds).",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/moircs adql='SELECT TOP 50 duration FROM moircs.summary' ocmd='addcol duration_min duration/60.0' out=moircs_time_min.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve the metadata (column definitions) for the main table in the MAST CANDELS HLSP service, running synchronously.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT * FROM candels.photometry' sync=true omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Merge tables, adding a column that contains the absolute path of the originating table location.",
        "response": "stilts tcat in='local/t1.fits local/t2.fits' loccol=Full_Path out=full_path_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables and write the final result as a compressed ASCII file.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=ascii out=merged_ascii.txt.gz",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Use the celestial proper motion vector propagation function (`epochPropErr`) to calculate the astrometric parameters at J1950.0 (epoch difference of -50 years).",
        "response": "stilts tpipe in=gaia_22.fits cmd='addcol J1950_PROP \"epochPropErr(-50.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV, RAE, DECE, PLXE, PMRAE, PMDECE, RVE, RAC, RAPLX, RAPMRA, RAPMDEC, DECPLX, DECPMRA, DECPMDEC, PLXPMRA, PLXPMDEC, PMRAPMDEC))\"' out=j1950_astrom.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV,' 'RAE,' 'DECE,' 'PLXE,' 'PMRAE,' 'PMDECE,' 'RVE,' 'RAC,' 'RAPLX,' 'RAPMRA,' 'RAPMDEC,' 'DECPLX,' 'DECPMRA,' 'DECPMDEC,' 'PLXPMRA,' 'PLXPMDEC,' 'PMRAPMDEC))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol J1950_PROP epochPropErr(-50.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV, RAE, DECE, PLXE, PMRAE, PMDECE, RVE, RAC, RAPLX, RAPMRA, RAPMDEC, DECPLX, DECPMRA, DECPMDEC, PLXPMRA, PLXPMDEC, PMRAPMDEC))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV,' 'RAE,' 'DECE,' 'PLXE,' 'PMRAE,' 'PMDECE,' 'RVE,' 'RAC,' 'RAPLX,' 'RAPMRA,' 'RAPMDEC,' 'DECPLX,' 'DECPMRA,' 'DECPMDEC,' 'PLXPMRA,' 'PLXPMDEC,' 'PMRAPMDEC))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "What does `mocfmt=raw` do?",
        "response": "The `mocfmt=raw` option outputs the MOC as a simple binary stream of 64-bit integers representing the UNIQ values of the HEALPix cells. This is a compact but non-standard format.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need to combine all observation logs listed in the file 'log_files.txt'. Use lazy reading to conserve resources.",
        "response": "stilts tcat in=@log_files.txt lazy=true out=master_log.fits",
        "chat.jar": "fixed",
        "error": "Error: log_files.txt (No such file or directory)\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables T1 and T2, but T1 needs a synthetic column 'COLOR' defined as B_MAG - V_MAG added before joining T2.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='addcol COLOR B_MAG-V_MAG' in2=T2.fits out=color_appended.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plotting multiple Y values (Y1, Y2, Y3 array) against a single X array using the marks layer.",
        "response": "stilts plot2plane in=arrays.fits layer=marks xs=X_ARR ys='array(Y1_ARR, Y2_ARR, Y3_ARR)' out=multiple_y_arrays.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_ARR\"\n    (The name \"X_ARR\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Crossmatch T1 and T2 using exact match on 'ID'. After matching, compute and add column 'ID_RATIO' = ID_1/ID_2.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID fixcols=dups suffix1=_1 suffix2=_2 ocmd='addcol ID_RATIO ID_1/ID_2' out=exact_with_ratio.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot polygons defined by coordinate arrays, setting the drawing mode to 'star' (lines from center to vertices).",
        "response": "stilts plot2sky in=regions.fits layer=polygon coords=VERTICES polymode=star out=poly_star_mode.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Ensure a column 'FLUX_ERR' exists and set its size (elementsize) to 10 bytes for strings.",
        "response": "stilts tpipe in=data.fits cmd='addcol -elsize 10 FLUX_ERR 0.05' out=fixed_string_size.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Overlay a Galactic grid (blue) and an Ecliptic grid (red) onto an Equatorial plot.",
        "response": "stilts plot2sky viewsys=equatorial layer_g=skygrid gridsys_g=galactic gridcolor_g=blue layer_e=skygrid gridsys_e=ecliptic gridcolor_e=red out=triple_grid.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a histogram with logarithmic y-axis and cumulative values.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE ylog=true cumulative=true",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Use the efficient sorting filter to find the 100 rows with the smallest 'ERR' value.",
        "response": "stilts tpipe in=data.fits cmd='sorthead 100 ERR' out=best_errors.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'Z_COMOVING_ABS_DIST_2' converting Z to absolute magnitude (M_ABS) via transverse comoving distance.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol ABS_MAG_TRANS \"MAG_V - distanceToModulus(comovingDistanceT(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC)\"' out=galaxies_abs_mag_trans.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'distanceToModulus(comovingDistanceT(Z,' '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ABS_MAG_TRANS MAG_V - distanceToModulus(comovingDistanceT(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'distanceToModulus(comovingDistanceT(Z,' '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I'm matching three catalogs of galaxies. For each, I want to filter out objects with `CLASS != 'GALAXY'` before matching.",
        "response": "stilts tmatchn nin=3 in1=c1.fits in2=c2.fits in3=c3.fits icmd1='select CLASS==\"GALAXY\"' icmd2='select CLASS==\"GALAXY\"' icmd3='select CLASS==\"GALAXY\"' multimode=group matcher=sky params=10 values1='ra dec' values2='ra dec' values3='ra dec' out=galaxy_only_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match T1 and T2. T2 columns should use the suffix '_T2'. Only output the resulting table metadata.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID fixcols=all suffix2=_T2 omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I want to stack `a.csv`, `b.csv`, `c.csv`. The final output should just show the first 5 rows on my screen.",
        "response": "stilts tcat ifmt=csv in=\"a.csv b.csv c.csv\" ocmd='head 5' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Join three tables, but only if they have more than 1000 rows each.",
        "response": "This requires pre-checking row counts. You would typically do this in a script rather than a single `tcatn` command.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query SIMBAD TAP for objects around 17h 00m 00s, -45d 00m 00s, converting coordinates, and using 0.005 degrees radius, then output column definitions only.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon='hmsToDegrees(17.0, 0, 0)' lat='dmsToDegrees(-45.0, 0, 0)' radius=0.005 omode=meta",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(17.0, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I need the coverage map for all objects where the color (MAG_B - MAG_R) is greater than 1.0.",
        "response": "stilts pixfoot in=colors.fits icmd='select \"MAG_B - MAG_R > 1.0\"' ra=RA dec=DEC out=red_objects_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_R' '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_B - MAG_R > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG_R' '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Add a scalar column 'FLUX_RATIO' calculated as 'FLUX_A' / 'FLUX_B', and suppress the output if the operation causes division by zero or null values.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_RATIO \"FLUX_A / FLUX_B\"' cmd='select \"!NULL_FLUX_RATIO\"' out=safe_ratio.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_RATIO FLUX_A / FLUX_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Copy data from a remote HAPI service URL and save it as an ECSV file.",
        "response": "stilts tcopy in='https://vires.services/hapi/data?dataset=GRACE_A_MAG&start=2009-01-01&stop=2009-01-02&include=header' ifmt=hapi out=hapi_data.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate a summary report showing the sky coverage proportion of sources in objects.csv (columns RA, DEC), setting the input format explicitly.",
        "response": "stilts mocshape in=objects.csv ifmt=csv shape=point coords='array(RA, DEC)' mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Join two event lists exactly on 'EVENT_ID'. T1 is ASCII, T2 is FITS. Output result to standard output.",
        "response": "stilts tmatch2 ifmt1=ascii in1=events1.txt in2=events2.fits matcher=exact values1=EVENT_ID values2=EVENT_ID ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate an MOC for objects around Ecliptic Lon=90, Lat=0, converting coordinates via an input filter, with radius 10 arcminutes.",
        "response": "stilts pixfoot in=ecl_data.fits icmd='addskycoords ecliptic icrs ELON ELAT RA DEC' ra=RA dec=DEC radius='10.0 / 60.0' out=ecl_10am.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Join table1.fits and table2.fits. For table1, select only rows where Vmag < 15. For table2, only keep the first 100 rows.",
        "response": "stilts tcatn nin=2 in1=table1.fits icmd1='select \"Vmag < 15\"' in2=table2.fits icmd2='head \"100\"' out=mixed_filter_concat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Vmag < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Filter the input table to select rows where the source ID is an even number, then generate a MOC for 1 arcminute radius.",
        "response": "stilts pixfoot in=even_ids.fits icmd='select \"ID % 2 == 0\"' ra=RA dec=DEC radius='1.0 / 60.0' out=even_ids_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the MAST ULLYSES HLSP service for observations where the wavelength minimum is below 1000 Angstroms (UV data).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT * FROM ivoa.ObsCore WHERE em_min < 1000' out=ullyses_uv_filter.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match `t1.fits`, `t2.fits`, `t3.fits`, `t4.fits`, and `t5.fits` in group mode, and use a HEALPix level of 12 for the internal sky binning.",
        "response": "stilts tmatchn nin=5 in1=t1.fits in2=t2.fits in3=t3.fits in4=t4.fits in5=t5.fits multimode=group matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' values4='ra dec' values5='ra dec' tuning=12 out=5way_tuned_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the ESO TAP_OBS SSA service around RA 340, Dec 60, using $20$ arcseconds, and rename the 'RA' and 'DEC' columns to 'RA_ICRS' and 'DEC_ICRS'.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=340.0 lat=60.0 radius='20.0 / 3600.0' servicetype=ssa ocmd='colmeta -name RA_ICRS RA; colmeta -name DEC_ICRS DEC' out=ssa_renamed_icrs.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"20.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "My radius is `R_PIX` pixels, and my plate scale is `SCALE_AS` arcsec/pixel. How do I make the MOC?",
        "response": "stilts mocshape in=plate_data.fits shape=circle coords='array(RA,DEC, R_PIX * SCALE_AS / 3600.0)' out=plate_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Concatenate tables, only retaining the first 1000 rows from each input file before combining.",
        "response": "stilts tcat in='c1.fits c2.fits c3.fits' icmd='head 1000' out=pre_filtered_head.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Read a CSV file where numeric columns should be forced to 64-bit precision (long and double) by ignoring 32-bit types (notypes).",
        "response": "stilts tcopy in=numeric_input.csv ifmt='csv(notypes=int;float)' out=high_precision.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Concatenate a sequence of files, forcing lazy reading, and outputting the final row count.",
        "response": "stilts tcat in='chunk*.fits' lazy=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 215.4112 and latitude 81.9598. Please use a search radius of 1.0202 degrees. Save the results to a csv file called query_results_174.csv. Don't use compression for the download.",
        "response": "stilts cone servicetype=sia1 serviceurl=http://irsa.ipac.caltech.edu/sia lon=215.4112 lat=81.9598 radius=1.0202 compress=false omode=out ofmt=csv out=query_results_174.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot source positions, coloring points by density using translucent shading, setting the sensitivity level (translevel) to 0.01 for maximum density visualization.",
        "response": "stilts plot2sky in=crowded.fits layer=mark lon=RA lat=DEC shading=translucent translevel=0.01 out=max_sens_translucent.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I need the MOC for sources where the radius is the $\text{stdev}(\text{FLUX})$ in the column, constrained by minimum FLUX.",
        "response": "stilts pixfoot in=stdev_flux.fits icmd='addcol STDEV_FLUX stdev(FLUX)' ra=RA dec=DEC radius=STDEV_FLUX out=stdev_flux_radius.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. Only keep matched T1 rows, and discard all columns from T2 and T3 except 'ID'.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=exact values1=ID values2=ID values3=ID in1=T1.fits join1=match in2=T2.fits icmd2='keepcols ID' in3=T3.fits icmd3='keepcols ID' out=T1_inner_ID_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the MAST PanSTARRS 1 DR2 catalogue, requiring authentication, and setting the maximum records returned to 500.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT * FROM dbo.detection_object' auth=true maxrec=500 out=ps1_auth_limit.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a local file to a remote URL using the obsolete AstroGrid MySpace protocol.",
        "response": "stilts tcopy in=local.fits out=myspace:/remote/data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Filter the input to keep only non-null values in the MAGNITUDE column, then generate an order 11 MOC.",
        "response": "stilts mocshape in=mag_data.fits icmd='select !NULL_MAGNITUDE' shape=point coords='array(RA, DEC)' order=11 out=not_null_mag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 16 MOC for objects within a radius defined by the constant $10 / 3600 \times 2$.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 10.0 / 3600.0 * 2)' order=16 out=scaled_10as.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot two positions per row (P1, P2) as markers using the mark2 layer, size 4.",
        "response": "stilts plot2plane in=pairs.fits layer=mark2 x1=X1 y1=Y1 x2=X2 y2=Y2 size=4 out=mark2_size4.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert a time column from decimal year to MJD using `mjdToDecYear`'s inverse.",
        "response": "stilts tpipe in=times.fits cmd='replacecol TIME mjdToDecYear(TIME)' out=times_mjd.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "How can I use `tapquery` to just see the metadata of the `ivoa.obscore` table at GAVO?",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM ivoa.obscore' maxrec=0 omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'COM_VOL' calculating the comoving volume (Gpc\u00b3) out to redshift Z using standard cosmology.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol COM_VOL \"comovingVolume(Z, 70.0, 0.3, 0.7)\"' out=galaxies_volume.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COM_VOL comovingVolume(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match two tables on sky position (1 arcsec) and proper motion (10 mas/yr) combined. PMRA is the proper motion value.",
        "response": "stilts tmatch2 in1=C1.fits in2=C2.fits matcher=sky+1d params='1 10' values1='RA DEC PMRA' values2='RA DEC PMRA' out=pos_pm_1d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Filter rows where the proper motion in RA is exactly 0.0.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMRA == 0.0\"' out=zero_pmra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA == 0.0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a file in the AAS MRT format, explicitly setting `errmode=FAIL` to stop on formatting errors.",
        "response": "stilts tcopy in=mrt_risky.txt ifmt='mrt(errmode=FAIL)' out=safe_mrt.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find 5 resources from the MAST Registry service, explicitly defining the query language as ADQL.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/registry adql='SELECT TOP 5 * FROM reg.resource' language=ADQL out=mast_reg_adql.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC for circles whose radius is dynamically calculated as the magnitude error (MAG_ERR) multiplied by 5, converted to degrees.",
        "response": "stilts mocshape in=errors.fits shape=circle coords='array(RA, DEC, MAG_ERR * 5.0)' out=mag_err_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve 10 ObsCore entries from the EVN Data Archive and output them in the rich metadata FITS format (fits-plus).",
        "response": "stilts tapquery tapurl=http://evn-vo.jive.eu/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' ofmt=fits-plus out=evn_obs_plus.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Show the structural definition (metadata) of the observation summary table from the Subaru MOIRCS data service.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/moircs adql='SELECT * FROM moircs.summary' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch three observational epochs (e1.fits, e2.fits, e3.fits) by position (3 arcsec) and proper motion (10 mas/yr).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky+2d_anisotropic params='3 10 10' values1='RA DEC PMRA PMDEC' values2='RA DEC PMRA PMDEC' values3='RA DEC PMRA PMDEC' in1=e1.fits in2=e2.fits in3=e3.fits out=spacetime_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Join table1.csv and table2.csv where the SOURCE_ID column is exactly the same in both (exact matcher).",
        "response": "stilts tmatch2 ifmt1=csv in1=table1.csv ifmt2=csv in2=table2.csv matcher=exact values1=SOURCE_ID values2=SOURCE_ID out=exact_id_join.csv",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve 10 ObsCore entries from the Chandra X-ray Observatory Data Archive and output the result in ASCII text format.",
        "response": "stilts tapquery tapurl=https://cda.harvard.edu/cxctap adql='SELECT TOP 10 * FROM ivoa.ObsCore' ofmt=ascii out=chandra_sample.txt",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a density map (skydensity, level 7) showing the mean proper motion magnitude (PM_MAG) per pixel, using the 'viridis' color map.",
        "response": "stilts plot2sky in=pm_cat.fits layer=skydensity lon=RA lat=DEC level=7 combine=mean weight=PM_MAG auxmap=viridis out=mean_pm_hpx7.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the J-PLUS DR2 Catalogue, retrieving a sample of rows and columns and outputting the result in FITS format.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jplus-dr2 adql='SELECT TOP 10 ra, dec, z_median FROM jplus_dr2.master' ofmt=fits out=jplus_dr2_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge `set1.vot`, `set2.vot`, `set3.vot`. Add a column `SetNumber` indicating which file the row is from, and a column `OriginalFile` with the filename.",
        "response": "stilts tcat in=set1.vot in=set2.vot in=set3.vot seqcol=SetNumber loccol=OriginalFile out=full_set.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a JSON MOC for objects where the error ellipse semi-major axis (A_WORLD) is greater than 10 arcseconds.",
        "response": "stilts mocshape in=ellipses.fits icmd='select \"A_WORLD > 10.0\"' shape=point coords='array(RA, DEC)' out=large_ellipse_moc",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select A_WORLD > 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Convert 'spectral_data.fits' to VOTable, ensuring the **FITS serialization** is used.",
        "response": "stilts tcopy in=spectral_data.fits ofmt='votable(format=FITS)' out=spec.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate a table of 100 rows, add a random number column 'WEIGHTS', and output the total row count.",
        "response": "stilts tpipe in=:loop:100 cmd='addcol WEIGHTS random($0)' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge large tables, keeping the input file location's unique name part, and discard output to check performance.",
        "response": "stilts tcatn nin=2 in1=huge_a.fits in2=huge_b.fits uloccol=FilePart omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the ASI SSDC TAP Service for 10 ObsCore records and output them to standard output in the verbose VOTable format (TABLEDATA).",
        "response": "stilts tapquery tapurl=https://tools.ssdc.asi.it/TAPSSDC/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' ofmt='votable(format=TABLEDATA)' out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate table, and replace null values in the 'FLUX_ERR' column with a fixed value of 0.001.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replaceval null 0.001 FLUX_ERR' out=fixed_flux_err.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Join two catalogs based on matching elliptical regions in Cartesian space (2d_ellipse). Characteristic size is 10 units.",
        "response": "stilts tmatch2 in1=R1.fits in2=R2.fits matcher=2d_ellipse params=10 values1='X Y A B PA' values2='X Y A B PA' out=cartesian_ellipse_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T2 is a synthetic star field generated by skysim. T3 is a Parquet file.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 values1='RA DEC' values2='ra dec' values3='RA DEC' in1=T_REF.fits in2=:skysim:10000 in3=T3.parquet ifmt3=parquet out=ref_sim_parquet_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine three tables, then eliminate any adjacent duplicate rows based on the primary 'ID' column.",
        "response": "stilts tcat in='c1.fits c2.fits c3.fits' ocmd='sort ID; uniq ID' out=unique_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a MOC for sources with a luminosity greater than 1e30.",
        "response": "stilts pixfoot in=luminosities.fits icmd='select \"LUMINOSITY > 1e30\"' out=bright_sources.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1e30'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select LUMINOSITY > 1e30\n\nUsage: select <expr>\n    (Unused arguments: '>' '1e30'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match two catalogs using position and magnitude difference (sky+1d). T1 magnitude is in log scale, T2 magnitude is linear. Convert T2 to log scale.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='replacecol MAG log10(MAG)' matcher=sky+1d params='3 0.1' values1='RA DEC MAG' values2='RA DEC MAG' out=log_mag_conversion.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the VizieR TAP engine around 12h 00m 00s, 30d 00m 00s, limiting the search radius to 1 arcminute, and sort the results by separation distance before outputting the top 20 rows.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=180.0 lat=30.0 radius=0.016666666666666666 ocmd='sort Separation' ocmd='head 20' out=sorted_vizier.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot elliptical footprints defined by STC-S strings, using the 'star' polygon mode.",
        "response": "stilts plot2sky in=footprints.fits layer=area area=S_REGION areatype=STC-S polymode=star out=stcs_star.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"S_REGION\"\n    (The name \"S_REGION\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'ERROR_COND_5' that is 1.0 if 'ERR_A' is greater than 1.0, and 0.0 otherwise, using the conditional operator.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_5 \"ERR_A > 1.0 ? 1.0 : 0.0\"' out=conditional_error_5.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_5 ERR_A > 1.0 ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '1.0' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Copy a VOTable to a FITS file, forcing the column width metadata to be optimized for narrow strings.",
        "response": "stilts tcopy in=short_strings.vot out=opt_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I have a FITS file, an ECSV file, and a Parquet file. Combine them into a single FITS file.",
        "response": "stilts tcatn nin=3 in1=d1.fits in2=d2.ecsv ifmt2=ecsv in3=d3.parquet out=multi_format.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Upload a local table of targets (`targets.fits`) to MAST HSCv3 and retrieve only the `hst_id` and calculated separation (`sep_arcsec`) columns resulting from the crossmatch within 1 arcsecond.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT t.hst_id, 3600*DISTANCE(POINT(''ICRS'', t.ra, t.dec), POINT(''ICRS'', u.ra, u.dec)) AS sep_arcsec FROM hsc_v3.point AS t JOIN TAP_UPLOAD.targets AS u ON 1=CONTAINS(POINT(''ICRS'', t.ra, t.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.0002777))' nupload=1 upload1=targets.fits upname1=targets out=hsc_minimal_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a HEALPix map table (HPX_MAP.fits) and use the histogram function to scale the map coloring.",
        "response": "stilts plot2sky in=HPX_MAP.fits layer=healpix value=VALUE auxfunc=histogram out=hpx_histogram_scale.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Merge tables and then calculate the first quartile (Q1) and third quartile (Q3) of the final combined 'FLUX' column.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='keepcols \"FLUX\"' omode=stats ocmd='keepcols \"Q1 Q3\"'",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Q3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Q1 Q3\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Q3'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot markers sized by MAG and colored by DENSITY, using the 'weighted' shading mode (combining median MAG).",
        "response": "stilts plot2sky in=sources.fits layer=size lon=RA lat=DEC size=MAG shading=weighted weight=MAG combine=median out=median_mag_weighted_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a scatter plot with axes fixed from X=-10 to 10 and Y=0 to 500.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xmin=-10 xmax=10 ymin=0 ymax=500 out=fixed_range.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the WISE IRSA TAP service for data around Galactic L=90, B=20, with a radius of 0.0005 degrees, and output the row count.",
        "response": "stilts cone serviceurl=https://irsa.ipac.caltech.edu/TAP lon=90.0 lat=20.0 radius=0.0005 skysys=galactic omode=count",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Rename the column 'G_MAG_ERR' to simply 'GERR' and save the result.",
        "response": "stilts tpipe in=phot.fits cmd='colmeta -name GERR G_MAG_ERR' out=phot_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a PNG image named `cmd_plot.png` of a color-magnitude diagram (CMD) from `photometry.vot`. X-axis should be 'g-r' and Y-axis should be 'g'.",
        "response": "stilts plot2plane in=photometry.vot layer=mark x=g-r y=g out=cmd_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"g-r\"\n    (The name \"g\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 5 source entries from the KIS Science Data Centre, running synchronously, and locally filter the output to keep only the source identifier and coordinates.",
        "response": "stilts tapquery tapurl=http://dachs.sdc.leibniz-kis.de/tap adql='SELECT TOP 5 source_id, ra, dec, some_other_col FROM main_table' sync=true ocmd='keepcols \"source_id ra dec\"' out=kis_coords.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine T1 and T2. In T1, drop the column that is third from the end.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='delcols $ncol-2' in2=T2.fits out=t1_col_dropped.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Submit an asynchronous query to the ESO TAP_OBS for VIRCAM calibration data, ensuring the polling interval is 15 seconds (15000ms).",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM calib.vircam WHERE calib_type = ''BIAS''' poll=15000 out=eso_bias_slow.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need SIA metadata from MAST MissionMAST for images around RA 15, Dec 15, using a cone of 5 arcseconds.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/missionmast/ lon=15.0 lat=15.0 radius='5.0 / 3600.0' servicetype=sia out=missionmast_5as.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Replace null values in boolean column 'FLAG' with false.",
        "response": "stilts tpipe in=bool_data.fits cmd='replacecol FLAG \"NULL_FLAG ? false : FLAG\"' out=bool_fixed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' 'false' ':' 'FLAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLAG NULL_FLAG ? false : FLAG\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' 'false' ':' 'FLAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch five tables. For table 3, rename 'X_IMG' and 'Y_IMG' to 'X' and 'Y' before matching in 2D Cartesian space (5 pixel tolerance).",
        "response": "stilts tmatchn nin=5 multimode=group matcher=2d params=5 in1=t1.fits in2=t2.fits in3=t3.fits icmd3='colmeta -name X X_IMG; colmeta -name Y Y_IMG' in4=t4.fits in5=t5.fits values1='X Y' values2='X Y' values3='X Y' values4='X Y' values5='X Y' out=renamed_2d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Run a synchronous query to IRSA's 2MASS PSC table for 10 rows and output only the table metadata.",
        "response": "stilts tapquery tapurl=https://irsa.ipac.caltech.edu/TAP adql='SELECT TOP 10 * FROM allsky_2mass_psc' sync=true omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'DEC_DMS' converting DEC in degrees to DMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_1 \"degreesToDms(DEC, 1)\"' out=dms_dec_1s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_1 degreesToDms(DEC, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query GAVO TAP at Galactic L=50, B=10, with a radius of 1 arcsecond, converting the coordinate system for the request.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=50.0 lat=10.0 radius='1.0 / 3600.0' skysys=galactic out=gavo_gal_1arcsec.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create a scatter plot of magnitude G vs (G-R) color, explicitly setting the size of the markers to 2 pixels.",
        "response": "stilts plot2plane in=photometry.fits layer=mark x='G-R' y=G size=2 out=cmd_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"G-R\"\n    (The name \"G\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Group match five tables (A-E) using sky position (1 arcsec). Output the result to VOTable using BINARY2 format.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA DEC' in1=A.fits in2=B.fits in3=C.fits in4=D.fits in5=E.fits ofmt='votable(format=BINARY2)' out=five_way_binary2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers sized by 'FLUX' and colored by 'TEFF' using Paux shading, specifying the 'sunset' map.",
        "response": "stilts plot2sky in=sources.fits layer=size lon=RA lat=DEC size=FLUX shading=paux aux=TEFF pmap=sunset out=sunset_paux_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve the top 10 rows from the ASI SSDC TAP Service and output the result in Feather format.",
        "response": "stilts tapquery tapurl=https://tools.ssdc.asi.it/TAPSSDC/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' ofmt=feather out=ssdc_sample.feather",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge three tables. Output the result in HTML table format.",
        "response": "stilts tcatn nin=3 in1=D1.fits in2=D2.fits in3=D3.fits ofmt=html out=report.html",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot density contours (contour layer) using linear scaling and setting the base zero level to 0.5.",
        "response": "stilts plot2plane in=data.fits layer=contour x=X y=Y scaling=linear zero=0.5 out=contour_zero_half.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Submit an asynchronous job to the XMM-Newton archive, setting a maximum job execution duration of 1800 seconds (30 minutes).",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore' executionduration=1800 out=xmm_30min_job.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a table and output it using the **Tab-Separated Table (TST) format**.",
        "response": "stilts tcopy in=input.fits out=output.tst ofmt=tst",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Start a long asynchronous query against the ESA XMM-Newton archive and ensure the job is saved indefinitely on the server after completion.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore WHERE obs_collection = ''XMM'' AND em_max > 1000' delete=never out=xmm_persistent.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query GAVO DC for the SDSS DR16 QSO table, retrieve 10 rows, and locally calculate the row density (`COUNT/AREA`) given a constant area size.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 10 ra, dec FROM sdss.dr16qso' ocmd='addcol AREA 10.0; addcol DENSITY 10.0/AREA' out=gavo_density_calc.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read an ASCII file, defining the output maximum string size (`elsize`) for the ASCII handler based on content sampling.",
        "response": "stilts tcopy in=strings.txt ifmt=ascii out=strings.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match T1 and T2 on a 2D Cartesian plane (X, Y). T1 coordinates are calculated from a vector array 'POS_VEC' of size 2.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='explodecols POS_VEC; colmeta -name X POS_VEC_0; colmeta -name Y POS_VEC_1' in2=T2.fits matcher=2d params=5 values1='X Y' values2='X Y' out=T1_exploded_2d.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create a MOC at order 11 from the combined positions of `a.csv`, `b.csv`, and `c.csv`.",
        "response": "stilts tcat ifmt=csv in=a.csv in=b.csv in=c.csv out=ab.csv | stilts mocshape in=ab.csv order=11 shape=point coords='array($1,$2)' out=abc_combined.moc.fits",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: mocshape: not found\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Replace all instances of the magic value 99.0 with null across all columns of the input table.",
        "response": "stilts tpipe in=raw_data.fits cmd='badval 99.0 *' out=clean_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read an ASCII table, saving the output in IPAC format.",
        "response": "stilts tcopy in=data.txt ifmt=ascii out=data.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "The radius for my MOC circles is stored in the table parameter `DEFAULT_RADIUS_DEG`. How do I use it?",
        "response": "stilts pixfoot in=data_with_param.fits radius='param$DEFAULT_RADIUS_DEG' out=param_radius.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need to plot a line connecting a sequence of points from an array-valued column.",
        "response": "stilts plot2plane in=data.fits layer=lines xs=TIME_ARRAY ys=FLUX_ARRAY",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TIME_ARRAY\"\n    (The name \"TIME_ARRAY\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find the MOC for $1 / 1000000$ degree radius (1 microdegree).",
        "response": "stilts pixfoot in=microdeg.fits ra=RA dec=DEC radius=1.0e-6 out=microdeg_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the PADC TAP Planetary server for observations of 'Titan' and save the table metadata only.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT TOP 1 * FROM epn_core.epn_core WHERE target_name = ''Titan''' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Collapse the numeric columns 1, 2, 3 into a single array column 'VEC_3D', retaining the original columns.",
        "response": "stilts tpipe in=data.fits cmd='collapsecols -keepscalars VEC_3D $1 3' out=retained_collapse.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the Subaru SXDS service for B-band magnitude data and calculate the statistical summary (mean, min, max) of the results.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/sxds_v1 adql='SELECT B_MAG FROM sxds.point_source' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Remove all rows that have identical values in both the 'ID' and 'FIELD' columns.",
        "response": "stilts tpipe in=detections.fits cmd='sort \"ID FIELD\"' cmd='uniq \"ID FIELD\"' out=unique_detections.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FIELD'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort ID FIELD\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'FIELD'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine two tables, generating a statistical summary of the angular distance between RA1/DEC1 and RA2/DEC2 in the combined table.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='addcol SEP_DEG \"skyDistanceDegrees(RA1, DEC1, RA2, DEC2)\"' ocmd='keepcols \"SEP_DEG\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC1,' 'RA2,' 'DEC2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SEP_DEG skyDistanceDegrees(RA1, DEC1, RA2, DEC2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC1,' 'RA2,' 'DEC2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine tables, and then explode all fixed-length array columns into scalar columns.",
        "response": "stilts tcat in='arr_d1.fits arr_d2.fits' ocmd='explodecols *' out=all_scalar_cols.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Write a query to get 10 random stars from the Tycho-2 catalog at VizieR.",
        "response": "stilts tapquery tapurl=http://tapvizier.u-strasbg.fr/tap adql='SELECT TOP 10 * FROM \"I/259/tyc2\" ORDER BY RAND()'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers with transparent shading (opaque=5) on an all-sky Plate Carr\u00e9e plot (CAR).",
        "response": "stilts plot2sky in=data.fits projection=car layer=mark lon=RA lat=DEC shading=transparent opaque=5 out=car_transp5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve ObsCore entries from the ESA Euclid Archive, filtered to include only rows where `target_name` is exactly 'NGC 1313'.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore WHERE target_name = ''NGC 1313''' out=euclid_n1313.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate tables, then drop any column that is constant across the entire resulting dataset.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd=constcol out=non_constant_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the AIP DaCHS server for a very small sample (5 rows) of its table metadata.",
        "response": "stilts tapquery tapurl=http://gavo.aip.de/tap adql='SELECT * FROM TAP_SCHEMA.tables' maxrec=5 out=aip_tiny_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Filter the input table to keep only every 100th row before generating the MOC.",
        "response": "stilts pixfoot in=large_cat.fits icmd='every 100' ra=RA dec=DEC out=every_100th.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Group match three tables (L1, L2, L3) on a 1D magnitude value (MAG) with a 0.1 tolerance. Only keep those groups where all L1, L2, and L3 rows were matched.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.1 values1=MAG values2=MAG values3=MAG in1=L1.fits in2=L2.fits in3=L3.fits join1=match join2=match join3=match out=full_1d_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert the input table to a LaTeX output document, including table parameters.",
        "response": "stilts tpipe in=data.fits ofmt='latex(standalone=true)' out=latex_doc.tex",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate two tables, T_MAIN and T_SUPP. T_SUPP has an array column 'FLUX_ARRAY' that must be flattened into scalar columns before combining.",
        "response": "stilts tcatn nin=2 in1=T_MAIN.fits in2=T_SUPP.fits icmd2='explodeall' out=flat_array_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the ESO TAP_OBS SSA service around Galactic L=0, B=0, using 0.005 degrees, and output statistics on the 'FLUX' column.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=0.0 lat=0.0 radius=0.005 servicetype=ssa skysys=galactic ocmd='keepcols FLUX' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine three tables. After concatenation, add a unique row index column, 'GlobalRowID', starting from 1.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits in3=T3.fits ocmd='addcol GlobalRowID $0' out=global_indexed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3, T4 exactly on ID. After matching, drop all columns named 'FLUX_ERR*' from the output.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=exact values1=ID values2=ID values3=ID values4=ID in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits ocmd='delcols FLUX_ERR*' out=error_cols_dropped_postmatch.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a point MOC (order 14) where the RA coordinate is shifted by 0.1 degree/year using proper motion PMRA.",
        "response": "stilts pixfoot in=pm_shift.fits ra='RA + PMRA / 3600000.0 / 10.0' dec=DEC radius=0 order=14 out=shifted_ra_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need a MOC for sources in my table where the radius is determined by the EXP_RADIUS column (in arcminutes), converted to degrees.",
        "response": "stilts pixfoot in=errors.fits ra=RA dec=DEC radius='EXP_RADIUS / 60.0' out=variable_radius_am.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Run an asynchronous query on the European HST Archive for all ObsCore entries, ensuring the job is never automatically deleted by setting the DELETE parameter.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore' delete=never out=hst_persistent_job.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot HEALPix data (healpix layer) using the difference between two values (V1 - V2) as the color intensity value (value parameter).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix healpix=PIX value='V1-V2' out=hpx_difference_color.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"PIX\"\n    (The name \"PIX\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Take a table from a URL and display it on the terminal.",
        "response": "stilts tcopy in=http://example.com/data.fits out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a 1000-row simulated star catalog and save it directly as a Parquet file.",
        "response": "stilts tcopy in=:skysim:1000 ofmt=parquet out=sim_stars.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read the output of a pipeline command (producing ECSV) and convert it to FITS.",
        "response": "tpipe in=raw.fits cmd='addcol X 1' | stilts tcopy in=- ifmt=ecsv out=pipe_ecsv.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Count the total number of entries in the ESO ObsCore table (raw and reduced data).",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT COUNT(*) FROM ivoa.ObsCore' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 205.4507 and latitude 62.4631. Please use a search radius of 0.21 degrees. Save the results to a csv file called query_results_60.csv.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=205.4507 lat=62.4631 radius=0.21 omode=out ofmt=csv out=query_results_60.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine part1.parquet and part2.parquet into a single ECSV file.",
        "response": "stilts tcatn nin=2 in1=part1.parquet in2=part2.parquet ofmt=ecsv out=full.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Submit an asynchronous query to the PADC planetary server, and set the delete policy to delete the job immediately ('now') upon command exit, regardless of status.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT TOP 1 * FROM epn_core.epn_core' delete=now out=padc_delete_now.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a MOC at order 9 from polygon data, ensuring the polygon coordinate columns are correctly interpreted as an array.",
        "response": "stilts mocshape in=survey_areas.fits shape=polygon coords='array(V1_RA, V1_DEC, V2_RA, V2_DEC, V3_RA, V3_DEC, V4_RA, V4_DEC)' order=9 out=survey_o9.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot Y-error bars only, defined by the Y_ERR column, without plotting the central markers.",
        "response": "stilts plot2plane in=errors.fits layer=xyerror x=X y=Y yerrhi=Y_ERR out=y_only_error.png",
        "chat.jar": "fixed",
        "error": "Error: Bad value for parameter layer: Unknown value \"yerror\" - must be one of mark, size, sizexy, xyvector, xyerror, xyellipse, xycorr, link2, mark2, poly4, mark4, polygon, area, central, lines, marks, handles, yerrors, xyerrors, statline, statmark, arrayquantile, line, linearfit, label, arealabel, contour, grid, fill, quantile, histogram, kde, knn, densogram, gaussian, function\nUsage: layer=<layer-type> <layer-specific-params>\n\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 205.1347 and latitude -54.9231. Please use a search radius of 1.9253 degrees. Save the results to a votable file called query_results_106.votable.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=205.1347 lat=-54.9231 radius=1.9253 omode=out ofmt=votable out=query_results_106.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match two tables using velocity (3D Cartesian coordinates VX, VY, VZ) within 50 km/s.",
        "response": "stilts tmatch2 in1=V1.fits in2=V2.fits matcher=3d params=50 values1='VX VY VZ' values2='VX VY VZ' out=velocity_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine three tables, T1, T2, T3. Only keep those columns that have a UCD starting with 'phot.mag'.",
        "response": "stilts tcatn nin=3 in1=T1.fits icmd1='keepcols ucd$phot_mag*' in2=T2.fits icmd2='keepcols ucd$phot_mag*' in3=T3.fits icmd3='keepcols ucd$phot_mag*' out=mag_ucds_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read a CSV file and convert it to FITS, specifying that the CSV uses a **tab delimiter**.",
        "response": "stilts tcopy in=data.txt ifmt='csv(delimiter=tab)' out=tab_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Run a general query on the HREDA TAP service (ESA) around Ecliptic Lon 270, Lat 30, with 0.1 degree radius, getting statistics on column values.",
        "response": "stilts cone serviceurl=https://hreda.esac.esa.int/hreda-sl-tap/tap lon=270.0 lat=30.0 radius=0.1 skysys=ecliptic omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Filter the input table to only keep rows where 'FLAG' is true, and then generate a point MOC.",
        "response": "stilts mocshape in=flagged.fits icmd='select FLAG' shape=point coords='array(RA, DEC)' out=flag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find rows in T_A that are present in T_A OR T_B, but NOT in T_A AND T_B (symmetric difference, 1xor2). Exact match on ID.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=exact values1=ID values2=ID join=1xor2 out=exact_symmetric_difference_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate two tables, converting a column 'FLUX_STR' (string) to a numeric column 'FLUX_VAL' (double) in both tables before joining.",
        "response": "stilts tcat in='s1.fits s2.fits' icmd='addcol FLUX_VAL parseDouble(FLUX_STR)' ocmd='keepcols FLUX_VAL' out=string_flux_to_double.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a polygon MOC and apply a filter to remove all columns from the input table except the coordinate array before MOC generation.",
        "response": "stilts mocshape in=full_table.fits icmd='keepcols VERTICES' shape=polygon coords=VERTICES out=filtered_input_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot markers sized by parallax error (mas) and color them by magnitude (MAG), using the density shading mode with the Inverse Cosine function.",
        "response": "stilts plot2sky in=gaia.fits layer=size lon=RA lat=DEC size=PARALLAX_ERR unit=mas shading=density weight=MAG densefunc=acos out=acos_density_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Calculate the angular diameter distance (Mpc) for redshift Z using standard cosmology.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol ANGULAR_DIAMETER_DIST \"angularDiameterDistance(Z, 70.0, 0.3, 0.7)\"' out=galaxies_angular_dist.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ANGULAR_DIAMETER_DIST angularDiameterDistance(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Join A.fits and B.fits. A is a simulated attractor (henon, 1000 rows). Match on X, Y coordinates (1 unit 2D match).",
        "response": "stilts tmatch2 in1=A.fits in2=:attractor:1000,henon matcher=2d params=1 values1='X Y' values2='x y' out=henon_2d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query VizieR for M-dwarf data in the catalogue 'J/A+A/525/A5' (Gaia-DR1) and explicitly set the query language to ADQL.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT * FROM \"J/A+A/525/A5\" WHERE Parallax > 10' language=ADQL out=vizier_mdwarfs.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a table generating 100,000 loop rows and output the row count only.",
        "response": "stilts tpipe in=:loop:100000 omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Please generate a MOC for all sources in `mycat.vot` with a circular footprint of 0.5 degrees.",
        "response": "stilts pixfoot in=mycat.vot radius=0.5 out=half_degree_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Verify that all magnitude values are positive before writing the output.",
        "response": "stilts tpipe in=test.fits cmd='assert \"MAG > 0.0\"' out=verified.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG > 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Sort `catalog.fits` by `RA` ascending, and for ties, by `DEC` descending.",
        "response": "stilts tpipe in=catalog.fits cmd='sort RA' cmd='sort -down DEC' out=sorted_catalog.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "My input table has a column 'footprint' with ASCII MOC strings. How can I combine them all into one MOC?",
        "response": "You can use `mocshape` for that: `stilts mocshape in=mocs_table.fits shape=moc-ascii coords=footprint out=combined.moc.fits`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Concatenate tables, adding a column 'OBS_JD' by converting the existing MJD column to Julian Date.",
        "response": "stilts tcat in='mjd1.fits mjd2.fits' ocmd='addcol OBS_JD mjdToJd(MJD)' out=jd_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Change the table name to 'Processed Catalog' and view the resulting metadata.",
        "response": "stilts tpipe in=old_cat.fits cmd='tablename \"Processed Catalog\"' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a local FITS file to a remote FITS file location via an obsolete protocol URL.",
        "response": "stilts tcopy in=local.fits out=myspace:/remote/copy.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert a VOTable to a CSV file, ensuring that the output CSV uses a **semicolon** as the delimiter.",
        "response": "stilts tcopy in=input.vot out=semicolon_delim.csv ofmt='csv(delimiter=;)'",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "How can I turn off the wireframe axes in a 2D plot?",
        "response": "The `plot2plane` command does not have a wireframe like `plot2cube`. You can turn off grid lines with `grid=false` and axis labels with `xlabel=` and `ylabel=`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 10 PanSTARRS DR2 sources from MAST and locally reformat the RA column from decimal degrees to sexagesimal hours:minutes:seconds.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT TOP 10 ra, dec FROM dbo.detection_object' ocmd='replacecol RA_HMS \"degreesToHms(ra, 2)\"; delcols \"ra\"' out=ps1_hms_ra_rename.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA_HMS degreesToHms(ra, 2)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers for both positions X1, Y1 and X2, Y2 from the same row, using the mark2 layer.",
        "response": "stilts plot2plane in=pairs.fits layer=mark2 x1=X1 y1=Y1 x2=X2 y2=Y2 color=red size=3 out=mark2_pairs.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the Planetary FUB service for all observations of Jupiter (target_name = 'Jupiter') in the EPN-TAP core table, saving as an ECSV file.",
        "response": "stilts tapquery tapurl=http://dachs.planet.fu-berlin.de/tap adql='SELECT * FROM epn_core.epn_core WHERE target_name = ''Jupiter''' ofmt=ecsv out=jupiter_epn.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers sized by the expression 'abs(RV)' (radial velocity magnitude), coloring flat red.",
        "response": "stilts plot2sky in=sources.fits layer=size lon=RA lat=DEC size='abs(RV)' shading=flat color=red out=rv_sized_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Read a table using the loop scheme and output the result using the **BINARY2** VOTable format.",
        "response": "stilts tcopy in=:loop:100 out=binary2_loop.vot ofmt='votable(format=BINARY2)'",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert a VOTable to IPAC format, explicitly ensuring table parameters are suppressed.",
        "response": "stilts tcopy in=data.vot ofmt='ipac(params=false)' out=no_params.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Remove any rows that were previously duplicated based on column 'ID' and calculate statistics on the resulting unique table.",
        "response": "stilts tpipe in=data.fits cmd='uniq ID' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Join T1 and T2. T2 contains an array column 'X_ARRAY'. Replace it with the sum of its elements before matching on position + sum (sky+1d).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='replacecol X_SUM sum(X_ARRAY)' matcher=sky+1d params='1 5' values1='RA DEC X_SUM' values2='RA DEC X_SUM' out=array_sum_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create a plot with LaTeX formatted labels.",
        "response": "stilts plot2plane in=data.fits layer=mark x=alpha y=delta texttype=latex xlabel='$\\alpha$' ylabel='$\\delta$'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"alpha\"\n    (The name \"alpha\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine three tables, then export the metadata of the resulting structure.",
        "response": "stilts tcatn nin=3 in1=m1.fits in2=m2.fits in3=m3.fits omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Visualize position vectors (D_L, D_B in degrees) in Galactic coordinates, setting the scale factor to 10.",
        "response": "stilts plot2sky in=flow.fits viewsys=galactic layer=skyvector lon=L lat=B dlon=D_L dlat=D_B unit=degree scale=10 out=gal_vectors_scale10.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L\"\n    (The name \"L\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Read VOTable data piped from a command line and save it locally as a FITS file.",
        "response": "cat stream.vot | stilts tcopy in=- ifmt=votable out=piped_in.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match four catalogs and calculate a checksum on the output table.",
        "response": "stilts tmatchn nin=4 in1=t1.fits in2=t2.fits in3=t3.fits in4=t4.fits multimode=group matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' values4='ra dec' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert an ECSV file with array columns to a FITS file.",
        "response": "stilts tcopy in=array_data.ecsv ifmt=ecsv out=array_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Search the MAST HSCv3 catalogue near Galactic L=30, B=0, with a radius of 1.5 arcminutes, and keep only columns with 'MAG' in their name.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=30.0 lat=0.0 radius='1.5 / 60.0' skysys=galactic ocmd='keepcols \"*MAG*\"' out=hsc_mag_only.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.5 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read data from the second table extension of a CDF file, identified by variable name 'Epoch_A', and save it as VOTable.",
        "response": "stilts tcopy in=data.cdf#Epoch_A ifmt=cdf out=epoch_a.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch T1, T2, T3, T4. Only output the rows from T1 that were *unmatched* by the other tables.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=exact values1=ID values2=ID values3=ID values4=ID in1=T1.fits join1=nomatch in2=T2.fits in3=T3.fits in4=T4.fits out=T1_unmatched_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Run a query to find sources in a specific declination band from VizieR's USNO-B1 catalog (I/284/out).",
        "response": "stilts tapquery tapurl=http://tapvizier.u-strasbg.fr/tap adql='SELECT USNO_B1_0, RAm, DEm FROM \"I/284/out\" WHERE DEm > 20 AND DEm < 21'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot points with variable size and color, sized by SIZE_COL and colored by COLOR_COL.",
        "response": "stilts plot2plane in=data.fits layer=size x=X y=Y size=SIZE_COL shading=aux aux=COLOR_COL out=size_color.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T3 is provided via system command pipe (VOTable). Output the result to a compressed FITS file.",
        "response": "cat T3_stream.vot | stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits in3=- ifmt3=votable values1='RA DEC' values2='RA DEC' values3='RA DEC' out=piped_match_compressed.fits.gz",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert the input table to a Parquet file, saving minimal VOParquet metadata (votmeta=false).",
        "response": "stilts tpipe in=input.fits ofmt='parquet(votmeta=false)' out=output_minimal_meta.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can `tcopy` handle bzipped input files?",
        "response": "Yes, it handles `.bz2` compressed files automatically. For example: `stilts tcopy in=data.fits.bz2 out=data.vot`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a plot with LaTeX formatted labels: $\\alpha$ and $\\delta$.",
        "response": "stilts plot2plane in=data.fits layer=mark x=alpha y=delta texttype=latex xlabel='$\\alpha$' ylabel='$\\delta$' out=latex_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"alpha\"\n    (The name \"alpha\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve the first 5 ObsCore entries from the ESA Euclid Archive and output the results in ECSV format.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT TOP 5 * FROM ivoa.ObsCore' ofmt=ecsv out=euclid_sample.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a PDS4 file, ignoring the initial check for PDS4 magic content (checkmagic=false).",
        "response": "stilts tcopy in=unknown.xml ifmt='pds4(checkmagic=false)' out=pds_forced.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Filter rows to keep only those where the 'NAME' column length is exactly 5 characters.",
        "response": "stilts tpipe in=data.fits cmd='select \"length(NAME) == 5\"' out=names_length_5.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select length(NAME) == 5\n\nUsage: select <expr>\n    (Unused arguments: '==' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a line where the color changes according to the magnitude of proper motion (hypot(PMRA, PMDEC)).",
        "response": "stilts plot2plane in=pm.fits layer=line x=RA y=DEC aux='hypot(PMRA, PMDEC)' auxmap=magma out=pm_color_line.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot two layers: one marks sources in RA/DEC (blue circles), the other marks them in L/B (red crosses).",
        "response": "stilts plot2sky viewsys=equatorial layer_1=mark in_1=data.fits lon_1=RA lat_1=DEC color_1=blue shape_1=filled_circle layer_2=mark in_2=data.fits lon_2=L lat_2=B datasys_2=galactic color_2=red shape_2=cross out=dual_coord_marks_b.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a MOC (order 20) for 1 mas radius circles, filtering the input to remove duplicate rows based on ID.",
        "response": "stilts pixfoot in=unique_ids.fits icmd='uniq ID' ra=RA dec=DEC radius='1.0 / 3600000.0' order=20 out=unique_1mas.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match survey_A against survey_B within 5 arcsec. Before matching, convert survey_A coordinates from Galactic (GLON, GLAT) to ICRS.",
        "response": "stilts tmatch2 in1=survey_A.fits icmd1='addskycoords galactic icrs GLON GLAT RA DEC' in2=survey_B.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' out=gal_to_icrs_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 102.9801 and latitude 37.4215. Please use a search radius of 1.4486 degrees. Save the results to a csv file called query_results_139.csv.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=102.9801 lat=37.4215 radius=1.4486 omode=out ofmt=csv out=query_results_139.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 3.4306 and latitude 40.4402. Please use a search radius of 1.3372 degrees. Save the results to a votable file called query_results_135.votable. The coordinates are in the supergalactic system.",
        "response": "stilts cone servicetype=sia2 serviceurl=http://irsa.ipac.caltech.edu/sia lon=3.4306 lat=40.4402 radius=1.3372 skysys=supergalactic omode=out ofmt=votable out=query_results_135.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate an MOC where the radius is defined by the square root of the 'ERROR' column value in arcseconds, converted to degrees.",
        "response": "stilts mocshape in=error_sources.fits shape=circle coords='array(RA, DEC, sqrt(ERROR) / 3600.0)' out=sqrt_error_as_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query ARI Gaia for 100 sources and output the result in FITS-plus format to capture rich metadata.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 100 * FROM gaiadr3.gaia_source' ofmt=fits-plus out=ari_rich_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate an ASCII MOC for objects where the year of observation (`OBS_YEAR`) is 2023.",
        "response": "stilts pixfoot in=obs_log.fits icmd='select OBS_YEAR==2023' mocfmt=ascii out=obs_2023.moc.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the GAVO TAP service near Ecliptic Lon 150, Lat 10, with a radius of 0.005 degrees, forcing the output to standard VOTable BINARY2 format.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=150.0 lat=10.0 radius=0.005 skysys=ecliptic ofmt='votable(format=BINARY2)' out=gavo_bin2.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a column 'PM_XYZ_GAL_Y' containing the Y component of the Galactic space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_XYZ_GAL_Y \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_y_vel_comp_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_XYZ_GAL_Y icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a 2D plot with a secondary Y axis showing $Y^{2}$ (Y-squared).",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y y2func='y*y' y2label='Y Squared' out=y_squared_secondary.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve the top 10 rows from the PADC TAP Planetary server EPN core table and output in VOTable format using the maximally compact BINARY2 serialization.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT TOP 10 * FROM epn_core.epn_core' ofmt='votable(format=BINARY2)' out=padc_binary2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter rows to keep those where the flux ratio (FLUX1/FLUX2) is between 0.9 and 1.1.",
        "response": "stilts tpipe in=bands.fits cmd='select \"FLUX1/FLUX2 BETWEEN 0.9 AND 1.1\"' out=low_variability.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'BETWEEN' '0.9' 'AND' '1.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX1/FLUX2 BETWEEN 0.9 AND 1.1\n\nUsage: select <expr>\n    (Unused arguments: 'BETWEEN' '0.9' 'AND' '1.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot markers sized by a constant value of 5 pixels, using the monospaced font.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y size=5 fontstyle=mono out=monospace_size5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a string column that contains the inverse hyperbolic sine of 'FLUX', rounded to 4 decimal places.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_ASINH_STR \"formatDecimal(asinh(FLUX), 4)\"' out=asinh_flux_str.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_ASINH_STR formatDecimal(asinh(FLUX), 4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine two tables, T_MAIN and T_AUX. T_AUX rows should only be included if the proper motion error (PM_ERR) is less than 0.1 mas/yr.",
        "response": "stilts tcatn nin=2 in1=T_MAIN.fits in2=T_AUX.fits icmd2='select \"PM_ERR < 0.1\"' out=low_pm_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PM_ERR < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read data from the HAPI scheme, ensuring output is converted to a VOTable document.",
        "response": "stilts tcopy in=':hapi:https://vires.services/hapi;GRACE_A_MAG;start=2009-01-01;stop=2009-01-02;include=header' out=hapi_out.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the VizieR TAP service for the first 50 rows of the USNO-A2.0 catalogue (I/252/out), requesting authentication.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT TOP 50 * FROM \"I/252/out\"' auth=true out=usno_auth_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a small FITS file from a simulated dataset for testing purposes.",
        "response": "stilts tcopy in=:skysim:100 out=test_catalog.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a string column named 'URL_NED' containing the NED service URL for the object name in column 'OBJ_NAME'.",
        "response": "stilts tpipe in=targets.fits cmd='addcol URL_NED nedUrl(OBJ_NAME)' out=targets_with_ned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need data from the KIS Science Data Centre TAP service around Galactic L=300, B=0, using 2 arcminutes.",
        "response": "stilts cone serviceurl=http://dachs.sdc.leibniz-kis.de/tap lon=300.0 lat=0.0 radius='2.0 / 60.0' skysys=galactic out=kis_2arcmin.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"2.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Filter the input table to keep only the bottom 10 rows, then generate an order 9 point MOC.",
        "response": "stilts mocshape in=full_table.fits icmd='tail 10' shape=point coords='array(RA, DEC)' order=9 out=tail10_o9.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Start an asynchronous query on the ESA Euclid Archive, ensure the job is never auto-deleted, and request continuous progress updates.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore' delete=never progress=true out=euclid_persistent_progress.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the PADC TAP RR server for table column definitions, and ensure the query runs synchronously.",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.columns' sync=true out=padc_rr_columns.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a plot where markers are colored by the row index ($0) using the 'aux' shading mode.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=aux aux='$0' auxmap=rainbow out=index_colored_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plotting an analytic function $y = 1/x$, fixed X range, saving as PDF.",
        "response": "stilts plot2plane layer=function fexpr='1/x' xmin=0.1 xmax=10 out=reciprocal.pdf",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query VizieR TAP near 18h 00m 00s, -10d 00m 00s, translating coordinates, with a radius of 1 arcminute, and discard the table data completely (omode=discard).",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon='hmsToDegrees(18.0, 0, 0)' lat='dmsToDegrees(-10.0, 0, 0)' radius='1.0 / 60.0' omode=discard",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(18.0, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate a plot where the marker size is proportional to the base-10 log of LUMINOSITY, using persistent storage.",
        "response": "stilts plot2plane in=data.fits layer=size x=X y=Y size='log10(LUMINOSITY)' storage=persistent out=persistent_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "I need the footprint for a 1 pixel radius from my camera, where the plate scale is 0.5 arcsec/pixel.",
        "response": "stilts mocshape in=detections.fits shape=circle coords='array(RA,DEC, 1.0 * 0.5 / 3600.0)' out=single_pixel_regions.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the PADC TAP Heliophysics server for table names and calculate the checksum of the result.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT table_name FROM TAP_SCHEMA.tables' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run a quick asynchronous job on the HREDA TAP service and ensure the job is deleted immediately upon command exit using delete=now.",
        "response": "stilts tapquery tapurl=https://hreda.esac.esa.int/hreda-sl-tap/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' delete=now out=hreda_delete_now.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Calculate the fraction of the year passed (using day-of-year expression) and add it as a column `FRAC_YEAR`.",
        "response": "stilts tpipe in=dates.fits cmd='addcol FRAC_YEAR \"(MJD - decYearToMjd(round(mjdToDecYear(MJD)))) / 365.25\"' out=fractional_year.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'decYearToMjd(round(mjdToDecYear(MJD))))' '/' '365.25'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FRAC_YEAR (MJD - decYearToMjd(round(mjdToDecYear(MJD)))) / 365.25\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'decYearToMjd(round(mjdToDecYear(MJD))))' '/' '365.25'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a low-resolution MOC (order 4) where the radius is exactly 20 arcseconds.",
        "response": "stilts pixfoot in=coarse.fits ra=RA dec=DEC radius='20.0 / 3600.0' order=4 out=coarse_20as.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the ESO TAP_OBS service, calculate a new column 'TOTAL_TIME' by multiplying 'ndit' and 'dit' values, and include it in the output.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 ndit, dit FROM raw.vircam' ocmd='addcol TOTAL_TIME \"ndit * dit\"' out=vircam_total_time.fits",
        "error": "Error: Unused arguments: '*' 'dit'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol TOTAL_TIME ndit * dit\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'dit'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Run a synchronous query against the APPLAUSE plate archive for the top 5 plate metadata entries and output the raw text to standard output.",
        "response": "stilts tapquery tapurl=https://www.plate-archive.org/tap adql='SELECT TOP 5 * FROM apl.plate_meta' sync=true out=- ofmt=text",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the logical array column 'MASK' does not contain any true values.",
        "response": "stilts tpipe in=arrays.fits cmd='assert \"countTrue(MASK) == 0L\"' out=mask_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert countTrue(MASK) == 0L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the JVO ALMA service for the top 5 ObsCore table definitions.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/alma adql='SELECT TOP 5 * FROM tap_schema.tables' out=jvo_alma_tables.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve the RA, Dec, and mean G magnitude from the MAST TESS Input Catalog (TIC), then locally rename the magnitude column to 'TESS_MAG_G'.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 100 ra, dec, phot_g_mean_mag FROM tic.v8' ocmd='colmeta -name TESS_MAG_G phot_g_mean_mag' out=tic_renamed_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine tables, and add an array-valued column 'COLOR_ARRAY' containing $[\text{MAG_G}, \text{MAG_R}, \text{MAG_I}]$ for each row.",
        "response": "stilts tcat in='p1.fits p2.fits' ocmd='addcol COLOR_ARRAY \"array(MAG_G, MAG_R, MAG_I)\"' out=color_array.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MAG_R,' 'MAG_I)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COLOR_ARRAY array(MAG_G, MAG_R, MAG_I)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'MAG_R,' 'MAG_I)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Read the second table element of a multi-table VOTable and output it as an IPAC file.",
        "response": "stilts tcopy in=multi.vot#1 out=table_1.tbl ifmt=ipac",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Join primary.fits and secondary.fits. Primary coordinates are in radians. Convert them to degrees inline before a 3 arcsec sky match.",
        "response": "stilts tmatch2 in1=primary.fits in2=secondary.fits matcher=sky params=3 values1='radiansToDegrees(RA_RAD) radiansToDegrees(DEC_RAD)' values2='RA DEC' out=inline_rad_to_deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the GAVO Data Center for resources around RA 330, Dec -30, with a radius defined by $\frac{60 \text{ arcsec}}{60 \times 60}$.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=330.0 lat=-30.0 radius='60.0 / 3600.0' out=gavo_60as_expr.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"60.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match four catalogs using anisotropic 3D Cartesian coordinates (X, Y, Z) with tolerances 10, 5, and 1 units respectively.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=3d_anisotropic params='10 5 1' values1='X Y Z' values2='X Y Z' values3='X Y Z' values4='X Y Z' in1=d1.fits in2=d2.fits in3=d3.fits in4=d4.fits out=aniso_3d_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match two catalogs using position and 1D velocity (sky+1d). Tolerances: 4 arcsec, 5 km/s.",
        "response": "stilts tmatch2 in1=C1.fits in2=C2.fits matcher=sky+1d params='4 5' values1='RA DEC V_RAD' values2='RA DEC V_RAD' out=pos_velocity_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match five tables using 1D matching on 'MJD' within 0.001 day tolerance.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=1d params=0.001 values1=MJD values2=MJD values3=MJD values4=MJD values5=MJD in1=L1.fits in2=L2.fits in3=L3.fits in4=L4.fits in5=L5.fits out=high_res_time_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot a set of markers (marks layer) where coordinates are in array columns X_ARR, Y_ARR, and markers are open squares.",
        "response": "stilts plot2plane in=data.fits layer=marks xs=X_ARR ys=Y_ARR shape=open_square out=array_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_ARR\"\n    (The name \"X_ARR\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Calculate the mean of the array column 'FLUX_ARRAY' element-wise, and add it as a new array column 'MEAN_FLUX_ARRAY'.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol MEAN_FLUX_ARRAY mean(FLUX_ARRAY)' out=element_mean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Count the total number of unique table schemas available in the PADC Maser TAP service without retrieving the actual metadata.",
        "response": "stilts tapquery tapurl=http://voparis-tap-maser.obspm.fr/tap adql='SELECT COUNT(DISTINCT schema_name) FROM TAP_SCHEMA.schemas' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How to match two tables on a 1-dimensional value, `redshift`, with a tolerance of 0.01?",
        "response": "stilts tmatch2 in1=spec_cat.fits in2=photo_cat.fits matcher=1d params=0.01 values1=redshift values2=z_phot out=redshift_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve Herschel observations that used the PACS instrument and output the result as ECSV.",
        "response": "stilts tapquery tapurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap adql='SELECT * FROM ivoa.ObsCore WHERE instrument_name = ''PACS''' ofmt=ecsv out=herschel_pacs.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need a summary report of coverage for all rows, using a polygon shape input.",
        "response": "stilts mocshape in=polygons.fits shape=polygon coords=VERTICES mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Perform a sky match and for the output table, replace any null values in the `FLUX_2` column with -9999.",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' join=all1 ocmd='replaceval null -9999 FLUX_2' out=match_with_badvals.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a coverage map for positions with an uncertainty derived from the magnitude error (MAG_ERR) multiplied by a scaling factor 0.001.",
        "response": "stilts pixfoot in=mag_errors.fits ra=RA dec=DEC radius='MAG_ERR * 0.001' out=mag_err_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Merge two tables. In T1, rename columns 'X_POS' and 'Y_POS' to 'X' and 'Y'. In T2, rename 'COL1' and 'COL2' to 'X' and 'Y'.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='colmeta -name X X_POS; colmeta -name Y Y_POS' in2=T2.fits icmd2='colmeta -name X COL1; colmeta -name Y COL2' out=xy_harmonized.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC for circles where the radius is $0.05 / \text{S/N}$ ratio, assuming S/N is in a column.",
        "response": "stilts pixfoot in=sn_data.fits ra=RA dec=DEC radius='0.05 / SN_RATIO' out=sn_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I need to plot a histogram of a value per unit area, e.g., number of galaxies per square degree.",
        "response": "`plot2plane` histograms are 1D. For a 2D histogram (density map), use `layer=grid` and `combine=count-per-unit`. For a 1D histogram normalized by some external area, you would need to calculate that manually and apply it to the `weight` parameter.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the PADC Maser TAP server for all its tables.",
        "response": "stilts tapquery tapurl=http://voparis-tap-maser.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.tables' out=padc_maser_tables.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter the input table to only keep rows where 'EXPTIME' > 1000 seconds, and use a 10 arcsecond radius.",
        "response": "stilts pixfoot in=long_exp.fits icmd='select \"EXPTIME > 1000\"' ra=RA dec=DEC radius='10.0 / 3600.0' out=long_exp_10as.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select EXPTIME > 1000\n\nUsage: select <expr>\n    (Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot two disjoint regions (Area layer) specified by polygon arrays, using fill mode with 70% transparency.",
        "response": "stilts plot2sky in=regions.fits layer=area area=VERTICES areatype=POLYGON polymode=fill transparency=0.7 out=trans70_filled_poly.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VERTICES\"\n    (The name \"VERTICES\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Copy a table and output it to standard output as a VOTable document using the efficient **BINARY** serialization.",
        "response": "stilts tcopy in=data.fits ofmt='votable(format=BINARY)' out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert the coordinate array 'POS_ARRAY' (RA, DEC) to a Cartesian X, Y, Z vector, explicitly using unit distance of 1.0.",
        "response": "stilts tpipe in=coords.fits cmd='addcol CARTESIAN \"polarXYZ(POS_ARRAY, POS_ARRAY, 1.0)\"' out=unit_cartesian.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'POS_ARRAY,' '1.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol CARTESIAN polarXYZ(POS_ARRAY, POS_ARRAY, 1.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'POS_ARRAY,' '1.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot points with a variable size given by the square root of AREA_SQDEG.",
        "response": "stilts plot2plane in=sources.fits layer=size x=RA y=DEC size='sqrt(AREA_SQDEG)' out=sqrt_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Copy 'wide_table.fits' to FITS, forcing the use of the FITS-plus convention to preserve rich metadata in the primary HDU.",
        "response": "stilts tcopy in=wide_table.fits out=wide_table_plus.fits ofmt=fits-plus",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). T2 contains magnitude in Vega, convert to AB magnitude by adding 0.9 before matching in combined space (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky+1d params='3 0.1' in1=T1.fits in2=T2.fits icmd2='replacecol MAG MAG+0.9' in3=T3.fits values1='RA DEC MAG' values2='RA DEC MAG' values3='RA DEC MAG' out=vega_to_ab_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Duplicate every row in the input table 5 times, then randomly shuffle the resulting rows.",
        "response": "stilts tpipe in=small_cat.fits cmd='repeat -row 5' cmd='shuffle' out=shuffled_repeated.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match three tables using sky error quadrature (skyerr_q). Input parameters include RA, DEC, and POS_ERR.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=skyerr_q params=1 values1='RA DEC POS_ERR' values2='RA DEC POS_ERR' values3='RA DEC POS_ERR' in1=e1.fits in2=e2.fits in3=e3.fits out=quadrature_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a plot with minor grid lines turned off.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y minor=false",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a summary report (order 10) where positions are generated from a simulated attractor scheme, demonstrating input schemes.",
        "response": "stilts mocshape in=:attractor:10000,clifford shape=point coords='array(x, y)' order=10 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Merge a remote FITS table (R.fits) and a local VOTable (L.vot). Only output the metadata of the resulting table.",
        "response": "stilts tcatn nin=2 in1=http://remote.server/R.fits in2=L.vot omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find sources around RA 19h 30m 0s, Dec 20d 0m 0s (convert RA/Dec), using 90 arcseconds.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=292.5 lat=20.0 radius='90.0 / 3600.0' out=gaia_90as_hms.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"90.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Search MAST CAOM near RA 200, Dec 20, using 1 arcminute, and sort the resulting table by observation date in descending order.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=200.0 lat=20.0 radius='1.0 / 60.0' ocmd='sort -down DATE_OBS' out=mast_sorted_date.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot density contours using the 'equal' scaling method and coloring the contours based on the auxiliary column MAG (aux shading).",
        "response": "stilts plot2sky in=data.fits layer=contour lon=RA lat=DEC scaling=equal shading=aux aux=MAG out=equal_aux_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert a FITS file to a Parquet file, ensuring the output Parquet file uses **Snappy compression**.",
        "response": "stilts tcopy in=big_cat.fits ofmt='parquet(compression=snappy)' out=snappy_cat.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read an ASCII file, keep only columns starting with 'FLUX', and output the total data checksum.",
        "response": "stilts tpipe in=pipe_data.txt ifmt=ascii cmd='keepcols FLUX*' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate three tables. Table 2 must be filtered to keep only rows where the 'ERROR' column is positive (non-negative).",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits icmd2='select \"ERROR >= 0\"' in3=T3.fits out=positive_error_only.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ERROR >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match T1, T2, T3. T1 is reference. T2 requires calculation of log(FLUX) before matching on the log value (1d matcher, 0.1 tolerance).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=1d params=0.1 values1=LOG_F values2=LOG_F values3=LOG_F in1=T1.fits in2=T2.fits icmd2='addcol LOG_F log10(FLUX)' in3=T3.fits out=log_flux_1d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge tables and write the final result as a VOTable document with no internal XML line breaks (compact=true).",
        "response": "stilts tcat in='v1.fits v2.fits' ofmt='votable(compact=true)' out=compact_votable.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot a set of markers (marks layer) where the X and Y coordinates are in array columns X_VALS and Y_VALS, using the filled_diamond shape.",
        "response": "stilts plot2plane in=data.fits layer=marks xs=X_VALS ys=Y_VALS shape=filled_diamond out=array_marks_diamond.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_VALS\"\n    (The name \"X_VALS\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a line (line layer) where the color varies based on the 'TIME' column, using the 'sunset' map.",
        "response": "stilts plot2plane in=data.fits layer=line x=X y=Y aux=TIME auxmap=sunset out=line_color_time.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 113.5113 and latitude 57.7341. Please use a search radius of 0.9348 degrees. Save the results to a votable file called query_results_96.votable.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=113.5113 lat=57.7341 radius=0.9348 omode=out ofmt=votable out=query_results_96.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate files, applying an input command that converts the 'FLUX' column to logarithmic scale (log10(FLUX)) in every table before merging.",
        "response": "stilts tcat in='f1.fits f2.fits f3.fits' icmd='addcol LOG_FLUX log10(FLUX)' out=log_flux_tcat.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate `a.fits` and `b.fits`. Before doing so, filter `a.fits` to keep rows with `FLAG==0` and filter `b.fits` to keep rows with `QUALITY>3`. Can I do this with `tcat`?",
        "response": "No, `tcat` applies the same `icmd` filter to all input tables [1]. To apply different filters to each input table before concatenation, you should use the `tcatn` command.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcat"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T2 has an extra column 'NOTES'. Discard this column before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits icmd2='delcols NOTES' in3=T3.fits out=notes_deleted_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot the median and upper/lower quartiles of array-valued data using arrayquantile, filling the area between the quartiles.",
        "response": "stilts plot2plane in=spectra.fits layer_q=arrayquantile xs=WAVE ys=FLUX quantiles='0.25,0.75' color_q=blue layer_m=arrayquantile xs_m=WAVE ys_m=FLUX quantiles_m=0.5 color_m=red out=array_quartiles.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVE\"\n    (The name \"WAVE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Fetch the 100 most distant quasars from the Milliquas catalog (VII/288/milliquas7) from VizieR.",
        "response": "stilts tapquery tapurl=http://tapvizier.u-strasbg.fr/tap adql='SELECT TOP 100 Name, z FROM \"VII/288/milliquas7\" WHERE Type=\"Q\" ORDER BY z DESC'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T2 rows must always be included (join=always), T3 rows must only be included if unmatched (join=nomatch).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=exact values1=ID values2=ID values3=ID in1=T_REF.fits in2=T2.fits join2=always in3=T3.fits join3=nomatch out=T2_outer_T3_anti.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate tables, dropping all rows in the combined result where the RA coordinate falls outside the range [0, 360).",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits ocmd='select \"RA >= 0 && RA < 360\"' out=clean_ra_range.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0' '&&' 'RA' '<' '360'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA >= 0 && RA < 360\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0' '&&' 'RA' '<' '360'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Draw filled quadrilaterals defined by coordinates X1, Y1, ... X4, Y4, coloring them green.",
        "response": "stilts plot2plane in=rects.fits layer=poly4 x1=X1 y1=Y1 x2=X2 y2=Y2 x3=X3 y3=Y3 x4=X4 y4=Y4 polymode=fill color=green out=filled_quads.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X1\"\n    (The name \"X1\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T_ref against T_sup. T_sup positions are defined by elliptical errors (skyellipse). T_ref is assumed to be a point source (use 0 for radii).",
        "response": "stilts tmatch2 in1=T_ref.fits in2=T_sup.fits matcher=skyellipse params=1 values1='RA DEC 0 0 0' values2='RA DEC A B PA' out=point_vs_ellipse_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'GAL_L_RAD' calculated from 'GAL_L_DEG' converted from degrees to radians.",
        "response": "stilts tpipe in=coords.fits cmd='addcol GAL_L_RAD degreesToRadians(GAL_L_DEG)' out=radians_conv.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine two tables, then perform row processing to sort the combined output by 'ID' and remove any duplicated rows based on 'ID'.",
        "response": "stilts tcatn nin=2 in1=cat_a.fits in2=cat_b.fits ocmd='sort ID' ocmd='uniq ID' out=unique_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'PM_VEL_GAL' containing the 3-element Galactic velocity vector (UVW) derived from astrometric parameters.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_GAL \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=gaia_galactic_velocity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_GAL icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Pair match T1 (ref) against T2 and T3. After matching, compute and add a column for the magnitude difference: |MAG_1 - MAG_2|.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_1 suffix2=_2 ocmd='addcol MAG_DIFF_1_2 \"abs(MAG_1 - MAG_2)\"' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=mag_diff_added.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_DIFF_1_2 abs(MAG_1 - MAG_2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the MAST TESS Input Catalog (TIC) for sources with a quality flag of 0, outputting the result in VOTable format using BINARY2 serialization.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 100 * FROM tic.v8 WHERE qflag = 0' ofmt='votable(format=BINARY2)' out=tic_clean.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a FITS file to a VOTable document using the efficient BINARY serialization format and explicitly setting VOTable version 1.4.",
        "response": "stilts tcopy in=big_cat.fits ofmt='votable(format=BINARY,version=V14)' out=cat_binary_v14.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "How is `mocshape` different from `pixfoot`?",
        "response": "`mocshape` is more general than `pixfoot`. While `pixfoot` generates MOCs from points or circles by specifying `ra`, `dec`, and an optional `radius`, `mocshape` uses a `coords` expression and a `shape` parameter that can handle points, circles, polygons, STC-S strings, and even other MOCs.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Submit a synchronous query to ESA Gaia TAP service to find 100 sources and output the result in plain ASCII format to standard output.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 100 source_id, ra, dec FROM gaiadr3.gaia_source' sync=true ofmt=ascii out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a constant column `SURVEY_ID` with the value 'SDSS_DR17' to all rows of `sdss_patch.fits`.",
        "response": "stilts tpipe in=sdss_patch.fits cmd='addcol SURVEY_ID \"SDSS_DR17\"' out=sdss_patch_tagged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch T1 (ref) against T2, T3, T4. For T1, calculate 'COLOR_UV' = 'U_MAG - V_MAG' and match on position + color (sky*1d, 1 arcsec, 0.2 mag).",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky*1d params='1 0.2' in1=T1.fits icmd1='addcol COLOR_UV U_MAG-V_MAG' in2=T2.fits in3=T3.fits in4=T4.fits values1='RA DEC COLOR_UV' values2='RA DEC COLOR_UV' values3='RA DEC COLOR_UV' values4='RA DEC COLOR_UV' out=sky_star_1d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Filter out rows where the stellarity index is 0.0 or less, treating blank values in STELLARITY as false.",
        "response": "stilts tpipe in=stars.fits cmd='select \"STELLARITY > 0.0\"' out=positive_stellarity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select STELLARITY > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find MAST Gaia DR3 sources with non-null `phot_g_mean_mag` and calculate the statistical summary for this column.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT phot_g_mean_mag FROM gaiadr3.gaia_source WHERE phot_g_mean_mag IS NOT NULL' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert the input table to Parquet format, forcing ZSTD compression.",
        "response": "stilts tpipe in=input.fits ofmt='parquet(compression=zstd)' out=output_zstd.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an order 15 MOC from an ECSV file containing coordinates in columns named 'Alpha' and 'Delta'.",
        "response": "stilts pixfoot in=coords.ecsv ifmt=ecsv ra=Alpha dec=Delta order=15 out=ecsv_o15.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Remove all existing table parameters except 'TELESCOPE' and 'SURVEY'.",
        "response": "stilts tpipe in=meta.fits cmd='clearparams *' cmd='setparam TELESCOPE \"param$TELESCOPE\"' cmd='setparam SURVEY \"param$SURVEY\"' out=clean_params.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query MAST PanSTARRS DR1 and locally ensure the resulting table is converted to use ICRS coordinates, even if they are already defined.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 10 ra, dec FROM dbo.detection_object' ocmd='addskycoords icrs icrs ra dec ra_icrs dec_icrs' out=ps1_force_icrs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Synchronously fetch the RA and Dec of 50 bright objects (G < 15) from the ARI Gaia service.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 50 ra, dec FROM gaiadr3.gaia_source WHERE phot_g_mean_mag < 15' sync=true out=ari_bright_sync.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a MOC for polygons defined in an array column, but only if the polygon has exactly 4 vertices.",
        "response": "stilts mocshape in=polygons.fits icmd='select size(VERTICES)==8' shape=polygon coords=VERTICES out=quadrilaterals.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine cat_a.fits and cat_b.fits, but drop all columns named 'X_POS' and 'Y_POS' from both tables before joining.",
        "response": "stilts tcatn nin=2 in1=cat_a.fits icmd1='delcols \"X_POS Y_POS\"' in2=cat_b.fits icmd2='delcols \"X_POS Y_POS\"' out=reduced_cat.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge FITS and Feather files. Feather file needs error columns 'e_ra' and 'e_dec' converted from mas to arcseconds.",
        "response": "stilts tcatn nin=2 in1=fits.fits in2=feather.fea ifmt2=feather icmd2='replacecol e_ra \"e_ra / 1000.0\"; replacecol e_dec \"e_dec / 1000.0\"' out=feather_corrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol e_ra e_ra / 1000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match two tables on X, Y, Z coordinates (3D) where X, Y, Z are calculated using a rotation function.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd1='replacecol X \"cosDeg(45)*X - sinDeg(45)*Y\"' icmd1='replacecol Y \"sinDeg(45)*X + cosDeg(45)*Y\"' matcher=3d params=1 values1='X Y Z' values2='X Y Z' out=rotated_3d_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'sinDeg(45)*Y'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol X cosDeg(45)*X - sinDeg(45)*Y\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' 'sinDeg(45)*Y'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine tables and enforce that any numeric column containing a null value is represented by the IEEE NaN constant, replacing any existing null representation.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='replaceval null NaN *' out=nan_replaced.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot vectors where the color is determined by the dot product of two auxiliary array columns (AUX_VEC1 and AUX_VEC2).",
        "response": "stilts plot2sky in=data.fits layer=skyvector lon=RA lat=DEC dlon=DX dlat=DY shading=aux aux='dotProduct(AUX_VEC1, AUX_VEC2)' out=dot_product_color_vec.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query MAST Gaia DR3 for sources near RA=200, Dec=30 within 0.01 degree, filtering using the ADQL CONTAINS clause.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT source_id, ra, dec FROM gaiadr3.gaia_source WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 200.0, 30.0, 0.01))' out=mast_gaia_cone.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Remove the column 'FLUX_ERR' and implicitly derive a similar column using a simple formula (FLUX/10).",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLUX_ERR \"FLUX / 10.0\"' out=derived_err.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_ERR FLUX / 10.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T3 contains an epoch column (EPOCH) which needs to be converted from Julian Day (JD) to Modified Julian Date (MJD) before matching on time (1d matcher).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=1d params=0.01 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='replacecol MJD jdToMjd(EPOCH)' values1=MJD values2=MJD values3=MJD out=jd_converted_time_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot data from a table read from standard input, explicitly specifying the input format as CSV.",
        "response": "cat input.csv | stilts plot2plane ifmt=csv in=- layer=mark x=X y=Y out=piped_csv_plot.png",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 500 sources from the Chandra Source Catalog near M87 and send the result directly to TOPCAT.",
        "response": "stilts tapquery tapurl=https://cda.cfa.harvard.edu/csctap adql='SELECT TOP 500 ra, dec, m_photflux FROM csc.master WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 187.7059, 12.3911, 0.01))' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC (order 15) for sources around Galactic L=300, B=-60, with radius $0.01$ degrees, converted from Galactic.",
        "response": "stilts pixfoot in=gal_data11.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC radius=0.01 order=15 out=gal_01deg_o15.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "How can I create an ASCII MOC at order 7 from `instrument_fov.dat`?",
        "response": "stilts pixfoot in=instrument_fov.dat ifmt=ascii order=7 mocfmt=ascii out=instrument_coverage.moc.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Copy a synthetic table of 500 Clifford attractor points to an ASCII file.",
        "response": "stilts tcopy in=:attractor:500,clifford ofmt=ascii out=attractor.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot a weighted linear fit, with weights given by 1/(ERROR*ERROR).",
        "response": "stilts plot2plane in=data.fits layer_m=mark x_m=X y_m=Y layer_f=linearfit x_f=X y_f=Y weight_f='1/(ERROR*ERROR)'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the XMM-Newton archive and find the statistical summary of the observation time (`T_MIN`) column.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT T_MIN FROM ivoa.ObsCore' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a FITS file to an HTML table suitable for embedding in a web page.",
        "response": "stilts tcopy in=data.fits ofmt=html out=data_report.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I have a collection of files: `spec-01.fits`, `spec-02.fits`, `spec-03.fits`. Combine them and then add a column 'File' that contains the original filename for each row.",
        "response": "stilts tcat in=\"spec-01.fits spec-02.fits spec-03.fits\" loccol=File out=all_spectra.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Add a column containing the angle in radians corresponding to the RA in degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_RAD degreesToRadians(RA)' out=ra_radians.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Count the number of tables available in the PADC RR TAP service.",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT COUNT(*) FROM TAP_SCHEMA.tables' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a radial velocity column (RV) in km/s to normalized velocity (RV/c), adding a new column.",
        "response": "stilts tpipe in=stars.fits cmd='addcol RV_NORM \"RV / 299792.458\"' out=normalized_rv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '299792.458'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RV_NORM RV / 299792.458\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '299792.458'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Get all J-PAS EDR sources with redshift confidence (z_conf) greater than 0.95 and save them as an ECSV file.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jpas-edr adql='SELECT * FROM jpas_edr.master WHERE z_conf > 0.95' ofmt=ecsv out=jpas_high_conf.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a coverage map for objects where the error column (ERR_DEG) is greater than $0.001$ degrees.",
        "response": "stilts pixfoot in=errors.fits icmd='select \"ERR_DEG > 0.001\"' ra=RA dec=DEC radius=ERR_DEG out=large_error_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ERR_DEG > 0.001\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.001'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine three files: part_a.fits, part_b.fits, part_c.fits. Combine them, but first multiply the 'FLUX' column by 1e-6 in all three tables.",
        "response": "stilts tcatn nin=3 in1=part_a.fits icmd1='replacecol FLUX \"FLUX * 1e-6\"' in2=part_b.fits icmd2='replacecol FLUX \"FLUX * 1e-6\"' in3=part_c.fits icmd3='replacecol FLUX \"FLUX * 1e-6\"' out=flux_scaled.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1e-6'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX * 1e-6\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '1e-6'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'POS_GAL_THETA' containing the latitude component of the Galactic position vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_THETA \"cartesianToLat(icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\"' out=galactic_theta_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_THETA cartesianToLat(icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Search MAST CAOM (SIA) near Ecliptic Lon 350, Lat 5, with a 20 arcminute radius, explicitly requesting the output to be text format to standard output.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=350.0 lat=5.0 radius='20.0 / 60.0' servicetype=sia skysys=ecliptic ofmt=text out=-",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"20.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the WISE IRSA TAP service near RA 15, Dec -15, using 75 arcseconds, and rename the 'FLUX' column to 'IR_FLUX'.",
        "response": "stilts cone serviceurl=https://irsa.ipac.caltech.edu/TAP lon=15.0 lat=-15.0 radius='75.0 / 3600.0' ocmd='colmeta -name IR_FLUX FLUX' out=irsa_renamed.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"75.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate tables, adding a numeric column 'FLUX_INV' equal to $1.0/\\text{FLUX}$.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol FLUX_INV 1.0/FLUX' out=inverse_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Read the second table element (#1) from a multi-TABLE VOTable and convert it to FITS.",
        "response": "stilts tcopy in=multi_cat.vot#1 out=second_table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read a multi-extension FITS file, selecting HDU #4, and output it as CSV.",
        "response": "stilts tcopy in=archive.fits#4 out=hdu4.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query MAST TESS Input Catalog for 500 star objects and pipe the results directly to TOPCAT for viewing.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 500 tid, ra, dec FROM tic.v8 WHERE obj_type = ''STAR''' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find all matches (all) between T1 and T2 (exact ID match). After joining, keep only the columns that were present in T1.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID find=all icmd2='keepcols ID' out=T1_cols_all_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create a plot from a simulated sky catalog, plotting l vs b.",
        "response": "stilts plot2plane in=:skysim:10000 layer=mark x=l y=b",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"l\"\n    (The name \"l\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a histogram of `log10(FLUX)`.",
        "response": "stilts plot2plane in=data.fits layer=histogram x='log10(FLUX)'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"log10(FLUX)\"\n    (The name \"FLUX\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at http://archive.eso.org/ssap? I'm looking for objects around longitude 63.0046 and latitude -20.4357. Please use a search radius of 0.3714 degrees. Save the results to a csv file called query_results_126.csv.",
        "response": "stilts cone servicetype=ssa serviceurl=http://archive.eso.org/ssap lon=63.0046 lat=-20.4357 radius=0.3714 omode=out ofmt=csv out=query_results_126.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create an order 8 MOC for objects where the radius is equivalent to 100 arcminutes.",
        "response": "stilts pixfoot in=input.fits ra=RA dec=DEC radius='100.0 / 60.0' order=8 out=hires_100am.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Crossmatch T1 and T2. T2 rows should always be included (right outer join). Find the single best match for T2 from T1 (best2).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID join=all2 find=best2 out=T2_outer_best2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "How can I sort the table `photometry_data.dat` by the `V_MAG` column in ascending order and save it as `sorted_photometry.fits`?",
        "response": "stilts tpipe ifmt=ascii in=photometry_data.dat cmd='sort V_MAG' out=sorted_photometry.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "How do I specify a radius of 0.5 arcseconds?",
        "response": "stilts pixfoot in=my_table.fits radius=0.5/3600.0 out=half_arcsec_radius.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Add a column 'ERROR_COND' that is 1.0 if 'ERR_A' is greater than 'ERR_B', and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND \"ERR_A > ERR_B ? 1.0 : 0.0\"' out=conditional_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND ERR_A > ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate an order 10 MOC for all distinct galaxy identifiers present in the input catalog.",
        "response": "stilts mocshape in=galaxies.fits icmd='uniq GALAXY_ID; addcol RA 0.0; addcol DEC 0.0' shape=point coords='array(RA, DEC)' order=10 out=distinct_gal_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Join T1 and T2. T1 position needs to be converted from Galactic to ICRS using addskycoords before matching T2.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='addskycoords galactic icrs GLON GLAT RA DEC' in2=T2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' out=gal_to_icrs_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Convert the input table to an array of rows and pass it to an external plotting script via standard input.",
        "response": "stilts tpipe in=data.fits ofmt=text out=\"| ./plot_script.sh -\"",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'FLUX_DIFF' which is the element-wise subtraction of array 'FLUX_A' from array 'FLUX_B'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_DIFF \"subtract(FLUX_B, FLUX_A)\"' out=array_diff.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_A)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_DIFF subtract(FLUX_B, FLUX_A)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_A)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the total row count of the MAST HSCv3 point source catalogue.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT COUNT(*) FROM hsc_v3.point' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match primary_sources.vot and secondary_sources.vot and sort the resulting table by the separation distance. Save the output as sorted_matches.csv.",
        "response": "stilts tmatch2 in1=primary_sources.vot in2=secondary_sources.vot matcher=sky params=10 values1='RA DEC' values2='RA DEC' ocmd='sort Separation' ofmt=csv out=sorted_matches.csv",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Filter VIRCAM raw data at ESO to find frames marked as 'CALIB', and save the result in the efficient VOTable BINARY2 format.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM raw.vircam WHERE dp_type = ''CALIB''' ofmt='votable(format=BINARY2)' out=vircam_calib_binary2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'TIME_MJD_FROM_BESSELIAN_2' converting Besselian Epoch to MJD.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_MJD_FROM_BESSELIAN_2 besselianToMjd(TIME_BESSELIAN)' out=mjd_from_besselian_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Join `sources_main.fits` and `sources_extra.fits` by matching their `SOURCE_NAME` string exactly.",
        "response": "stilts tmatch2 in1=sources_main.fits in2=sources_extra.fits matcher=exact values1=SOURCE_NAME values2=SOURCE_NAME out=name_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot a histogram where bars are horizontal instead of vertical.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE sideways=true",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge four tables. After combining, randomly shuffle all rows in the final table.",
        "response": "stilts tcatn nin=4 in1=d1.fits in2=d2.fits in3=d3.fits in4=d4.fits ocmd='shuffle' out=fully_shuffled.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC from a piped ASCII stream. The RA is column 3 and Dec is column 4.",
        "response": "cat data.txt | stilts pixfoot in=- ifmt=ascii ra=$3 dec=$4 out=piped_footprint.moc.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I have multiple VOTables (`v1.xml`, `v2.xml`). I want to concatenate them, keeping only columns with UCDs for position, and then view the result in TOPCAT.",
        "response": "stilts tcat in=v1.xml in=v2.xml icmd='keepcols \"ucd$pos.eq.ra ucd$pos.eq.dec\"' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plotting marks with auxiliary coloring by row index ($0) using the magma map.",
        "response": "stilts plot2plane in=time_series.fits layer=mark x=TIME y=FLUX shading=aux aux='$0' auxmap=magma out=time_index_color.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TIME\"\n    (The name \"TIME\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the Gaia service for stars in the Pleiades region (RA~56.75, Dec~24.12) with a radius of 1 degree.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, ra, dec FROM gaiadr3.gaia_source WHERE 1=CONTAINS(POINT(\"ICRS\", ra, dec), CIRCLE(\"ICRS\", 56.75, 24.12, 1.0))' out=pleiades_region.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers sized by the expression 'hypot(PMRA, PMDEC)'.",
        "response": "stilts plot2sky in=pm_cat.fits layer=size lon=RA lat=DEC size='hypot(PMRA, PMDEC)' autoscale=true out=hypot_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot elliptical error regions defined by X/Y errors and correlation, setting the shape to crosshair_ellipse.",
        "response": "stilts plot2plane in=errors.fits layer=xycorr x=X y=Y xerr=EX yerr=EY xycorr=CORR ellipse=crosshair_ellipse out=crosshair_corr.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers and label them with 'RA + DEC' expression, anchored north.",
        "response": "stilts plot2sky in=data.fits layer_m=mark lon_m=RA lat_m=DEC layer_l=label label_l='RA + DEC' anchor_l=north out=ra_dec_north_label.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine three tables (A, B, C) and add a column that contains the name of the input file without path or extension (unique location part).",
        "response": "stilts tcatn nin=3 in1=data/A.fits in2=data/B.fits in3=data/C.fits uloccol=BaseName out=uloc_base.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Copy a table from a remote URL that references the third HDU (#3) of a compressed FITS file and save it locally.",
        "response": "stilts tcopy in=http://archive.com/multi.fits.gz#3 out=remote_ext3.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Execute a query, rename the resulting position columns from RA, DEC to ALPHA, DELTA, and output the result.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=100.0 lat=20.0 radius=0.01 ocmd='colmeta -name ALPHA RA; colmeta -name DELTA DEC' out=alpha_delta.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Search MAST CAOM near RA 280, Dec 5, with a radius of 10 arcseconds, and sort the result by the primary ID column.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=280.0 lat=5.0 radius='10.0 / 3600.0' ocmd='sort ID' out=mast_sorted_id.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "The radius of each source is its `PSF_WIDTH` in arcseconds divided by 2. Generate the footprint.",
        "response": "stilts mocshape in=psf_data.fits shape=circle coords='array(RA,DEC,PSF_WIDTH/2.0/3600.0)' out=psf_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve the top 50 objects from NED TAP service that have a redshift below 0.001.",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT TOP 50 * FROM object WHERE redshift < 0.001' out=ned_low_z.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC (order 16) for sources with a magnitude G_MAG greater than 20, using a 3 arcsecond radius.",
        "response": "stilts pixfoot in=faint_cat.fits icmd='select \"G_MAG > 20\"' ra=RA dec=DEC radius='3.0 / 3600.0' order=16 out=faint_3as.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G_MAG > 20\n\nUsage: select <expr>\n    (Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plotting a smoothed median line using quantile layer (smooth=-10 bins).",
        "response": "stilts plot2plane in=scatter.fits layer=quantile x=X y=Y quantiles=0.5 smooth=-10 join=lines out=median_smooth_10.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a 2D histogram (grid) with 50 bins in X and 20 bins in Y.",
        "response": "stilts plot2plane in=data.fits layer=grid x=X y=Y xbinsize=-50 ybinsize=-20",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Read a WDC (World Data Centre) format file and convert it to CSV.",
        "response": "stilts tcopy in=wdc_data.txt ifmt=wdc out=wdc_data.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find matches between A.fits and B.fits using Cartesian 4D coordinates (X, Y, Z, T) within 10 units.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=4d params=10 values1='X Y Z T' values2='X Y Z T' out=cartesian_4d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine two CSV files where the resulting table should only contain the first 500 rows in total, ordered by 'TIME'.",
        "response": "stilts tcatn nin=2 ifmt1=csv in1=ts1.csv ifmt2=csv in2=ts2.csv ocmd='sort TIME' ocmd='head 500' out=sample_sorted.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Join T_A and T_B. T_A coordinates are array values 'POS_VEC'. Explode them to RA, DEC before matching B.",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='explodecols POS_VEC; colmeta -name RA POS_VEC_0; colmeta -name DEC POS_VEC_1' in2=T_B.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' out=exploded_coords_match_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match two tables where the positions are defined by elliptical regions (RA, DEC, A, B, PA). Approximate scale is 30 arcsec.",
        "response": "stilts tmatch2 in1=E1.fits in2=E2.fits matcher=skyellipse params=30 values1='RA DEC A_MAJ B_MIN PA' values2='RA DEC A_MAJ B_MIN PA' out=elliptical_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'MAG_J_AB_OLD' converting 2MASS J magnitude (Vega) to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_OLD \"MAG_J + VEGA_AB_J\"' out=j_ab_old_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_OLD MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'SQRT_FLUX' as the square root of 'FLUX', explicitly handling invalid operations (NaN output).",
        "response": "stilts tpipe in=data.fits cmd='addcol SQRT_FLUX sqrt(FLUX)' out=sqrt_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate two tables and replace the magic value -99.0 with NULL in the 'FLUX' column after combination.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits ocmd='badval -99.0 FLUX' out=flux_badval_clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "How to create a table from scratch with columns `x`, `y`, `z` based on a strange attractor for 10,000 rows?",
        "response": "stilts tpipe in=:attractor:10000,rampe out=strange_attractor.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot points in Galactic coordinates, showing axis labels in decimal format.",
        "response": "stilts plot2sky in=gal_cat.fits viewsys=galactic layer=mark lon=L lat=B sex=false out=gal_decimal_axes.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L\"\n    (The name \"L\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find the top 100 rows with the smallest `ERROR` value.",
        "response": "stilts tpipe in=data.fits cmd='sorthead 100 ERROR' out=best_quality.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Copy a table and output it using the **obsolete Mirage format**.",
        "response": "stilts tcopy in=input.fits out=output.mirage ofmt=mirage",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve the positions and names of the top 50 galaxies near M31 (RA 10.68, Dec 41.27) from the NED service, limited by redshift z < 0.01.",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT TOP 50 ra, dec, obj_name FROM object WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 10.68, 41.27, 0.5)) AND redshift < 0.01' out=ned_m31_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "My `radius` column is in radians. How do I make a MOC from it?",
        "response": "stilts pixfoot in=radian_radii.fits radius='radiansToDegrees(radius)' out=radian_radius_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a coverage map for objects around Ecliptic coordinates (ELON=50, ELAT=10). Convert first to ICRS.",
        "response": "stilts pixfoot in=ecliptic.fits icmd='addskycoords ecliptic icrs ELON ELAT RA DEC' ra=RA dec=DEC out=ecl_to_icrs_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the MAST CLASSY HLSP service and use a post-processing filter to ensure only the first 100 resulting rows are retained.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/classy/ adql='SELECT * FROM ivoa.ObsCore' ocmd='head 100' out=classy_head.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'PM_VEL_ICRS_Y' containing the Y component of the ICRS velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_ICRS_Y \"astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\"' out=icrs_y_vel.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_ICRS_Y astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Start an asynchronous query on ARI Gaia for faint sources, reporting continuous progress updates to the console.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT * FROM gaiadr3.gaia_source WHERE phot_g_mean_mag > 20' progress=true out=ari_faint_progress.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create an MOC (order 10) for sources around Galactic L=20, B=20, with radius 10 arcseconds, converted from Galactic.",
        "response": "stilts pixfoot in=gal_data9.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC radius='10.0 / 3600.0' order=10 out=gal_10as_o10.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need the coverage map for 2 arcminute radii, explicitly calculating the radius as (2/60) degrees.",
        "response": "stilts pixfoot in=catalog.fits ra=RA dec=DEC radius='2.0 / 60.0' out=catalog_2am.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the ESO TAP_OBS service for all VIRCAM raw observations, keeping only the rows that satisfy the local filter condition 's_fov > 0.05' after retrieval.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM raw.vircam' ocmd='select \"s_fov > 0.05\"' out=vircam_wide.fits",
        "error": "Error: Unused arguments: '>' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select s_fov > 0.05\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.05'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'Z_COMOVING_ABS_DIST' converting Z to absolute magnitude (M_ABS) via luminosity distance and adding it to the table.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol L_DIST_M \"luminosityDistance(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC\"' out=galaxies_abs_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol L_DIST_M luminosityDistance(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "How to generate a MOC with a fixed 1 arcminute radius for every point in `points.csv`?",
        "response": "stilts pixfoot in=points.csv ifmt=csv radius=1.0/60.0 mocfmt=fits out=arcmin_radius_points.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot a scatter plot with transparent points, ensuring the background is PNG transparent (outfmt=png-transp).",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=transparent opaque=5 out=transp.png ofmt=png-transp",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge survey files T1 and T2. Apply the 'fixcolnames' filter to T1 to ensure clean column names compatible with algebraic expressions.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='fixcolnames' in2=T2.fits out=fixed_names_concat_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the CSIRO ASKAP service for ObsCore entries and locally rename the coordinate columns 's_ra' and 's_dec' to 'RA' and 'DEC'.",
        "response": "stilts tapquery tapurl=https://casda.csiro.au/casda_vo_tools/tap adql='SELECT TOP 10 s_ra, s_dec FROM obs_core' ocmd='colmeta -name RA s_ra; colmeta -name DEC s_dec' out=askap_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter the table, retaining only the top 100 rows based on the lowest 'FLUX_ERR' values.",
        "response": "stilts tpipe in=data.fits cmd='sorthead 100 FLUX_ERR' out=low_error_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate observation data. For the second observation (O2), filter out all rows after the 1000th row.",
        "response": "stilts tcatn nin=2 in1=O1.fits in2=O2.fits icmd2='head 1000' out=o2_trimmed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot points with asymmetric Y error bars, defined by Y_LOW_ERR and Y_HIGH_ERR columns.",
        "response": "stilts plot2plane in=measure.fits layer=xyerror x=X y=Y yerrlo=Y_LOW_ERR yerrhi=Y_HIGH_ERR out=asym_y_error.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match `cosmos_data.fits` and `hst_data.fits` and name the separation column `Separation_arcsec`.",
        "response": "stilts tmatch2 in1=cosmos_data.fits in2=hst_data.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' scorecol=Separation_arcsec out=match_with_sep.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T1 and T2 using the symmetrical best match (find=best). T2 coordinates are in degrees, T1 positions are in Ecliptic. Convert T1 to ICRS first.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='addskycoords ecliptic icrs ELON ELAT RA DEC' in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=best out=ecliptic_best_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine a table where the magnitude is in the 'Jansky' column, converting it to AB magnitude before concatenation.",
        "response": "stilts tcatn nin=2 in1=flux.fits icmd1='replacecol MAG janskyToAb(Jansky)' in2=other.fits out=abmag_normalized.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two different files using tcatn first, then pipe the concatenated result to mocshape to generate a union MOC (order 10).",
        "response": "You should do somthing like: ```stilts tcatn nin=2 in1=c1.fits in2=c2.fits``` then  ```stilts mocshape in=- shape=point coords='array(RA, DEC)' order=10 out=tcatn_union_o10.fits```",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: mocshape: not found\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Concatenate `table1.vot` and `table2.vot` and then immediately load the resulting table into TOPCAT.",
        "response": "stilts tcat in=table1.vot in=table2.vot omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate two tables, filtering each input first to keep only rows where the 'FLAG' column is not null.",
        "response": "stilts tcat in='d_a.fits d_b.fits' icmd='select !NULL_FLAG' out=non_null_flag_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Group match three tables. T1 has errors in arcminutes (ERR_ARCMIN). Convert to arcseconds before matching using `skyerr`.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=skyerr params=1 values1='RA DEC ERR_ARCSEC' values2='RA DEC ERR_ARCSEC' values3='RA DEC ERR_ARCSEC' in1=T1.fits icmd1='addcol ERR_ARCSEC ERR_ARCMIN*60' in2=T2.fits in3=T3.fits out=arcmin_error_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Apply the 'fixcolnames' filter to ensure all column names are syntactically safe for expressions.",
        "response": "stilts tpipe in=messy.fits cmd=fixcolnames out=clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Get all sources from the WISE All-Sky catalog (II/328/allwise) within 1 degree of the north ecliptic pole.",
        "response": "stilts tapquery tapurl=http://tapvizier.u-strasbg.fr/tap adql='SELECT AllWISE, RAJ2000, DEJ2000 FROM \"II/328/allwise\" WHERE 1=CONTAINS(POINT(\"ECLIPTIC\", 270, 90), CIRCLE(\"ICRS\", RAJ2000, DEJ2000, 1.0))'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter rows keeping only the first 50 rows, then calculate statistics on the remaining data.",
        "response": "stilts tpipe in=data.fits cmd='head 50' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Output the column metadata, renaming the 'Name' column to 'Column_Title'.",
        "response": "stilts tpipe in=data.fits cmd='meta Name Description' cmd='replacecol Name Column_Title' out=meta_table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables, and then select only rows where the expression 'RA > 180' is true.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='select \"RA > 180\"' out=southern_hemisphere.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '180'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 180\n\nUsage: select <expr>\n    (Unused arguments: '>' '180'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve coordinates from the MAST 3D-HST HLSP photometry table and locally calculate the distance modulus assuming a redshift-dependent model.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/3dhst/ adql='SELECT TOP 5 ra, dec, z_best FROM 3dhst.photometry' ocmd='addcol DIST_MOD distanceToModulus(zToDist(z_best))' out=3dhst_distmod.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a local FITS file to a VOTable, forcing the use of **VOTable version 1.0**.",
        "response": "stilts tcopy in=legacy.fits ofmt='votable(version=V10)' out=legacy_v10.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert a VOTable to a Feather file.",
        "response": "stilts tcopy in=for_r.vot ofmt=feather out=for_r.feather",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 1.4717 and latitude -70.651. Please use a search radius of 0.2374 degrees. Save the results to a ascii file called query_results_190.ascii.",
        "response": "stilts cone servicetype=sia2 serviceurl=http://irsa.ipac.caltech.edu/sia lon=1.4717 lat=-70.651 radius=0.2374 omode=out ofmt=ascii out=query_results_190.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert an ECSV file to a CSV file, explicitly suppressing the ECSV header to produce a clean CSV output.",
        "response": "stilts tcopy in=input.ecsv out=clean.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "How can I generate a MOC for circles whose radius is `sin(abs(DEC_DEG)*PI/180)`?",
        "response": "stilts pixfoot in=special_radii.fits radius='sin(abs(DEC_DEG)*PI/180)' out=sin_dec_radius.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Duplicate every row in the input catalogue twice, placing the duplicate immediately after the original.",
        "response": "stilts tpipe in=cat.fits cmd='repeat -row 2' out=doubled_cat.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine a catalog and an error table. In the error table, convert the 'ERR_MAS' column from mas to degrees before concatenation.",
        "response": "stilts tcatn nin=2 in1=cat.fits in2=err.fits icmd2='replacecol ERR_DEG \"ERR_MAS / 3600000.0\"' out=mas_to_deg.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol ERR_DEG ERR_MAS / 3600000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch T1 and T2 using position and magnitude (sky*1d). T2 magnitude is null for values of -99. Convert -99 to null before matching.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='badval -99 MAG' matcher=sky*1d params='1 0.1' values1='RA DEC MAG' values2='RA DEC MAG' out=badval_sky_star_1d.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 55.4814 and latitude 24.044. Please use a search radius of 0.0171 degrees. Save the results to a fits file called query_results_7.fits.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=55.4814 lat=24.044 radius=0.0171 omode=out ofmt=fits out=query_results_7.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate two tables and write the entire final table contents to standard output in a simple text format.",
        "response": "stilts tcat in='t1.vot t2.vot' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, writing the output in the FITS format that supports rich metadata (FITS-plus).",
        "response": "stilts tcatn nin=2 in1=a.fits in2=b.fits ofmt=fits-plus out=rich_metadata_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC (order 13) for objects within 3 arcseconds, and ensure the output is in CDS JSON format.",
        "response": "stilts pixfoot in=targets.fits ra=RA dec=DEC radius='3.0 / 3600.0' order=13 mocfmt=json out=targets_cds",
        "chat.jar": "fixed",
        "error": "Error: Bad value for parameter mocfmt: Unknown value \"cds_json\" - must be one of fits, json, ascii\nUsage: mocfmt=fits|json|ascii\n\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I have a VOTable. How can I generate an HTML table from it to put on a web page?",
        "response": "stilts tcopy in=results.vot ofmt=html out=results.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve the RA and Dec of the top 50 sources from the MAST HSCv3 point catalogue, saving the output in FITS format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 50 ra, dec FROM hsc_v3.point' ofmt=fits out=hsc_coords.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 objects from the NED TAP service that are classified as quasars (QSO).",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT TOP 10 ra, dec, obj_name FROM object WHERE obj_type = ''QSO''' out=ned_qso_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot the sky map centered on the North Ecliptic Pole (NEP: ELON=270, ELAT=90, radius 5 degrees) using Ecliptic coordinates.",
        "response": "stilts plot2sky viewsys=ecliptic clon=270.0 clat=90.0 radius=5.0 layer=mark lon=ELON lat=ELAT datasys=ecliptic out=nep_ecliptic_zoom.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "How can I combine three MOCs into one? Say, `moc1.fits`, `moc2.fits`, and `moc3.fits`.",
        "response": "You might do somthing like: ```stilts tcat in=moc1.fits in=moc2.fits in=moc3.fits``` followed by ```stilts pixfoot in=- out=combined_moc.moc.fits```",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: pixfoot: not found\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Synchronously retrieve the ObsCore table definition from the European HST Archive and output the result in verbose TABLEDATA VOTable format.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT * FROM TAP_SCHEMA.tables WHERE table_name = ''ivoa.ObsCore''' sync=true ofmt='votable(format=TABLEDATA)' out=hst_tap_schema_td.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the ESO TAP_CAT service near RA 16h, Dec 20d (convert RA/Dec), using 45 arcseconds radius.",
        "response": "stilts cone serviceurl=http://archive.eso.org/tap_cat lon=240.0 lat=20.0 radius='45.0 / 3600.0' out=eso_45as_hms.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"45.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits (sky 1 arcsec). Output should be sorted by a calculated color index MAG_G - MAG_R descending.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=dups suffix1=_A suffix2=_B ocmd='sort \"-down (MAG_G_A - MAG_R_B)\"' out=sorted_by_color.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_R_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort -down (MAG_G_A - MAG_R_B)\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '-' 'MAG_R_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Draw a scatter plot where the marker shape is a filled downward-pointing triangle.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shape=filled_triangle_down",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Concatenate tables, and add a constant string column 'VERSION_TAG' with the value 'DR5'.",
        "response": "stilts tcat in='v1.fits v2.fits' ocmd='addcol VERSION_TAG \"DR5\"' out=version_flagged_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Group match five tables (D1-D5). Output the final table in FITS format using the column-oriented FITS-plus convention.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID values5=ID in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits in5=D5.fits ofmt=colfits-plus out=group_colfits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the ESA Euclid archive asynchronously for all ObsCore entries, allowing a 5-hour (18000 second) runtime and ensuring the job is deleted upon completion.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore' maxrec=100000 executionduration=18000 delete=finished out=euclid_full.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a VOTable to a CSV file, explicitly allowing the use of double quotes for string fields (default CSV quoting).",
        "response": "stilts tcopy in=input.vot out=quoted.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch two time series T_A and T_B. T_A has time in ISO 8601 string format ('TIME_STR'). Convert T_A time to MJD before matching on 1D time (0.005 day tolerance).",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='addcol MJD isoToMjd(TIME_STR)' in2=T_B.fits matcher=1d params=0.005 values1=MJD values2=MJD out=iso_time_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Take the output of a command and pipe it into `tcopy` to create a FITS file.",
        "response": "my_command | stilts tcopy ifmt=ascii in=- ofmt=fits out=output.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert the input table to Parquet format, forcing GZIP compression.",
        "response": "stilts tpipe in=input.fits ofmt='parquet(compression=gzip)' out=output.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need the footprint for sources that are not saturated (`SATURATED` column is false).",
        "response": "stilts mocshape in=photometry.fits icmd='select !SATURATED' shape=point coords='array(RA,DEC)' out=unsaturated.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine `table1.fits` and `table2.fits`, but only keep the first 100 rows from each.",
        "response": "stilts tcatn nin=2 in1=table1.fits icmd1='head 100' in2=table2.fits icmd2='head 100' out=sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I have `file_a.fits` and `file_b.fits`. Can you create a single MOC that covers the combined sky area of both?",
        "response": "Do something like : ````stilts tcat in=file_a.fits in=file_b.fits``` followed by ```stilts pixfoot in=- out=combined_coverage.moc.fits```",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: pixfoot: not found\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Start an asynchronous query on the European JWST Archive for ObsCore data, requesting continuous status progress reports.",
        "response": "stilts tapquery tapurl=https://jwst.esac.esa.int/server/tap adql='SELECT * FROM ivoa.ObsCore WHERE obs_collection = ''JWST''' progress=true out=jwst_progress.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read data from the WDC format and convert it to FITS.",
        "response": "stilts tcopy in=wdc_data.txt ifmt=wdc out=wdc_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match T1 and T2. T1 is a simulated sky catalog (:skysim:1e6). Use best match for T2 from T1 (best2).",
        "response": "stilts tmatch2 in1=:skysim:1e6 in2=T2.fits matcher=sky params=2 values1='ra dec' values2='RA DEC' find=best2 out=simulated_best2_match_3.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plotting labels using a bold, serif font style.",
        "response": "stilts plot2plane in=pts.fits layer=label x=X y=Y label=NAME fontstyle=serif fontweight=bold out=serif_labels.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match `cat1.fits` and `cat2.fits` against `ref.fits`. After matching, add a column `IS_PAIRED` that is true if a row from `cat1` was matched, and false otherwise.",
        "response": "stilts tmatchn nin=3 multimode=pairs iref=3 in1=cat1.fits in2=cat2.fits in3=ref.fits matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 join3=always ocmd='addcol IS_PAIRED !NULL_ID_1' out=ref_with_pair_flag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1 and T2 using the symmetrical best match (best). After matching, drop the Separation column.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=best scorecol=Separation ocmd='delcols Separation' out=best_match_no_sep.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Pair match T_MAIN (ref) against three TESS observation segments. Only keep T_MAIN rows that fail to find a counterpart in any segment.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky params=1 in1=T_MAIN.fits in2=TESS1.fits in3=TESS2.fits in4=TESS3.fits join1=nomatch values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' out=unobserved_targets.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate two tables and then calculate the mean and standard deviation of the final result.",
        "response": "stilts tcatn nin=2 in1=part1.fits in2=part2.fits omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a string column containing the decimal year equivalent of the JD time 'TIME_JD' with 4 decimal places.",
        "response": "stilts tpipe in=time.fits cmd='addcol DEC_YEAR \"formatDecimal(mjdToDecYear(jdToMjd(TIME_JD)), 4)\"' out=dec_year_formatted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_YEAR formatDecimal(mjdToDecYear(jdToMjd(TIME_JD)), 4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). T3 columns should always be included in the output, even if they aren't part of a group match.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits join3=always out=T3_always_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Draw a set of crosshairs (errorbar=crosshair_rectangle) representing position uncertainty, with thick lines (thick=2).",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra=A rb=B posang=P unit=arcsec ellipse=crosshair_rectangle thick=2 out=thick_crosshair_rect.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Join T1 and T2. T1 contains magnitude in log scale. T2 contains linear flux (FLUX). Convert T2 to log magnitude before matching on flux (1D, 0.1 tolerance).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='addcol LOG_MAG log10(FLUX)' matcher=1d params=0.1 values1=LOG_MAG values2=LOG_MAG out=log_mag_1d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a sky map and discard the output (omode=discard) to benchmark the data processing speed.",
        "response": "stilts plot2sky in=large_cat.fits layer=mark lon=RA lat=DEC omode=discard",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine tables from a pipe and a file, and write the result to standard output as text.",
        "response": "cat stream.csv | stilts tcatn nin=2 in1=disk_data.fits in2=- ifmt2=csv ofmt=text out=-",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine table A and table B, requiring only their respective 'NAME' columns to pass through to the final output.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='keepcols NAME' in2=B.fits icmd2='keepcols NAME' out=names_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Calculate the coverage of many small 1 micro-arcsecond ($\\mu$as) circles around targets, storing the MOC as raw binary.",
        "response": "stilts mocshape in=precise.fits shape=circle coords='array(RA, DEC, 1.0 / 3600000000.0)' mocfmt=raw out=uas_raw_moc.bin",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Using `t1.fits` as the reference, find all rows that have a match in `t2.fits` and also have a match in `t3.fits`.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=pairs iref=1 matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' join1=match join2=match join3=match out=t1_in_t2_and_t3.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create an MOC (order 16) for sources with a fixed 1 arcminute radius, filtering the input to select rows where FLUX > 100.",
        "response": "stilts pixfoot in=flux_cat.fits icmd='select \"FLUX > 100.0\"' ra=RA dec=DEC radius='1.0 / 60.0' order=16 out=bright_1am.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need to stream a large number of CSV files listed in `stream_sources.txt` and concatenate them. How can I do this efficiently?",
        "response": "stilts tcat ifmt=csv in=@stream_sources.txt istream=true out=streamed_output.csv",
        "chat.jar": "fixed",
        "error": "Error: stream_sources.txt (No such file or directory)\n",
        "cmd": "tcat"
    },
    {
        "prompt": "My radius column `R_KPC` is in kiloparsecs and I have distance `D_MPC`. Create a MOC of circles.",
        "response": "stilts mocshape in=physical.fits shape=circle coords='array(RA,DEC,atan(R_KPC*1e-3/D_MPC)*180/PI)' out=physical_to_angular.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find sources around RA 5h 0m 0s, Dec 10d 0m 0s (convert RA/Dec), using 6 arcseconds.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=75.0 lat=10.0 radius='6.0 / 3600.0' out=gaia_6as_hms.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"6.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Retrieve the top 10 ObsCore entries from the CSIRO ASKAP Science Data Archive and pipe the resulting table directly to TOPCAT.",
        "response": "stilts tapquery tapurl=https://casda.csiro.au/casda_vo_tools/tap adql='SELECT TOP 10 * FROM obs_core' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create 100 rows containing random numbers sampled from a uniform distribution (0 to 1).",
        "response": "stilts tpipe in=:loop:100 cmd='replacecol i random($0)' out=uniform_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 155.2437 and latitude 4.9358. Please use a search radius of 1.284 degrees. Instead of a file, just give me the stats. Don't use compression for the download.",
        "response": "stilts cone servicetype=sia2 serviceurl=http://irsa.ipac.caltech.edu/sia lon=155.2437 lat=4.9358 radius=1.284 compress=false omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Retrieve 5 sources from the 4XMM XMM-Newton Catalogue, explicitly forcing synchronous execution.",
        "response": "stilts tapquery tapurl=https://xcatdb.unistra.fr/xtapdb adql='SELECT TOP 5 source_id, ra, dec FROM dbo.xcat_source' sync=true out=xcatdb_sync.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine file D_MAIN.fits and a file streamed via a pipe (D_STREAM.ipac). D_STREAM is IPAC format.",
        "response": "cat D_STREAM.ipac | stilts tcatn nin=2 in1=D_MAIN.fits in2=- ifmt2=ipac out=piped_ipac_merge.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a circle MOC where the radius varies by $1 / \text{SQUARE}(\text{MAGNITUDE})$.",
        "response": "stilts mocshape in=mags.fits shape=circle coords='array(RA, DEC, 1.0 / square(MAGNITUDE))' out=inv_sq_mag_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Merge a table A and table B. Apply the filter 'fixcolnames' to both inputs to standardize column names before joining.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='fixcolnames' in2=B.fits icmd2='fixcolnames' out=name_standardized_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Filter a catalog for sources within 5 arcminutes of RA 150, Dec 10, then count the total number of remaining rows.",
        "response": "stilts tpipe in=survey.fits cmd='select \"skyDistanceDegrees(RA, DEC, 150.0, 10.0) * 3600.0 < 300.0\"' omode=count",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' '150.0,' '10.0)' '*' '3600.0' '<' '300.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, 150.0, 10.0) * 3600.0 < 300.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' '150.0,' '10.0)' '*' '3600.0' '<' '300.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate tables A and B. In the combined output, rename all columns containing 'ERROR' in their name by prefixing them with 'E_'.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits ocmd='colmeta -name E_* *ERROR*' out=error_prefixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a MOC for circles whose radius is `abs(MAGNITUDE)/100` degrees.",
        "response": "stilts pixfoot in=magnitudes.fits radius='abs(MAGNITUDE)/100.0' out=mag_scaled_radius.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a plot and enable the auxiliary color ramp, setting the width to 30 pixels.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=aux aux=Z auxwidth=30 out=wide_aux_ramp.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert a CSV file to HTML output, ensuring the output uses a minimum column width via explicit styling (not directly supported by format options, rely on default HTML output).",
        "response": "stilts tcopy in=data.csv ifmt=csv ofmt=html out=styled_report.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate a point MOC from a simulated chaotic attractor table, demonstrating use of the attractor scheme.",
        "response": "stilts mocshape in=:attractor:10000,henon shape=point coords='array(x, y)' out=henon_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine two tables, removing any column that contains only identical values after concatenation.",
        "response": "stilts tcatn nin=2 in1=v1.fits in2=v2.fits ocmd='constcol' out=variable_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot a histogram where the Y-axis uses logarithmic scaling.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE yscale=log out=log_y_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a scatter plot, setting the marker shape to 'fat_cross' and the line thickness to 3 pixels.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shape=fat_cross thick=3 out=thick_fat_cross.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'KCORR_Y' using the KCF_Y filter at Z=0.1, leveraging the Y-K color (KCC_YK).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_Y \"kCorr(KCF_Y, 0.1, KCC_YK, MAG_Y-MAG_K)\"' out=kcorr_y.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.1,' 'KCC_YK,' 'MAG_Y-MAG_K)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_Y kCorr(KCF_Y, 0.1, KCC_YK, MAG_Y-MAG_K)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.1,' 'KCC_YK,' 'MAG_Y-MAG_K)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Upload a table to the FUB EPN-TAP service and only select the 'target_name' column from the uploaded table before running the join.",
        "response": "stilts tapquery tapurl=http://dachs.planet.fu-berlin.de/tap adql='SELECT target_name, ra, dec FROM epn_core.epn_core AS t JOIN TAP_UPLOAD.my_targets AS u ON t.target_name = u.target_name' nupload=1 upload1=targets.fits upname1=my_targets ucmd1='keepcols \"target_name\"' out=epn_join.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a new column 'LOG_ABS_VAL' that calculates log10(abs(VALUE)) for a potentially negative value column 'VALUE'.",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_ABS_VAL log10(abs(VALUE))' out=log_abs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Submit an asynchronous job to the ARI Gaia service for 500 records and set the job to be persistent (never deleted automatically).",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 500 ra, dec FROM gaiadr3.gaia_source' delete=never out=ari_persistent.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run an SSA query, demanding that the result format is the FITS format, and save the resulting table locally.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=10.0 lat=10.0 radius=0.1 servicetype=ssa dataformat=application/fits out=ssa_fits_list.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate tables, but before joining, calculate a new column 'LOG_MASS' in each table as log10(MASS).",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='addcol LOG_MASS log10(MASS)' out=with_log_mass.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Read an ASCII file, explicitly using only the first 500 rows to determine column types (maxSample).",
        "response": "stilts tcopy in=big_ascii.txt ifmt='ascii(maxSample=500)' out=sampled_types.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Convert the input table to an array of table rows and pipe it to an external process using a system command.",
        "response": "stilts tpipe in=data.fits ofmt=csv out=\"| cat > output.csv\"",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a FITS file to an HTML table fragment, explicitly limiting cells to 100 characters.",
        "response": "stilts tcopy in=data.fits ofmt='html(maxCell=100)' out=report.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve 5 object names from the NED TAP service, explicitly requesting the proprietary CUSTOM_SQL language.",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT TOP 5 obj_name FROM object' language=CUSTOM_SQL out=ned_custom.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read an external Parquet file, apply a magnitude correction (MAG_CORR = MAG - 0.1), and save it in FITS format.",
        "response": "stilts tpipe in=input.parquet ifmt=parquet cmd='addcol MAG_CORR \"MAG - 0.1\"' out=corrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_CORR MAG - 0.1\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Take a gzipped FITS file from a URL and convert it to a local ECSV file.",
        "response": "stilts tcopy in=http://example.com/data/survey.fits.gz out=survey.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the PADC TAP server for 20 rows using a table alias in the ADQL query.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT TOP 20 * FROM __system__.all_tables AS mycat' out=padc_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'X_SQUARE' calculated as X*X, but only for rows where X is not null.",
        "response": "stilts tpipe in=data.fits cmd='addcol X_SQUARE \"!NULL_X ? X*X : NULL\"' out=squared_x.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' 'X*X' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol X_SQUARE !NULL_X ? X*X : NULL\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '?' 'X*X' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find rows where 'MJD' is greater than 58000 and calculate the column `DEC_YEAR` from MJD.",
        "response": "stilts tpipe in=obs.fits cmd='select \"MJD > 58000\"' cmd='addcol DEC_YEAR \"mjdToDecYear(MJD)\"' out=recent_obs.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '58000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MJD > 58000\n\nUsage: select <expr>\n    (Unused arguments: '>' '58000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Group match three tables (A, B, C). A has magnitude MAG_V. Convert A to MAG_AB (MAG_AB = MAG_V + 0.03) and match on MAG_AB (1D, 0.2 tolerance).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.2 in1=A.fits icmd1='addcol MAG_AB \"MAG_V + 0.03\"' in2=B.fits in3=C.fits values1=MAG_AB values2=MAG_AB values3=MAG_AB out=mag_converted_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '0.03'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_AB MAG_V + 0.03\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '0.03'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the European JWST Archive for all ObsCore entries, setting a strict execution duration limit of 600 seconds (10 minutes).",
        "response": "stilts tapquery tapurl=https://jwst.esac.esa.int/server/tap adql='SELECT * FROM ivoa.ObsCore' executionduration=600 out=jwst_limited_time.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge two tables, T1 and T2. T2 contains a column 'ARRAY_VALUES'. Explode it into scalar columns, keeping only the first three elements.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='explodecols \"ARRAY_VALUES\"; keepcols \"* ARRAY_VALUES_0 ARRAY_VALUES_1 ARRAY_VALUES_2\"' out=partial_explode.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ARRAY_VALUES_0' 'ARRAY_VALUES_1' 'ARRAY_VALUES_2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols * ARRAY_VALUES_0 ARRAY_VALUES_1 ARRAY_VALUES_2\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ARRAY_VALUES_0' 'ARRAY_VALUES_1' 'ARRAY_VALUES_2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Copy a FITS table and output it to FITS, explicitly forcing **no primary HDU** (`primary=none`).",
        "response": "stilts tcopy in=input.fits ofmt='fits(primary=none)' out=no_phdu.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Merge files F1.fits and F2.fits. In F2, calculate a new column 'LOG_FLUX' as log10(FLUX) before joining F1.",
        "response": "stilts tcatn nin=2 in1=F1.fits in2=F2.fits icmd2='addcol LOG_FLUX log10(FLUX)' out=log_flux_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a JSON MOC for the region of the Andromeda galaxy from a simulated catalog.",
        "response": "stilts mocshape in=:skysim:1e4 icmd='select skyDistanceDegrees(ra,dec,10.68,41.27)<2' shape=point coords='array(ra,dec)' mocfmt=json out=m31.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot a histogram of $\\log_{10}(\\text{FLUX})$ values.",
        "response": "stilts plot2plane in=data.fits layer=histogram x='log10(FLUX)' out=log_flux_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"log10(FLUX)\"\n    (The name \"FLUX\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a default-resolution FITS MOC from the sky positions in `survey_catalog.fits`.",
        "response": "stilts pixfoot in=survey_catalog.fits out=survey_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Filter the input to include only galaxies (TYPE=0), and create an order 12 MOC for 0.01 degree circles around them.",
        "response": "stilts mocshape in=types.fits icmd='select \"TYPE == 0\"' shape=circle coords='array(RA, DEC, 0.01)' order=12 out=galaxy_circles_o12.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TYPE == 0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Concatenate observations from two FITS extensions within the same file: file.fits#1 and file.fits#2.",
        "response": "stilts tcatn nin=2 in1=file.fits#1 in2=file.fits#2 out=extensions_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add an array column 'FLUX_NORM' where each element is the ratio of the original flux array element to the sum of the flux array elements.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol FLUX_NORM \"divide(FLUX_ARRAY, sum(FLUX_ARRAY))\"' out=normalized_array.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'sum(FLUX_ARRAY))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_NORM divide(FLUX_ARRAY, sum(FLUX_ARRAY))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'sum(FLUX_ARRAY))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 181.9934 and latitude -39.0343. Please use a search radius of 1.8301 degrees. Instead of a file, just give me the out. The coordinates are in the fk5 system. Use verbosity level 1.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=181.9934 lat=-39.0343 radius=1.8301 skysys=fk5 verb=1 omode=out",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a column 'DEC_RAD_SIN' calculating the sine of the DEC in radians, assuming DEC is currently in degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_RAD_SIN sin(degreesToRadians(DEC))' out=dec_rad_sin.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "My input file is `strange.fits`, and I want a JSON moc at order 11.",
        "response": "stilts pixfoot in=strange.fits order=11 mocfmt=json out=strange_coverage.moc.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Can you plot text labels from the 'ID' column at each point?",
        "response": "stilts plot2plane in=named_objects.fits layer=label x=RA y=DEC label=ID",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a histogram where the bin width is exactly 0.1 units.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE binsize=0.1",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 50 rows from the NED database and ensure the query runs synchronously.",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT TOP 50 * FROM object' sync=true out=ned_sync_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Count the number of available tables on the UCL DaCHS server.",
        "response": "stilts tapquery tapurl=http://astroweb.projects.phys.ucl.ac.uk:8000/tap adql='SELECT COUNT(*) FROM TAP_SCHEMA.tables' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers sized by FLUX, ensuring density shading uses a saturation boost (compositor=0.5) to better reveal faint structures.",
        "response": "stilts plot2sky in=faint_data.fits layer=size lon=RA lat=DEC size=FLUX shading=density compositor=0.5 out=density_boost_faint.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Can I convert a table to JSON format?",
        "response": "STILTS `tcopy` does not support a generic JSON table output format. However, `ecsv` is based on YAML/JSON, and you could use `tpipe` with specific filters to construct JSON text.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Draw polygons defined by STC-S strings, coloring them based on AUX value, using quantization N=8.",
        "response": "stilts plot2sky in=regions.fits layer=area area=S_REGION areatype=STC-S polymode=fill shading=aux aux=AREA auxquant=8 out=quantized_stcs_area.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"AREA\"\n    (The name \"AREA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a table from a Clifford attractor and save it as a FITS file.",
        "response": "stilts tcopy in=:attractor:10000,clifford out=attractor.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Join table A with table B, but only keeping rows from table B where 'SNR' > 10.",
        "response": "stilts tcatn nin=2 in1=table_A.fits in2=table_B.fits icmd2='select SNR>10' out=high_snr.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match two catalogs where the match radius is the quadrature sum of their individual errors (pos_err_1, pos_err_2) using skyerr_q.",
        "response": "stilts tmatch2 in1=cat_A.fits in2=cat_B.fits matcher=skyerr_q params=3 values1='RA DEC pos_err_1' values2='RA DEC pos_err_2' out=quadrature_error_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine files where column names might be poorly formatted (e.g., 'RA (deg)') by running `fixcolnames` on input.",
        "response": "stilts tcat in='bad_names1.csv bad_names2.csv' icmd=fixcolnames out=fixed_names.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Start a long asynchronous query on the ARI Gaia service to find sources with high parallax error, reporting continuous progress.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT * FROM gaiadr3.gaia_source WHERE parallax_error > 1.0' maxrec=100000 progress=true out=parallax_err.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Set the table parameter 'VERSION' to the current STILTS version string.",
        "response": "stilts tpipe in=data.fits cmd='setparam VERSION param$stilts.version' out=version_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate tables, and add a column 'SourceTableIdx' that lists the table's sequence index.",
        "response": "stilts tcat in='t1.fits t2.fits t3.fits' seqcol=SourceTableIdx out=source_indexed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Add a column 'MAG_B_AB' converting Johnson B magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_B_AB \"MAG_B + JOHNSON_AB_B\"' out=b_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_B_AB MAG_B + JOHNSON_AB_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need a high-resolution MOC (order 18) for my_catalog.vot using 5 milli-arcseconds (mas) as the radius.",
        "response": "stilts pixfoot in=my_catalog.vot ra=RA dec=DEC radius='5.0 / 3600000.0' order=18 out=hires_5mas.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Submit a very long-running asynchronous job to the ESO TAP_OBS service and request that its job destruction time is set 30 days from now (using ISO 8601 representation of duration).",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM ivoa.ObsCore WHERE instrument_name LIKE ''FORS%''' maxrec=1000000 destruction='+P30D' out=long_eso_fors.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'KCORR_UV_R' using the KCF_NUV filter at Z=0.2, leveraging the NUV-r color (KCC_NUVr).",
        "response": "stilts tpipe in=uv_data.fits cmd='addcol KCORR_UV_R \"kCorr(KCF_NUV, 0.2, KCC_NUVr, NUV-R_MAG)\"' out=kcorr_nuvr.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.2,' 'KCC_NUVr,' 'NUV-R_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_UV_R kCorr(KCF_NUV, 0.2, KCC_NUVr, NUV-R_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.2,' 'KCC_NUVr,' 'NUV-R_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert 'old_data.fits' to VOTable, explicitly forcing the output VOTable standard version to 1.2.",
        "response": "stilts tcopy in=old_data.fits ofmt='votable(version=V12)' out=data_v12.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Merge two tables. The first is raw_data.csv (ASCII format) and the second is headerless.fits. The output should track provenance by sequence number.",
        "response": "stilts tcatn nin=2 in1=raw_data.csv ifmt1=ascii in2=headerless.fits seqcol=InputIndex out=sequenced_output.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "My radius column `R_MAS` is in milliarcseconds. How do I use it for circles?",
        "response": "stilts mocshape in=mas_radius.fits shape=circle coords='array(RA,DEC,R_MAS / 3600000.0)' out=mas_radius_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Crossmatch T_MAIN and T_SUPP. T_MAIN is a remote URL. T_SUPP must be filtered to keep only the first 1000 rows.",
        "response": "stilts tmatch2 in1=http://archive.com/T_MAIN.fits in2=T_SUPP.fits icmd2='head 1000' matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=remote_head_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a plot where the x-axis range is determined by the data but the y-axis is fixed from 0 to 1.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y ymin=0 ymax=1",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine two tables. Before joining, convert the magnitude 'R_MAG' to flux 'R_FLUX' (assuming Janskys/AB magnitudes) in both inputs.",
        "response": "stilts tcat in='m1.fits m2.fits' icmd='addcol R_FLUX abToJansky(R_MAG)' out=all_flux_r.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Convert a table from CSV to LaTeX format, ensuring the output is a standalone LaTeX document.",
        "response": "stilts tpipe in=report.csv ifmt=csv ofmt='latex(standalone=true)' out=report.tex",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need a summary report detailing the covered sky fraction derived from UNIQ identifiers, running at maximum standard resolution (order 29).",
        "response": "stilts mocshape in=deep_cells.fits shape=uniq coords=UNIQ_ID order=29 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate an order 7 MOC for circles where the radius is $0.001 \times \text{MAGNITUDE}$ degrees.",
        "response": "stilts mocshape in=variable_rad.fits shape=circle coords='array(RA, DEC, 0.001 * MAGNITUDE)' order=7 out=mag_scaled_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate an MOC for sources within 5 mas (milli-arcseconds) of a position, outputting in CDS JSON format.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 5.0 / 3600000.0)' mocfmt=cds_json out=tiny_mas_cds.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Read a table, assert that the 'Z' column is always positive, and discard the table data afterward.",
        "response": "stilts tpipe in=quasars.fits cmd='assert \"Z > 0\"' omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert Z > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'POS_GAL_PHI' containing the longitude component of the Galactic position vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_PHI \"cartesianToLon(icrsToGal(astromXYZ(RA, DEC, PARALLAX)), icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\"' out=galactic_phi_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX)),' 'icrsToGal(astromXYZ(RA,' 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_PHI cartesianToLon(icrsToGal(astromXYZ(RA, DEC, PARALLAX)), icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX)),' 'icrsToGal(astromXYZ(RA,' 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "List the RA and DEC for the first 5 entries in the Subaru HDS Spectrum table in plain text format to the standard output.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/hds/ adql='SELECT TOP 5 ra, dec FROM hds.spectrum' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T_A and T_B exactly on 'ID'. T_B is provided via standard input (VOTable format). Output count only.",
        "response": "cat B.vot | stilts tmatch2 in1=T_A.fits in2=- ifmt2=votable matcher=exact values1=ID values2=ID omode=count",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create an order 11 MOC for targets that are within 5 arcminutes of the North Pole (DEC=90).",
        "response": "stilts pixfoot in=polar_targets.fits icmd='select \"abs(DEC - 90.0) < 5.0 / 60.0\"' ra=RA dec=DEC radius='5.0 / 60.0' order=11 out=north_pole_5am.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '90.0)' '<' '5.0' '/' '60.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC - 90.0) < 5.0 / 60.0\n\nUsage: select <expr>\n    (Unused arguments: '-' '90.0)' '<' '5.0' '/' '60.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a plot showing X vs Y, suppressing the output (omode=discard).",
        "response": "stilts plot2plane in=test_perf.fits layer=mark x=X y=Y omode=discard",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'PM_XYZ_ICRS_MAG' containing the magnitude of the 3D ICRS velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_XYZ_ICRS_MAG \"hypot(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=icrs_velocity_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_XYZ_ICRS_MAG hypot(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find spectra around RA 200, Dec 20, with a radius of 0.5 degrees, and output statistics (min, max, mean, etc.) on all numeric columns.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=200.0 lat=20.0 radius=0.5 servicetype=ssa omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Show me the metadata (column names, types, UCDs) of the table `data_archive.fits`.",
        "response": "stilts tpipe in=data_archive.fits omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a raw binary MOC stream (order 15) for sources that have a measured proper motion (PMRA) greater than 10 mas/year.",
        "response": "stilts mocshape in=pm_cat.fits icmd='select \"PMRA > 10.0 / 3600000.0 * 3600.0\"' shape=point coords='array(RA, DEC)' order=15 mocfmt=raw out=high_pm_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 10.0 / 3600000.0 * 3600.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine two tables, then sort the output by 'ID' and remove any duplicated rows based on 'ID'.",
        "response": "stilts tcatn nin=2 in1=t_dups_a.fits in2=t_dups_b.fits ocmd='sort ID' ocmd='uniq ID' out=deduped_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Group match three tables. T1 is ASCII, T2 is IPAC, T3 is VOTable. Specify formats explicitly.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=A.txt ifmt1=ascii in2=B.tbl ifmt2=ipac in3=C.vot ifmt3=votable out=mixed_format_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "For my three catalogs, `c_a.fits`, `c_b.fits`, `c_c.fits`, I need to identify groups where objects are within 1 arcsec AND have a `Z_SPEC` value within 0.005 of each other.",
        "response": "stilts tmatchn nin=3 in1=c_a.fits in2=c_b.fits in3=c_c.fits multimode=group matcher=sky+1d params='1 0.005' values1='RA DEC Z_SPEC' values2='RA DEC Z_SPEC' values3='RA DEC Z_SPEC' out=pos_z_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a MOC for sources where the magnitude (G_MAG) is within 0.1 of magnitude 19.5.",
        "response": "stilts pixfoot in=catalog.fits icmd='select \"abs(G_MAG - 19.5) < 0.1\"' ra=RA dec=DEC out=narrow_mag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '19.5)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(G_MAG - 19.5) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '-' '19.5)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Run a quick cone search using minimal metadata (verb=1) and use the omode=meta output to just inspect the resulting table structure metadata.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=10.0 lat=20.0 radius=0.01 verb=1 omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot vectors showing velocity components VX, VY, ensuring the 'medium_arrow' shape is used.",
        "response": "stilts plot2plane in=particles.fits layer=xyvector x=X y=Y xdelta=VX ydelta=VY arrow=medium_arrow autoscale=true out=medium_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 10 Subaru SAGA stellar abundances and locally update the description metadata of the 'Fe_H' column.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 10 * FROM saga.stellar_abundances' ocmd='colmeta -desc \"Stellar Metallicity [Fe/H]\" Fe_H' out=saga_feh.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'PM_VEL_ICRS_X' containing the X component of the ICRS velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_ICRS_X \"astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\"' out=icrs_x_vel.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_ICRS_X astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the XMM-Newton archive TAP near RA 300, Dec 5, with a radius corresponding to 0.01 degrees, and convert the resulting table into HTML format for easy viewing.",
        "response": "stilts cone serviceurl=https://nxsa.esac.esa.int/tap-server/tap lon=300.0 lat=5.0 radius=0.01 ofmt=html out=xmm_report.html",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Filter the table to remove rows where the proper motion error in RA ('PMRA_ERR') is larger than 1.0 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMRA_ERR <= 1.0\"' out=low_pm_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA_ERR <= 1.0\n\nUsage: select <expr>\n    (Unused arguments: '<=' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERR_PROD' containing the dot product of array columns 'ERR1' and 'ERR2'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol ERR_PROD \"dotProduct(ERR1, ERR2)\"' out=error_dot_product.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ERR2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERR_PROD dotProduct(ERR1, ERR2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'ERR2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Map polygon coverage defined by the S_REGION column, retaining only regions larger than 0.1 square degrees, at order 12.",
        "response": "stilts mocshape in=obs_footprints.fits icmd='select \"mocSkyProportion(S_REGION) * 41252.96 > 0.1\"' shape=stc-s coords=S_REGION order=12 out=large_regions_o12.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '41252.96' '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select mocSkyProportion(S_REGION) * 41252.96 > 0.1\n\nUsage: select <expr>\n    (Unused arguments: '*' '41252.96' '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Merge three Parquet tables and rename all columns to ensure they are compatible with basic SQL naming conventions (using only alphanumeric and underscores).",
        "response": "stilts tcat in='p1.parquet p2.parquet p3.parquet' icmd=fixcolnames out=clean_names_parquet.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Find the statistical summary (min/max/mean) of the 'z' (redshift) column in the CANDELS HLSP TAP service at MAST.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT z FROM candels.photometry' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge tables, and then limit the output to only the last 100 rows of the combined table.",
        "response": "stilts tcat in='big1.fits big2.fits' ocmd='tail 100' out=last_100_rows.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Add a numeric column based on a conditional expression, setting it to 1 if MAG<15, else 0.",
        "response": "stilts tpipe in=phot.fits cmd='addcol IS_BRIGHT \"MAG < 15 ? 1 : 0\"' out=phot_flags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15' '?' '1' ':' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT MAG < 15 ? 1 : 0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '15' '?' '1' ':' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the best match (best) between T_A and T_B. Use a combination of sky match (1 arcsec) and exact match on a 'TYPE' string (sky+exact).",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=sky+exact params=1 values1='RA DEC TYPE' values2='RA DEC TYPE' find=best out=pos_type_best.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine two FITS files, ensuring all rows are sorted by the 'ID' column globally after concatenation.",
        "response": "stilts tcat in=cat_a.fits in=cat_b.fits ocmd='sort ID' out=globally_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Join T_A and T_B. T_B contains a header parameter 'EPOCH'. Add this parameter as a scalar column to T_B before joining on exact ID.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits icmd2='addcol EPOCH_VAL param$EPOCH' matcher=exact values1=ID values2=ID out=param_to_column_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Filter the table to keep rows where 'RA' is greater than 100 degrees, and calculate the number of remaining rows.",
        "response": "stilts tpipe in=cat.fits cmd='select \"RA > 100.0\"' omode=count",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 100.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Apply an assertion check that the maximum value of 'FLUX' in the filtered table is less than 1e-10, discarding the output.",
        "response": "stilts tpipe in=high_flux.fits cmd='select FLUX>1e-10' cmd='assert $nrow==0 \"Flux limit exceeded\"' omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "How can I convert a table into the Mirage format?",
        "response": "stilts tcopy in=data.fits ofmt=mirage out=data.mirage",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T3 contains an array column 'FLUX_ARRAY'. Replace it with the maximum value in the array before matching on position + flux max (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='1 0.5' in1=T1.fits in2=T2.fits in3=T3.fits icmd3='addcol FLUX_MAX maximum(FLUX_ARRAY)' values1='RA DEC FLUX_MAX' values2='RA DEC FLUX_MAX' values3='RA DEC FLUX_MAX' out=array_max_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find the total number of distinct source IDs in the AIP Gaia DR3 catalogue.",
        "response": "stilts tapquery tapurl=https://gaia.aip.de/tap adql='SELECT COUNT(DISTINCT source_id) FROM gaiadr3.gaia_source' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Join all FITS files in the current directory, and add a column 'filename' containing the name of the source file for each row.",
        "response": "stilts tcat in=*.fits loccol=filename out=all_files.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Fetch 5000 records from the Gaia archive and save the result as a text file.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 5000 * FROM gaiadr3.gaia_source' ofmt=text out=gaia_5k.txt",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine a VOTable with itself, then keep only the last 100 rows.",
        "response": "stilts tcatn nin=2 in1=self.vot in2=self.vot ocmd='tail 100' out=self_concat_tail.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Join five different regions of a survey together.",
        "response": "stilts tcatn nin=5 in1=r1.fits in2=r2.fits in3=r3.fits in4=r4.fits in5=r5.fits out=full_survey.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Please match `cat1.fits` against `cat2.fits` using `skyerr`. After matching, add a column `RELIABLE` if the separation is less than half the combined error.",
        "response": "stilts tmatch2 in1=cat1.fits in2=cat2.fits matcher=skyerr params=5 values1='RA DEC ERR_1' values2='RA DEC ERR_2' scorecol=sep ocmd='addcol RELIABLE \"sep < (ERR_1+ERR_2)/2\"' out=reliable_matches.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '(ERR_1+ERR_2)/2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RELIABLE sep < (ERR_1+ERR_2)/2\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '(ERR_1+ERR_2)/2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Upload a table of 100 simulated sources (named 'my_list') and perform a positional crossmatch against Gaia DR3 at ARI, outputting only the checksum of the result.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT g.source_id, u.ra FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.my_list AS u ON 1=CONTAINS(POINT(''ICRS'', g.ra, g.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.001))' nupload=1 upload1=:skysim:100 upname1=my_list omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve metadata (column definitions) for the main table in the MAST 3D-HST HLSP.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/3dhst/ adql='SELECT * FROM 3dhst.photometry' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 54.7977 and latitude -60.8116. Please use a search radius of 0.8183 degrees. Save the results to a csv file called query_results_115.csv.",
        "response": "stilts cone servicetype=sia2 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=54.7977 lat=-60.8116 radius=0.8183 omode=out ofmt=csv out=query_results_115.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Retrieve 5 XMM sources from the 4XMM XMM-Newton Catalogue and output the result to standard output as plain text.",
        "response": "stilts tapquery tapurl=https://xcatdb.unistra.fr/xtapdb adql='SELECT TOP 5 source_id, ra, dec FROM dbo.xcat_source' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a MOC for all data points that have an associated spectrum (`HAS_SPECTRUM` column is true).",
        "response": "stilts mocshape in=data_products.fits icmd='select HAS_SPECTRUM' shape=point coords='array(RA,DEC)' out=spectral_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a MOC (order 9) for sources with a radius calculated as 1 arcminute divided by 4.",
        "response": "stilts pixfoot in=rad_div.fits ra=RA dec=DEC radius='(1.0 / 4.0) / 60.0' order=9 out=quarter_am_o9.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot error ellipses derived from correlated errors (skycorr), setting the shape to 'filled_rectangle' and using transparency shading (opaque=10).",
        "response": "stilts plot2sky in=errors.fits layer=skycorr lon=RA lat=DEC lonerr=ER laterr=ED corr=C ellipse=filled_rectangle shading=transparent opaque=10 out=transp_corr_rect.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a MOC using the implicit default coordinate columns (e.g. $1, $2) and manually set the order to 7.",
        "response": "stilts mocshape in=raw_data.fits shape=point coords='array($1, $2)' order=7 out=indexed_coords_o7.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I want to see all rows from `cat1.fits` that have a match in `cat2.fits`, alongside all rows from `cat3.fits`, using `cat1.fits` as the reference.",
        "response": "stilts tmatchn nin=3 multimode=pairs iref=1 in1=cat1.fits in2=cat2.fits in3=cat3.fits matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' join1=match join2=match join3=always out=cat1_cat2_pairs_with_cat3.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine three FITS tables, and add a column 'OriginIndex' indicating the sequential position of the input file.",
        "response": "stilts tcatn nin=3 in1=f1.fits in2=f2.fits in3=f3.fits seqcol=OriginIndex out=sequenced_files.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine tables, ensuring all array columns are preserved and written to a non-array-capable format like CSV (forcing array representation as strings).",
        "response": "stilts tcat in='a1.fits a2.fits' ofmt=csv out=array_to_string_csv.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate two tables, but before joining, remove any column containing only constant values (excluding nulls) in both inputs.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd=constcol out=constant_cols_removed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Remove all columns except 'ID' and 'RA', then rename 'RA' to 'RA_ICRS'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"ID RA\"' cmd='colmeta -name RA_ICRS RA' out=minimal_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an all-sky density plot (HEALPix level 5), coloring by density using the Square scaling function.",
        "response": "stilts plot2sky in=survey.fits layer=skydensity lon=RA lat=DEC level=5 densefunc=square out=square_density_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). Exclude T3 rows that were unmatched, and output the checksum of the result.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=3 in1=T1.fits in2=T2.fits in3=T3.fits join3=match values1='RA DEC' values2='RA DEC' values3='RA DEC' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query MAST PanSTARRS 1 DR1 for sources near the Galactic Center (RA 266.4, Dec -29.0) within a 0.1 degree radius.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT * FROM dbo.detection_object WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 266.4, -29.0, 0.1))' out=ps1_gc_cone.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query MAST CAOM (SIA) near Ecliptic Lon 60, Lat 60, with a radius defined by $\frac{3}{60}$ degrees.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=60.0 lat=60.0 radius='3.0 / 60.0' servicetype=sia skysys=ecliptic out=sia_3arcmin.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"3.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Map coverage from STC-S strings, outputting the result using standard JSON format (order 10).",
        "response": "stilts mocshape in=stc_data.vot shape=stc-s coords=STC_REGION order=10 mocfmt=json out=stc_o10.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match two tables on 2D coordinates (X, Y) with elliptical regions. T1 PA is fixed at 45 degrees.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=2d_ellipse params=1 values1='X Y A B 45' values2='X Y A B PA' out=fixed_pa_ellipse_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Show me the metadata of a combined table from `part1.fits` and `part2.fits` after adding a sequence column 'PartNum'.",
        "response": "stilts tcat in=part1.fits in=part2.fits seqcol=PartNum omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Group match five galaxy surveys (S1-S5). Filter the output to include only groups where the size is 5 (perfect matches).",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=5 in1=S1.fits in2=S2.fits in3=S3.fits in4=S4.fits in5=S5.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA DEC' ocmd='select GroupSize==5' out=perfect_galaxy_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge tables, but for the third input (T3), retain only objects that have a non-null UCD starting with 'phot.mag'.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='keepcols ucd$phot_mag*' out=phot_ucd_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find sources in the ESA Herschel TAP within a radius equal to $\frac{1}{360}$ degrees of RA 200, Dec 20.",
        "response": "stilts cone serviceurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap lon=200.0 lat=20.0 radius='1.0 / 360.0' out=herschel_1_360deg.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 360.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot density contours, using equal spacing between levels (scaling=equal).",
        "response": "stilts plot2plane in=data.fits layer=contour x=X y=Y scaling=equal out=equal_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot X vs Y, ensuring the output image is 1000 pixels wide and 800 pixels high.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y xpix=1000 ypix=800 out=large_dims.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T1, T2, T3, T4 (pairs, T1 ref). Output should only contain the ID and RA columns from T1, T2, T3, T4.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=exact values1=ID values2=ID values3=ID values4=ID in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 suffix4=_4 ocmd='keepcols \"ID_1 RA_1 ID_2 RA_2 ID_3 RA_3 ID_4 RA_4\"' out=id_ra_subset_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA_1' 'ID_2' 'RA_2' 'ID_3' 'RA_3' 'ID_4' 'RA_4'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID_1 RA_1 ID_2 RA_2 ID_3 RA_3 ID_4 RA_4\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'RA_1' 'ID_2' 'RA_2' 'ID_3' 'RA_3' 'ID_4' 'RA_4'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate data_A and data_B. Add a column 'ROW_COUNT_GLOBAL' to the output indicating the overall row index starting from 1.",
        "response": "stilts tcatn nin=2 in1=data_A.fits in2=data_B.fits ocmd='addcol ROW_COUNT_GLOBAL $0' out=global_indexed_output.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot points with high transparency (opaque=200), colored flat orange.",
        "response": "stilts plot2sky in=crowded.fits layer=mark lon=RA lat=DEC shading=transparent opaque=200 color=orange out=orange_o200.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a footprint for all objects that have a proper motion greater than 1000 mas/yr.",
        "response": "stilts pixfoot in=proper_motions.fits icmd='select \"hypot(PMRA,PMDEC) > 1000\"' out=high_pm_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA,PMDEC) > 1000\n\nUsage: select <expr>\n    (Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Use the `head` filter to select the first 10 rows, then explicitly set the output format to VOTable with FITS serialization.",
        "response": "stilts tpipe in=data.fits cmd='head 10' ofmt='votable(format=FITS)' out=head10_fits.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate two tables, but rename the 'OBJID' column in the second table to 'SourceID' before combination.",
        "response": "stilts tcatn nin=2 in1=c1.fits in2=c2.fits icmd2='colmeta -name SourceID OBJID' out=source_id_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read a table, convert the integer column 'AGE' to a string, and pad it with leading zeros to 4 characters.",
        "response": "stilts tpipe in=objects.fits cmd='replacecol AGE \"padWithZeros(AGE, 4)\"' out=padded_age.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol AGE padWithZeros(AGE, 4)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine five input files (I1-I5.fits). After combining, calculate and display the mean and standard deviation of all numeric columns.",
        "response": "stilts tcatn nin=5 in1=I1.fits in2=I2.fits in3=I3.fits in4=I4.fits in5=I5.fits omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate an MOC for 2 arcminute radii, setting the HEALPix order to 11, and sort the final result by radius.",
        "response": "stilts pixfoot in=rad_var.fits ra=RA dec=DEC radius='2.0 / 60.0' order=11 out=sorted_rad.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Select only columns named 'ID', 'RA', and those starting with 'FLUX'.",
        "response": "stilts tpipe in=table.fits cmd='keepcols \"ID RA FLUX*\"' out=subset_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "My two tables have matching columns, but one has 'ra', 'dec' and the other has 'RA', 'DEC'. Will `tcatn` handle this?",
        "response": "Yes, STILTS column name matching is case-insensitive, so they should concatenate without any preprocessing. `stilts tcatn nin=2 in1=lower.fits in2=upper.fits out=case_insensitive.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert a FITS file to VOTable, ensuring the XML uses **VOTable version 1.0**.",
        "response": "stilts tcopy in=old_cat.fits ofmt='votable(version=V10)' out=old_cat_v10.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve SSA resources around RA 10.0, Dec 10.0, searching within 0.1 arcminutes, and count the total records found.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=10.0 lat=10.0 radius='0.1 / 60.0' servicetype=ssa omode=count",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.1 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Retrieve 20 entries from the CSIRO Parkes Pulsar Data Archive and save them in ECSV format.",
        "response": "stilts tapquery tapurl=https://data.csiro.au/psrdavo/tap adql='SELECT TOP 20 * FROM PSRD.cat' maxrec=20 ofmt=ecsv out=pulsar_sample.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'AVG_MAG_ARRAY' containing the element-wise average of the array column 'MAG_ARRAY' and a scalar 'MAG_ZEROPOINT'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol AVG_MAG_ARRAY \"multiply(add(MAG_ARRAY, MAG_ZEROPOINT), 0.5)\"' out=array_scalar_average.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MAG_ZEROPOINT),' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AVG_MAG_ARRAY multiply(add(MAG_ARRAY, MAG_ZEROPOINT), 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'MAG_ZEROPOINT),' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find objects in `obs1.fits` and `obs2.fits` that fall into the same bin, where bins are defined as +/- 2 pixels in X and +/- 3 pixels in Y.",
        "response": "stilts tmatch2 in1=obs1.fits in2=obs2.fits matcher=2d_cuboid params='2 3' values1='X Y' values2='X Y' out=binned_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Use a sequential random number generator to assign a unique random ID to each row, outputting to a CSV file.",
        "response": "stilts tpipe in=cat.fits cmd='addcol RAND_ID nextRandom()' ofmt=csv out=random_ids.csv",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find sources in VizieR TAP near 14h 00m 00s, -60d 00m 00s, converting coordinates, using $60$ arcseconds radius, and output just the RA and DEC columns.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon='hmsToDegrees(14.0, 0, 0)' lat='dmsToDegrees(-60.0, 0, 0)' radius='60.0 / 3600.0' ocmd='keepcols \"RA DEC\"' out=vizier_coords_only.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(14.0, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Merge 5 tables. After concatenation, apply a filter to remove all duplicate rows based on all column values.",
        "response": "stilts tcatn nin=5 in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits in5=C5.fits ocmd='uniq' out=full_deduped.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I want the footprint for sources that are not null in the `FLUX` column.",
        "response": "stilts pixfoot in=flux_data.fits icmd='select !NULL_FLUX' out=valid_flux_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Re-express the 'FLUX' column using its natural logarithm (ln).",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLUX ln(FLUX)' out=data_ln.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Run a synchronous query against the VizieR Catalogue (CDSARC endpoint) to find all entries in the SIMBAD Pointer Catalogue I/315/simpm, restricting the result to 500 records.",
        "response": "stilts tapquery tapurl=http://cdsarc.cds.unistra.fr/saadavizier.tap/tap adql='SELECT * FROM \"I/315/simpm\"' sync=true maxrec=500 out=simbad_pointer.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a `cds_fits` format MOC from my `s_region` column.",
        "response": "stilts mocshape in=obscore.fits shape=stc-s coords=s_region mocfmt=cds_fits out=obscore_cds.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Replace all occurrences of the placeholder magnitude value -99.99 with null in the 'MAG_R' column.",
        "response": "stilts tpipe in=phot.vot cmd='badval -99.99 MAG_R' out=phot_cleaned.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the MOC for sources around Galactic L=0, B=0, using $0.00005$ degrees, converted from Galactic.",
        "response": "stilts pixfoot in=gal_center.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC radius=0.00005 out=gal_center_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Upload `targets.fits` and find their proper motions from `gaiadr3.gaia_source` using a 1 arcsec match.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap nupload=1 upload1=targets.fits upname1=myup adql='SELECT s.source_id, s.pmra, s.pmdec, t.name FROM gaiadr3.gaia_source AS s JOIN TAP_UPLOAD.myup AS t ON 1=CONTAINS(POINT(\"ICRS\", s.ra, s.dec), CIRCLE(\"ICRS\", t.ra, t.dec, 1.0/3600.0))' out=target_pms.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the single best match (best1) for each row in targets.csv from archives.fits within 0.5 arcsec. The CSV file uses columns ra, dec.",
        "response": "stilts tmatch2 ifmt1=csv in1=targets.csv in2=archives.fits matcher=sky params=0.5 values1='ra dec' values2='RA DEC' find=best1 out=csv_best1_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the MAST TESS Input Catalog (TIC) to calculate statistics, retaining only the TMAG column for the calculation.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TMAG FROM tic.v8' omode=stats ocmd='keepcols TMAG'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find all public observations from the GAVO ObsCore table.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM ivoa.obscore WHERE obs_release_date < CURRENT_TIMESTAMP' out=public_observations.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot 'V_MAG' vs 'B_V_COLOR', but invert the y-axis so bright objects are at the top.",
        "response": "stilts plot2plane in=stars.fits layer=mark x=B_V_COLOR y=V_MAG yflip=true",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"B_V_COLOR\"\n    (The name \"B_V_COLOR\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a MOC for circles whose radius is `1/sqrt(FLUX)`.",
        "response": "stilts pixfoot in=fluxes.fits radius='1.0/sqrt(FLUX)' out=flux_inv_sqrt.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Run a synchronous query on ARI Gaia for the top 10 rows and print the raw text output to standard output.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 10 * FROM gaiadr3.gaia_source' sync=true out=- ofmt=text",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a table to Parquet, using LZ4_RAW compression.",
        "response": "stilts tcopy in=input.fits ofmt='parquet(compression=lz4_raw)' out=lz4_out.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot a histogram where the x-axis is 'Magnitude' and the y-axis is 'Number of Stars'.",
        "response": "stilts plot2plane in=stars.fits layer=histogram x=MAG xlabel='Magnitude' ylabel='Number of Stars'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Search SIMBAD TAP near RA 210, Dec 35, with a radius of 4 arcminutes, renaming the 'RA' and 'DEC' columns to 'RA_SIM' and 'DEC_SIM' respectively.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=210.0 lat=35.0 radius='4.0 / 60.0' ocmd='colmeta -name RA_SIM RA; colmeta -name DEC_SIM DEC' out=sim_renamed_coords.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"4.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a CSV file to HTML output, setting the max cell width to 100 characters.",
        "response": "stilts tcopy in=input.csv ifmt=csv ofmt='html(maxCell=100)' out=limited.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a low-resolution MOC (order 5) for sources with a $0.5$ degree radius.",
        "response": "stilts pixfoot in=coarse_0p5.fits ra=RA dec=DEC radius=0.5 order=5 out=coarse_o5_0p5.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate tables, and apply an input filter to remove all columns with names starting with 'ERROR_'.",
        "response": "stilts tcat in='e1.fits e2.fits' icmd='delcols ERROR_*' out=no_error_cols.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Add a column 'RA_DMS_6' converting RA in degrees to DMS string format with 6 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_6 \"degreesToDms(RA, 6)\"' out=dms_ra_6s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '6)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_6 degreesToDms(RA, 6)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '6)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a MOC (order 14) from UNIQ identifiers, applying a pre-filter to select only the top 100 rows based on a score column.",
        "response": "stilts mocshape in=scored_uniq.fits icmd='sort -down SCORE; head 100' shape=uniq coords=HPX_ID order=14 out=top_100_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a string column named 'DOI_URL' containing the DOI resolution URL derived from the existing 'DOI' string.",
        "response": "stilts tpipe in=pubs.fits cmd='addcol DOI_URL doiUrl(DOI)' out=pubs_with_doi.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine `data_part1.fits` and `data_part2.fits` but discard the output. I just want to test if the concatenation works without errors.",
        "response": "stilts tcat in=data_part1.fits in=data_part2.fits omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine `data.ecsv` and `data.parquet` and send the result directly to TOPCAT.",
        "response": "stilts tcatn nin=2 in1=data.ecsv ifmt1=ecsv in2=data.parquet omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a footprint for every 100th object in `dense_catalog.fits` to get a quick idea of the coverage.",
        "response": "stilts pixfoot in=dense_catalog.fits icmd='every 100' out=sparse_coverage_map.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the ASI SSDC TAP Service and constrain the maximum records returned to 200, outputting to a FITS file.",
        "response": "stilts tapquery tapurl=https://tools.ssdc.asi.it/TAPSSDC/tap adql='SELECT * FROM ivoa.ObsCore' maxrec=200 out=ssdc_maxrec.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve positions and proper motions from ARI Gaia for 100 sources where proper motion in RA (`pmra`) is not null, then locally convert PMRA from mas/yr to arcsec/yr and rename the column.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 100 ra, dec, pmra, pmdec FROM gaiadr3.gaia_source WHERE pmra IS NOT NULL' ocmd='replacecol PMRA_ARCSEC \"pmra * 0.001\"; delcols \"pmra\"' out=ari_pm_converted.fits",
        "error": "Error: Unused arguments: '*' '0.001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PMRA_ARCSEC pmra * 0.001\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '0.001'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_U' and set its UCD to 'phot.mag;em.opt.U' and UType to 'magnitude_u', ensuring explicit type definition.",
        "response": "stilts tpipe in=data.fits cmd='addcol -ucd \"phot.mag;em.opt.U\" -utype magnitude_u MAG_U 20.0' out=u_mag_meta.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Run an SSA query against the Subaru HDS Spectrum data service near RA 10, Dec 5, with radius 3 arcseconds.",
        "response": "stilts cone serviceurl=http://jvo.nao.ac.jp/skynode/do/tap/hds/ lon=10.0 lat=5.0 radius='3.0 / 3600.0' servicetype=ssa out=subaru_3as.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"3.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Perform an SIA query using a non-standard service URL (http://example.com/sia) around RA 10, Dec 10, with a radius of 10 arcseconds.",
        "response": "stilts cone serviceurl=http://example.com/sia lon=10.0 lat=10.0 radius='10.0 / 3600.0' servicetype=sia out=custom_sia.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Pair match T_MAIN against T2, T3. T3 is provided via standard input (CSV). Output the score column 'SCORE' in the result.",
        "response": "cat T3.csv | stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T_MAIN.fits in2=T2.fits in3=- ifmt3=csv scorecol=SCORE values1='RA DEC' values2='RA DEC' values3='RA DEC' out=piped_csv_scored.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I have an array column 'FLUX_SPEC' and a parameter 'WAVELENGTHS'. Can I plot them?",
        "response": "stilts plot2plane in=spectra.fits layer=lines xs=param$WAVELENGTHS ys=FLUX_SPEC",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"param\"\n    (The name \"param\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "For the table `test_data.fits`, assert that the `ERROR` column is always positive, then discard the output.",
        "response": "stilts tpipe in=test_data.fits cmd='assert ERROR>0' omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q50_3KPC' containing the median distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q50_3KPC \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.5)\"' out=median_dist_3kpc_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q50_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch T1, T2, T3. T2 is a Parquet file. T3 has coordinates in Supergalactic system. Convert T3 to ICRS before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits in2=T2.parquet ifmt2=parquet in3=T3.fits icmd3='addskycoords supergalactic icrs SLON SLAT RA DEC' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=parquet_supergal_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot density contours over a scatter plot, setting the contour scaling to logarithmic ('log') and smoothing to 10 pixels.",
        "response": "stilts plot2plane in=data.fits layer_m=mark x_m=X y_m=Y layer_c=contour x_c=X y_c=Y scaling_c=log smooth_c=10 out=log_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate a MOC for positions where parallax is greater than 10 mas.",
        "response": "stilts pixfoot in=plx_cat.fits icmd='select \"PLX > 10.0 / 1000.0\"' ra=RA dec=DEC out=high_parallax.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PLX > 10.0 / 1000.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Use the `every` filter to select every 1000th row from a large table (starting with the first row).",
        "response": "stilts tpipe in=huge_data.fits cmd='every 1000' out=every_thousandth.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a table of all rows from my primary catalog `main_survey.fits`, indicating the best match from `supplemental.fits` if one exists within 5 arcseconds.",
        "response": "stilts tmatch2 in1=main_survey.fits in2=supplemental.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' find=best1 join=all1 out=main_with_supplemental.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate T1 and T2. After joining, add a column that flags if the 'FLUX' is below the global 5th percentile of the combined flux distribution.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits ocmd='addcol IS_LOW_FLUX \"FLUX < quantile(FLUX, 0.05)\"' out=quantile_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' 'quantile(FLUX,' '0.05)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_LOW_FLUX FLUX < quantile(FLUX, 0.05)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' 'quantile(FLUX,' '0.05)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot a density map (skydensity, level 10) showing the count per square degree (degree2).",
        "response": "stilts plot2sky in=dense.fits layer=skydensity lon=RA lat=DEC level=10 combine=count-per-unit perunit=degree2 out=hpx10_sqdeg.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a JSON MOC for the region of the Andromeda galaxy from a simulated catalog.",
        "response": "stilts mocshape in=:skysim:1e4 icmd='select skyDistanceDegrees(ra,dec,10.68,41.27)<2' shape=point coords='array(ra,dec)' mocfmt=json out=m31.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the ESO TAP_OBS for raw VIRCAM data, selecting only calibration frames (`dp_type`='CALIB'), and outputting the checksum.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM raw.vircam WHERE dp_type = ''CALIB''' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate an ASCII MOC for objects where the year of observation (`OBS_YEAR`) is 2023.",
        "response": "stilts mocshape in=obs_log.fits icmd='select OBS_YEAR==2023' shape=point coords='array(RA,DEC)' mocfmt=ascii out=obs_2023.moc.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Group match five tables. T3 has an error column (ERR) in percent; normalize it to 1 before matching using skyerr.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=skyerr params=1 in3=T3.fits icmd3='replacecol ERR 1.0' values1='RA DEC ERR' values2='RA DEC ERR' values3='RA DEC ERR' values4='RA DEC ERR' values5='RA DEC ERR' in1=T1.fits in2=T2.fits in4=T4.fits in5=T5.fits out=normalized_error_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge a source catalogue with a table containing polygons defined by vertices in a single string column 'VERTICES'.",
        "response": "stilts tcatn nin=2 in1=cat.fits in2=polygons.fits out=cat_plus_polygons.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Filter the input to only keep rows with velocity (V) greater than 100 km/s, then generate an order 9 point MOC.",
        "response": "stilts mocshape in=velocity_data.fits icmd='select \"V > 100.0\"' shape=point coords='array(RA, DEC)' order=9 out=high_velocity_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select V > 100.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 5 MOC for a full-sky catalog, ensuring the output uses CDS ASCII format.",
        "response": "stilts mocshape in=all_sky.fits shape=point coords='array(RA, DEC)' order=5 mocfmt=cds_ascii out=all_sky_cds_o5.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for sources around 14h 30m 00s, -60d 00m 00s, using a tiny search radius of 10 micro-arcseconds (\u00b5as).",
        "response": "stilts mocshape in=:skysim:1 shape=circle coords='array(217.5, -60.0, 10.0 / 3600000000.0)' out=tiny_uas_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Explode a 3-element array column 'XYZ_POS' into three scalar columns: 'X', 'Y', 'Z'.",
        "response": "stilts tpipe in=vectors.fits cmd='explodecols XYZ_POS' cmd='colmeta -name X XYZ_POS_0; colmeta -name Y XYZ_POS_1; colmeta -name Z XYZ_POS_2' out=scalars.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve all rows from the PADC Heliophysics server and output the result in VOTable BINARY2 format.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT * FROM some_heliophysics_table' ofmt='votable(format=BINARY2)' out=helio_binary2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Synchronously retrieve the column metadata for a sample table from the PADC Heliophysics server.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT TOP 1 * FROM some_heliophysics_table' sync=true omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine tables and then replace the column 'FLUX' with 'FLUX / 1e-3' to convert millijanskys to janskys.",
        "response": "stilts tcat in='mj1.fits mj2.fits' ocmd='replacecol FLUX \"FLUX / 1e-3\"' out=jansky_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '1e-3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX / 1e-3\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1e-3'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate two tables, then calculate statistics on a derived column: (MAG_B - MAG_R) / ERROR.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='addcol C_ERR \"(MAG_B - MAG_R) / ERROR\"' ocmd='keepcols \"C_ERR\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_R)' '/' 'ERROR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol C_ERR (MAG_B - MAG_R) / ERROR\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_R)' '/' 'ERROR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "What's the difference between `tcat` and `tcatn`?",
        "response": "`tcat` is for concatenating multiple similar tables, applying the same input format and processing to all of them. `tcatn` is more flexible and is used for heterogeneous tables, allowing you to specify different formats and preprocessing commands for each input table individually [2, B.31, B.32].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcatn"
    },
    {
        "prompt": "Group match three tables. T1 has a column 'LOG_MASS'; T2 and T3 have 'MASS'. Convert T2 and T3 mass to log10(MASS) before matching on LOG_MASS.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.1 in1=T1.fits in2=T2.fits icmd2='replacecol MASS log10(MASS)' in3=T3.fits icmd3='replacecol MASS log10(MASS)' values1=LOG_MASS values2=MASS values3=MASS out=log_mass_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a MOC (order 10) for sources around Galactic L=150, B=0, with $0.005$ degrees radius, converted from Galactic.",
        "response": "stilts pixfoot in=gal_data10.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC radius=0.005 order=10 out=gal_005deg_o10.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Replace the existing 'FLUX' column with a normalized version: 'FLUX / SUM(FLUX)' (requires initial pass for sum).",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='replacecol FLUX \"FLUX / sum(FLUX)\"' out=normalized_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'sum(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX / sum(FLUX)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' 'sum(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw a filled region between a curve (Y_LINE) and the axis origin (Y=0) using semi-transparent blue.",
        "response": "stilts plot2plane in=curve.fits layer=fill x=X y=Y_LINE y0=0 color=blue transparency=0.5 out=filled_under_curve.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T_MAIN against three tables (T2, T3, T4). T2 contains coordinates in Galactic (GLON, GLAT). Convert T2 to ICRS before matching T_MAIN (3 arcsec tolerance).",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky params=3 in1=T_MAIN.fits in2=T2.fits icmd2='addskycoords galactic icrs GLON GLAT RA DEC' in3=T3.fits in4=T4.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' out=T2_gal_preproc_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge IPAC tables (logA.tbl, logB.tbl) and output the result to standard output in plain text format, including table parameters.",
        "response": "stilts tcat ifmt=ipac in='logA.tbl logB.tbl' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Use a filter chain to remove columns, sort the result, and restrict output to the first 5 rows.",
        "response": "stilts tpipe in=data.fits cmd='delcols ERRORS; sort ID; head 5' out=processed_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Run a query on ESO TAP OBS for ObsCore entries, requiring synchronous execution with user authentication.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 5 * FROM ivoa.ObsCore' sync=true auth=true out=eso_auth_sync.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate an MOC for circles where the radius is $\frac{1}{60 \times 10}$ degrees (0.1 arcminutes).",
        "response": "stilts pixfoot in=tiny_am.fits ra=RA dec=DEC radius='1.0 / 600.0' out=tiny_am_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC from all sources that have a valid proper motion measurement.",
        "response": "stilts mocshape in=pm.fits icmd='select \"!NULL_PMRA && !NULL_PMDEC\"' shape=point coords='array(RA,DEC)' out=pm_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_PMRA && !NULL_PMDEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial separation between (RA, DEC) and (REF_RA, REF_DEC) is less than 0.001 degrees, then create a point MOC.",
        "response": "stilts mocshape in=pairs.fits icmd='select \"skyDistanceDegrees(RA, DEC, REF_RA, REF_DEC) < 0.001\"' shape=point coords='array(RA, DEC)' out=close_pairs_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'REF_RA,' 'REF_DEC)' '<' '0.001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, REF_RA, REF_DEC) < 0.001\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' 'REF_RA,' 'REF_DEC)' '<' '0.001'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Overlay density contours on a scatter plot, setting the zero level of the contour calculation to 5.0.",
        "response": "stilts plot2sky in=cluster.fits layer_m=mark lon_m=RA lat_m=DEC layer_c=contour lon_c=RA lat_c=DEC zero_c=5.0 out=contour_zero5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Read a table, select only columns with 'RA' or 'DEC' in their UCD, and output the total data checksum.",
        "response": "stilts tpipe in=astro_data.fits cmd='keepcols \"ucd$pos_eq_ra_* ucd$pos_eq_dec_*\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ucd$pos_eq_dec_*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$pos_eq_ra_* ucd$pos_eq_dec_*\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$pos_eq_dec_*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query Gaia for stars with a G-band magnitude between 10 and 11.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, phot_g_mean_mag FROM gaiadr3.gaia_source WHERE phot_g_mean_mag BETWEEN 10 AND 11'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch three tables on 3D spatial distance where the tolerance is 10 parsecs.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=3d params=10 values1='X_PC Y_PC Z_PC' values2='X_PC Y_PC Z_PC' values3='X_PC Y_PC Z_PC' in1=p1.fits in2=p2.fits in3=p3.fits out=pc_3d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Get 100 stars and their J, H, K magnitudes from the 2MASS catalog at GAVO.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 100 pts_key, j_m, h_m, k_m FROM twomass.data'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match three catalogs. C2 has elliptical error regions defined by major/minor axes (A, B) and position angle (PA). Use skyellipse matcher (1 arcsec scale).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=skyellipse params=1 values1='RA DEC A B PA' values2='RA DEC A B PA' values3='RA DEC A B PA' in1=C1.fits in2=C2.fits in3=C3.fits out=elliptical_match_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a FITS MOC from a HAPI stream file `solar_wind.hapi`.",
        "response": "stilts pixfoot in=solar_wind.hapi ifmt=hapi out=solar_wind_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 284.6113 and latitude 2.4918. Please use a search radius of 1.2028 degrees. Save the results to a fits file called query_results_180.fits.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=284.6113 lat=2.4918 radius=1.2028 omode=out ofmt=fits out=query_results_180.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial position is within 2 arcminutes of the Andromeda galaxy (RA=10.68, DEC=41.27).",
        "response": "stilts tpipe in=cat.fits cmd='select \"skyDistanceDegrees(RA, DEC, 10.68, 41.27) < 2.0/60.0\"' out=andromeda_vicinity_2arcmin.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' '10.68,' '41.27)' '<' '2.0/60.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, 10.68, 41.27) < 2.0/60.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' '10.68,' '41.27)' '<' '2.0/60.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I have two tables from different instruments. They have different column names for flux. How do I combine them?",
        "response": "stilts tcatn nin=2 in1=inst1.fits icmd1='colmeta -name FLUX FLUX_INST1' in2=inst2.fits icmd2='colmeta -name FLUX FLUX_INST2' ocmd='keepcols FLUX' out=unified_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve data and then calculate the mean of the `phot_g_mean_mag` column.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT phot_g_mean_mag FROM gaiadr3.gaia_source' maxrec=10000 ocmd='keepcols phot_g_mean_mag' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate three tables, discarding all output, just checking for errors.",
        "response": "stilts tcatn nin=3 in1=d1.fits in2=d2.fits in3=d3.fits omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I need data from VizieR TAP near RA 11h 30m 0s, Dec 15d 0m 0s (convert RA/Dec), with radius 30 arcminutes.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=172.5 lat=15.0 radius='30.0 / 60.0' out=vizier_30am.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"30.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Start an asynchronous query on the ESA Herschel Archive, setting a maximum execution duration of 1 hour (3600 seconds).",
        "response": "stilts tapquery tapurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap adql='SELECT * FROM ivoa.ObsCore' executionduration=3600 out=herschel_1hr.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T_MAIN against T_SUPP. T_SUPP coordinates are FK4 B1950. Convert T_SUPP to ICRS J2000 before matching T_MAIN (1 arcsec tolerance).",
        "response": "stilts tmatch2 in1=T_MAIN.fits in2=T_SUPP.fits icmd2='addskycoords fk4 icrs RA_B1950 DEC_B1950 RA DEC' matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=T_SUPP_fk4_convert.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge four tables. Drop all table parameters (metadata) from the final combined table.",
        "response": "stilts tcatn nin=4 in1=C1.fits in2=C2.fits in3=C3.fits in4=C4.fits ocmd='clearparams *' out=params_removed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the ESO TAP_OBS service for ObsCore entries, calculating the total statistical summary across all columns.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM ivoa.ObsCore' maxrec=1000 omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need a MOC for a table with a varying search radius, specified by the `SEARCH_RAD_DEG` column.",
        "response": "stilts pixfoot in=variable_radius.fits radius=SEARCH_RAD_DEG out=dynamic_radius_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Merge all sky survey segments (segment*.fits) but only keep the first 500 rows of the final consolidated table.",
        "response": "stilts tcat in='segment*.fits' ocmd='head 500' out=sample_head.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine two tables, extracting only the three columns corresponding to RA, DEC, and MAG from both inputs, based on UCDs.",
        "response": "stilts tcatn nin=2 in1=c1.fits icmd1='keepcols \"ucd$pos_eq_ra ucd$pos_eq_dec ucd$phot_mag\"' in2=c2.fits icmd2='keepcols \"ucd$pos_eq_ra ucd$pos_eq_dec ucd$phot_mag\"' out=ucd_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Set the column metadata 'RA' unit to 'deg' and UCD to 'pos.eq.ra;meta.main'.",
        "response": "stilts tpipe in=data.fits cmd='colmeta -units deg -ucd \"pos.eq.ra;meta.main\" RA' out=meta_updated.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Join T_A and T_B. T_A rows should always be included. T_B rows should only be included if matched. Match on position (2 arcsec).",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' join=all1 out=left_join_explicit.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Convert an IPAC file to a CSV file, ensuring parameters are **not** written.",
        "response": "stilts tcopy in=data.tbl ifmt=ipac ofmt='csv(header=false)' out=no_params_csv.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read a FITS file and output the entire raw table data to standard output (not metadata).",
        "response": "stilts tcopy in=archive.fits ofmt=fits out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Submit an asynchronous query to the ESA Euclid Archive and request continuous progress monitoring with a polling delay of 60 seconds (60000 milliseconds).",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore' poll=60000 progress=true out=euclid_slow_poll.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a 2D grid where the color indicates the minimum 'VALUE' of points falling into each bin.",
        "response": "stilts plot2plane in=data.fits layer=grid x=X y=Y weight=VALUE combine=min out=min_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create a `cds_ascii` format MOC from `s_region`.",
        "response": "stilts mocshape in=obscore.fits shape=stc-s coords=s_region mocfmt=cds_ascii out=obscore.moc.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter rows to keep only those where the magnitude 'MAG' is numerically positive.",
        "response": "stilts tpipe in=cat.fits cmd='select \"MAG > 0.0\"' out=positive_mag_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a MOC at order 12 from every 5th row of my catalog.",
        "response": "stilts mocshape in=mycat.fits icmd='every 5' order=12 shape=point coords='array(RA,DEC)' out=mycat_every5_o12.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC from a list of ASCII MOC strings, ensuring the MOC implementation uses 'auto' selection (default).",
        "response": "stilts mocshape in=moc_strings.txt ifmt=ascii shape=moc-ascii coords='$1' mocimpl=auto out=auto_moc_impl.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Concatenate two tables. After concatenation, add a boolean column 'IS_FAINT' which is true if the magnitude 'MAG' is greater than 25.",
        "response": "stilts tcatn nin=2 in1=data1.fits in2=data2.fits ocmd='addcol IS_FAINT \"MAG > 25\"' out=faint_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '25'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 25\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '25'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC from a `colfits` file.",
        "response": "stilts pixfoot in=my_data.colfits out=colfits_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match five tables using 1D matching on 'FLUX' within 5 units. Filter T1 to only include FLUX > 100.",
        "response": "stilts tmatchn nin=5 multimode=pairs matcher=1d params=5 in1=F1.fits icmd1='select \"FLUX > 100\"' in2=F2.fits in3=F3.fits in4=F4.fits in5=F5.fits values1=FLUX values2=FLUX values3=FLUX values4=FLUX values5=FLUX out=filtered_1d_5way.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Synchronously retrieve 5 records from the Chandra Source Catalog Release 1.",
        "response": "stilts tapquery tapurl=https://cda.cfa.harvard.edu/csc1tap adql='SELECT TOP 5 * FROM master' sync=true out=csc1_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find groups across three catalogs, then keep only the `ID` columns and send the result to the GUI.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=group matcher=sky params=1 values1='ra dec' values2='ra dec' values3='ra dec' icmd1='keepcols \"ID ra dec\"' icmd2='keepcols \"ID ra dec\"' icmd3='keepcols \"ID ra dec\"' fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 ocmd='keepcols \"ID_1 ID_2 ID_3\"' omode=gui",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate a MOC from every 5th row of my input table `observations.vot`.",
        "response": "stilts mocshape in=observations.vot icmd='every 5' shape=point coords='array(RA,DEC)' out=obs_every_5.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot X vs Y, coloring points based on the 'Z' column using the 'aux' shading mode and the 'viridis' map.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=aux aux=Z auxmap=viridis out=aux_color_z.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find all matches between four photometric catalogs (p1.fits, p2.fits, p3.fits, p4.fits) using p1 as the reference table, within 1 arcsec.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' in1=p1.fits in2=p2.fits in3=p3.fits in4=p4.fits out=p1_reference_pairs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot the nominal center point of STC-S regions (central layer), displaying the center position as a filled star shape.",
        "response": "stilts plot2sky in=regions.fits layer=central area=S_REGION areatype=STC-S shape=filled_star out=stcs_filled_star_center.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"S_REGION\"\n    (The name \"S_REGION\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I want to match three lists of stars, but only keep the groups where at least two of the stars are present.",
        "response": "The default behavior of `multimode=group` is to output groups of size two or more, so no special parameters are needed. A command like `stilts tmatchn nin=3 ... multimode=group` will achieve this.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine two tables, and then remove any duplicate rows based on all column values.",
        "response": "stilts tcatn nin=2 in1=d1.fits in2=d2.fits ocmd='uniq' out=full_unique.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Filter the input to only retain objects with a numerical ID greater than 100000, then generate the MOC.",
        "response": "stilts pixfoot in=id_cat.fits icmd='select \"ID > 100000\"' ra=RA dec=DEC out=high_id_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID > 100000\n\nUsage: select <expr>\n    (Unused arguments: '>' '100000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match A.fits and B.fits (sky 1 arcsec). A has an extra column 'NOTES'. Delete 'NOTES' from A before matching.",
        "response": "stilts tmatch2 in1=A.fits icmd1='delcols NOTES' in2=B.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=A_notes_deleted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a high-resolution MOC (order 20) for sources within 0.1 arcseconds.",
        "response": "stilts pixfoot in=precise_cat.fits ra=RA dec=DEC radius='0.1 / 3600.0' order=20 out=hires_0p1as.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine tables and explicitly set the output to verbose FITS (FITS-plus).",
        "response": "stilts tcatn nin=2 in1=a.fits in2=b.fits ofmt=fits-plus out=verbose_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can I use `mocshape` to find regions with NO coverage?",
        "response": "Not directly. `mocshape` creates a MOC of the covered regions. You would need to use another tool or a script that can perform a 'NOT' operation on the generated MOC against an all-sky MOC.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "I have a gzipped CSV file. Can `tcopy` read it directly to produce a VOTable?",
        "response": "stilts tcopy in=data.csv.gz out=data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the ESO TAP_OBS service for data around Galactic L=30, B=-2, using a radius of 2 arcminutes.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=30.0 lat=-2.0 radius='2.0 / 60.0' skysys=galactic out=eso_gal_2am.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"2.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Replace null values in the proper motion error column (PM_ERR) with a fixed value of 0.5 mas.",
        "response": "stilts tpipe in=errors.fits cmd='replacecol PM_ERR \"NULL_PM_ERR ? 0.5 : PM_ERR\"' out=fixed_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '0.5' ':' 'PM_ERR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PM_ERR NULL_PM_ERR ? 0.5 : PM_ERR\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '0.5' ':' 'PM_ERR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a MOC for sources within a fixed radius defined as 1 degree divided by the constant PI.",
        "response": "stilts mocshape in=sources.fits shape=circle coords='array(RA, DEC, 1.0 / PI)' out=pi_divided_radius.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Join T_REF and T_SUPP using 2D positional errors (2d_err). T_SUPP errors (E_P) are given in arcminutes; convert to degrees before matching.",
        "response": "stilts tmatch2 in1=T_REF.fits in2=T_SUPP.fits icmd2='replacecol E_P E_P/60.0' matcher=2d_err params=1 values1='RA DEC E_D' values2='RA DEC E_P' out=arcmin_2d_err_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate two tables, dropping all columns that have null UCDs or UCDs starting with 'meta.id' in both inputs.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='delcols ucd$meta_id*' in2=B.fits icmd2='delcols ucd$meta_id*' out=ucd_filtered.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the GAVO Data Center near RA 30, Dec 30, using a search radius equal to $\frac{1}{1000}$ degrees, and display only the column definitions.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=30.0 lat=30.0 radius=0.001 omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the MAST ULLYSES HLSP service and ensure the query language submitted is explicitly 'ADQL'.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT TOP 10 obs_id FROM ivoa.ObsCore' language=ADQL out=ullyses_adql.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Join the tables in `all_files.lis`. For each one, select only rows where the object `CLASS` is 'GALAXY'.",
        "response": "stilts tcat in=@all_files.lis icmd='select CLASS==\"GALAXY\"' out=all_galaxies.fits",
        "chat.jar": "fixed",
        "error": "Error: all_files.lis (No such file or directory)\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T3 rows should always be included, regardless of match status. T2 rows should only be included if unmatched.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits join2=nomatch in3=T3.fits join3=always values1='RA DEC' values2='RA DEC' values3='RA DEC' out=mixed_join_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1 and T2. T1 columns should be retained, T2 duplicates renamed with numerical suffixes. T1 must be filtered to keep only rows with magnitude brighter than 22.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='select \"MAG < 22\"' in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=dups suffix2=_2 out=filtered_T1_inner.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '22'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 22\n\nUsage: select <expr>\n    (Unused arguments: '<' '22'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge two tables, filtering each input to convert any value of -999 in the 'DISTANCE' column to a null value before concatenation.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='replaceval -999 null DISTANCE' out=distance_cleaned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Upload a local FITS table 'my_targets.fits' to NED and crossmatch against the main object table on position, returning matched rows only.",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT t.*, u.id FROM object AS t JOIN TAP_UPLOAD.targets AS u ON 1=CONTAINS(POINT(''ICRS'', t.ra, t.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.0001))' nupload=1 upload1=my_targets.fits upname1=targets out=ned_xmatch.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a table from standard input (CSV) and output it as an ECSV file, streaming the CSV input.",
        "response": "cat stream.csv | stilts tcopy in=- ifmt=csv out=stream.ecsv",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Concatenate two tables and add a column with the original filename for each row.",
        "response": "stilts tcatn nin=2 in1=source_a.vot in2=source_b.vot loccol=OriginFile out=combined_loc.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I need a histogram with a bin width of 5, starting at x=0.5.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE binsize=5 phase=0.5",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Group match three tables, sorting the output by 'ID' ascending and 'GroupSize' descending.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=t1.fits in2=t2.fits in3=t3.fits ocmd='sort \"ID -down GroupSize\"' out=multi_sort_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-down' 'GroupSize'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort ID -down GroupSize\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '-down' 'GroupSize'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the ESO TAP_OBS for raw VIRCAM observations and explicitly set the job execution duration to 1800 seconds (30 minutes).",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM raw.vircam' executionduration=1800 out=eso_vircam_30min.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a scatter plot and a linear fit, and report the fit coefficients in the legend.",
        "response": "This is not directly possible. The fit coefficients are logged to the console with `-verbose`, but cannot be automatically placed in the legend. You would have to determine them first, then manually add a text annotation layer.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Filter input data to only include objects where the redshift (Z) is less than 0.5, and generate an order 11 point MOC.",
        "response": "stilts mocshape in=redshifts.fits icmd='select \"Z < 0.5\"' shape=point coords='array(RA, DEC)' order=11 out=low_z_moc_o11.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z < 0.5\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Replace the column 'RA' with a new column containing the value of its arc tangent in degrees.",
        "response": "stilts tpipe in=data.fits cmd='replacecol RA atanDeg(RA)' out=atan_ra.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge tables, T1 and T2. In T2, calculate the distance modulus 'DIST_MOD' from the parallax 'PLX' before concatenation.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='addcol DIST_MOD modulusToDistance(1000.0/PLX)' out=dist_mod_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Remove all rows which are exact duplicates across all columns.",
        "response": "stilts tpipe in=duplicates.fits cmd='sort 1' cmd='uniq' out=no_duplicates.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the proper motion in RA is never zero.",
        "response": "stilts tpipe in=data.fits cmd='assert \"PMRA != 0.0\"' out=nonzero_pmra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert PMRA != 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query VizieR TAP near 08h 00m 00s, +00d 00m 00s, converting coordinates, and using 0.0001 degrees radius, then get the row count.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon='hmsToDegrees(8.0, 0, 0)' lat='dmsToDegrees(0.0, 0, 0)' radius=0.0001 omode=count",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"hmsToDegrees(8.0, 0, 0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Crossmatch T1 and T2 (sky 1 arcsec). Output to VOTable using FITS serialization.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' ofmt='votable(format=FITS)' out=match_fits_votable.vot",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I need a low-resolution MOC (order 5) for all the sources in `deep_field.vot`. Please output it in ASCII format.",
        "response": "stilts pixfoot in=deep_field.vot order=5 mocfmt=ascii out=deep_field_lowres.moc.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Submit an asynchronous query to the CSIRO ASKAP archive requesting a maximum of 2000 observation records.",
        "response": "stilts tapquery tapurl=https://casda.csiro.au/casda_vo_tools/tap adql='SELECT * FROM obs_core' maxrec=2000 out=askap_max2k.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 220.8254 and latitude -17.0794. Please use a search radius of 0.6641 degrees. Save the results to a votable file called query_results_55.votable.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=220.8254 lat=-17.0794 radius=0.6641 omode=out ofmt=votable out=query_results_55.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match T_A and T_B exactly on ID. Filter the resulting matched table to keep only rows where magnitude MAG_A < 15.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=exact values1=ID values2=ID fixcols=dups suffix1=_A ocmd='select \"MAG_A < 15\"' out=matched_magnitude_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_A < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Search MAST Gaia DR3 TAP near Galactic L=180, B=5, with a high precision radius of 500 micro-arcseconds (\u00b5as).",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ lon=180.0 lat=5.0 radius='500.0 / 3600000000.0' skysys=galactic out=gaiadr3_500uas.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"500.0 / 3600000000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Remove the parameter 'TELESCOPE' and add a new parameter 'OBSERVATORY' with the value 'ESO VLT'.",
        "response": "stilts tpipe in=meta.fits cmd='clearparams TELESCOPE' cmd='setparam OBSERVATORY \"ESO VLT\"' out=obs_param_set.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the symmetric best match (find=best) between A.fits and B.fits (sky 5 arcsec). Output result to TOPCAT.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' find=best omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Run an asynchronous query on the ESA Herschel TAP service and set the polling interval to 1 second (1000 milliseconds).",
        "response": "stilts tapquery tapurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap adql='SELECT TOP 100 * FROM ivoa.ObsCore' poll=1000 out=herschel_fastpoll.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "My coordinate columns are simply named `c1` and `c2`. How do I generate a MOC?",
        "response": "stilts pixfoot in=generic_coords.fits ra=c1 dec=c2 out=generic_coords_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Group match three tables on 'ID'. Output should contain only the distinct groups found.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=L1.fits in2=L2.fits in3=L3.fits out=distinct_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine photometry data: Vis.fits, IR.fits, and UV.fits. In Vis.fits, normalize the FLUX column by dividing by 1e-12.",
        "response": "stilts tcatn nin=3 in1=Vis.fits icmd1='replacecol FLUX \"FLUX / 1e-12\"' in2=IR.fits in3=UV.fits out=normalized_phot.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '1e-12'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX / 1e-12\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1e-12'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC (order 14) where the radius is determined by the linear extrapolation of parallax error to 100 pc.",
        "response": "stilts mocshape in=plx.fits shape=circle coords='array(RA, DEC, parallax_error * 100.0 / parallax)' order=14 out=plx_err_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Join an MRT file with a TST file into a VOTable.",
        "response": "stilts tcatn nin=2 in1=data.mrt in2=data.tst out=combined.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot points in Galactic coordinates, transforming them from input Equatorial coordinates (RA, DEC), using small open crosses.",
        "response": "stilts plot2sky in=data.fits viewsys=galactic datasys=equatorial layer=mark lon=RA lat=DEC shape=open_cross size=2 out=gal_open_cross.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Map coverage from STC-S strings, running an assertion filter to check if all regions are non-null before processing.",
        "response": "stilts mocshape in=stc.vot icmd='assert !NULL_S_REGION' shape=stc-s coords=S_REGION out=asserted_stc_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine T_BIG and T_SMALL. T_BIG has an extra column 'NOTES' which must be removed before joining.",
        "response": "stilts tcatn nin=2 in1=T_BIG.fits icmd1='delcols NOTES' in2=T_SMALL.fits out=notes_removed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC strictly using the 'bits' implementation for optimal memory usage, if available.",
        "response": "stilts mocshape in=tiny_data.fits shape=point coords='array(RA, DEC)' mocimpl=bits out=bits_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Concatenate tables and add a column 'TIME_STRING' by converting 'MJD' to an ISO-8601 string.",
        "response": "stilts tcat in='mjd_data1.fits mjd_data2.fits' ocmd='addcol TIME_STRING mjdToIso(MJD)' out=mjd_iso_b.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Add a column 'TIME_JULIAN_EPOCH' converting MJD to Julian Epoch, explicitly setting its unit to 'yr'.",
        "response": "stilts tpipe in=time.fits cmd='addcol -units yr TIME_JULIAN_EPOCH mjdToJulian(MJD_TIME)' out=julian_epoch_unit.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Run a synchronous query against the XMM-Newton XCATDB to retrieve its table names and output the result in HTML.",
        "response": "stilts tapquery tapurl=https://xcatdb.unistra.fr/xtapdb adql='SELECT table_name FROM TAP_SCHEMA.tables' sync=true ofmt=html out=xcatdb_tables.html",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T_A and T_B. A has Galactic coordinates. Convert A to ICRS. Match B with 0.1 degree tolerance.",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='addskycoords galactic icrs GLON GLAT RA DEC' in2=T_B.fits matcher=sky params=360 values1='RA DEC' values2='RA DEC' out=gal_icrs_0_1_deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T_REF positions are in Galactic (GLON, GLAT). Convert to Equatorial (RA, DEC) using ICRS before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T_REF.fits icmd1='addskycoords galactic icrs GLON GLAT RA DEC' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=galactic_ref_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Perform a search around RA 10, Dec 10, using a coordinate expression that converts 1 arcminute to degrees for the radius.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=10.0 lat=10.0 radius='1.0 / 60.0' out=arcmin_radius.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 319.661 and latitude 19.5826. Please use a search radius of 0.7787 degrees. Save the results to a fits file called query_results_62.fits. The coordinates are in the supergalactic system. Use verbosity level 2. Don't use compression for the download.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=319.661 lat=19.5826 radius=0.7787 skysys=supergalactic verb=2 compress=false omode=out ofmt=fits out=query_results_62.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "How do I handle polygons with holes in `mocshape`?",
        "response": "The documentation notes that for STC-S, POLYGON winding direction is ignored, and for TFCat, holes are not displayed correctly. This suggests that `mocshape` may not handle polygons with holes correctly and might fill them in.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot a line (link2 layer) connecting pairs of positions, coloring by AUX and setting the opaque limit to 3 for density visualization.",
        "response": "stilts plot2sky in=pairs.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 shading=transparent opaque=3 out=transp_link2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I have coordinates in radians (RA_rad=2.0, Dec_rad=0.5). Convert them to degrees for a cone search against MAST HSCv3 with a 1 arcminute radius.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon='radiansToDegrees(2.0)' lat='radiansToDegrees(0.5)' radius='1.0 / 60.0' out=hsc_rad_converted.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter lon: For input string: \"radiansToDegrees(2.0)\"\nUsage: lon=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find all entries in the `gaiadr3.vari_summary` table for sources classified as RR Lyrae.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, best_class_name FROM gaiadr3.vari_summary WHERE best_class_name = ''RRLyr'''",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 38.7843 and latitude -36.4927. Please use a search radius of 0.2448 degrees. Instead of a file, just give me the checksum.",
        "response": "stilts cone servicetype=sia2 serviceurl=http://irsa.ipac.caltech.edu/sia lon=38.7843 lat=-36.4927 radius=0.2448 omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Map coverage for a huge catalog by sampling every 100th row before generating an order 10 MOC.",
        "response": "stilts mocshape in=huge_cat.fits icmd='every 100' shape=point coords='array(RA, DEC)' order=10 out=sampled_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Read an ASCII file where comment lines start with '!' and save it as a FITS file.",
        "response": "stilts tcopy in=commented.txt ifmt=ascii out=commented.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "What does `mocfmt` do in the pixfoot command?",
        "response": "The `mocfmt` parameter determines the output format for the MOC file. Your options are `fits`, `json`, or `ascii`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Synchronously retrieve 10 rows from the VSA catalogue, keeping only the ID and coordinate columns.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/vsa adql='SELECT TOP 10 sourceID, RA, DEC FROM vsa.catalogue' sync=true ocmd='keepcols \"sourceID RA DEC\"' out=vsa_sync_coords.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge tables T1 and T2. T2 contains proper motion components (PM_X, PM_Y) in mas/yr. Calculate the total proper motion magnitude 'PM_TOT' before joining.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='addcol PM_TOT \"hypot(PM_X, PM_Y)\"' out=pm_magnitude_added.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PM_Y)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOT hypot(PM_X, PM_Y)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PM_Y)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Read a VOTable but enforce **VOTable version 1.0** compliance during output.",
        "response": "stilts tcopy in=data.vot ofmt='votable(version=V10)' out=v10_strict.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate an ASCII MOC (order 7) for positions contained in a compressed Parquet file.",
        "response": "stilts mocshape in=data.parquet.gz shape=point coords='array(RA, DEC)' order=7 mocfmt=ascii out=parquet_ascii_o7.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine an ECSV file and a FITS file. Filter the FITS file to only include sources where 'RA' is greater than 300 degrees.",
        "response": "stilts tcatn nin=2 in1=e.ecsv ifmt1=ecsv in2=f.fits icmd2='select \"RA > 300\"' out=filtered_ecsv_fits.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '300'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 300\n\nUsage: select <expr>\n    (Unused arguments: '>' '300'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a new column called `LOG_FLUX` to `source_list.fits`, calculated as the base-10 logarithm of the `FLUX` column. The output should be `sources_with_logflux.fits`.",
        "response": "stilts tpipe in=source_list.fits cmd='addcol LOG_FLUX log10(FLUX)' out=sources_with_logflux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate three photometric tables, retaining only columns with the UCD 'phot.mag' in all three inputs.",
        "response": "stilts tcatn nin=3 in1=c1.fits icmd1='keepcols ucd$phot_mag*' in2=c2.fits icmd2='keepcols ucd$phot_mag*' in3=c3.fits icmd3='keepcols ucd$phot_mag*' out=mag_ucd_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match T_A and T_B exactly on 'KEY'. T_A columns should be retained with their original names, and T_B columns should be renamed with suffix '_B'.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=exact values1=KEY values2=KEY fixcols=dups suffix2=_B out=T_A_inner_B_suffixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query Chandra CXC for ObsCore data and output the FITS files using HTTP compression.",
        "response": "stilts tapquery tapurl=https://cda.harvard.edu/cxctap adql='SELECT TOP 10 * FROM ivoa.ObsCore' compress=true ofmt=fits out=compressed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to match three large tables on a multi-core machine. How can I enable parallel execution?",
        "response": "stilts tmatchn nin=3 in1=huge1.fits in2=huge2.fits in3=huge3.fits multimode=group matcher=sky params=1 values1='ra dec' values2='ra dec' values3='ra dec' runner=parallel out=parallel_3way_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate a density map (skydensity, level 7) showing the count per square milli-arcsecond (mas2).",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=7 combine=count-per-unit perunit=mas2 out=hpx7_mas2_density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create an MOC, but first rename the coordinate columns in the input table from 'X' and 'Y' to 'RA' and 'DEC'.",
        "response": "stilts pixfoot in=xy_data.fits icmd='colmeta -name RA X; colmeta -name DEC Y' ra=RA dec=DEC out=renamed_xy_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I have three observation logs. Find groups of observations that happened within 60 seconds of each other.",
        "response": "stilts tmatchn nin=3 in1=log1.fits in2=log2.fits in3=log3.fits multimode=group matcher=1d params=60 values1=OBS_TIME_UNIX values2=OBS_TIME_UNIX values3=OBS_TIME_UNIX out=time_clustered_obs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Can I combine two tables, but filter out rows where `FLAG` is set in the second table?",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits icmd2='select FLAG==0' out=filtered_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "For every row, check if the value of 'MAG' is greater than 25 and assert this condition is met by all rows.",
        "response": "stilts tpipe in=faint_sources.fits cmd='assert \"MAG > 25.0\"' out=faint_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '25.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG > 25.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '25.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I want to plot a filled histogram with a black outline.",
        "response": "You can achieve this by overplotting two histogram layers: one with `barform=filled` and a color, and another with `barform=open` and `color=black`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Run a search on the CSIRO ASKAP TAP service near RA 300, Dec -10, using $0.0005$ radians.",
        "response": "stilts cone serviceurl=https://casda.csiro.au/casda_vo_tools/tap lon=300.0 lat=-10.0 radius='radiansToDegrees(0.0005)' out=askap_rad.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"radiansToDegrees(0.0005)\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create a circle MOC with a radius of $60 / 3600$ degrees (1 arcminute).",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 60.0 / 3600.0)' out=one_arcmin_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Crossmatch four tables using exact string match on 'TARGET_NAME'. T4 names must be trimmed of leading/trailing spaces before matching.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=exact values1=NAME values2=NAME values3=NAME values4=NAME in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits icmd4='replacecol NAME trim(NAME)' out=name_trimmed_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a very high resolution MOC (order 20) for a 1 arcsecond radius around each point in `calibrators.fits`.",
        "response": "stilts pixfoot in=calibrators.fits radius=1.0/3600.0 order=20 out=calibrator_regions_hires.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Retrieve ObsCore entries from ASI SSDC and save the resulting table using the FITS VOTable serialization format.",
        "response": "stilts tapquery tapurl=https://tools.ssdc.asi.it/TAPSSDC/tap adql='SELECT TOP 20 * FROM ivoa.ObsCore' ofmt='votable(format=FITS)' out=ssdc_fits.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the ESO TAP_CAT around RA 50, Dec 10, using a radius of 1.5 degrees, and output the maximum and minimum values of the magnitude column.",
        "response": "stilts cone serviceurl=http://archive.eso.org/tap_cat lon=50.0 lat=10.0 radius=1.5 ocmd='keepcols MAG' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "After a 4-way group match, I want to create a new column that counts how many of the 4 tables contributed to each group.",
        "response": "stilts tmatchn nin=4 in1=t1.fits in2=t2.fits in3=t3.fits in4=t4.fits multimode=group matcher=sky params=1 values1='ra dec' values2='ra dec' values3='ra dec' values4='ra dec' fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 suffix4=_4 ocmd='addcol N_Match countTrue(!NULL_ID_1,!NULL_ID_2,!NULL_ID_3,!NULL_ID_4)' out=groups_with_counts.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Can `plot2plane` discard the plot output completely?",
        "response": "Yes, using `omode=discard`. This can be useful for benchmarking data preparation steps.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve all ObsCore entries from the ESA Integral Science Archive, running asynchronously and setting a max execution time of 4 hours (14400 seconds).",
        "response": "stilts tapquery tapurl=https://isla.esac.esa.int/tap/tap adql='SELECT * FROM ivoa.ObsCore' executionduration=14400 out=integral_long_job.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I want a MOC for all objects in `catalog.fits` with a radius of 0.05 degrees, but at order 10.",
        "response": "stilts pixfoot in=catalog.fits radius=0.05 order=10 out=catalog_footprint_o10.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Take `list1.txt` and `list2.txt` (ASCII format) and combine them into a single FITS file, adding a column to show which list they came from.",
        "response": "stilts tcatn nin=2 ifmt1=ascii in1=list1.txt ifmt2=ascii in2=list2.txt seqcol=ListID out=combined_list.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge four tables, then calculate and display statistics (min, max, mean, stdev) on all numeric columns.",
        "response": "stilts tcatn nin=4 in1=d1.fits in2=d2.fits in3=d3.fits in4=d4.fits omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I need to concatenate a huge number of files from a list `huge_list.txt`. Can I enable lazy reading and also ask it to pre-count rows for FITS output?",
        "response": "stilts tcat in=@huge_list.txt lazy=true countrows=true out=mega_catalog.fits",
        "chat.jar": "fixed",
        "error": "Error: huge_list.txt (No such file or directory)\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot density contours on a Plate Carr\u00e9e projection (CAR), explicitly setting the smoothing kernel shape to Gaussian (gauss3) and smoothing width to 10 pixels.",
        "response": "stilts plot2sky in=data.fits projection=car layer=contour lon=RA lat=DEC smooth=10 kernel=gauss3 out=car_gauss_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Synchronously query the PADC TAP Astro server for column metadata and retrieve only the resulting table metadata description.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT TOP 1 * FROM TAP_SCHEMA.columns' sync=true omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the target names and mean coordinates of ULLYSES HLSP observations, grouping by target and outputting the result in LaTeX table format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT target_name, AVG(ra) AS mean_ra, AVG(dec) AS mean_dec FROM ivoa.ObsCore GROUP BY target_name' ofmt=latex out=ullyses_targets.tex",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Request a long query on ARI Gaia for faint stars and allow 3 hours (10800 seconds) maximum execution time.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT * FROM gaiadr3.gaia_source WHERE phot_g_mean_mag > 20' maxrec=100000 executionduration=10800 out=faint_gaia.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate tables, and then run an expression check to ensure that all values in the final 'FLUX' column are positive.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='assert \"FLUX > 0\"' out=positive_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Convert a Parquet file to a VOTable, explicitly forcing the output to use the FITS serialization method within the XML structure.",
        "response": "stilts tcopy in=data.parquet ofmt='votable(format=FITS)' out=fits_votable.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Can `tapquery` list the tables available at a service?",
        "response": "No, `tapquery` is for executing ADQL queries, not for discovering table metadata. To list tables, you would typically query the `TAP_SCHEMA.tables` table, for instance: `stilts tapquery tapurl=... adql='SELECT * FROM TAP_SCHEMA.tables'`.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tapquery"
    },
    {
        "prompt": "How do I use an ADQL query from a file named `myquery.adql`?",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql=@myquery.adql",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate the footprint of objects where `FLAG_A` AND `FLAG_B` are both true.",
        "response": "stilts pixfoot in=flagged_data.fits icmd='select \"FLAG_A && FLAG_B\"' out=both_flags_set.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'FLAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG_A && FLAG_B\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'FLAG_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate tables and, in the final table, replace the column 'FLUX_UNC' with a scaled version: 'FLUX_UNC * 1e-3'.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replacecol FLUX_UNC \"FLUX_UNC * 1e-3\"' out=milli_flux_unc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1e-3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_UNC FLUX_UNC * 1e-3\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '1e-3'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a histogram normalized by the total height of all bars (normalise=height).",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE normalise=height out=height_norm_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve metadata about all tables in the KIS Science Data Centre TAP service.",
        "response": "stilts tapquery tapurl=http://dachs.sdc.leibniz-kis.de/tap adql='SELECT * FROM TAP_SCHEMA.tables' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match A.fits and B.fits. Only include rows present in A or B, but not both (symmetric difference). Match exactly on ID.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID join=1xor2 out=exact_symmetric_difference.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Split a single 3-element array column named 'FLUX_BANDS' into three separate scalar columns named 'F_U', 'F_G', and 'F_R'.",
        "response": "stilts tpipe in=arrays.fits cmd='explodecols FLUX_BANDS' cmd='colmeta -name F_U FLUX_BANDS_0; colmeta -name F_G FLUX_BANDS_1; colmeta -name F_R FLUX_BANDS_2' out=scalar_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table using the generic scheme `:class:uk.ac.starlink.table.LoopTableScheme:50` and save it as FITS.",
        "response": "stilts tcopy in=':class:uk.ac.starlink.table.LoopTableScheme:50' out=class_loop.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'RA_DMS' converting RA in degrees to DMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS \"degreesToDms(RA, 1)\"' out=dms_ra_1s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS degreesToDms(RA, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a MOC from a file `events.fits`, but only use rows with an even index number.",
        "response": "stilts mocshape in=events.fits icmd='select \"$0 % 2 == 0\"' shape=point coords='array(RA,DEC)' out=even_rows_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Merge two tables, resulting in a VOTable output encoded in binary format (BINARY2 serialization).",
        "response": "stilts tcatn nin=2 in1=V1.fits in2=V2.fits ofmt='votable(format=BINARY2)' out=binary2_combined.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the XMM XCATDB for sources and allow a maximum execution duration of 1 hour (3600 seconds).",
        "response": "stilts tapquery tapurl=https://xcatdb.unistra.fr/xtapdb adql='SELECT * FROM dbo.xcat_source' executionduration=3600 out=xcatdb_1hr.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot the analytic function $y = x$ and ensure the line is drawn with antialiasing.",
        "response": "stilts plot2plane layer=function fexpr=x antialias=true out=antialiased_line.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert a VOTable with TABLEDATA to one with BINARY encoding, preserving the version.",
        "response": "stilts tcopy in=tabledata.vot ofmt='votable(format=BINARY)' out=binary.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Merge a remote PDS4 planetary data file with local FITS table, outputting the checksum.",
        "response": "stilts tcatn nin=2 in1=http://pds.nasa.gov/data/mars.xml ifmt1=pds4 in2=local.fits omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge two tables, restricting the output to only the last 100 rows of the total combined dataset.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits ocmd='tail 100' out=final_100_rows.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge tables, filtering each input to only retain the top 100 rows based on 'MAG' value (lowest MAG is best) before concatenation.",
        "response": "stilts tcat in='deepA.fits deepB.fits' icmd='sorthead 100 MAG' out=top100_per_file.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a circle MOC where the radius is calculated using $\text{hypot}(0.01, 0.01)$ degrees.",
        "response": "stilts mocshape in=coords.fits shape=circle coords='array(RA, DEC, hypot(0.01, 0.01))' out=hypot_radius_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine tables, but eliminate any column that contains the exact same value (or null) for all rows across all input tables.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='constcol -noparam' out=non_constant_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Crossmatch T1 and T2 using symmetric best match (find=best). T2 coordinates are in degrees (RA_D, DEC_D), but units are not specified. Match them.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='colmeta -units deg RA_D; colmeta -units deg DEC_D' matcher=sky params=1 values1='RA DEC' values2='RA_D DEC_D' find=best out=best_forced_units.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve the top 5 VizieR (2MASS) source IDs and coordinates and calculate the checksum of the retrieved result.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT TOP 5 * FROM \"II/246/out\"' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the GAVO Data Center for table metadata, explicitly using the PQL query language.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 5 * FROM TAP_SCHEMA.tables' language=PQL out=gavo_pql.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plotting X vs Y, hiding minor grid lines.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y minor=false out=no_minor_ticks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Take `cat1.fits` and `cat2.fits`. Join them, and then in the final table, replace any occurrences of the value 99.99 in the `mag` column with null.",
        "response": "stilts tcat in=cat1.fits in=cat2.fits ocmd='replaceval 99.99 null mag' out=cat_nulls.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 194.5231 and latitude -37.1853. Please use a search radius of 1.8373 degrees. Save the results to a csv file called query_results_166.csv. After the query, please run this processing command: 'sorthead 20 MAG'. Use verbosity level 3.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=194.5231 lat=-37.1853 radius=1.8373 verb=3 omode=out ofmt=csv out=query_results_166.csv ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Count the number of available tables in the Europlanet Telescope Network Database.",
        "response": "stilts tapquery tapurl=http://parsec-europlanet.eu:81/tap adql='SELECT COUNT(*) FROM TAP_SCHEMA.tables' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query MAST PanSTARRS DR2 and explicitly set the output format to ASCII text with parameters included.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT TOP 10 * FROM dbo.detection_object' ofmt=ascii out=ps1dr2_ascii.txt",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a FITS MOC from a list of circles with 1 arcminute radii.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA,DEC,1.0/60.0)' mocfmt=fits out=arcmin_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plotting object names (ID) using the label layer with center anchor.",
        "response": "stilts plot2plane in=objects.fits layer=label x=X y=Y label=ID anchor=center out=center_labels.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find the coverage for $1000$ micro-arcseconds radius circles, converted from $1$ mas.",
        "response": "stilts pixfoot in=mas_uas.fits ra=RA dec=DEC radius='1000.0 / 3600000000.0' out=uas_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Merge a series of ASCII tables, and in the resulting table, add a row index column named 'Index' starting from 1.",
        "response": "stilts tcat ifmt=ascii in='list*.txt' ocmd='addcol Index $0' out=indexed_list.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "I need the MOC for sources with a radius derived from the square of their distance in parsecs (D_PC^2) scaled by 1e-6.",
        "response": "stilts pixfoot in=distance.fits ra=RA dec=DEC radius='square(D_PC) * 1e-6' out=squared_dist_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine a table from a URL (remote.vot) and a local file (local.fits), adding a column showing the unique part of the file name (e.g., 'remote' and 'local').",
        "response": "stilts tcatn nin=2 in1=http://example.com/remote.vot in2=local.fits uloccol=OriginName out=combined_origin.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot Y-error bars where the error magnitude is 10% of the Y value (0.1*Y).",
        "response": "stilts plot2plane in=data.fits layer=xyerror x=X y=Y yerrhi='0.1*Y' out=relative_yerr.png",
        "chat.jar": "fixed",
        "error": "Error: Bad value for parameter layer: Unknown value \"yerror\" - must be one of mark, size, sizexy, xyvector, xyerror, xyellipse, xycorr, link2, mark2, poly4, mark4, polygon, area, central, lines, marks, handles, yerrors, xyerrors, statline, statmark, arrayquantile, line, linearfit, label, arealabel, contour, grid, fill, quantile, histogram, kde, knn, densogram, gaussian, function\nUsage: layer=<layer-type> <layer-specific-params>\n\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve RA, Dec, and calculated logarithmic surface brightness (log10(g_mag / g_radius)) for a sample of sources from GAVO.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 100 ra, dec, log10(g_mag / g_radius) AS log_sb FROM sdss.dr16qso' out=gavo_log_sb.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter input data to remove rows outside the magnitude range 10 < G_MAG < 20 before MOC creation.",
        "response": "stilts pixfoot in=mag_range.fits icmd='select \"G_MAG > 10.0 && G_MAG < 20.0\"' ra=RA dec=DEC out=filtered_mag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0' '&&' 'G_MAG' '<' '20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G_MAG > 10.0 && G_MAG < 20.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0' '&&' 'G_MAG' '<' '20.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine two tables, adding an integer column 'ERROR_INT' which is the floor of the 'ERROR_FLOAT' column, before finalizing.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='addcol ERROR_INT (int)floor(ERROR_FLOAT)' out=with_int_error.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Start a synchronous query to MAST TESS Input Catalog (TIC) to count all objects brighter than TMAG 11.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT COUNT(*) FROM tic.v8 WHERE tmag < 11' sync=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I have a collection of HEALPix UNIQ identifiers in hpx_cells.txt. Combine them into a single MOC file.",
        "response": "stilts mocshape in=hpx_cells.txt ifmt=ascii shape=uniq coords='$1' out=combined_uniq.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the PADC RR TAP server for a sample of rows and send the output directly to TOPCAT.",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT TOP 50 * FROM TAP_SCHEMA.tables' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Map coverage from STC-S strings, generating a summary report showing maximum resolution (order 29).",
        "response": "stilts mocshape in=stc.fits shape=stc-s coords=REGION order=29 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a point MOC where the input coordinates are in radians, and convert them to degrees in the coords expression.",
        "response": "stilts mocshape in=rad_input.fits shape=point coords='array(radiansToDegrees(RA_RAD), radiansToDegrees(DEC_RAD))' out=rad_converted_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers that are colored based on the magnitude of the velocity vector (hypot(VX, VY)).",
        "response": "stilts plot2plane in=vectors.fits layer=mark x=X y=Y shading=aux aux='hypot(VX, VY)' auxmap=plasma out=velocity_magnitude.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Calculate the population standard deviation (`stdev-pop`) and the number of non-null items (`ngood`) of the `MAG_R` column.",
        "response": "stilts tpipe in=phot.fits cmd='keepcols MAG_R' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the VizieR TAP engine around RA 210, Dec -10, with a radius of 18 arcseconds, outputting the result as an HTML table.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=210.0 lat=-10.0 radius='18.0 / 3600.0' ofmt=html out=vizier_html.html",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"18.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate a plot where markers are sized by one column and colored by another.",
        "response": "stilts plot2plane in=data.fits layer=size x=X y=Y size=SIZE_COL shading=aux aux=COLOR_COL",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Set the output format to VOTable BINARY2 and ensure that the table is processed in a single pass using in-memory caching.",
        "response": "stilts tpipe in=large.fits cmd=cache ofmt='votable(format=BINARY2)' out=output_binary2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match T1 and T2 using symmetric best match (best). T1 must be filtered first to remove rows where MAG is null.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='select !NULL_MAG' in2=T2.fits matcher=sky params=3 values1='RA DEC' values2='RA DEC' find=best out=null_filtered_best.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Draw lines (line layer) connecting points, coloring the line based on density using the transparent shading mode.",
        "response": "stilts plot2sky in=data.fits layer=line lon=RA lat=DEC shading=transparent opaque=50 out=trans_density_line.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter layer: Unknown value \"line\" - must be one of mark, size, sizexy, skyvector, skyellipse, skycorr, link2, mark2, poly4, mark4, polygon, area, central, label, arealabel, contour, skydensity, healpix, skygrid\nUsage: layer=<layer-type> <layer-specific-params>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a MOC for circular regions where the radius in degrees is `1/(10*PARALLAX)`.",
        "response": "stilts pixfoot in=parallax_data.fits radius='1/(10*PARALLAX)' out=parallax_radius_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot the density of points using a transparent shading mode, where 20 points make the marker fully opaque.",
        "response": "stilts plot2plane in=crowded.fits layer=mark x=X y=Y shading=transparent opaque=20 out=transparent_o20.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Count the total number of tables available in the FAI archives TAP service.",
        "response": "stilts tapquery tapurl=https://dachs.fai.kz/tap adql='SELECT COUNT(*) FROM TAP_SCHEMA.tables' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T_REF against T2, T3. T2 only includes rows where 'COLOR' > 0.5. T3 columns should always be included.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=3 in1=T_REF.fits in2=T2.fits icmd2='select \"COLOR > 0.5\"' in3=T3.fits join3=always values1='RA DEC' values2='RA DEC' values3='RA DEC' out=color_filter_T3_outer.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select COLOR > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the IRSA TAP service with a large radius (1 degree) and then filter the output to keep only the first 50 results found.",
        "response": "stilts cone serviceurl=https://irsa.ipac.caltech.edu/TAP lon=10.0 lat=20.0 radius=1.0 ocmd='head 50' out=irsa_head.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine three logs. Log 1 has 'DATE' strings; convert them to MJD before concatenation.",
        "response": "stilts tcatn nin=3 in1=Log1.fits icmd1='replacecol DATE isoToMjd(DATE)' in2=Log2.fits in3=Log3.fits out=mjd_standardized.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Draw filled circles (area layer) where the radius is given by $\\log_{10}(\\text{FLUX})$ (degrees).",
        "response": "stilts plot2sky in=sources.fits layer=area area='array(RA, DEC, log10(FLUX))' areatype=CIRCLE polymode=fill out=log_flux_circles.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"array(RA, DEC, log10(FLUX))\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate `data1.csv` and `data2.csv` from a pipe `cat data1.csv data2.csv | stilts ...` and output as a FITS file.",
        "response": "cat data1.csv data2.csv | stilts tcat in=- ifmt=csv ofmt=fits out=piped_data.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge observation log A and B. A contains timestamps in decimal year; convert to MJD before combining with B.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='replacecol MJD decYearToMjd(DECYEAR)' in2=B.fits out=mjd_aligned_ts.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch T1 and T2. T1 is TST format, T2 is ASCII format. Match exactly on 'OBS_KEY'.",
        "response": "stilts tmatch2 ifmt1=tst in1=T1.tst ifmt2=ascii in2=T2.txt matcher=exact values1=OBS_KEY values2=OBS_KEY out=tst_ascii_exact.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Read a Parquet file and output it as a VOTable, ensuring the VOTable version is **1.5**.",
        "response": "stilts tcopy in=data.parquet ofmt='votable(version=V15)' out=v15_output.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create an order 6 MOC where the input positions are provided in separate columns RA_H, RA_M, RA_S for hours and similar DEC columns.",
        "response": "stilts mocshape in=sex_in.fits shape=point coords='array(hmsToDegrees(RA_H, RA_M, RA_S), dmsToDegrees(DEC_D, DEC_M, DEC_S))' order=6 out=sex_coords_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Merge spectroscopic data, filtering each input to calculate the mean flux across a fixed-length array column 'FLUX_ARRAY' before joining.",
        "response": "stilts tcat in='spec1.fits spec2.fits' icmd='addcol MEAN_FLUX mean(FLUX_ARRAY)' ocmd='keepcols MEAN_FLUX' out=mean_flux_cat.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Convert a Parquet file to FITS, guaranteeing that the FITS output includes long string metadata (Wide FITS support).",
        "response": "stilts tcopy in=wide_parquet.parquet out=wide_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a table containing only the rows between index 500 and 1500 (inclusive).",
        "response": "stilts tpipe in=big_table.fits cmd='rowrange 500 1500' out=middle_chunk.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the input to only retain objects where magnitude is exactly 19.5, then generate an order 10 point MOC.",
        "response": "stilts mocshape in=mag_data.fits icmd='select \"MAG == 19.5\"' shape=point coords='array(RA, DEC)' order=10 out=exact_mag_o10.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '19.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG == 19.5\n\nUsage: select <expr>\n    (Unused arguments: '==' '19.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match three tables. In T2, calculate a new column 'DIST_PC' from parallax 'PLX' before matching in 3D Cartesian space (sky3d, 10pc tolerance).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky3d params=10 in1=T1.fits in2=T2.fits icmd2='addcol DIST_PC 1000.0/PLX' in3=T3.fits values1='RA DEC DIST_PC' values2='RA DEC DIST_PC' values3='RA DEC DIST_PC' out=parallax_3d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a MOC for all sources in `mycat.fits` that are near (within 0.1 deg) the celestial equator.",
        "response": "stilts mocshape in=mycat.fits icmd='select \"abs(DEC) < 0.1\"' shape=point coords='array(RA,DEC)' out=equator_sources.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Use the `head` and `tail` filters in sequence to extract the first 100 rows and then the last 10 of those 100 (i.e., rows 91-100).",
        "response": "stilts tpipe in=data.fits cmd='head 100' cmd='tail 10' out=end_of_head.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate an MOC for objects around Ecliptic Lon 200, Lat -30, converting coordinates internally, using 0.1 arcminutes.",
        "response": "stilts pixfoot in=ecl_data2.fits icmd='addskycoords ecliptic icrs ELON ELAT RA DEC' ra=RA dec=DEC radius='0.1 / 60.0' out=ecl_0p1am.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "How can I count the number of matches between `gala_dr3.fits` and `sdss_dr17.fits` within 2 arcseconds, without creating an output file?",
        "response": "stilts tmatch2 in1=gala_dr3.fits in2=sdss_dr17.fits matcher=sky params=2 values1='ra dec' values2='ra dec' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I have three tables with proper motions. Find groups of objects that are within 1 arcsec and have a `PMRA` difference of less than 5 mas/yr.",
        "response": "stilts tmatchn nin=3 in1=pm1.fits in2=pm2.fits in3=pm3.fits multimode=group matcher=sky+1d params='1 5' values1='RA DEC PMRA' values2='RA DEC PMRA' values3='RA DEC PMRA' out=kinematic_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add columns corresponding to the X, Y, Z Cartesian components of the object position derived from (RA, DEC, DISTANCE_PC).",
        "response": "stilts tpipe in=data.fits cmd='addcol XYZ_VEC \"polarXYZ(RA, DEC, DISTANCE_PC)\"' out=xyz_vectors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'DISTANCE_PC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol XYZ_VEC polarXYZ(RA, DEC, DISTANCE_PC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'DISTANCE_PC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create an order 22 MOC (extremely high resolution) and force the output to be written using VOTable BINARY2 format.",
        "response": "stilts mocshape in=ultra_deep.fits shape=point coords='array(RA, DEC)' order=22 mocfmt=cds_fits out=ultra_deep_binary2.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the ESO TAP_OBS service around RA 270, Dec 0, using 1 arcsecond, and remove any column containing null values (using the stats output).",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=270.0 lat=0.0 radius='1.0 / 3600.0' ocmd='select true' omode=meta",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "How do I make a histogram of the 'REDSHIFT' column in `galaxies.csv`?",
        "response": "stilts plot2plane in=galaxies.csv ifmt=csv layer=histogram x=REDSHIFT",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"REDSHIFT\"\n    (The name \"REDSHIFT\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Group match three catalogs (C1, C2, C3) using sky position and R-band magnitude (sky+1d). Tolerances are 2 arcsec and 0.1 mag.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky+1d params='2 0.1' values1='RA DEC R_MAG' values2='RA DEC R_MAG' values3='RA DEC R_MAG' in1=C1.fits in2=C2.fits in3=C3.fits out=sky_mag_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need the footprint for all sources in `my_data.fits` that are NOT near the Andromeda galaxy (within 1 degree).",
        "response": "stilts pixfoot in=my_data.fits icmd='select \"skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1\"' out=not_andromeda.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1\n\nUsage: select <expr>\n    (Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I'm matching two tables, `A.fits` and `B.fits`, but `B.fits` has its coordinates (`B_RA`, `B_DEC`) in the FK4 system. Can you convert them to FK5 before matching against `A.fits` (`A_RA`, `A_DEC`)?",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits icmd2='addskycoords fk4 fk5 B_RA B_DEC B_RA_FK5 B_DEC_FK5' matcher=sky params=5 values1='A_RA A_DEC' values2='B_RA_FK5 B_DEC_FK5' out=fk4_fk5_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate four tables (P1-P4.fits). Before concatenation, ensure that the columns RA and DEC in P2 are converted from radians to degrees.",
        "response": "stilts tcatn nin=4 in1=P1.fits in2=P2.fits icmd2='replacecol RA radiansToDegrees(RA); replacecol DEC radiansToDegrees(DEC)' in3=P3.fits in4=P4.fits out=rad_converted_batch.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I need the MOC for sources with $1$ degree radius, limiting the input stream to only the first 100 rows.",
        "response": "stilts pixfoot in=data.fits icmd='head 100' ra=RA dec=DEC radius=1.0 out=head_100_1deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Join T1 and T2. T1 has columns MAG_R, MAG_G. Add column COLOR = MAG_R - MAG_G in T1 before matching T2 on COLOR (1D, 0.1 tolerance).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='addcol COLOR \"MAG_R - MAG_G\"' in2=T2.fits matcher=1d params=0.1 values1=COLOR values2=COLOR out=color_calculated_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_G'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COLOR MAG_R - MAG_G\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_G'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'Z_COMOVING_ABS' calculating the absolute magnitude using Z converted to distance modulus.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol L_DIST_PC \"10.0^((25.0 + luminosityDistance(Z, 70.0, 0.3, 0.7)) / 5.0)\"' out=absolute_mag_gal.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'luminosityDistance(Z,' '70.0,' '0.3,' '0.7))' '/' '5.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol L_DIST_PC 10.0^((25.0 + luminosityDistance(Z, 70.0, 0.3, 0.7)) / 5.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'luminosityDistance(Z,' '70.0,' '0.3,' '0.7))' '/' '5.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need the RA and Dec of the sources found by a Gaia query around RA 250, Dec 60 (radius 0.01 deg), converted to Galactic Longitude and Latitude in the output.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=250.0 lat=60.0 radius=0.01 ocmd='addskycoords icrs galactic RA DEC GLON GLAT' ocmd='keepcols \"GLON GLAT\"' out=galactic_output.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Filter the table to keep rows where the proper motion in RA is positive.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMRA > 0.0\"' out=positive_pmra_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta.",
        "response": "stilts plot2sky in=polygons.fits layer=polygon coords=VERTICES polymode=fill shading=flat color=magenta out=filled_magenta_polygons.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert the input table to a Parquet file, ensuring a custom parameter 'SOURCE_ID:123' is written to the metadata.",
        "response": "stilts tpipe in=input.fits ofmt='parquet(kvmap=SOURCE_ID:123)' out=output_custom_meta.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a boolean column 'IS_ODD' which is true if the 'ID' number is odd.",
        "response": "stilts tpipe in=data.fits cmd='addcol IS_ODD \"ID % 2 != 0\"' out=odd_ids.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_ODD ID % 2 != 0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '%' '2' '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Set the output mode to view the statistics, but ensure the result table is cached internally first.",
        "response": "stilts tpipe in=data.fits cmd=cache omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine three tables, and show the result in HTML format.",
        "response": "stilts tcatn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits ofmt=html out=table.html",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot points, setting a fixed margin of 50 pixels on all four sides of the plot area (insets).",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC insets=50,50,50,50 out=fixed_insets_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I need to join `file1.fits` with the second extension of `file2.fits`.",
        "response": "stilts tcatn nin=2 in1=file1.fits in2=file2.fits#2 out=joined_hdu.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert a FITS table to VOTable, explicitly requesting the pure XML **TABLEDATA** format.",
        "response": "stilts tcopy in=input.fits ofmt='votable(format=TABLEDATA)' out=output_td.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate a MOC (order 4) for circles with a radius of 1 degree divided by 1.5.",
        "response": "stilts pixfoot in=wide_rad.fits ra=RA dec=DEC radius='1.0 / 1.5' order=4 out=two_thirds_deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T1 is a simulated attractor (clifford) of 10000 points. Match on X, Y coordinates.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=2d params=1 values1='X Y' values2='X Y' values3='X Y' in1=:attractor:10000,clifford in2=T2.fits in3=T3.fits out=attractor_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Join T_A and T_B. T_A coordinate RA is in HMS string format. Convert it to degrees inline for matching T_B coordinates (RA, DEC).",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=sky params=1 values1='hmsToDegrees(RA_HMS) DEC' values2='RA DEC' out=inline_hms_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T_Main and T_Sup on 2D coordinates (X, Y) with cuboid tolerance 2 units in X and Y.",
        "response": "stilts tmatch2 in1=T_Main.fits in2=T_Sup.fits matcher=2d_cuboid params='2 2' values1='X Y' values2='X Y' out=symmetric_cuboid_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create a 2D plot with a serif font for the plot title and axis labels.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y title='My Serif Plot' fontstyle=serif out=serif_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T1 contains proper motion components. Calculate the total proper motion (PM_TOT) in T1 and match on position + PM_TOT (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='1 5' in1=T1.fits icmd1='addcol PM_TOT \"hypot(PMRA, PMDEC)\"' in2=T2.fits in3=T3.fits values1='RA DEC PM_TOT' values2='RA DEC PM_TOT' values3='RA DEC PM_TOT' out=pm_magnitude_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOT hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Calculate the min, max, and mean redshift for data in the MUSE-Wide survey deep field.",
        "response": "stilts tapquery tapurl=https://musewide.aip.de/tap adql='SELECT redshift FROM mwide.deep_field' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert the integer column 'BIT_FLAG' to a binary string representation.",
        "response": "stilts tpipe in=flags.fits cmd='addcol FLAG_BIN toBinary(BIT_FLAG)' out=binary_flags.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the coverage for sources where the radius is given by $1 / \text{SQUARE}(\text{Z})$ degrees, constrained by minimum $Z=0.1$.",
        "response": "stilts pixfoot in=z_scaled.fits icmd='select \"Z >= 0.1\"' ra=RA dec=DEC radius='1.0 / square(Z)' out=z_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z >= 0.1\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "My histogram has a very long tail. Can I plot it on a log-log scale?",
        "response": "stilts plot2plane in=powerlaw.fits layer=histogram x=VALUE xlog=true ylog=true",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Count the total number of tables available in the HEASARC Xamin Catalog Interface, requiring authentication to access the metadata.",
        "response": "stilts tapquery tapurl=https://heasarc.gsfc.nasa.gov/xamin/vo/tap adql='SELECT COUNT(*) FROM TAP_SCHEMA.tables' auth=true omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Join the first, second, and fifth HDU from `data.fits`. Add a column `HDU_INDEX` with values 1, 2, and 5 respectively for the rows from each extension.",
        "response": "stilts tcat in=data.fits#1 in=data.fits#2 in=data.fits#5 seqcol=HDU_INDEX out=selected_hdus.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, ensuring the output table name is explicitly set to 'MasterCatalog_v1'.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='tablename MasterCatalog_v1' out=master_v1.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Convert input column 'RA' from radians to degrees before outputting the table.",
        "response": "stilts tpipe in=data.fits cmd='replacecol RA radiansToDegrees(RA)' out=ra_degrees.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the average effective temperature (`teff`) for stars in the Subaru SAGA database.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT AVG(teff) FROM saga.stellar_abundances' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a table to a text file, ensuring table parameters are **not** output.",
        "response": "stilts tcopy in=input.fits ofmt='text(params=false)' out=no_params.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column containing the radial velocity (RV) in km/s derived from the normalized RV in mas/yr, given 'PARALLAX'.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol RV_KMS \"rvMasyrToKms(RV_MASYR, PARALLAX)\"' out=rv_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RV_KMS rvMasyrToKms(RV_MASYR, PARALLAX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a MOC for the positions in `my_data.fits` but exclude any rows that have null RA or Dec values.",
        "response": "stilts pixfoot in=my_data.fits icmd='select \"!NULL_RA && !NULL_DEC\"' out=valid_coords.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_RA && !NULL_DEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot a weighted histogram. The values are in 'energy' and the weights are in 'exposure_time'.",
        "response": "stilts plot2plane in=events.fits layer=histogram x=energy weight=exposure_time",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"energy\"\n    (The name \"energy\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at http://archive.eso.org/ssap? I'm looking for objects around longitude 178.9104 and latitude -28.8775. Please use a search radius of 0.0149 degrees. Save the results to a csv file called query_results_83.csv. The coordinates are in the galactic system. Don't use compression for the download.",
        "response": "stilts cone servicetype=ssa serviceurl=http://archive.eso.org/ssap lon=178.9104 lat=-28.8775 radius=0.0149 skysys=galactic compress=false omode=out ofmt=csv out=query_results_83.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query GAVO for quasars within 5 arcminutes of RA 150, Dec 10, requesting maximum 5000 records. Output as CSV.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT ra, dec, z FROM sdss.dr16qso WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 150.0, 10.0, 0.083333))' maxrec=5000 ofmt=csv out=gavo_cone.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 337.9186 and latitude 84.6631. Please use a search radius of 1.5318 degrees. Save the results to a votable file called query_results_97.votable.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=337.9186 lat=84.6631 radius=1.5318 omode=out ofmt=votable out=query_results_97.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Copy a table and output it as a text file, ensuring maximum cell width is 80 characters.",
        "response": "stilts tcopy in=input.fits ofmt='text(maxCell=80)' out=narrow_text.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the MAST GOODS HLSP for photometry and locally rename the F606W magnitude column to 'V_MAG'.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/goods/ adql='SELECT TOP 10 ra, dec, f606w_mag FROM goods.photometry' ocmd='colmeta -name V_MAG f606w_mag' out=goods_vmag_rename.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q95_3KPC' containing the 95th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q95_3KPC_2 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.95)\"' out=q95_dist_3kpc_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.95)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q95_3KPC_2 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.95)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.95)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need to convert a VOTable to a Parquet file with Snappy compression.",
        "response": "stilts tcopy in=data.vot ofmt='parquet(compression=snappy)' out=data.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Copy a FITS file and force the output to FITS, ensuring **no Primary HDU** is written.",
        "response": "stilts tcopy in=extension_only.fits ofmt='fits(primary=none)' out=no_phdu.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I have an ASCII table with a header I need to skip. How to use `mocshape`?",
        "response": "You can use the `tail` filter. If your header is 5 lines long, use `icmd='tail ($nrow - 5)'`. For example: `stilts mocshape in=data.txt ifmt=ascii icmd='tail ($nrow-5)' shape=point coords='array($1,$2)' out=footprint.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query Chandra Source Catalog Release 2.1 and limit the row count of the result to 1000.",
        "response": "stilts tapquery tapurl=https://cda.cfa.harvard.edu/csc21tap adql='SELECT * FROM csc.master_source' maxrec=1000 out=csc21_limit.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Calculate the average 'FLUX_U' and 'FLUX_G' across the entire catalog and output the statistics.",
        "response": "stilts tpipe in=survey.fits cmd='keepcols \"FLUX_U FLUX_G\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_G'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols FLUX_U FLUX_G\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'FLUX_G'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Perform an asynchronous query on the Gaia archive for sources with parallax greater than 50 mas. Save the result to `nearby_stars.csv`.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, ra, dec, parallax FROM gaiadr3.gaia_source WHERE parallax > 50' sync=false out=nearby_stars.csv ofmt=csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can `pixfoot` read a gzipped FITS file?",
        "response": "Yes, `pixfoot` can read compressed files, including gzipped FITS files, transparently. For example: `stilts pixfoot in=my_data.fits.gz out=my_data_footprint.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match T1, T2, T3 using 3D Euclidean distance (3d, 50 unit tolerance). T1 columns X, Y, Z are in an array 'POS_XYZ'. Explode it first.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=3d params=50 in1=T1.fits icmd1='explodecols POS_XYZ' in2=T2.fits in3=T3.fits values1='POS_XYZ_0 POS_XYZ_1 POS_XYZ_2' values2='X Y Z' values3='X Y Z' out=exploded_3d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 153.7941 and latitude 50.0232. Please use a search radius of 1.5501 degrees. Save the results to a csv file called query_results_12.csv.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=153.7941 lat=50.0232 radius=1.5501 omode=out ofmt=csv out=query_results_12.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query MAST ObsCore using the capability interface version and set the maximum job destruction time to 1 hour (3600 seconds).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT TOP 100 * FROM ivoa.ObsCore' interface=cap executionduration=3600 out=mast_short_job.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge catalogs, adding a column 'Z_HELIO' calculated using the K-correction formula: `Z_HELIO = Z + Z_OFFSET` (where Z_OFFSET is a table parameter).",
        "response": "stilts tcatn nin=2 in1=C1.fits in2=C2.fits ocmd='addcol Z_HELIO \"Z + param$Z_OFFSET\"' out=offset_redshift.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'param$Z_OFFSET'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol Z_HELIO Z + param$Z_OFFSET\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'param$Z_OFFSET'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "I need to convert a table to VOTable 1.4 with BINARY2 encoding.",
        "response": "stilts tcopy in=data.fits ofmt='votable(version=V14,format=BINARY2)' out=data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve 10 entries from the MAST STScI 3D-HST HLSP and output the results in ECSV format, forcing the delimiter to space.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/3dhst/ adql='SELECT TOP 10 * FROM 3dhst.photometry' ofmt='ecsv(delimiter=space)' out=3dhst_space_delim.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the MAST CAOM service for observations within 0.002 radians of RA 20, Dec 30.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=20.0 lat=30.0 radius='radiansToDegrees(0.002)' out=caom_rad_search.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"radiansToDegrees(0.002)\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find 20 Gaia sources whose source_id starts with '4' using ADQL LIKE syntax and output to the terminal.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 20 source_id, ra, dec FROM gaiadr3.gaia_source WHERE source_id LIKE ''4%''' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can `mocshape` handle STC-S UNIONs?",
        "response": "Yes, the documentation indicates that `mocshape` with `shape=stc-s` can handle UNIONs of all shape types.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a table containing 100 rows, starting at 10 and ending at 109, using the 'rowrange' filter.",
        "response": "stilts tpipe in=any.fits cmd='rowrange 10 109' out=chunk.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read the second extension (#2) from the multi-extension FITS file 'archive.fits' and save it as a new VOTable.",
        "response": "stilts tcopy in=archive.fits#2 out=extension_2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Retrieve coordinates and G-band magnitude for the top 50 brightest stars in the ARI Gaia DR3 catalog.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 50 ra, dec, phot_g_mean_mag FROM gaiadr3.gaia_source ORDER BY phot_g_mean_mag ASC' out=ari_bright_stars.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a remote CDF file and save it locally as a VOTable, explicitly identifying the input format.",
        "response": "stilts tcopy in=http://remote/ts_data.cdf ifmt=cdf out=ts_data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Perform a cone search and output the file as a single VOTable extension with BINARY serialization.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=150.0 lat=10.0 radius=0.01 ofmt='votable(format=BINARY)' out=binary_output.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Select only rows where the expression 'log10(FLUX) > 1.5' is true.",
        "response": "stilts tpipe in=deep_field.fits cmd='select \"log10(FLUX) > 1.5\"' out=high_log_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select log10(FLUX) > 1.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine data_A.fits and data_B.fits. Data_A has an extra column 'NOTES' I want to rename to 'COMMENT' to align with data_B.",
        "response": "stilts tcatn nin=2 in1=data_A.fits icmd1='colmeta -name COMMENT NOTES' in2=data_B.fits out=comment_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find all table schemas in the PADC TAP Astro server and save the output in LaTeX format.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.schemas' ofmt=latex out=padc_astro_schemas.tex",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match `cat.fits` against itself to find close pairs. Use a 5 arcsec radius.",
        "response": "stilts tmatch2 in1=cat.fits in2=cat.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' find=all ocmd='select \"ID_1 < ID_2\"' out=internal_pairs.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' 'ID_2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID_1 < ID_2\n\nUsage: select <expr>\n    (Unused arguments: '<' 'ID_2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the MAST GOODS HLSP service, then locally restrict the output to the first 5 rows and output the result in plain text format to standard output.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/goods/ adql='SELECT * FROM goods.photometry' ocmd='head 5' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a MOC representing a 1-degree radius around every source in `radio_sources.fits`.",
        "response": "stilts pixfoot in=radio_sources.fits radius=1.0 out=radio_source_areas.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Join `first_epoch.fits` and `second_epoch.fits` on sky position. The column names are identical, so please add `_E1` and `_E2` suffixes to the columns from each table to avoid confusion.",
        "response": "stilts tmatch2 in1=first_epoch.fits in2=second_epoch.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=all suffix1=_E1 suffix2=_E2 out=epoch_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch three tables on sky position and a 2D Cartesian value (sky+2d) using 2 arcsec, and 10 units and 5 units tolerances.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky+2d_anisotropic params='2 10 5' values1='RA DEC X Y' values2='RA DEC X Y' values3='RA DEC X Y' in1=d1.fits in2=d2.fits in3=d3.fits out=sky_2d_anisotropic.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a histogram with step-like bars instead of filled rectangles.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE barform=steps",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Run an SSA query on the ESO TAP_OBS service near RA 30, Dec 30, requiring a search radius of 50 arcseconds, and compress the output VOTable.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=30.0 lat=30.0 radius='50.0 / 3600.0' servicetype=ssa compress=true out=ssa_50as_comp.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"50.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate four FITS files (P1-P4.fits). In P3, convert coordinates RA_RAD and DEC_RAD from radians to degrees.",
        "response": "stilts tcatn nin=4 in1=P1.fits in2=P2.fits in3=P3.fits icmd3='addcol RA_DEG radiansToDegrees(RA_RAD); addcol DEC_DEG radiansToDegrees(DEC_RAD)' in4=P4.fits out=rad_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch T1 (ref) against T2, T3. T1 contains Galactic coordinates (GLON, GLAT). Convert T1 to ICRS before matching T2 and T3.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits icmd1='addskycoords galactic icrs GLON GLAT RA DEC' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=T1_gal_to_icrs_ref.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 224.8967 and latitude 62.6283. Please use a search radius of 1.1549 degrees. Instead of a file, just give me the checksum. The coordinates are in the galactic system. Use verbosity level 1.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=224.8967 lat=62.6283 radius=1.1549 skysys=galactic verb=1 omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query KOA, joining two hypothetical tables, `dmp.dataproducts` and `obs.obscore`, filtered by K-band observation.",
        "response": "stilts tapquery tapurl=https://koa.ipac.caltech.edu/TAP adql='SELECT d.*, o.* FROM dmp.dataproducts d JOIN obs.obscore o ON d.obs_id = o.obs_id WHERE d.em_band = ''K''' out=koa_kband.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate two tables, then calculate the square root of the 'AREA' column in the final table.",
        "response": "stilts tcat in='s1.fits s2.fits' ocmd='addcol SQRT_AREA sqrt(AREA)' out=with_sqrt_area.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T3 is an IPAC table. T2 has an extra column 'NOTES' to discard.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits icmd2='delcols NOTES' in3=T3.tbl ifmt3=ipac values1='RA DEC' values2='RA DEC' values3='RA DEC' out=ipac_notes_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Take `region1.fits` and `region2.fits`. Concatenate them and then keep only the first 50 rows of the result.",
        "response": "stilts tcat in=region1.fits in=region2.fits ocmd='head 50' out=top50_regions.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Count the total number of records in the ObsCore table of the ARI Gaia service.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT COUNT(*) FROM gaiadr3.gaia_source' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot X vs Y, showing only points where both X_ERR and Y_ERR are greater than 0.1.",
        "response": "stilts plot2plane in=data.fits icmd='select \"X_ERR>0.1 && Y_ERR>0.1\"' layer=mark x=X y=Y out=large_error_points.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"X_ERR>0.1 && Y_ERR>0.1\" (The name \"X_ERR\" is unknown.)\n        (The name \"X_ERR\" is unknown.))\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 20 2MASS entries from VizieR, keeping only the ID and Jmag columns after retrieval.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT TOP 20 ID, Jmag FROM \"II/246/out\"' ocmd='keepcols \"ID Jmag\"' out=2mass_minimal.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create an order 17 MOC for the top 500 rows of very high-quality sources.",
        "response": "stilts pixfoot in=hq_cat.fits icmd='head 500' ra=RA dec=DEC order=17 out=top_500_o17.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate two tables, forcing the output to be readable by humans using the text output format.",
        "response": "stilts tcatn nin=2 in1=data_a.fits in2=data_b.fits ofmt=text out=combined_human.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate tables and then calculate the standard deviation of the column 'TEFF' for the combined data.",
        "response": "stilts tcat in='s1.fits s2.fits' ocmd='keepcols TEFF' omode=stats ocmd='keepcols ucd$stat.stdev'",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate an MOC for the coverage of 30 arcminute diameter circles around sources in photometry.fits (radius is 15 arcminutes).",
        "response": "stilts pixfoot in=photometry.fits ra=RA dec=DEC radius='15.0 / 60.0' out=wide_footprint.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine a table containing metadata parameters (params.fits) with a table containing observations (obs.fits).",
        "response": "stilts tcatn nin=2 in1=params.fits in2=obs.fits out=meta_obs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find objects around RA 20.0, Dec -40.0, using a radius corresponding to 500 micro-arcseconds ($\\mu$as).",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=20.0 lat=-40.0 radius='500.0 / 3600000000.0' out=gaia_500uas.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"500.0 / 3600000000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XYZ_ABS' containing the magnitude of the 3D absolute error vector.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XYZ_ABS \"hypot(abs(ERROR_X), abs(ERROR_Y), abs(ERROR_Z))\"' out=xyz_abs_error_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'abs(ERROR_Y),' 'abs(ERROR_Z))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XYZ_ABS hypot(abs(ERROR_X), abs(ERROR_Y), abs(ERROR_Z))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'abs(ERROR_Y),' 'abs(ERROR_Z))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the European JWST Archive to retrieve the observation ID and release date for 20 entries, requesting authentication.",
        "response": "stilts tapquery tapurl=https://jwst.esac.esa.int/server/tap adql='SELECT TOP 20 obs_id, release_date FROM ivoa.ObsCore' auth=true out=jwst_auth_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Calculate the mean of the array column 'ERROR_ARR' and assert that the mean is always less than 0.1.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol MEAN_ERR \"mean(ERROR_ARR)\"' cmd='assert \"MEAN_ERR < 0.1\"' out=mean_err_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MEAN_ERR < 0.1\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Count the number of rows in the MAST CANDELS HLSP photometry table where the best redshift estimate (Z_BEST) is greater than 3.0.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT COUNT(*) FROM candels.photometry WHERE z_best > 3.0' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "My table has two radius columns, `R_MAJ` and `R_MIN`, and a position angle `PA`. How can I make a MOC?",
        "response": "You can use the STC-S shape type. First, create the STC-S string: `icmd='addcol stc_s \"Ellipse ICRS \"+RA+\" \"+DEC+\" \"+R_MAJ+\" \"+R_MIN+\" \"+PA'` then use that column: `stilts mocshape in=... shape=stc-s coords=stc_s ...`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T3 contains coordinate RA_H/DEC_D in sexagesimal format. Convert T3 to degrees before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=5 in1=T_REF.fits in2=T2.fits in3=T3.fits icmd3='addcol RA_DEG hmsToDegrees(RA_H); addcol DEC_DEG dmsToDegrees(DEC_D)' values1='RA_DEG DEC_DEG' values2='RA_DEG DEC_DEG' values3='RA_DEG DEC_DEG' out=sexagesimal_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a FITS file, calculate the absolute K magnitude (K_abs), then output the first 100 rows to an ECSV file.",
        "response": "stilts tpipe in=catalog.fits cmd='addcol K_ABS \"K_MAG + 5 * log10(PARALLAX) + 5\"' cmd='head \"100\"' ofmt=ecsv out=abs_k_mag.ecsv",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '5' '*' 'log10(PARALLAX)' '+' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol K_ABS K_MAG + 5 * log10(PARALLAX) + 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '5' '*' 'log10(PARALLAX)' '+' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a grid where the color indicates the number of points per square arcsecond.",
        "response": "This is a feature of `tskymap` or the `skydensity` layer in `plot2sky`, not `plot2plane` which works in Cartesian coordinates.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Find objects in targets.fits that have a counterpart in survey.fits (sky 4 arcsec). Include all target rows (left outer join).",
        "response": "stilts tmatch2 in1=targets.fits in2=survey.fits matcher=sky params=4 values1='RA DEC' values2='RA DEC' join=all1 out=targets_left_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I have `data.fits`. I want to filter it for `FLUX > 100`, add a new column `MAG` as `-2.5*log10(FLUX)`, and then send the result to TOPCAT.",
        "response": "stilts tpipe in=data.fits cmd='select \"FLUX > 100\"' cmd='addcol MAG \"-2.5*log10(FLUX)\"' omode=topcat",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the best match (best1) for T1 from T2. T2 coordinates are in degrees, but units are not specified in the VOTable input; assert units are degrees.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.vot icmd2='colmeta -units deg RA; colmeta -units deg DEC' matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=best1 out=forced_unit_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot markers, setting the default font style to monospaced for coordinate labels.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC fontstyle=mono out=mono_labels_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Ensure that the total row count matches the number stored in the table parameter 'N_TOTAL_EXPECTED'.",
        "response": "stilts tpipe in=data.fits cmd='assert \"$nrow == param$N_TOTAL_EXPECTED\"' out=count_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'param$N_TOTAL_EXPECTED'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $nrow == param$N_TOTAL_EXPECTED\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'param$N_TOTAL_EXPECTED'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the ESO TAP_CAT service for table descriptions and output the result in plain text format.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT table_name, description FROM TAP_SCHEMA.tables' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Check if a given angular separation column 'SEP' is strictly less than 1.0 arcsecond (1/3600 degrees) and assert it.",
        "response": "stilts tpipe in=data.fits cmd='assert \"SEP < 1.0/3600.0\"' out=sub_arcsec_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1.0/3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert SEP < 1.0/3600.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1.0/3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match T_A and T_B. A is provided via standard input (VOTable), B is a local Parquet file. Match on position (1 arcsec).",
        "response": "cat A.vot | stilts tmatch2 in1=- ifmt1=votable in2=B.parquet ifmt2=parquet matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=piped_parquet_match.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge tables, and then keep only rows where the expression 'abs(MAG_G - MAG_R)' is less than 0.1.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='select \"abs(MAG_G - MAG_R) < 0.1\"' out=narrow_color_band_b.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_R)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(MAG_G - MAG_R) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG_R)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Query SIMBAD and instruct the system to only output the calculated checksum of the result.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT TOP 10 * FROM basic' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a remote FITS file from an FTP URL and save it locally.",
        "response": "stilts tcopy in=ftp://archive.org/public/data.fits out=local_ftp.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create an MOC (order 17) for objects where the magnitude is non-null, using a 10 arcsecond radius.",
        "response": "stilts pixfoot in=mag_data.fits icmd='select !NULL_MAG' ra=RA dec=DEC radius='10.0 / 3600.0' order=17 out=non_null_mag_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Add a column 'DEC_ICRS_DEG_2' converting FK4 RA/DEC (B1950) to ICRS DEC (J2000) using the old function.",
        "response": "stilts tpipe in=data.fits cmd='addcol DEC_ICRS_DEG_2 \"decFK4toFK5degrees(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_dec_2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_ICRS_DEG_2 decFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter my table to keep only rows with `GOOD_QUALITY=true`, then generate the footprint.",
        "response": "stilts pixfoot in=quality.fits icmd='select GOOD_QUALITY' out=good_quality_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Merge a simulated table of 500 stars (:skysim:500) with a local CSV file, dropping any rows in the CSV where 'ErrorFlag' is true.",
        "response": "stilts tcatn nin=2 in1=:skysim:500 in2=local.csv ifmt2=csv icmd2='select !ErrorFlag' out=sim_local_filtered.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find the statistical summary of the `W1mag` column for WISE sources (I/337/wise) using the VizieR CDSARC endpoint.",
        "response": "stilts tapquery tapurl=http://cdsarc.cds.unistra.fr/saadavizier.tap/tap adql='SELECT W1mag FROM \"I/337/wise\"' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch T1 and T2. T1 is remote URL. T2 needs conversion of string column 'RA_STR' to degrees before matching.",
        "response": "stilts tmatch2 in1=http://archive.com/T1.fits in2=T2.fits icmd2='replacecol RA hmsToDegrees(RA_STR)' matcher=sky params=2 values1='RA DEC' values2='RA DEC' out=remote_string_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add columns corresponding to the X, Y, Z Cartesian components of the object position (XYZ) in Galactic coordinates.",
        "response": "stilts tpipe in=data.fits cmd='addcol XYZ_VEC \"icrsToGal(astromXYZ(RA, DEC, PARALLAX))\"' out=galactic_xyz.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol XYZ_VEC icrsToGal(astromXYZ(RA, DEC, PARALLAX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate observations obs_1.fits and obs_2.fits. In obs_1.fits, select only rows where 'QUALITY' is greater than 5. In obs_2.fits, keep only columns ID, RA, DEC, and FLUX.",
        "response": "stilts tcatn nin=2 in1=obs_1.fits icmd1='select \"QUALITY > 5\"' in2=obs_2.fits icmd2='keepcols \"ID RA DEC FLUX\"' out=hetero_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select QUALITY > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "What's the command to get a JSON MOC from a simulation of exactly 1 star?",
        "response": "stilts mocshape in=:skysim:1 shape=point coords='array(ra,dec)' mocfmt=json out=single_star.moc.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot markers sized by the 'RADIUS' column, but disable automatic size scaling, treating RADIUS as pixels directly.",
        "response": "stilts plot2plane in=sources.fits layer=size x=RA y=DEC size=RADIUS autoscale=false out=pixel_size_radius.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Concatenate a table containing positions (ra, dec) with a table containing fluxes (flux, flux_err). The output should only include rows where fluxes are measured (flux > 0).",
        "response": "stilts tcatn nin=2 in1=pos.fits in2=flux.fits icmd2='select \"FLUX > 0\"' out=clean_data.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 290.1434 and latitude 48.8223. Please use a search radius of 0.3204 degrees. Save the results to a votable file called query_results_45.votable.",
        "response": "stilts cone servicetype=sia2 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=290.1434 lat=48.8223 radius=0.3204 omode=out ofmt=votable out=query_results_45.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate FITS tables, dropping rows where both 'FLUX_U' and 'FLUX_G' are null in the respective input files.",
        "response": "stilts tcatn nin=2 in1=F1.fits icmd1='select !NULL_FLUX_U' in2=F2.fits icmd2='select !NULL_FLUX_G' out=no_null_fluxes.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Upload a local table of source coordinates to ESA Gaia, apply a local filter to keep only sources where ID > 1000 before upload, and crossmatch them on RA/DEC.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT g.source_id FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.mylist AS u ON 1=CONTAINS(POINT(''ICRS'', g.ra, g.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.0001))' nupload=1 upload1=local_targets.fits upname1=mylist ucmd1='select \"ID > 1000\"' out=gaia_xmatch_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID > 1000\n\nUsage: select <expr>\n    (Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a table using the JDBC scheme to pull data from a MySQL database and convert it to CSV.",
        "response": "stilts tcopy in=':jdbc:mysql://host/db#SELECT ID, RA FROM objects' out=query_dump.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'RA_HMS_2' converting RA in degrees to HMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_2 \"degreesToHms(RA, 2)\"' out=hms_ra_2s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_2 degreesToHms(RA, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot markers where the size is 5 pixels and transparency is set by the expression '1 / (1 + DENSITY)'.",
        "response": "stilts plot2sky in=crowded.fits layer=mark lon=RA lat=DEC size=5 shading=transparent opaque=50 out=high_opaque_mark.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Crossmatch T1 and T2 using position (1 arcsec) AND proper motion (5 mas/yr) combined using the constraint multiplication (sky*2d).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky*2d params='1 5' values1='RA DEC PMRA PMDEC' values2='RA DEC PMRA PMDEC' out=multiplied_pos_pm.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate the first table of `multi1.fits` with the second table of `multi2.fits`.",
        "response": "stilts tcatn nin=2 in1=multi1.fits in2=multi2.fits#2 out=selected_hdus.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can you make a plot with a custom dash pattern for a line, like '10 on, 5 off'?",
        "response": "stilts plot2plane in=data.fits layer=line x=X y=Y dash='10,5'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Upload a local table containing ID and magnitude (`mag`) columns to VizieR, and join it to the 2MASS catalogue (`II/246/out`) to find remote sources with R-band magnitude greater than the local table's magnitude, within 1 arcsecond.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT * FROM \"II/246/out\" AS t JOIN TAP_UPLOAD.local_mags AS u ON 1=CONTAINS(POINT(''ICRS'', t.ra, t.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.0002777)) WHERE t.Rmag > u.mag' nupload=1 upload1=local_data.fits upname1=local_mags out=vizier_mag_xmatch.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at http://archive.eso.org/ssap? I'm looking for objects around longitude 298.4644 and latitude -37.0491. Please use a search radius of 0.3873 degrees. Save the results to a csv file called query_results_156.csv.",
        "response": "stilts cone servicetype=ssa serviceurl=http://archive.eso.org/ssap lon=298.4644 lat=-37.0491 radius=0.3873 omode=out ofmt=csv out=query_results_156.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the ESO TAP_OBS for VIRCAM raw data, ordering by observation date in descending order, and retrieve the top 20 rows.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 20 * FROM raw.vircam ORDER BY t_min DESC' out=vircam_latest.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine tables, and add a column 'GAL_POS' which is a 2-element array containing the Galactic coordinates $[\text{L}, \text{B}]$ derived from input $\text{RA}$ and $\text{DEC}$ (ICRS).",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='addcol GAL_POS \"array(icrsToGal(astromXYZ(RA,DEC,1)), icrsToGal(astromXYZ(RA,DEC,1))[3])\"' out=gal_pos_array.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'icrsToGal(astromXYZ(RA,DEC,1))[3])'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol GAL_POS array(icrsToGal(astromXYZ(RA,DEC,1)), icrsToGal(astromXYZ(RA,DEC,1))[3])\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'icrsToGal(astromXYZ(RA,DEC,1))[3])'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine a table and a binary Parquet file, maintaining data types.",
        "response": "stilts tcatn nin=2 in1=data.fits in2=data.parquet out=combined_parquet.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Create a circle MOC where the radius is a maximum of 0.0001 degrees, ensuring the output uses VOTable FITS serialization (CDS FITS).",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 0.0001)' mocfmt=cds_fits out=votable_fits_moc.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I want to get a count of unique `OBSERVER` names in `log.csv`.",
        "response": "stilts tpipe ifmt=csv in=log.csv cmd='keepcols OBSERVER' cmd='sort OBSERVER' cmd=uniq omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate 50 rows using the loop scheme, add a column `LOG_INDEX` using `log10(i+1)`, and save the result in Feather format.",
        "response": "stilts tpipe in=:loop:50 cmd='addcol LOG_INDEX \"log10(i + 1)\"' ofmt=feather out=indexed_log.feather",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_INDEX log10(i + 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot points where the Y-coordinate is calculated as the base-10 logarithm of FLUX, and save as an SVG file.",
        "response": "stilts plot2plane in=data.fits layer=mark x=RA y='log10(FLUX)' out=log_flux.svg",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a MOC where the radius is determined by $\text{PLX_ERR} / \text{PLX}$ in degrees, assuming parallax is in arcseconds.",
        "response": "stilts pixfoot in=plx_err_dist.fits ra=RA dec=DEC radius='PLX_ERR / PLX' out=plx_dist_err_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the PADC TAP Server on voparis-tap-astro-m.obspm.fr for 10 rows and output the result in IPAC format.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT TOP 10 * FROM TAP_SCHEMA.tables' ofmt=ipac out=padc_astro_sample.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a table, calculate the 1st and 3rd quartiles (Q1, Q3) of 'MAG' for the whole dataset, and output the result using `omode=stats`.",
        "response": "stilts tpipe in=phot.fits cmd='keepcols MAG' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot the analytic function $y = x^2$ (layer 1, red) and $y = 5x$ (layer 2, blue) on the same plot, X range [-1, 6].",
        "response": "stilts plot2plane xmin=-1 xmax=6 layer_1=function fexpr_1='x*x' color_1=red layer_2=function fexpr_2='5*x' color_2=blue out=dual_function.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve 100 rows from the Subaru SAGA database, then filter the resulting table locally to keep only the stars with super-solar iron abundance ([Fe/H] > 0.0).",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 100 * FROM saga.stellar_abundances' ocmd='select \"FE_H > 0.0\"' out=saga_high_feh.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FE_H > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge CDF data and FITS data. In the CDF input, select the HEALPix pixel index column and convert it from HEALPix Ring scheme (level 5) to Nested scheme.",
        "response": "stilts tcatn nin=2 in1=cdf.cdf ifmt1=cdf icmd1='addcol HPX_NEST \"healpixRingToNest(5, PIXEL_INDEX)\"' in2=fits.fits out=hpx_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PIXEL_INDEX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HPX_NEST healpixRingToNest(5, PIXEL_INDEX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PIXEL_INDEX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the GAVO SDSS DR16 QSO catalog for objects with redshift (`z`) > 3.0, and locally filter the resulting table to retain only columns `ra`, `dec`, and `z`.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM sdss.dr16qso WHERE z > 3.0' ocmd='keepcols \"ra dec z\"' out=gavo_highz_filtered.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a Parquet file to a FITS file, ensuring the output respects the FITS standard column limit (using basic FITS).",
        "response": "stilts tcopy in=input.parquet ofmt=fits-basic out=basic_fits.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query a HAPI server for GRACE-A magnetic field data between specific timestamps, requesting Latitude and Longitude.",
        "response": "stilts tapquery in=:hapi:https://vires.services/hapi;GRACE_A_MAG;start=2009-01-01T00:00:00;stop=2009-01-01T01:00:00;parameters=Latitude,Longitude out=grace_mag.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a parameter 'DATA_SOURCE' with a text description and another 'PIXEL_COUNT' with a numeric value 12288.",
        "response": "stilts tpipe in=data.fits cmd='setparam DATA_SOURCE \"Gaia DR3 subset\"' cmd='setparam -type long PIXEL_COUNT 12288L' out=multi_params.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine `catA.fits` and `catB.fits`. `catB.fits` has FK4 coordinates that need to be converted to FK5.",
        "response": "stilts tcatn nin=2 in1=catA.fits in2=catB.fits icmd2='addskycoords fk4 fk5 RA_B1950 DEC_B1950 RA_J2000 DEC_J2000' ocmd='keepcols \"RA_J2000 DEC_J2000 MAG\"' out=fk5_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "How do I add a title and axis labels to my plot?",
        "response": "stilts plot2plane in=data.fits layer=mark x=LOG_TEMP y=LOG_LUM title='Hertzsprung-Russell Diagram' xlabel='Log(Temperature)' ylabel='Log(Luminosity)'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"LOG_TEMP\"\n    (The name \"LOG_TEMP\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Read a PDS4 planetary data XML file and output its content as FITS.",
        "response": "stilts tcopy in=cassini_data.xml ifmt=pds4 out=cassini.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the Gaia archive for the top 10 stars with the largest proper motion in declination.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 10 source_id, pmdec FROM gaiadr3.gaia_source ORDER BY ABS(pmdec) DESC'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot UNIQ HEALPix indices, specifying the output plot dimensions as 1200x600 pixels.",
        "response": "stilts plot2sky in=hpx_cells.fits layer=area area=UNIQ_ID areatype=UNIQ xpix=1200 ypix=600 out=large_uniq_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"UNIQ_ID\"\n    (The name \"UNIQ_ID\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate an MOC for circles centered at Galactic L=300, B=-5, with a fixed radius of 0.0001 radians.",
        "response": "stilts mocshape in=gal_sources.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' shape=circle coords='array(RA, DEC, radiansToDegrees(0.0001))' out=gal_rad_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 298.0662 and latitude -13.7342. Please use a search radius of 1.0564 degrees. Save the results to a ascii file called query_results_11.ascii. After the query, please run this processing command: 'sorthead 20 MAG'.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=298.0662 lat=-13.7342 radius=1.0564 omode=out ofmt=ascii out=query_results_11.ascii ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Check if a given angular separation column 'SEP' is strictly positive and assert this for the whole table.",
        "response": "stilts tpipe in=data.fits cmd='assert \"SEP > 0.0\"' out=positive_sep_check.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert SEP > 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows where 'MAG_G' is between 18.0 and 20.0, and calculate the checksum of the resulting table.",
        "response": "stilts tpipe in=survey.fits cmd='select \"MAG_G BETWEEN 18.0 AND 20.0\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'BETWEEN' '18.0' 'AND' '20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_G BETWEEN 18.0 AND 20.0\n\nUsage: select <expr>\n    (Unused arguments: 'BETWEEN' '18.0' 'AND' '20.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_RATIO_SQ' calculated as the squared ratio of 'ERR_A' to 'ERR_B'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_RATIO_SQ \"square(ERR_A / ERR_B)\"' out=error_ratio_sq.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'ERR_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_RATIO_SQ square(ERR_A / ERR_B)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'ERR_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need the MOC for sources around Galactic L=30, B=10, with a radius defined by $\frac{1800 \text{ arcsec}}{3600 \text{ arcsec}/\text{deg}}$ (0.5 deg).",
        "response": "stilts pixfoot in=gal_data3.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC radius='1800.0 / 3600.0' out=gal_1800as.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at http://archive.eso.org/ssap? I'm looking for objects around longitude 327.1597 and latitude 27.3456. Please use a search radius of 1.2582 degrees. Save the results to a ascii file called query_results_92.ascii. The coordinates are in the icrs system.",
        "response": "stilts cone servicetype=ssa serviceurl=http://archive.eso.org/ssap lon=327.1597 lat=27.3456 radius=1.2582 skysys=icrs omode=out ofmt=ascii out=query_results_92.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find rows in cat2.fits that are NOT matched in cat1.fits (join=2not1). Use a Cartesian 2D match (5 units).",
        "response": "stilts tmatch2 in1=cat1.fits in2=cat2.fits matcher=2d params=5 values1='X Y' values2='X Y' join=2not1 out=cat2_anti_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "My radius is `R_PIX` pixels, and my plate scale is `SCALE_AS` arcsec/pixel. How do I make the MOC?",
        "response": "stilts mocshape in=plate_data.fits shape=circle coords='array(RA,DEC, R_PIX * SCALE_AS / 3600.0)' out=plate_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match A.fits and B.fits using position AND proper motion (sky*2d). T_B proper motion is in km/s (VX, VY). Convert T_B velocity to mas/yr given parallax PLX.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits icmd2='addcol PMRA \"rvKmsToMasyr(VX, PLX)\"; addcol PMDEC \"rvKmsToMasyr(VY, PLX)\"' matcher=sky*2d params='1 5' values1='RA DEC PMRA PMDEC' values2='RA DEC PMRA PMDEC' out=kms_to_masyr_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PLX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PMRA rvKmsToMasyr(VX, PLX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PLX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match two tables on MJD time within 0.00001 days. Use sequential processing.",
        "response": "stilts tmatch2 in1=TS1.fits in2=TS2.fits matcher=1d params=0.00001 values1=MJD values2=MJD runner=sequential out=sequential_time_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot marks colored by density, using the Asinh function for scaling the color map.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=asinh out=asinh_density_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Perform a search around Ecliptic Lon=15, Lat=-15, with a radius of 10 arcseconds, converting the coordinate system and the radius.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=15.0 lat=-15.0 radius='10.0 / 3600.0' skysys=ecliptic out=ecliptic_10arcsec.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read a VOTable, outputting it as a VOTable but ensuring **TABLEDATA** serialization (easier to debug/read).",
        "response": "stilts tcopy in=input.vot ofmt='votable(format=TABLEDATA)' out=td_copy.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Overlay a gaussian fit on a histogram of my data.",
        "response": "stilts plot2plane in=data.fits layer_h=histogram x_h=VALUE layer_g=gaussian x_g=VALUE color_g=blue thick_g=2",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Add a column 'PM_VEL_ICRS_Z' containing the Z component of the ICRS velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_ICRS_Z \"astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\"' out=icrs_z_vel.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_ICRS_Z astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve MAST SkyMapper DR4 source positions and output the result in ECSV format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/skymapperdr4/ adql='SELECT TOP 10 ra, dec, g_mag FROM smssdr4.master' ofmt=ecsv out=smss_sample.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter the catalogue to keep rows corresponding to the last 10 minutes of observation, given a 'TIME_MJD' column and a constant parameter 'OBS_END_MJD'.",
        "response": "stilts tpipe in=logs.fits cmd='select \"TIME_MJD > param$OBS_END_MJD - 10.0/1440.0\"' out=last_10_min.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' 'param$OBS_END_MJD' '-' '10.0/1440.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TIME_MJD > param$OBS_END_MJD - 10.0/1440.0\n\nUsage: select <expr>\n    (Unused arguments: '>' 'param$OBS_END_MJD' '-' '10.0/1440.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (group mode). T2 is remote FITS URL. Execute in parallel mode.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=http://remote.org/T2.fits in3=T3.fits runner=parallel out=remote_parallel_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "My table has circle centers, but all circles have a radius of 0.1 deg. How can I specify that?",
        "response": "stilts mocshape in=centers.fits shape=circle coords='array(RA,DEC,0.1)' out=fixed_radius_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the VizieR query engine for the top 5 rows of the 2MASS catalogue (II/246/out) and output the resulting column metadata only.",
        "response": "stilts tapquery tapurl=http://cdsarc.cds.unistra.fr/saadavizier.tap/tap adql='SELECT TOP 5 * FROM \"II/246/out\"' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Group match three tables on 2D position, keeping all columns but renaming duplicates with numeric suffixes.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=2d params=5 values1='X Y' values2='X Y' values3='X Y' in1=d1.fits in2=d2.fits in3=d3.fits fixcols=dups out=numeric_suffixed_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine the footprints of `survey_a.fits` (points) and `survey_b.fits` (STC-S polygons).",
        "response": "stilts tcatn nin=2 in1=survey_a.fits icmd1='addcol region array(RA,DEC)' in2=survey_b.fits icmd2='addcol region s_region' out=combined_c.fits & stilts mocshape in=combined_c.fits shape=stc-s coords=region out=combined_surveys.moc.fits",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: mocshape: not found\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Submit an asynchronous job to the Integral Science Archive TAP service and ensure that the job is deleted upon completion.",
        "response": "stilts tapquery tapurl=https://isla.esac.esa.int/tap/tap adql='SELECT TOP 100 * FROM isv.scw' delete=finished out=integral_delete_finished.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers sized by SIZE_PX (in pixels, fixed size 5) using the size layer, ensuring autoscale is false.",
        "response": "stilts plot2sky in=data.fits layer=size lon=RA lat=DEC size=SIZE_PX autoscale=false scale=5 out=fixed_pixel_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I need image access (SIA) data around Galactic coordinates L=180, B=-1, with a 5 arcminute radius. Convert the radius correctly.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=180.0 lat=-1.0 radius='5.0 / 60.0' skysys=galactic servicetype=sia out=galactic_sia_5arcmin.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate two FITS files, but before joining, rename the column 'PM_RA' to 'PMRA' in both input files.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='colmeta -name PMRA PM_RA' out=pmra_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a MOC for circles whose radius is `abs(MAGNITUDE)/100` degrees.",
        "response": "stilts mocshape in=magnitudes.fits shape=circle coords='array(RA,DEC,abs(MAGNITUDE)/100.0)' out=mag_scaled_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter the input table to only retain objects with positive Declination and zero Right Ascension.",
        "response": "stilts pixfoot in=quadrant.fits icmd='select \"DEC > 0.0 && RA == 0.0\"' ra=RA dec=DEC out=zero_ra_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0' '&&' 'RA' '==' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 0.0 && RA == 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0' '&&' 'RA' '==' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Count the number of ObsCore entries in the European JWST Archive and ensure the query is run asynchronously.",
        "response": "stilts tapquery tapurl=https://jwst.esac.esa.int/server/tap adql='SELECT COUNT(*) FROM ivoa.ObsCore' sync=false omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to match `data.fits` with `template.fits`. For `data.fits`, I need to apply a zero-point correction `MAG_CORR = MAG_RAW + 0.05` before matching on magnitude within a tolerance of 0.1.",
        "response": "stilts tmatch2 in1=data.fits in2=template.fits icmd1='addcol MAG_CORR \"MAG_RAW + 0.05\"' matcher=1d params=0.1 values1=MAG_CORR values2=MAG_TEMPLATE out=zp_corrected_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_CORR MAG_RAW + 0.05\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '0.05'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Retrieve 10 TESS Input Catalog (TIC) sources with magnitude below 10, using the TAP service at MAST, and output in IPAC format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 10 tid, tmag FROM tic.v8 WHERE tmag < 10' ofmt=ipac out=tic_bright.ipac",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "The radius of each source is its `PSF_WIDTH` in arcseconds divided by 2. Generate the footprint.",
        "response": "stilts pixfoot in=psf_data.fits radius='PSF_WIDTH/2.0/3600.0' out=psf_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC for sources with a `CONFIDENCE_LEVEL` of 95% or higher.",
        "response": "stilts mocshape in=confident_detections.fits icmd='select \"CONFIDENCE_LEVEL >= 0.95\"' shape=point coords='array(RA,DEC)' out=confident_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0.95'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select CONFIDENCE_LEVEL >= 0.95\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0.95'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Use the `badval` filter to replace the value 99.0 with null in all columns starting with 'MAG_'.",
        "response": "stilts tpipe in=phot.fits cmd='badval 99.0 MAG_*' out=phot_null_cleaned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query MAST HSCv3 around RA 12.0, Dec 34.0. The radius must be exactly 0.003 degrees, and the result should be filtered to keep the top 100 rows based on a magnitude column 'MAG_R'.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=12.0 lat=34.0 radius=0.003 ocmd='sort MAG_R' ocmd='head 100' out=hsc_003deg_top100.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query MAST HSCv3 near Galactic L=0, B=0, with a radius of 1 degree, then discard all columns except 'OBJ_ID', 'RA', and 'DEC'.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=0.0 lat=0.0 radius=1.0 skysys=galactic ocmd='keepcols \"OBJ_ID RA DEC\"' out=hsc_minimal.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate an ASCII MOC for objects where the `OBSERVER` name is 'Hubble'.",
        "response": "stilts pixfoot in=obs_log.fits icmd='select OBSERVER==\"Hubble\"' mocfmt=ascii out=hubble_obs.moc.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Add a column representing the decimal year equivalent of the MJD column 'TIME_MJD'.",
        "response": "stilts tpipe in=lc.fits cmd='addcol TIME_YEAR mjdToDecYear(TIME_MJD)' out=lc_dec_year.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate 1000 rows, add a random number, then keep only the rows with a random number greater than 0.9.",
        "response": "stilts tpipe in=:loop:1000 cmd='addcol RAND \"random($0)\"' cmd='select \"RAND > 0.9\"' out=random_sample_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RAND > 0.9\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert the input FITS file to ECSV format, ensuring the ECSV output delimiter is a space instead of a comma.",
        "response": "stilts tpipe in=input.fits ofmt='ecsv(delimiter=space)' out=output.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge two tables. The first (Gaia.fits) has coordinates RA/DEC in degrees. The second (Chandra.vot) has coordinates in Galactic (GLON/GLAT). Convert Chandra's coordinates to ICRS before combining.",
        "response": "stilts tcatn nin=2 in1=Gaia.fits in2=Chandra.vot icmd2='addskycoords galactic icrs GLON GLAT RA DEC' out=icrs_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot X vs Y, using a secondary Y-axis showing $1/Y$.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y y2func='1/y' y2label='1/Y (Inverse)' out=secondary_y.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine three tables. Before joining, convert the magnitude column 'Vmag' to AB magnitude scale using the AB constant, assuming they are currently Johnson V.",
        "response": "stilts tcat in='v1.fits v2.fits v3.fits' icmd='replacecol Vmag \"Vmag + JOHNSON_AB_V\"' out=ab_mags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol Vmag Vmag + JOHNSON_AB_V\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a plot with LaTeX formatted labels for both axes: $\\alpha$ and $\\delta$.",
        "response": "stilts plot2plane in=data.fits layer=mark x=RA y=DEC texttype=latex xlabel='$\\alpha$' ylabel='$\\delta$' out=latex_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Filter the input table to only process rows where magnitude is exactly 17.5 before generating a point MOC.",
        "response": "stilts mocshape in=mag_points.fits icmd='select \"MAG == 17.5\"' shape=point coords='array(RA, DEC)' out=exact_mag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '17.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG == 17.5\n\nUsage: select <expr>\n    (Unused arguments: '==' '17.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Match A.fits and B.fits on 2D position (X, Y) where the matching radius is the quadrature sum of their individual errors (E_X, E_Y).",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=2d_err_q params=1 values1='X Y E_X' values2='X Y E_X' out=cartesian_quad_error.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match Catalog A and B using sky position and R-band magnitude (sky+1d). Tolerances: 3 arcsec position, 0.1 mag difference. Columns MAG_R in B are actually MAG_VEGA; convert them to AB (add 0.9) before matching.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits icmd2='replacecol MAG_R \"MAG_R + 0.9\"' matcher=sky+1d params='3 0.1' values1='RA DEC MAG_R' values2='RA DEC MAG_R' out=vega_corrected_combined.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '0.9'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_R MAG_R + 0.9\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' '0.9'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Convert a FITS file to a VOTable, preserving the FITS variable-length array storage pointers (fits-var).",
        "response": "stilts tcopy in=var_fits.fits ofmt='fits(var=true)' out=var_fits_copy.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Ensure the table is only stored on disk (force disk caching) and output the number of rows.",
        "response": "stilts -disk tpipe in=large.fits omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch T1 and T2. T1 is remote URL. T2 needs conversion of string column 'DATE' to MJD before matching on MJD (0.001 tolerance).",
        "response": "stilts tmatch2 in1=http://remote.org/T1.fits in2=T2.fits icmd2='replacecol MJD isoToMjd(DATE)' matcher=1d params=0.001 values1=MJD values2=MJD out=remote_time_match_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine a large FITS file with a multi-extension FITS file, extracting only extension #3 from the multi-extension file.",
        "response": "stilts tcatn nin=2 in1=large.fits in2=multi.fits#3 out=ext3_combined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Copy data from a CDF file, identified by variable name 'SPECTRA', and save it as a local FITS file.",
        "response": "stilts tcopy in=ts_data.cdf#SPECTRA ifmt=cdf out=spectra_table.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the PADC TAP Heliophysics server for table schemas, enforcing synchronous execution.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.tables' sync=true out=helio_tables_sync.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'LOG10_E' calculated as log10 of 'ENERGY' and set its unit to 'dex'.",
        "response": "stilts tpipe in=events.fits cmd='addcol -units dex LOG10_E log10(ENERGY)' out=log_events.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a small 0.1 degree field where coordinates are in Supergalactic system, and filter input to only include rows where REDSHIFT > 0.5.",
        "response": "stilts plot2sky in=gal_cat.fits viewsys=supergalactic clon=30.0 clat=10.0 radius=0.1 icmd='select \"REDSHIFT > 0.5\"' layer=mark lon=SGLON lat=SGLAT out=sgl_filtered_zoom.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"REDSHIFT > 0.5\" (The name \"REDSHIFT\" is unknown.)\n        (The name \"REDSHIFT\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query ESO TAP_CAT for sources around RA 150, Dec 15, using 0.008333 degrees as the radius (equivalent to 30 arcseconds).",
        "response": "stilts cone serviceurl=http://archive.eso.org/tap_cat lon=150.0 lat=15.0 radius=0.008333 out=eso_30arcsec_deg.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert RA/DEC (degrees) to the Ecliptic coordinate system, storing the coordinates in a new column 'ECL_VEC'.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol ECL_VEC \"icrsToEcl(astromXYZ(RA, DEC, 1.0))\"' out=ecliptic_vector.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' '1.0))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ECL_VEC icrsToEcl(astromXYZ(RA, DEC, 1.0))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' '1.0))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match four catalogs and output the result to a text file.",
        "response": "stilts tmatchn nin=4 in1=t1.fits in2=t2.fits in3=t3.fits in4=t4.fits multimode=group matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' values4='ra dec' ofmt=text out=4way_match.txt",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot markers at the nominal center of STC-S regions, using the 'central' layer with filled squares.",
        "response": "stilts plot2sky in=regions.fits layer=central area=S_REGION areatype=STC-S shape=filled_square out=stcs_centers_sq.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"S_REGION\"\n    (The name \"S_REGION\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Copy a VOTable to an IPAC table format, explicitly ensuring parameters are **not** written to the output file.",
        "response": "stilts tcopy in=with_params.vot ofmt='ipac(params=false)' out=no_params.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find MAST PanSTARRS 1 DR2 sources with high proper motion error (`G_ERR` > 0.5) and output the result in Feather format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT * FROM dbo.detection_object WHERE G_ERR > 0.5' ofmt=feather out=ps2_high_err.feather",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Upload two local tables (t1.fits and t2.fits) and join them against a remote VizieR table based on a source ID.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT * FROM \"J/A+A/655/A73/table3\" AS r JOIN TAP_UPLOAD.t1 AS u1 ON r.Source = u1.id JOIN TAP_UPLOAD.t2 AS u2 ON r.Source = u2.id' nupload=2 upload1=t1.fits upname1=t1 upload2=t2.fits upname2=t2 out=multi_join_vizier.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find all matches (find=all) between T1 and T2 (1 arcsec sky). After matching, calculate the mean of magnitudes (MAG_AVG) and sort the result by separation descending.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=all fixcols=dups suffix1=_1 suffix2=_2 scorecol=Sep ocmd='addcol MAG_AVG (MAG_1+MAG_2)/2; sort -down Sep' out=all_pairs_avg_mag_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate files and then remove all column metadata (UCD, units, descriptions) from the resulting table.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='colmeta -ucd null *; colmeta -units null *' out=stripped_meta.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Read data from the astronomical MRT format (Machine-Readable Table) and convert it to CSV.",
        "response": "stilts tcopy in=mrt_data.txt ifmt=mrt out=mrt_converted.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a column 'MAG_H_AB' converting 2MASS H magnitude (Vega) to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_H_AB \"MAG_H + VEGA_AB_H\"' out=h_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_H'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_H_AB MAG_H + VEGA_AB_H\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_H'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the 4XMM XMM-Newton Catalogue for sources with positional uncertainty (`SC_POSERR`) less than 1 arcsecond.",
        "response": "stilts tapquery tapurl=https://xcatdb.unistra.fr/xtapdb adql='SELECT * FROM dbo.xcat_source WHERE SC_POSERR < 1.0' out=xcat_precise.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'TIME_MJD_FROM_JULIAN_2' converting Julian Epoch to MJD.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_MJD_FROM_JULIAN_2 julianToMjd(TIME_JULIAN)' out=mjd_from_julian_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve the metadata details (omode=meta) for the columns available in the ESO Catalogue TAP service.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT TOP 10 * FROM TAP_SCHEMA.columns' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Remove columns 'FLAG_1' and 'FLAG_2' if they exist, but preserve the table otherwise.",
        "response": "stilts tpipe in=data.fits cmd='delcols \"FLAG_1 FLAG_2\"' out=data_clean.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch T1 and T2 on 2D coordinates (X, Y) with anisotropic cuboid tolerances 5 and 10 units.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=2d_cuboid params='5 10' values1='X Y' values2='X Y' out=aniso_2d_cuboid.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Start an asynchronous query on ARI Gaia for faint stars (G > 18) and request that the job is deleted immediately upon command exit (always delete).",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT * FROM gaiadr3.gaia_source WHERE phot_g_mean_mag > 18' delete=always out=ari_delete_always.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve MAST CAOM ObsCore entries for the facility 'JWST' and output the calculated statistical summary.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT T_EXPTIME FROM ivoa.ObsCore WHERE facility_name = ''JWST''' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge tables, and then add a column 'PAR_ERR_SQ' calculated as the square of 'PARALLAX_ERR'.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='addcol PAR_ERR_SQ \"PARALLAX_ERR * PARALLAX_ERR\"' out=squared_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' 'PARALLAX_ERR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PAR_ERR_SQ PARALLAX_ERR * PARALLAX_ERR\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'PARALLAX_ERR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot markers sized by the expression '1/parallax' (distance proxy) where parallax is in mas, ensuring autoscale is used.",
        "response": "stilts plot2sky in=gaia.fits layer=size lon=RA lat=DEC size='1/PARALLAX' unit=mas autoscale=true out=inv_plx_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers using transparency shading, where the opacity is set by the density of points (opaque=8) and the overall transparency level is high (translevel=0.9).",
        "response": "stilts plot2sky in=crowd.fits layer=mark lon=RA lat=DEC shading=translucent translevel=0.9 out=high_trans_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert the input table to IPAC format for writing to standard output.",
        "response": "stilts tpipe in=data.fits ofmt=ipac out=-",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find all matches (find=all) between T1 and T2 within a 1D cuboid separation on magnitude (MAG) of 0.2 units.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=1d_cuboid params=0.2 values1=MAG values2=MAG find=all out=cuboid_1d_all.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot sources, excluding those where flux FLUX_G is less than 1.0, using the Plate Carr\u00e9e projection.",
        "response": "stilts plot2sky in=data.fits icmd='select \"FLUX_G >= 1.0\"' layer=mark lon=RA lat=DEC projection=car out=flux_filtered_car.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"FLUX_G >= 1.0\" (The name \"FLUX_G\" is unknown.)\n        (The name \"FLUX_G\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match four tables using sky error quadrature (skyerr_q). Output the result directly to TOPCAT.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=skyerr_q params=1 values1='RA DEC ERR' values2='RA DEC ERR' values3='RA DEC ERR' values4='RA DEC ERR' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine two tables, keeping only the final 50 rows of the resulting unified table.",
        "response": "stilts tcatn nin=2 in1=cat1.fits in2=cat2.fits ocmd='tail 50' out=final_slice.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Set the table name parameter to 'Final Catalog' and remove all existing table parameters.",
        "response": "stilts tpipe in=input.fits cmd='clearparams \"*\"; tablename \"Final Catalog\"' out=final_cat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Catalog'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  tablename Final Catalog\n\nUsage: tablename <name>\n    (Unused arguments: 'Catalog'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need to combine the `s_region` from two different ObsCore tables, `obs1.fits` and `obs2.fits`.",
        "response": "stilts tcat in=obs1.fits in=obs2.fits out=obscombined.fits & stilts mocshape in=obscombined.fits shape=stc-s coords=s_region out=combined_obscore.moc.fits",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: mocshape: not found\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Ensure the table is buffered in memory for random access before processing, using the 'cache' filter.",
        "response": "stilts tpipe in=streamed.fits cmd=cache cmd='sort MAG' out=sorted_cached.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "For every row, check if the sum of 'FLUX_A' and 'FLUX_B' is zero and assert that it never happens.",
        "response": "stilts tpipe in=data.fits cmd='assert \"FLUX_A + FLUX_B != 0.0\"' out=non_zero_sum.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_B' '!=' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX_A + FLUX_B != 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'FLUX_B' '!=' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine tables from an HTM-tiled survey, but only keep the first 100 rows from each input file.",
        "response": "stilts tcatn nin=3 in1=tile1.fits icmd1='head 100' in2=tile2.fits icmd2='head 100' in3=tile3.fits icmd3='head 100' out=sample_tiles.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find best match (best2) for T2 from T1. T1 only includes rows with high magnitude (MAG > 20).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='select \"MAG > 20\"' in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=best2 out=faint_best2_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 20\n\nUsage: select <expr>\n    (Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot the analytic function y = x for visualization, making the line dashed and thick.",
        "response": "stilts plot2plane layer=function fexpr=x thick=4 dash=dash out=dashed_line.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve the statistical summary of the redshift column for objects in the MUSE-Wide survey deep field.",
        "response": "stilts tapquery tapurl=https://musewide.aip.de/tap adql='SELECT redshift FROM mwide.deep_field WHERE redshift IS NOT NULL' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find sources in the MAST Gaia DR3 TAP service around RA 13, Dec 13, using a radius calculated as 25 arcseconds, writing as CSV.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ lon=13.0 lat=13.0 radius='25.0 / 3600.0' ofmt=csv out=gaiadr3_25as.csv",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"25.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Generate a MOC from a simulated chaotic attractor table, colored by row index, mapping the 2D coordinates to RA/Dec (order 10).",
        "response": "stilts mocshape in=:attractor:10000,clifford icmd='addcol RA x*10+180; addcol DEC y*10' shape=point coords='array(RA, DEC)' order=10 out=attractor_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find all entries in the GAVO TAP service where the data comes from the Effelsberg telescope.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT * FROM ivoa.obscore WHERE facility_name LIKE ''%Effelsberg%'''",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the average proper motion (SQRT(PMRA^2 + PMDEC^2)) for 100 sources in the ARI Gaia catalogue.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT AVG(SQRT(pmra*pmra + pmdec*pmdec)) FROM gaiadr3.gaia_source' maxrec=100 omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC where the radius is calculated using $0.05 \times \text{exp}(\text{MAG} / 10)$.",
        "response": "stilts pixfoot in=mag_data.fits ra=RA dec=DEC radius='0.05 * exp(MAG / 10.0)' out=exp_mag_radius.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a MOC for circles with radii derived from proper motion dispersion (PM_ERR) assuming it directly maps to degrees.",
        "response": "stilts mocshape in=pm_errors.fits shape=circle coords='array(RA, DEC, PM_ERR)' out=pm_error_rad.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot markers with variable size, restricting the size range manually from 0 to 10 pixels (autoscale=false, scale=1).",
        "response": "stilts plot2sky in=data.fits layer=size lon=RA lat=DEC size=SIZE_COL autoscale=false out=manual_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'VELOCITY_MS' converting velocity in km/s to m/s.",
        "response": "stilts tpipe in=data.fits cmd='addcol VELOCITY_MS \"VELOCITY_KMS * 1000.0\"' out=vel_m_s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VELOCITY_MS VELOCITY_KMS * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match three tables where T2 is large. Use parallel execution and monitor progress.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=t1.fits in2=t2.fits in3=t3.fits runner=parallel progress=log out=parallel_progress.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match five tables (C1-C5). Output only groups containing contributions from C1 and C5.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=2 in1=C1.fits join1=match in2=C2.fits in3=C3.fits in4=C4.fits in5=C5.fits join5=match values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA DEC' out=C1C5_overlap.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a MOC from a sample of rows where the row index is a prime number (up to a limit).",
        "response": "stilts pixfoot in=huge_catalog.fits icmd='select isPrime($0)' out=prime_rows.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Combine tables and then add a column 'IS_NEARBY' based on a complex geometric calculation: $\\text{DISTANCE} < 100 / \\text{sqrt}(\\text{AREA})$.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol IS_NEARBY \"DISTANCE < 100 / sqrt(AREA)\"' out=complex_proximity_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '100' '/' 'sqrt(AREA)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_NEARBY DISTANCE < 100 / sqrt(AREA)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '100' '/' 'sqrt(AREA)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Create a MOC from the positions in every FITS table within `my_archive.fits`.",
        "response": "stilts tcat in=my_archive.fits multi=true | stilts mocshape in=- shape=point coords='array(RA,DEC)' out=archive_footprint.moc.fits",
        "chat.jar": "fixed",
        "error": "/bin/sh: 1: mocshape: not found\nError: No file, URL or command \"my_archive.fits\"\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column 'MAG_R_AB_OLD' converting Johnson R magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_R_AB_OLD \"MAG_R + JOHNSON_AB_R\"' out=r_ab_old_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_R_AB_OLD MAG_R + JOHNSON_AB_R\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "In my table `candidates.fits`, there's a magic value of -999 in the `MAGNITUDE` column. How can I replace all occurrences of it with a null value?",
        "response": "stilts tpipe in=candidates.fits cmd='badval -999 MAGNITUDE' out=candidates_cleaned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need to combine two tables, but the second one has an extra column. Can I use `tcat`?",
        "response": "No, `tcat` requires the tables to be of similar form, meaning they should have the same number and types of columns. You would need to use a preprocessing filter (`icmd`) to make the column structures match, or use `tcatn` which is more flexible for heterogeneous tables.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot markers, filtering the input to use only data from a specific epoch (EPOCH=2015.5).",
        "response": "stilts plot2sky in=data.fits icmd='select \"EPOCH == 2015.5\"' layer=mark lon=RA lat=DEC out=filtered_epoch.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"EPOCH == 2015.5\" (The name \"EPOCH\" is unknown.)\n        (The name \"EPOCH\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate tables, adding a column 'LOG_E' which is the natural logarithm of 'ENERGY' (ln(ENERGY)).",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='addcol LOG_E ln(ENERGY)' out=ln_energy.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Read a table from the generic scheme with fixed length array columns (:test:10,f) and save it as a FITS file.",
        "response": "stilts tcopy in=':test:10,f' out=fixed_array.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query the MAST TESS Input Catalog (TIC) to find 50 sources near the ecliptic pole and save the output in a FITS file.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 50 tid, ra, dec FROM tic.v8 WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 270.0, 66.56, 1.0))' ofmt=fits out=tic_ecliptic_pole.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create an order 3 Gaussian fit to the histogram of X, forcing the mean line to be visible (showmean=true is default, but include for clarity).",
        "response": "stilts plot2plane in=data.fits layer_h=histogram x_h=X layer_g=gaussian x_g=X showmean_g=true out=gaussian_o3.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine `cat_1.fits` and `cat_2.fits`. In the final table, add a new column 'MAG_COLOR' calculated as `BMAG - RMAG`.",
        "response": "stilts tcat in=cat_1.fits in=cat_2.fits ocmd='addcol MAG_COLOR BMAG-RMAG' out=color_catalog.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the GAVO DC Gaia catalog and locally add a new column named 'G_MAG' equal to the phot_g_mean_mag column after retrieval.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 10 phot_g_mean_mag FROM gaiadr3.gaia_source' ocmd='addcol G_MAG phot_g_mean_mag' out=gavo_gmag_copy.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge spectroscopic data, ensuring all input column names are adjusted to be syntactically convenient before concatenation.",
        "response": "stilts tcat in='spec1.vot spec2.vot' icmd=fixcolnames out=clean_name_spectra.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (pairs, T1 ref). T3 coordinates are in FK4 B1950. Convert to ICRS J2000 at epoch J1950.0 before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=5 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='addskycoords -epoch 1950.0 fk4 icrs RA_B1950 DEC_B1950 RA DEC' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=fk4_epoch_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Run a cone query on the CSIRO ASKAP TAP service near Galactic L=0, B=0, with radius 3 arcminutes, and pipe the result directly to TOPCAT.",
        "response": "stilts cone serviceurl=https://casda.csiro.au/casda_vo_tools/tap lon=0.0 lat=0.0 radius='3.0 / 60.0' skysys=galactic omode=topcat",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"3.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Crossmatch T1, T2, T3, T4 (group mode). For T2, only select rows where Z > 1.0 before matching, and use parallel processing.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=sky params=3 in1=T1.fits in2=T2.fits icmd2='select \"Z > 1.0\"' in3=T3.fits in4=T4.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' runner=parallel out=high_z_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match A.fits and B.fits using position AND proper motion total magnitude (sky+1d). A only includes sources with PM > 5 mas/yr.",
        "response": "stilts tmatch2 in1=A.fits icmd1='addcol PM_TOT \"hypot(PMRA, PMDEC)\"; select \"PM_TOT > 5\"' in2=B.fits matcher=sky+1d params='2 10' values1='RA DEC PM_TOT' values2='RA DEC PM_TOT' out=high_pm_combined.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOT hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Use the symlog scale for the Y-axis (linear threshold 10) to plot data with values near zero.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y yscale='symlog(10,1)' out=symlog_y.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine tables, and add a column 'HAS_FLUX' that is true if 'FLUX' is not null.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol HAS_FLUX !NULL_FLUX' out=flux_present_flag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve metadata about the columns of the main table in the MAST CANDELS HLSP service.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT * FROM TAP_SCHEMA.columns WHERE table_name = ''candels.photometry''' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need data from the Europlanet Telescope Network Database TAP service near Ecliptic Lon 150, Lat 20, using 0.5 arcminutes.",
        "response": "stilts cone serviceurl=http://parsec-europlanet.eu:81/tap lon=150.0 lat=20.0 radius='0.5 / 60.0' skysys=ecliptic out=parsec_ecliptic_half_arcmin.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.5 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match T_REF (ref) against T2, T3, T4. Only return rows where T_REF has a match in T2, but not in T3, and always include T4 if matched.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' in1=T_REF.fits in2=T2.fits join2=match in3=T3.fits join3=nomatch in4=T4.fits join4=match out=selective_4way_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 245.2483 and latitude 66.3988. Please use a search radius of 1.6874 degrees. Save the results to a ascii file called query_results_100.ascii. After the query, please run this processing command: 'sorthead 20 MAG'. The coordinates are in the icrs system. Use verbosity level 3.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=245.2483 lat=66.3988 radius=1.6874 skysys=icrs verb=3 compress=true omode=out ofmt=ascii out=query_results_100.ascii ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Request a query to be destroyed in one day from now.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 1 * FROM gaiadr3.gaia_source' destruction='2025-10-27T12:00:00Z' sync=false",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "How do I convert a CSV file to a FITS file?",
        "response": "stilts tcopy in=data.csv out=data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Perform a sequence of operations from a script file named `processing_steps.txt` on the table `input_data.fits`.",
        "response": "stilts tpipe in=input_data.fits cmd=@processing_steps.txt out=processed_data.fits",
        "chat.jar": "fixed",
        "error": "Error: processing_steps.txt (No such file or directory)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot error ellipses (skyellipse) where the radius is calculated as 'ERR_DEG * 2.0'.",
        "response": "stilts plot2sky in=errors.fits layer=skyellipse lon=RA lat=DEC ra='ERR_DEG * 2.0' rb=0.0 posang=0 unit=degree out=doubled_radius_ellipse.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits exactly on ID. After matching, apply a row filter to keep only rows where the combined table size is less than 100 rows.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID ocmd='select \"$nrow < 100\"' out=size_filtered_output.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $nrow < 100\n\nUsage: select <expr>\n    (Unused arguments: '<' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Draw filled polygons defined by coordinate arrays, coloring them flat magenta, setting the thickness to 5 (only applies to border/outline mode, here fill).",
        "response": "stilts plot2sky in=regions.fits layer=polygon coords=VERTICES polymode=fill color=magenta thick=5 out=filled_magenta_thick.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve the metadata (column definitions) for the tables available in the PADC Heliophysics service.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT TOP 1 * FROM some_heliophysics_table' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a table containing arrays to FITS, forcing the output to use **variable-length arrays** (`fits-var`).",
        "response": "stilts tcopy in=array_in.vot ofmt=fits-var out=var_out.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot data using the symlog scale on the Y-axis, with a linear threshold of 1.0 and a logarithmic scaling factor of 0.5.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y yscale='symlog(1.0, 0.5)' out=custom_symlog.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Merge tables, adding a column 'SourceTableSeq' that lists the 1-based index of the table source.",
        "response": "stilts tcat in='t_part1.fits t_part2.fits t_part3.fits' seqcol=SourceTableSeq out=indexed_source_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables and display the total memory footprint and file format of the resulting merged table.",
        "response": "stilts tcat in='t1.fits t2.fits' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Collapse the scalar columns 'FLUX_U', 'FLUX_G', 'FLUX_R' into a single array column named 'FLUXES', removing the original scalar columns.",
        "response": "stilts tpipe in=phot.fits cmd='collapsecols FLUXES FLUX_U 3' out=phot_array.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Group match three tables (P1, P2, P3). In P2, drop array columns before matching on scalar ID.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=P1.fits in2=P2.fits icmd2='delcols *array*' in3=P3.fits out=no_array_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add a column 'MAG_U_OLD' converting Johnson U magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_OLD \"MAG_U + JOHNSON_AB_U\"' out=u_old_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_OLD MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match T1 and T2 (exact ID). T2 only includes the first 100 rows. Output the table metadata only.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='head 100' matcher=exact values1=ID values2=ID omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create a circle MOC where the radius is given by column 'R_ERR' divided by 10 (units assumed degrees).",
        "response": "stilts mocshape in=err_data.fits shape=circle coords='array(RA, DEC, R_ERR / 10.0)' out=scaled_err_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine two FITS files. In the second file, rename columns 'FLUX_U', 'FLUX_G' to 'U', 'G' respectively.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='colmeta -name U FLUX_U; colmeta -name G FLUX_G' out=flux_channel_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot HEALPix tiles, combining the maximum FLUX value per tile (combine=max).",
        "response": "stilts plot2sky in=hpx_map.fits layer=healpix value=FLUX combine=max out=hpx_max_flux.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"FLUX\"\n    (The name \"FLUX\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Crossmatch T1 (ref) against T2, T3. T1 contains parallax (PLX). Calculate distance modulus from parallax and use it in a combined match (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='1 1' in1=T1.fits icmd1='addcol DM modulusToDistance(1000.0/PLX)' in2=T2.fits in3=T3.fits values1='RA DEC DM' values2='RA DEC DM' values3='RA DEC DM' out=parallax_dm_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need to check the column metadata structure for a cone search result (radius 0.01 deg) on ESA's JWST Archive TAP near RA 145, Dec -20.",
        "response": "stilts cone serviceurl=https://jwst.esac.esa.int/server/tap lon=145.0 lat=-20.0 radius=0.01 omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot the X and Y columns, using a bold, italic font for the title.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y title='My Bold Italic Plot' fontweight=bold_italic out=bold_italic.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "My catalog has ecliptic coordinates `ELON` and `ELAT`. How do I generate a standard ICRS MOC?",
        "response": "stilts pixfoot in=ecliptic_cat.fits icmd='addskycoords ecliptic icrs ELON ELAT RA_ICRS DEC_ICRS' ra=RA_ICRS dec=DEC_ICRS out=ecliptic_to_icrs.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Plot an all-sky MOC defined by an ASCII string (moc-ascii layer), using fill mode.",
        "response": "stilts plot2sky in=:loop:1 end=1 layer=area area='1/1-5 2/20-25 3/100-110' areatype=MOC-ASCII polymode=fill out=fixed_moc_fill.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"1/1-5 2/20-25 3/100-110\"\n    (Encountered unexpected character '/'.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the GAVO Data Center around Galactic L=359, B=0, using a search radius equivalent to $2 \times 0.01$ degrees.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=359.0 lat=0.0 radius='2 * 0.01' skysys=galactic out=galactic_0p02deg.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"2 * 0.01\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Add a column containing the URL of the ADS bibcode for the entry in 'BIBCODE'.",
        "response": "stilts tpipe in=pubs.fits cmd='addcol ADS_URL bibcodeUrl(BIBCODE)' out=pubs_ads.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plotting from a synthetic loop scheme ($x=i, y=i^2$) in a simple mark layer.",
        "response": "stilts plot2plane in=:loop:100 layer=mark x='i' y='i*i' out=loop_square.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"i\"\n    (The name \"i\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the KSB-ROB TAP service for table names and output the result showing only metadata (column definitions).",
        "response": "stilts tapquery tapurl=http://vo-tap.oma.be/tap adql='SELECT * FROM TAP_SCHEMA.tables' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a JSON MOC for the footprint of all objects whose name is exactly 'M31'.",
        "response": "stilts pixfoot in=object_list.fits icmd='select NAME==\"M31\"' mocfmt=json out=m31_only.moc.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Please join `table1.csv` and `table2.csv` where the `SOURCE_ID` column is exactly the same in both.",
        "response": "stilts tmatch2 ifmt1=csv in1=table1.csv ifmt2=csv in2=table2.csv matcher=exact values1=SOURCE_ID values2=SOURCE_ID out=exact_id_join.csv",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the XMM-Newton archive for ObsCore entries, requiring authentication, and ensuring synchronous operation.",
        "response": "stilts tapquery tapurl=https://nxsa.esac.esa.int/tap-server/tap adql='SELECT TOP 5 * FROM ivoa.ObsCore' auth=true sync=true out=xmm_auth_sync_small.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a spherical grid (spheregrid) around the origin, setting Nlon=10 and Nlat=5 for grid density.",
        "response": "stilts plot2sphere layer=spheregrid nlon=10 nlat=5 out=dense_sphere_grid.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine tables, but before joining, collapse scalar magnitude columns (U, G, R) into a single 3-element array column named 'MAG_ARRAY'.",
        "response": "stilts tcat in='phot1.fits phot2.fits' icmd='collapsecols MAG_ARRAY U 3' out=collapsed_mags_array.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Match A.fits and B.fits using position AND parallax, where parallax is inverted distance (sky+1d). Tolerances: 2 arcsec, 0.1 mas tolerance on parallax.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=sky+1d params='2 0.1' values1='RA DEC PARALLAX' values2='RA DEC PARALLAX' out=pos_parallax_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query the MAST STScI Registry, but only retrieve resources marked as 'Curation Level 3' (assuming a column named 'curation_level').",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/registry adql='SELECT * FROM reg.resource WHERE curation_level = 3' out=mast_reg_level3.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match `c1.fits` and `c2.fits` using `sky+1d` on `RA, DEC, FLUX`. Then calculate statistics on the `Separation` and `Score` columns.",
        "response": "stilts tmatch2 in1=c1.fits in2=c2.fits matcher=sky+1d params='2 100' values1='RA DEC FLUX' values2='RA DEC FLUX' ocmd='keepcols \"Separation Score\"' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I want to calculate statistics (mean, stdev, etc.) for all numeric columns in `measurements.fits`.",
        "response": "stilts tpipe in=measurements.fits omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Apply the filter 'fixcolnames' to standardize names, including renaming duplicates, and check the resultant table structure.",
        "response": "stilts tpipe in=messy.fits cmd=fixcolnames omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the MOC (order 16) for circles with a 20 mas radius, ensuring the output is FITS.",
        "response": "stilts pixfoot in=mas_20.fits ra=RA dec=DEC radius='20.0 / 3600000.0' order=16 out=mas_20_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate two tables, but only keep the columns: ID, RA, DEC, and MAG in the output, in that specific order.",
        "response": "stilts tcat in=t1.fits in=t2.fits ocmd='keepcols \"ID RA DEC MAG\"' out=ordered_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate three FITS files, calculating the checksum of the resulting combined data.",
        "response": "stilts tcatn nin=3 in1=f1.fits in2=f2.fits in3=f3.fits omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate an ASCII MOC for the last 10 objects in `transient_alerts.vot`.",
        "response": "stilts pixfoot in=transient_alerts.vot icmd='tail 10' mocfmt=ascii out=last_10_alerts.moc.txt",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Copy an ASCII file but set the output format to be IPAC, including table parameters.",
        "response": "stilts tcopy in=raw.txt ifmt=ascii ofmt=ipac out=formatted.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Match two tables, then add a new column that is the ratio of their fluxes.",
        "response": "stilts tmatch2 in1=flux_a.fits in2=flux_b.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=dups suffix1=_a suffix2=_b ocmd='addcol FLUX_RATIO FLUX_a/FLUX_b' out=flux_ratio_matches.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Invert the entire table structure (transpose) and display the resulting metadata.",
        "response": "stilts tpipe in=data.fits cmd=transpose omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a parameter 'PROCESSING_DATE' containing the current time in ISO-8601 format.",
        "response": "stilts tpipe in=data.fits cmd='setparam PROCESSING_DATE now()' out=processing_time.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw a multi-layer plot with markers and density shading, and explicitly set the compositor boost level to 0.1.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density compositor=0.1 out=compositor_boosted.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Replicate every row in the table exactly five times.",
        "response": "stilts tpipe in=data.fits cmd='repeat 5' out=data_x5.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table by keeping columns with UCD 'pos.eq.ra' and 'phot.mag'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"ucd$pos_eq_ra ucd$phot_mag\"' out=pos_mag_ucd_only.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ucd$phot_mag'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$pos_eq_ra ucd$phot_mag\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$phot_mag'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the KoA TAP SIA service using the newer SIAv2 protocol for images around RA 13, Dec 13, searching for ALL available data formats (dataformat=ALL).",
        "response": "stilts cone serviceurl=https://koa.ipac.caltech.edu/TAP lon=13.0 lat=13.0 radius=0.1 servicetype=sia2 dataformat=ALL out=koa_all_formats.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate tables, but drop all columns except 'ID' and any columns whose name begins with 'MAG_'.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='keepcols \"ID MAG_*\" ' out=id_mag_subset.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a MOC at order 18, ensuring only rows where 'SNR' is greater than 10 are used.",
        "response": "stilts pixfoot in=snr_cat.fits icmd='select \"SNR > 10.0\"' ra=RA dec=DEC order=18 out=high_snr_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select SNR > 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find rows in T1 that match T2. After matching, calculate the position angle (posAngDegrees) between the matched coordinates and add it as 'PA_SEP'.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=5 values1='RA_1 DEC_1' values2='RA_2 DEC_2' ocmd='addcol PA_SEP \"posAngDegrees(RA_1, DEC_1, RA_2, DEC_2)\"' out=match_with_pa.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_1,' 'RA_2,' 'DEC_2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PA_SEP posAngDegrees(RA_1, DEC_1, RA_2, DEC_2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_1,' 'RA_2,' 'DEC_2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find the checksum of a table after removing all columns whose names start with 'ERR' or 'FLAG'.",
        "response": "stilts tpipe in=survey.fits cmd='delcols \"ERR* FLAG*\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLAG*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: delcols ERR* FLAG*\n\nUsage: delcols <colid-list>\n    (Unused arguments: 'FLAG*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Combine two tables, filtering out all rows from the second table if their magnitude ('MAG') is null.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits icmd2='select !NULL_MAG' out=no_null_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 291.9005 and latitude 63.8601. Please use a search radius of 1.0233 degrees. Save the results to a csv file called query_results_111.csv. After the query, please run this processing command: 'sorthead 20 MAG'. Use verbosity level 1.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=291.9005 lat=63.8601 radius=1.0233 verb=1 omode=out ofmt=csv out=query_results_111.csv ocmd=\"sorthead 20 MAG\"",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Crossmatch three tables T1, T2, T3. T1 is reference. T2 has an extra column 'NOTES' to be discarded before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits in2=T2.fits icmd2='delcols NOTES' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=notes_discarded_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add a column giving the HEALPix pixel index (order 10, NEST scheme) for ICRS coordinates (RA, DEC).",
        "response": "stilts tpipe in=coords.fits cmd='addcol HPX_INDEX \"healpixNestIndex(10, RA, DEC)\"' out=hpx_indexed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA,' 'DEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HPX_INDEX healpixNestIndex(10, RA, DEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA,' 'DEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match T1 and T2 (exact ID). T2 contains a column 'NAME' that needs to be truncated to the first 15 characters before matching T1's truncated name.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='addcol SHORT_NAME \"substring(NAME, 0, 15)\"' in2=T2.fits icmd2='addcol SHORT_NAME \"substring(NAME, 0, 15)\"' matcher=exact values1=SHORT_NAME values2=SHORT_NAME out=truncated_name_match_2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0,' '15)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SHORT_NAME substring(NAME, 0, 15)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0,' '15)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I have a NASA PDS4 file. Can I convert it to a VOTable?",
        "response": "stilts tcopy in=pds4_data.xml out=pds4_data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Run a synchronous query against the MAST STScI Registry and output the top 5 resources as a standalone HTML file.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/registry adql='SELECT TOP 5 * FROM reg.resource' sync=true ofmt=html out=reg_sample.html",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Sort a table by magnitude (V_MAG) descending, retaining only the 20 faintest objects, and output the total number of rows retained.",
        "response": "stilts tpipe in=stars.fits cmd='sorthead 20 V_MAG' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge T_GOOD and T_BAD. In T_BAD, drop columns related to errors, e.g., columns whose name contains 'ERR'.",
        "response": "stilts tcatn nin=2 in1=T_GOOD.fits in2=T_BAD.fits icmd2='delcols *ERR*' out=error_cols_removed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine tables, and add an output column 'RA_HMS' by converting the 'RA_DEG' column to sexagesimal string format (HMS).",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol RA_HMS degreesToHms(RA_DEG)' out=hms_coords.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Crossmatch six tables (S1-S6) using a custom combined matcher: sky separation (1 arcsec) AND Cartesian 1D distance (5 units).",
        "response": "stilts tmatchn nin=6 multimode=group matcher=sky+1d params='1 5' values1='RA DEC X' values2='RA DEC X' values3='RA DEC X' values4='RA DEC X' values5='RA DEC X' values6='RA DEC X' in1=S1.fits in2=S2.fits in3=S3.fits in4=S4.fits in5=S5.fits in6=S6.fits out=six_way_combined_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1 and T2. T2 contains proper motions in degrees/year. Convert T2 PMRA and PMDEC to mas/yr before matching on space position (sky 1 arcsec).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='replacecol PMRA PMRA*3600000; replacecol PMDEC PMDEC*3600000' matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=pm_converted_simple_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot points with X/Y error bars using a line thickness of 2 pixels.",
        "response": "stilts plot2plane in=errors.fits layer=xyerror x=X y=Y xerrhi=XE yerrhi=YE thick=2 out=thick_xy_error_bars.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a small region (0.005 degree radius) centered at L=270, B=-30, forcing the output image format to PDF.",
        "response": "stilts plot2sky clon=270.0 clat=-30.0 radius=0.005 viewsys=galactic layer=mark lon=L lat=B out=small_gal_zoom.pdf",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert a large integer column 'SOURCE_ID' to a string, padded with leading zeros up to 19 digits.",
        "response": "stilts tpipe in=cat.fits cmd='addcol ID_STR \"padWithZeros(SOURCE_ID, 19)\"' out=padded_ids.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '19)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ID_STR padWithZeros(SOURCE_ID, 19)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '19)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the best match (best1) for T1 from T2. T1 only keeps ID and RA/DEC columns before matching.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='keepcols \"ID RA DEC\"' in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=best1 out=minimal_columns_best1.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match four tables using Cartesian 2D errors combined in quadrature (2d_err_q) on pixel coordinates (X, Y, ERR).",
        "response": "stilts tmatchn nin=4 multimode=group matcher=2d_err_q params=1 values1='X Y ERR' values2='X Y ERR' values3='X Y ERR' values4='X Y ERR' in1=p1.fits in2=p2.fits in3=p3.fits in4=p4.fits out=quadrature_pixel_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find objects around (RA=200, DEC=-30) within 30 arcseconds, setting the service verbosity to its maximum level.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=200.0 lat=-30.0 radius=0.008333333333333333 verb=3 out=verbose_results.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Assert that the standard deviation of 'MAG' is greater than 0.5.",
        "response": "stilts tpipe in=data.fits cmd='cache' cmd='assert \"stdev(MAG) > 0.5\"' out=stdev_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert stdev(MAG) > 0.5\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Check the validity of an ADQL query to the ESA Euclid archive selecting all columns from `ivoa.ObsCore` where RA is within 10 degrees of 180 degrees, without running the query.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore WHERE ra BETWEEN 170.0 AND 190.0' parse=true omode=discard",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at http://archive.eso.org/ssap? I'm looking for objects around longitude 279.84 and latitude 14.912. Please use a search radius of 0.5896 degrees. Save the results to a votable file called query_results_35.votable.",
        "response": "stilts cone servicetype=ssa serviceurl=http://archive.eso.org/ssap lon=279.84 lat=14.912 radius=0.5896 omode=out ofmt=votable out=query_results_35.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Search MAST PanSTARRS DR2 TAP service around Ecliptic Lon 10, Lat 10, with radius 1 arcsecond.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 lon=10.0 lat=10.0 radius='1.0 / 3600.0' skysys=ecliptic out=ps1dr2_1as_ecl.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a table from FITS to VOTable, ensuring the output uses **VOTable version 1.1**.",
        "response": "stilts tcopy in=old.fits ofmt='votable(version=V11)' out=v11.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plotting markers sized independently (sizexy layer) in X and Y directions, filled rectangle shape.",
        "response": "stilts plot2plane in=blobs.fits layer=sizexy x=X_CEN y=Y_CEN xsize=WID ysize=LEN shape=filled_rectangle out=sizexy_rect.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X_CEN\"\n    (The name \"X_CEN\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Merge two tables, T_GAL and T_QSO. T_QSO has coordinates in the FK4 system. Convert them to ICRS before concatenation.",
        "response": "stilts tcatn nin=2 in1=T_GAL.fits in2=T_QSO.fits icmd2='addskycoords fk4 icrs RA_FK4 DEC_FK4 RA_ICRS DEC_ICRS' out=icrs_normalized.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a column 'MAG_B_AB_OLD_3' converting Johnson B magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_B_AB_OLD_3 \"MAG_B + JOHNSON_AB_V\"' out=b_ab_old_conv_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_B_AB_OLD_3 MAG_B + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Synchronously fetch the top 5 records from the Subaru SAGA database.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 5 * FROM saga.stellar_abundances' sync=true out=saga_sync_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). T1, T2, T3 all have a string array column 'FLAG_ARRAY'. Calculate the mean size of this array across all tables and add it to the output.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_1 suffix2=_2 suffix3=_3 ocmd='addcol AVG_FLAG_SIZE \"mean(size(FLAG_ARRAY_1), size(FLAG_ARRAY_2), size(FLAG_ARRAY_3))\"' out=array_size_stats_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'size(FLAG_ARRAY_2),' 'size(FLAG_ARRAY_3))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AVG_FLAG_SIZE mean(size(FLAG_ARRAY_1), size(FLAG_ARRAY_2), size(FLAG_ARRAY_3))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'size(FLAG_ARRAY_2),' 'size(FLAG_ARRAY_3))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need the Cone Search result where the objects are sorted by magnitude in descending order.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=30.0 lat=30.0 radius=0.01 ocmd='sort -down MAGNITUDE' out=brightest_first.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I want to perform a 2D match on `X` and `Y` columns. But for table 2, the columns are named `XPOS` and `YPOS`.",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=2d params=3 values1='X Y' values2='XPOS YPOS' out=xy_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Convert input FK4 J1950 coordinates (RA, DEC) to Galactic coordinates (GLON, GLAT).",
        "response": "stilts tpipe in=legacy_data.fits cmd='addskycoords fk4 galactic RA DEC GLON GLAT' out=legacy_galactic.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Perform an asynchronous query against the MAST 3D-HST HLSP for 100 rows, then filter the resulting column locally to keep only the magnitude column 'f160w_flux'.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/3dhst/ adql='SELECT TOP 100 * FROM 3dhst.photometry' ocmd='keepcols f160w_flux' out=3dhst_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Start an asynchronous query on the ESA Herschel Archive for 50 ObsCore records, polling for status updates every second.",
        "response": "stilts tapquery tapurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap adql='SELECT TOP 50 * FROM ivoa.ObsCore' poll=1000 progress=true out=herschel_fast.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the 10 rows from the 3D-HST HLSP photometry table with the largest error on the F160W magnitude, ordering the result remotely.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/3dhst/ adql='SELECT TOP 10 * FROM 3dhst.photometry ORDER BY f160w_err DESC' out=3dhst_largest_err.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine `list1.txt` and `list2.txt` (ASCII format) and output to a new file `list_combined.ipac` in IPAC format.",
        "response": "stilts tcat ifmt=ascii in=list1.txt in=list2.txt ofmt=ipac out=list_combined.ipac",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine observations O1.fits and O2.fits. O1 requires an 'ASSERT' filter to ensure all rows have POS_ERR > 0.",
        "response": "stilts tcatn nin=2 in1=O1.fits icmd1='assert \"POS_ERR > 0\"' in2=O2.fits out=asserted_valid_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert POS_ERR > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert a table, reading from a system pipe which produces IPAC data, and save it as VOTable.",
        "response": "cat input.tbl | stilts tcopy in=- ifmt=ipac out=piped_ipac.vot",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read a Parquet file, and pipe the table directly into TOPCAT for visual inspection.",
        "response": "stilts tpipe in=large_data.parquet omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need data from the Planetary web services @ FUB TAP service near RA 120, Dec 0, using 1 degree radius.",
        "response": "stilts cone serviceurl=http://dachs.planet.fu-berlin.de/tap lon=120.0 lat=0.0 radius=1.0 out=fuberlin_1deg.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Concatenate four ECSV files: ecsv_A.ecsv, ecsv_B.ecsv, ecsv_C.ecsv, and ecsv_D.ecsv, retaining all metadata defined in their headers.",
        "response": "stilts tcat ifmt=ecsv in='ecsv_A.ecsv ecsv_B.ecsv ecsv_C.ecsv ecsv_D.ecsv' out=four_ecsv_combined.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Copy a remote VOTable from a URL that uses the obsolete MySpace protocol.",
        "response": "stilts tcopy in=myspace:/remote/data.vot out=local_myspace.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I need the exact count of sources found by querying the SIMBAD TAP engine within 0.1 degrees of 10h 30m 00s, -5d 00m 00s.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=157.5 lat=-5.0 radius=0.1 omode=count",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Group match three tables (P1-P3) on a 2D position (X, Y). Add a column 'AVG_X' to the output containing the mean X coordinate of all members in the group.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=2d params=5 values1='X Y' values2='X Y' values3='X Y' in1=P1.fits in2=P2.fits in3=P3.fits ocmd='addcol AVG_X mean(X)' out=mean_x_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine tables, and in the output, rename all columns containing 'error' in their name to include the prefix 'UNC_' (uncertainty).",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='colmeta -name UNC_$1 \"*error*\"' out=uncertainty_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge logs L1, L2, L3. L2 has a date column as an ISO-8601 string; convert it to MJD before concatenation.",
        "response": "stilts tcatn nin=3 in1=L1.fits in2=L2.fits icmd2='replacecol DATE_MJD isoToMjd(DATE_STR)' in3=L3.fits out=mjd_converted_logs.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a 10,000-row table using the synthetic attractor scheme (clifford), keep only the Y and Z coordinates, and calculate the checksum.",
        "response": "stilts tpipe in=:attractor:10000,clifford cmd='keepcols \"Y Z\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Z'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Y Z\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Z'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an order 5 MOC containing 1 degree radius circles, but only use rows 1000 through 2000 from the input table.",
        "response": "stilts mocshape in=input.fits icmd='rowrange 1000 2000' shape=circle coords='array(RA, DEC, 1.0)' order=5 out=sample_rows_o5.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Group match three tables, T1-T3. Exclude T1 rows that were matched, and output the result to TOPCAT.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits join1=nomatch in2=T2.fits in3=T3.fits omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge three tables and remove adjacent duplicate rows based solely on the 'OBJECT_ID' column.",
        "response": "stilts tcat in='c1.fits c2.fits c3.fits' ocmd='sort OBJECT_ID; uniq OBJECT_ID' out=object_id_unique.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate an ASCII MOC (order 9) for 10 mas radius circles, writing to standard output.",
        "response": "stilts pixfoot in=mas_10.fits ra=RA dec=DEC radius='10.0 / 3600000.0' order=9 mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find objects around Ecliptic Lon 90, Lat 0, using a radius of 40 arcseconds, renaming the primary ID column to 'ECL_ID'.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=90.0 lat=0.0 radius='40.0 / 3600.0' skysys=ecliptic ocmd='colmeta -name ECL_ID ID' out=ecl_renamed.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"40.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the GAVO TAP service near RA 180, Dec 180, using a radius calculated as 60 arcseconds / 2.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=180.0 lat=180.0 radius='(60.0 / 2.0) / 3600.0' out=gavo_30as.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"(60.0 / 2.0) / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query ESO TAP OBS for VIRCAM raw data and apply a post-processing filter to keep only rows where the detector integration time (DIT) exceeds 100 seconds.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM raw.vircam' ocmd='select \"dit > 100\"' out=vircam_long_dit.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select dit > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate four tables, restricting the total number of output rows to 1000, then display statistics.",
        "response": "stilts tcatn nin=4 in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits ocmd='head 1000' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Join T_A and T_B. T_A has a coordinate RA_HMS in sexagesimal string format. Convert it to degrees inline before matching T_B's RA.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=sky params=1 values1='hmsToDegrees(RA_HMS) DEC' values2='RA DEC' out=inline_hms_conversion.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Subsample my table `dense_field.fits` by keeping only every 100th row.",
        "response": "stilts tpipe in=dense_field.fits cmd='every 100' out=sparse_field.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find all sources from Gaia with a proper motion greater than 1 arcsecond per year.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT source_id, pm FROM gaiadr3.gaia_source WHERE pm > 1000' out=fast_movers.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers sized by luminosity (LUM) using the Log scaling function in the size layer.",
        "response": "stilts plot2sky in=sources.fits layer=size lon=RA lat=DEC size=LUM sizefunc=log out=log_lum_sized.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query ESO TAP OBS and pipe the results directly to TOPCAT for viewing.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 100 * FROM ivoa.ObsCore' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw a plot where markers are sized by the expression '2 + log(FLUX)' and save as EPS.",
        "response": "stilts plot2plane in=sources.fits layer=size x=RA y=DEC size='2 + log(FLUX)' out=log_flux_size.eps",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at http://archive.eso.org/ssap? I'm looking for objects around longitude 333.0032 and latitude -67.9157. Please use a search radius of 1.2461 degrees. Instead of a file, just give me the stats.",
        "response": "stilts cone servicetype=ssa serviceurl=http://archive.eso.org/ssap lon=333.0032 lat=-67.9157 radius=1.2461 omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Remove all columns, then add only the column 'ID'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols ID' out=id_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a MOC for positions projected forward 5 years based on proper motion, assuming data is from J2000 epoch.",
        "response": "stilts mocshape in=astrometry.fits icmd='replacecol RA \"epochProp(5.0, array(RA, DEC, 1000/PLX, PMRA, PMDEC, RV))\"; replacecol DEC \"epochProp(5.0, array(RA, DEC, 1000/PLX, PMRA, PMDEC, RV))[1]\"' shape=point coords='array(RA, DEC)' out=prop_5yr.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' '1000/PLX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA epochProp(5.0, array(RA, DEC, 1000/PLX, PMRA, PMDEC, RV))\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' '1000/PLX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query the PADC Astro server for a sample and calculate the checksum of the resulting data block.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT TOP 10 * FROM TAP_SCHEMA.tables' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Search the Euclid TAP near RA 180, Dec 80, using a radius of 50 mas, and sort the results by a column named 'FLUX_W' in descending order.",
        "response": "stilts cone serviceurl=https://eas.esac.esa.int/tap-server/tap lon=180.0 lat=80.0 radius='50.0 / 3600000.0' ocmd='sort -down FLUX_W' out=euclid_sorted.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"50.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot points with a size proportional to `log10(FLUX)`.",
        "response": "stilts plot2plane in=data.fits layer=size x=X y=Y size='log10(FLUX)'",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Combine three tables. T1 has 'ERROR_FLUX'. T2 and T3 have 'FLUX_ERR'. Rename T1's column before joining.",
        "response": "stilts tcatn nin=3 in1=T1.fits icmd1='colmeta -name FLUX_ERR ERROR_FLUX' in2=T2.fits in3=T3.fits out=error_col_unified.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match three catalogs using 'sky+1d' on position (5 arcsec) and velocity (10 km/s).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky+1d params='5 10' values1='RA DEC V_RAD' values2='RA DEC V_RAD' values3='RA DEC V_RAD' in1=A.fits in2=B.fits in3=C.fits out=sky_velocity_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at http://archive.eso.org/ssap? I'm looking for objects around longitude 331.8752 and latitude -25.0741. Please use a search radius of 1.218 degrees. Save the results to a csv file called query_results_40.csv.",
        "response": "stilts cone servicetype=ssa serviceurl=http://archive.eso.org/ssap lon=331.8752 lat=-25.0741 radius=1.218 omode=out ofmt=csv out=query_results_40.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I need the MOC for sources around Galactic L=359.9, B=0.1, converted from Galactic to ICRS, using 20 arcseconds.",
        "response": "stilts pixfoot in=gal_data4.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' ra=RA dec=DEC radius='20.0 / 3600.0' out=gal_20as_edge.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate tables T1 and T2. T2 contains coordinates GLON, GLAT. Add a column 'GAL_RAD' calculating the distance from the galactic center (0,0) before joining.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='addcol GAL_RAD \"skyDistanceDegrees(GLON, GLAT, 0, 0)\"' out=galactic_distance_merged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'GLAT,' '0,' '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol GAL_RAD skyDistanceDegrees(GLON, GLAT, 0, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'GLAT,' '0,' '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Add a parameter 'PROCESSOR_NAME' using the current system property for the OS name.",
        "response": "stilts tpipe in=meta.fits cmd='setparam PROCESSOR_NAME param$java.vm.name' out=processor_param.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a plot with minor grid lines turned off.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y minor=false out=no_minor_grid.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match A.fits and B.fits. A is a simple table (:test:100,is) containing test data. Match exactly on column 's_int'.",
        "response": "stilts tmatch2 in1=:test:100,is in2=B.fits matcher=exact values1=s_int values2=s_int out=test_exact_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Merge two Parquet files. In the final output, convert the structure to VOTable BINARY2 format.",
        "response": "stilts tcatn nin=2 in1=P1.parquet in2=P2.parquet ofmt='votable(format=BINARY2)' out=parquet_to_binary2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Using `ref_cat.fits` as the reference, show me all its rows, along with data for any rows in `survey1.fits` that match it, but ONLY if there is no match in `survey2.fits`.",
        "response": "stilts tmatchn nin=3 in1=ref_cat.fits in2=survey1.fits in3=survey2.fits multimode=pairs iref=1 matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' join1=always join2=match join3=nomatch out=ref_survey1_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot a line connecting points, but only for points where `QUALITY > 0.9`.",
        "response": "stilts plot2plane in=data.fits layer=line x=X y=Y icmd='select \"QUALITY > 0.9\"'",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"QUALITY > 0.9\" (The name \"QUALITY\" is unknown.)\n        (The name \"QUALITY\" is unknown.))\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert a table to HTML format without the full HTML document structure.",
        "response": "stilts tcopy in=data.fits ofmt='html(standalone=false)' out=table_fragment.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch T1 and T2 on 3D Cartesian coordinates (X, Y, Z). After joining, keep only the unmatched rows from T1 (anti-join).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=3d params=1 values1='X Y Z' values2='X Y Z' join=1not2 out=3d_anti_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create the footprint for all sources except those where the `MASK` column is non-zero.",
        "response": "stilts mocshape in=masked_data.fits icmd='select MASK==0' shape=point coords='array(RA,DEC)' out=unmasked_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot density contours on an all-sky Aitoff plot, setting the scaling to linear and coloring the contours white.",
        "response": "stilts plot2sky in=survey.fits projection=aitoff layer=contour lon=RA lat=DEC scaling=linear color=white out=white_linear_aitoff_contours.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert a Parquet file to a Feather file.",
        "response": "stilts tcopy in=input.parquet out=output.fea",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Search the MAST PanSTARRS DR2 TAP service within a radius of 0.0001 radians of RA 220, Dec 30.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 lon=220.0 lat=30.0 radius='radiansToDegrees(0.0001)' out=ps1dr2_rad_conv.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"radiansToDegrees(0.0001)\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Can `mocshape` read a gzipped CSV file?",
        "response": "Yes, STILTS commands automatically decompress gzipped inputs. `stilts mocshape in=data.csv.gz ifmt=csv shape=point coords='array(ra,dec)' out=data.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine tables and then add a column 'IS_FAINT' that is true if 'MAG' > 20 and false otherwise.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol IS_FAINT \"MAG > 20\"' out=faint_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 20\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Copy a remote FITS file via HTTPS URL and convert it to ECSV format.",
        "response": "stilts tcopy in=https://data.archive/remote.fits out=remote_data.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine a data table with three columns ('A', 'B', 'C') and another table where 'A' is actually 'A_old', renaming it first.",
        "response": "stilts tcatn nin=2 in1=t_new.fits in2=t_old.fits icmd2='colmeta -name A A_old' out=a_normalized.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match four tables T1-T4 using anisotropic 2D matching (2d_anisotropic) on (FLUX_X, FLUX_Y) with tolerances 10 and 20 units.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=2d_anisotropic params='10 20' values1='FLUX_X FLUX_Y' values2='FLUX_X FLUX_Y' values3='FLUX_X FLUX_Y' values4='FLUX_X FLUX_Y' in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits out=anisotropic_flux_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge tables, adding a column that contains the unique string identifier derived from the input file location, ensuring the output is ASCII format.",
        "response": "stilts tcat ifmt=fits in='obs_1.fits obs_2.fits' uloccol=ObsID ofmt=ascii out=obs_id_ascii.txt",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 88.5066 and latitude 86.256. Please use a search radius of 0.8412 degrees. Instead of a file, just give me the checksum.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=88.5066 lat=86.256 radius=0.8412 omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find all possible pairs (find=all) between A.fits and B.fits (exact ID match). After matching, calculate a checksum of the output table.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID find=all omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot vectors in the Galactic system, converting input RA/DEC, and using thick lines (thick=3).",
        "response": "stilts plot2sky in=data.fits viewsys=galactic datasys=equatorial layer=skyvector lon=RA lat=DEC dlon=PM_L dlat=PM_B unit=mas thick=3 out=gal_pm_thick.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a MOC (order 7) for all sources, but use only the RA and DEC columns, discarding all others in an internal processing step.",
        "response": "stilts pixfoot in=full_table.fits icmd='keepcols \"RA DEC\"' ra=RA dec=DEC order=7 out=minimal_columns.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols RA DEC\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match two catalogs using elliptical error regions (skyellipse). T1 position angle (PA) is in degrees; T2 PA is in radians. Convert T2 PA to degrees.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='replacecol PA radiansToDegrees(PA)' matcher=skyellipse params=10 values1='RA DEC A B PA' values2='RA DEC A B PA' out=skyellipse_radians_fix.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Submit an asynchronous query to the European HST Archive, explicitly using the TAP 1.1 interface version, and requesting authentication.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT TOP 5 * FROM ivoa.ObsCore' interface=tap1.1 auth=true out=hst_auth_11.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge a table of observation positions (pos.fits) with a table created by looping 500 times. Name the loop index column 'LOOP_I'.",
        "response": "stilts tcatn nin=2 in1=pos.fits in2=:loop:500 ocmd='colmeta -name LOOP_I $0' out=pos_loop_joined.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert the input ASCII file to VOTable, keeping only columns with UCD 'phot.mag'.",
        "response": "stilts tpipe in=in.dat ifmt=ascii cmd='keepcols ucd$phot_mag*' ofmt=votable out=out.vot",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the length of the string array column 'BAND_NAMES' into a scalar column 'NBANDS'.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol NBANDS size(BAND_NAMES)' out=band_count.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Draw a line fit (linearfit) weighted by the reciprocal of the ERROR column squared (1/ERROR^2).",
        "response": "stilts plot2plane in=data.fits layer=linearfit x=X y=Y weight='1/(ERROR*ERROR)' out=inverse_sq_weighted_fit.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Can `mocshape` generate a footprint from image files?",
        "response": "No, `mocshape` requires a tabular input with columns specifying sky shapes. It cannot directly process image files like FITS images.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Add a column 'FLUX_LOG_NORM' calculated as the base-10 logarithm of 'FLUX', divided by the mean flux (requires caching).",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='addcol FLUX_LOG_NORM \"log10(FLUX) / mean(FLUX)\"' out=log_normalized.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_LOG_NORM log10(FLUX) / mean(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Group match three catalogs (C1-C3). In C2, add a custom column 'LOG_MAG' = log10(MAG) before grouping on this column (1D match, 0.05 tolerance).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.05 in1=C1.fits in2=C2.fits icmd2='addcol LOG_MAG log10(MAG)' in3=C3.fits values1=LOG_MAG values2=LOG_MAG values3=LOG_MAG out=log_mag_1d_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot sources where position angle (PA) is greater than 90 degrees, using open crosses.",
        "response": "stilts plot2sky in=rot_data.fits icmd='select \"PA > 90.0\"' layer=mark lon=RA lat=DEC shape=open_cross out=pa_filtered_sky.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"PA > 90.0\" (The name \"PA\" is unknown.)\n        (The name \"PA\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Read a table from a PDS4 file, specifically selecting table #1 by index.",
        "response": "stilts tcopy in=pds_archive.xml#1 ifmt=pds4 out=pds_table1.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot density contours on a Galactic view, restricting the view to 60 degrees radius centered at L=10, B=5.",
        "response": "stilts plot2sky in=data.fits viewsys=galactic clon=10.0 clat=5.0 radius=60.0 layer=contour lon=L lat=B out=gal_zoom_60deg.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"L\"\n    (The name \"L\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot sources and label them with their RA coordinate, anchored to the east side of the point.",
        "response": "stilts plot2sky in=data.fits layer_m=mark lon_m=RA lat_m=DEC layer_l=label lon_l=RA lat_l=DEC label_l=RA anchor_l=east out=ra_label_east.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Read a table using the loop scheme (:loop:1000) and convert it directly to an ASCII file on standard output.",
        "response": "stilts tcopy in=:loop:1000 ofmt=ascii out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Set the column metadata 'DEC' unit to 'deg' and description to 'Declination ICRS J2000'.",
        "response": "stilts tpipe in=data.fits cmd='colmeta -units deg -desc \"Declination ICRS J2000\" DEC' out=dec_meta_updated.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, convert the position angle column (PA_DEG) from 0-360 degrees to radians, and rename the column to PA_RAD.",
        "response": "stilts tpipe in=angles.fits cmd='replacecol PA_DEG degreesToRadians(PA_DEG)' cmd='colmeta -name PA_RAD PA_DEG' out=angles_rad.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Sort a large catalog by 'FLUX' and keep only the top 50 brightest sources efficiently using `sorthead`.",
        "response": "stilts tpipe in=deep.fits cmd='sorthead 50 -down FLUX' out=top_50_brightest.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plotting vectors scaled by velocity magnitude, thick lines.",
        "response": "stilts plot2plane in=flow.fits layer=xyvector x=X y=Y xdelta=VX ydelta=VY autoscale=true thick=2 out=auto_scaled_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve metadata about the ObsCore table from the ESA Euclid Archive.",
        "response": "stilts tapquery tapurl=https://eas.esac.esa.int/tap-server/tap adql='SELECT * FROM TAP_SCHEMA.columns WHERE table_name = ''ivoa.ObsCore''' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match three catalogs with per-object errors. `c1.fits` has error `err1`, `c2.fits` has `err2`, and `c3.fits` has `err3`. The scale is 5 arcsec.",
        "response": "stilts tmatchn nin=3 in1=c1.fits in2=c2.fits in3=c3.fits multimode=group matcher=skyerr params=5 values1='ra dec err1' values2='ra dec err2' values3='ra dec err3' out=group_error_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Remove the column 'FLUX' and add a new one with the same name containing the value '100.0' for all rows.",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLUX 100.0' out=constant_flux_col.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the Subaru SAGA database for a sample of stars, and locally calculate the surface gravity in cgs units (log10(g)) using the LOGG column.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 50 LOGG FROM saga.stellar_abundances' ocmd='addcol GRAVITY_CGS \"pow(10, LOGG)\"' out=saga_gravity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'LOGG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol GRAVITY_CGS pow(10, LOGG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'LOGG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a MOC from the point positions in `my_catalog.fits`. The coordinate columns are RA_DEG and DEC_DEG.",
        "response": "stilts mocshape in=my_catalog.fits shape=point coords='array(RA_DEG, DEC_DEG)' out=point_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Can you explain the purpose of the `multi` parameter in `tcat`?",
        "response": "The `multi=true` parameter tells `tcat` to use all tables from each input file, not just the first one. This is for file formats that can contain multiple tables, like FITS or VOTable [2, 4].",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcat"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (T1 ref). T2 and T3 are remote URLs. Output the total row count.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=http://remote.org/T2.fits in3=http://remote.org/T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert a FITS file to LaTeX output, ensuring it outputs a complete, compilable document.",
        "response": "stilts tcopy in=fits.fits out=compilable.tex ofmt='latex(standalone=true)'",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find all table names in the European JWST Archive and output the result in plain ASCII text format to standard output.",
        "response": "stilts tapquery tapurl=https://jwst.esac.esa.int/server/tap adql='SELECT table_name FROM TAP_SCHEMA.tables' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert a time column from ISO-8601 string format to MJD, assuming the column is called 'DATE_STR'.",
        "response": "stilts tpipe in=log.fits cmd='addcol MJD isoToMjd(DATE_STR)' out=mjd_log.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match T1 and T2. T2 contains a magnitude error in percent (E_PCT). Convert E_PCT to linear error E_LIN (E_PCT/100) and match on E_LIN (1d_err).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='addcol E_LIN E_PCT/100.0' matcher=1d_err params=1 values1='MAG E_MAG' values2='MAG E_LIN' out=percent_error_1d_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Query MAST PanSTARRS DR1 and apply a post-processing command to calculate the square root of the 'g_mean_mag' locally.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 10 g_mean_mag FROM dbo.detection_object' ocmd='addcol SQRT_MAG sqrt(g_mean_mag)' out=ps1_sqrt_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a table and output it using the **obsolete Mirage format**.",
        "response": "stilts tcopy in=input.fits out=output.mirage ofmt=mirage",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine tables, and add a column 'LOG_MAG' calculated using log10(MAG). Ensure this new column has a suitable description metadata.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='addcol -desc \"Logarithm of magnitude\" LOG_MAG log10(MAG)' out=log_mag_metadata.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot a small region (0.01 degree radius) centered on L=10, B=10 in Galactic coordinates, suppressing the default wire frame (frame=false).",
        "response": "stilts plot2sky viewsys=galactic clon=10 clat=10 radius=0.01 layer=mark lon=L lat=B frame=false out=no_frame_zoom.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Create a point MOC and include a column conversion filter (addskycoords) before processing the input coordinates.",
        "response": "stilts mocshape in=fk4.fits icmd='addskycoords fk4 icrs RA_B1950 DEC_B1950 RA_J2000 DEC_J2000' shape=point coords='array(RA_J2000, DEC_J2000)' out=fk4_converted_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot points with density shading, applying the 'Square' scaling function to the density values before coloring.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=square out=square_density_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Find 20 bright TESS Input Catalog (TIC) sources and retrieve them synchronously using an explicit ADQL language declaration.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 20 tid, tmag FROM tic.v8 WHERE tmag < 12' sync=true language=ADQL out=tic_bright_sync.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I want the MOC for all sources in `my_data.fits` that are NOT near the Andromeda galaxy (within 1 degree).",
        "response": "stilts mocshape in=my_data.fits icmd='select \"skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1\"' shape=point coords='array(RA,DEC)' out=not_andromeda.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1\n\nUsage: select <expr>\n    (Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits. A has proper motions PMRA, PMDEC. Match on position AND proper motion total magnitude (sky+1d).",
        "response": "stilts tmatch2 in1=A.fits icmd1='addcol PM_TOT \"hypot(PMRA, PMDEC)\"' in2=B.fits matcher=sky+1d params='2 10' values1='RA DEC PM_TOT' values2='RA DEC PM_TOT' out=pos_pm_total_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOT hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Concatenate two tables. For the first table, convert its Galactic coordinates (GLON, GLAT) to Ecliptic coordinates (ELON, ELAT) before combining.",
        "response": "stilts tcatn nin=2 in1=gal.fits icmd1='addskycoords galactic ecliptic GLON GLAT ELON ELAT' in2=ecl.fits out=ecl_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "What's the command to make a MOC from the `RA_GAL` and `DEC_GAL` columns?",
        "response": "stilts mocshape in=galactic_cat.fits icmd='addskycoords galactic icrs RA_GAL DEC_GAL RA_ICRS DEC_ICRS' shape=point coords='array(RA_ICRS,DEC_ICRS)' out=galactic_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Draw density contours on a Plate Carr\u00e9e projection, setting the scaling to 'equal' area levels.",
        "response": "stilts plot2sky in=dense_data.fits projection=car layer=contour lon=RA lat=DEC scaling=equal out=equal_area_car_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve the 10 earliest ObsCore records from the ESO archive by ordering the results remotely by minimum observation time.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 * FROM ivoa.ObsCore ORDER BY t_min ASC' out=eso_earliest.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve the metadata (column definitions and parameters) for the table schemas exposed by the KSB-ROB TAP service.",
        "response": "stilts tapquery tapurl=http://vo-tap.oma.be/tap adql='SELECT TOP 1 * FROM TAP_SCHEMA.tables' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Concatenate two tables, retaining only columns with the UCD 'pos.eq.ra' and renaming them 'RA_DEGS'.",
        "response": "stilts tcatn nin=2 in1=c1.fits icmd1='keepcols ucd$pos_eq_ra' in2=c2.fits icmd2='keepcols ucd$pos_eq_ra' ocmd='colmeta -name RA_DEGS ucd$pos_eq_ra' out=ra_renamed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Select 100 rows from the Gaia `vari_summary` table.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 100 * FROM gaiadr3.vari_summary'",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Crossmatch two FITS files, `survey_A.fits` and `survey_B.fits`, on sky position with a 2 arcsecond radius. The coordinate columns in both are RA and DEC. Save the result to `matched_surveys.fits`.",
        "response": "stilts tmatch2 in1=survey_A.fits in2=survey_B.fits out=matched_surveys.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC'",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Join T_main and T_aux. T_aux is a simulated clifford attractor (:attractor:1e4,clifford). Match on X, Y coordinates (2D, 1 unit tolerance).",
        "response": "stilts tmatch2 in1=T_main.fits in2=:attractor:1e4,clifford matcher=2d params=1 values1='X Y' values2='x y' out=attractor_match_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I want to match two tables and write the output as a LaTeX document.",
        "response": "stilts tmatch2 in1=small_cat1.fits in2=small_cat2.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' ofmt=latex out=match_report.tex",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Convert an IPAC table 'obs.tbl' into a standard FITS table.",
        "response": "stilts tcopy in=obs.tbl ifmt=ipac out=obs_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Copy a table from a system command pipeline that outputs VOTable data, and save it as FITS.",
        "response": "cat pipeline_out.vot | stilts tcopy in=- ifmt=votable out=piped_votable.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "How do I plot the same data twice, once as points and once as a density contour?",
        "response": "stilts plot2plane in=data.fits x=X y=Y layer_m=mark layer_c=contour",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the Gaia service and then load the results directly into TOPCAT.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 500 * FROM gaiadr3.gaia_source WHERE parallax > 100' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 stellar abundance records from the Subaru SAGA database and locally calculate the logarithm of the effective temperature (`Teff`).",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 10 Teff FROM saga.stellar_abundances' ocmd='addcol LOG_TEFF log10(Teff)' out=saga_log_t.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Search the European JWST Archive TAP around RA 150, Dec 60, using 15 arcseconds as the radius, and retrieve a statistical summary of the result.",
        "response": "stilts cone serviceurl=https://jwst.esac.esa.int/server/tap lon=150.0 lat=60.0 radius='15.0 / 3600.0' omode=stats",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"15.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Perform an asynchronous TAP query and set the polling interval to 10 seconds.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT * FROM gaiadr3.gaia_source' sync=false poll=10000",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC for all entries in a catalog except those at the celestial poles (`abs(DEC) > 89`).",
        "response": "stilts pixfoot in=allsky.fits icmd='select \"abs(DEC) <= 89\"' out=no_poles_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '89'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC) <= 89\n\nUsage: select <expr>\n    (Unused arguments: '<=' '89'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Synchronously fetch data from the PADC TAP RR server and output the result in IPAC table format.",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT TOP 5 * FROM TAP_SCHEMA.tables' sync=true ofmt=ipac out=padc_rr_sync.ipac",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need to perform a strict match in position and flux. Match if `skyDistanceDegrees(...) < 2` AND `abs(FLUX_1 - FLUX_2) < 10`. Can I do this?",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky+1d params='2 10' values1='RA DEC FLUX_1' values2='RA DEC FLUX_2' out=strict_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "What's the simplest `tmatchn` command?",
        "response": "A simple command would be: `stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=group matcher=sky params=5 values1='ra dec' values2='ra dec' values3='ra dec' out=out.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate a histogram of 'TEMPERATURE', normalized such that the total area under the bars equals one.",
        "response": "stilts plot2plane in=plasma.fits layer=histogram x=TEMPERATURE normalise=area out=area_norm_temp_hist.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"TEMPERATURE\"\n    (The name \"TEMPERATURE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Convert a FITS file to HTML format, ensuring the output is a **standalone** HTML document.",
        "response": "stilts tcopy in=summary.fits ofmt='html(standalone=true)' out=summary.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Add a boolean column 'IS_FAINT' that is true if 'FLUX' is less than its mean value across the entire table (requires initial pass).",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='addcol IS_FAINT \"FLUX < mean(FLUX)\"' out=faint_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT FLUX < mean(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot error ellipses (skycorr layer, unit=mas), setting the viewing system to Ecliptic, but input data is Equatorial.",
        "response": "stilts plot2sky viewsys=ecliptic datasys=equatorial layer=skycorr lon=RA lat=DEC lonerr=ERR_R laterr=ERR_D corr=C unit=mas out=eq_to_ecl_corr.png",
        "chat.jar": "fixed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Retrieve metadata about all columns in ESO TAP Catalogue service.",
        "response": "stilts tapquery tapurl=http://archive.eso.org/tap_cat adql='SELECT * FROM TAP_SCHEMA.columns' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate three tables and apply the formula `y = asinh(x/a)` to column 'FLUX' in all three inputs, using `a=1e-5`.",
        "response": "stilts tcatn nin=3 in1=D1.fits icmd1='replacecol FLUX asinh(FLUX/1e-5)' in2=D2.fits icmd2='replacecol FLUX asinh(FLUX/1e-5)' in3=D3.fits icmd3='replacecol FLUX asinh(FLUX/1e-5)' out=asinh_output.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T2 is a remote FITS file, T3 is piped via standard input (CSV format).",
        "response": "cat stream.csv | stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits in2=http://remote.org/T2.fits in3=- ifmt3=csv values1='RA DEC' values2='RA DEC' values3='RA DEC' out=piped_match_3way.fits",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the PADC TAP Maser service for maser catalogue sources whose velocity (`v_lsr`) is less than 5 km/s.",
        "response": "stilts tapquery tapurl=http://voparis-tap-maser.obspm.fr/tap adql='SELECT * FROM maser_catalog WHERE v_lsr < 5.0' out=maser_low_vel.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a FITS file from a URL to a local CSV file.",
        "response": "stilts tcopy in=https://example.com/archive/data.fit ofmt=csv out=data.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine three tables. After concatenation, transpose the final table so rows become columns.",
        "response": "stilts tcat in='v1.fits v2.fits v3.fits' ocmd=transpose out=transposed_result.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate two tables, T_LEFT and T_RIGHT. Sort the entire result by 'ID' ascending.",
        "response": "stilts tcatn nin=2 in1=T_LEFT.fits in2=T_RIGHT.fits ocmd='sort ID' out=id_sort_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge spectroscopic data, using an icmd to ensure all column names are syntactically safe (e.g., replace spaces with underscores).",
        "response": "stilts tcat in='spec*.csv' icmd=fixcolnames out=safe_spec_names.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine table A and table B. Table A has an extra column 'FLAG' I want to drop before combining.",
        "response": "stilts tcatn nin=2 in1=table_A.fits icmd1='delcols FLAG' in2=table_B.fits out=no_flag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "My first table has columns 'RA', 'DEC', but the second has 'ALPHA', 'DELTA'. How can I concatenate them?",
        "response": "stilts tcatn nin=2 in1=table1.fits in2=table2.fits icmd2='colmeta -name RA ALPHA; colmeta -name DEC DELTA' ocmd='keepcols \"RA DEC MAG\"' out=aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate data from two files, listing the original full file location in a column named 'SOURCE_LOC'.",
        "response": "stilts tcatn nin=2 in1=/path/to/archive/dataA.fits in2=/path/to/archive/dataB.fits loccol=SOURCE_LOC out=combined_full_loc.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Copy a table and output it to a GZIP-compressed Parquet file, ensuring dictionary encoding is used.",
        "response": "stilts tcopy in=input.fits ofmt='parquet(compression=gzip,usedict=true)' out=dict_gzip.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Read a table, keep only the rows that have identical values in the 'SOURCE_ID' column and the 'RA' column.",
        "response": "stilts tpipe in=duplicates.fits cmd='uniq \"SOURCE_ID RA\"' out=unique_id_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: uniq SOURCE_ID RA\n\nUsage: uniq [-count] [<colid-list>]\n    (Unused arguments: 'RA'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I have FITS files for different filters: `u_band.fits`, `g_band.fits`, `r_band.fits`. Each has a 'Filter' column with a single value ('u', 'g', 'r'). I want to stack them.",
        "response": "stilts tcat in=\"u_band.fits g_band.fits r_band.fits\" out=ugr_photometry.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a plot using the KDE layer with a fixed smoothing width of 0.1 units.",
        "response": "stilts plot2plane in=data.fits layer=kde x=VALUE smooth=0.1 out=kde_fixed_smooth.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Start an asynchronous query on the European HST Archive and prevent the job from ever being automatically deleted.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT TOP 100 * FROM ivoa.ObsCore' delete=never out=hst_persistent.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read an ASCII file where fields are separated by **multiple spaces** (using default ASCII handler).",
        "response": "stilts tcopy in=spaced.txt ifmt=ascii out=spaced.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Filter rows to keep only those with 'MAG_ERR' greater than 0.1 and output the resultant metadata.",
        "response": "stilts tpipe in=data.fits cmd='select \"MAG_ERR > 0.1\"' omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR > 0.1\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Upload a table 'my_bright_stars.vot' to AIP Gaia, filtering the local file before upload to keep only rows where the 'MAG' column is less than 12.",
        "response": "stilts tapquery tapurl=https://gaia.aip.de/tap adql='SELECT g.* FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.mydata AS u ON g.source_id = u.source_id' nupload=1 upload1=my_bright_stars.vot upname1=mydata ucmd1='select \"MAG < 12\"' out=aip_filtered_upload.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 12\n\nUsage: select <expr>\n    (Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge tables and, after combining, enforce that the column 'ERROR' contains only non-negative values, replacing negatives with null.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='replacecol ERROR \"max(ERROR, 0.0)\"' out=non_negative_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol ERROR max(ERROR, 0.0)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '0.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "I need the exact number of records from the MAST PanSTARRS DR2 TAP service within 10 arcseconds of RA 200, Dec -50.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 lon=200.0 lat=-50.0 radius='10.0 / 3600.0' omode=count",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "How do I find objects in `catalog.fits` that are within 5 arcseconds of any object in `clusters.fits`?",
        "response": "stilts tmatch2 in1=catalog.fits in2=clusters.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' find=all join=1and2 ocmd='sort ID_1' ocmd='uniq ID_1' out=objects_near_clusters.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot markers sized by FLUX, coloring them flat green, displaying the result in a GUI window.",
        "response": "stilts plot2sky in=sources.fits layer=size lon=RA lat=DEC size=FLUX shading=flat color=green omode=swing",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3, T4. Use strict positional and 1D magnitude matching (sky*1d, 1 arcsec, 0.05 mag).",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky*1d params='1 0.05' values1='RA DEC MAG' values2='RA DEC MAG' values3='RA DEC MAG' values4='RA DEC MAG' in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits out=strict_combined_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch `t1.fits` and `t2.fits` with a 10 arcsec radius. For table 1, use columns `RA_1`, `DEC_1`. For table 2, the coordinates are in a single column `pos_j2000` as a 2-element array. How do I do that?",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=10 values1='RA_1 DEC_1' values2='pos_j2000 pos_j2000[7]' out=array_coord_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find 10 entries from the ASKAP Science Data Archive (CASDA) where the observation type is 'Science' and send the resulting table directly to TOPCAT for visualization.",
        "response": "stilts tapquery tapurl=https://casda.csiro.au/casda_vo_tools/tap adql='SELECT TOP 10 * FROM obs_core WHERE obspgm = ''Science''' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine tables, adding a column 'JD' calculated from 'MJD' plus the required offset.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='addcol JD \"MJD + 2400000.5\"' out=jd_from_mjd.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol JD MJD + 2400000.5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Retrieve 10 recent ObsCore records (MJD > 58000.0) from the JVO ALMA service.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/alma adql='SELECT TOP 10 * FROM alma.obscore WHERE t_min > 58000.0' out=alma_recent.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy data from a remote GZIPped VOTable and output it to standard output as text.",
        "response": "stilts tcopy in=http://remote.org/compressed.vot.gz ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Query SIMBAD TAP using Ecliptic Lon 0, Lat 0, with 10 milli-arcseconds radius.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=0.0 lat=0.0 radius='10.0 / 3600000.0' skysys=ecliptic out=simbad_10mas_ecl.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Match four tables using 1D position (X) and 2D components (Y, Z) combined (1d+2d, 1 unit X, 5 units YZ).",
        "response": "stilts tmatchn nin=4 multimode=group matcher=1d+2d params='1 5' values1='X Y Z' values2='X Y Z' values3='X Y Z' values4='X Y Z' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits out=mixed_dimension_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Perform a sky match and for the output table, rename the `ID_1` column to `PRIMARY_ID` and `ID_2` to `SECONDARY_ID`.",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' ocmd='colmeta -name PRIMARY_ID ID_1; colmeta -name SECONDARY_ID ID_2' out=renamed_id_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Copy a table from a simulated sky catalog (:skysim:100) to a local VOTable.",
        "response": "stilts tcopy in=:skysim:100 out=sim_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine three tables (t1.fits, t2.fits, t3.fits). In t2, rename the 'ERR_FLUX' column to 'FLUX_ERROR' and convert it from Jy to mJy before joining.",
        "response": "stilts tcatn nin=3 in1=t1.fits in2=t2.fits icmd2='replacecol FLUX_ERROR \"ERR_FLUX * 1000\"' in3=t3.fits out=combined.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_ERROR ERR_FLUX * 1000\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Generate a MOC for all sources with a parallax greater than 100 mas.",
        "response": "stilts mocshape in=gaia.fits icmd='select \"PARALLAX > 100\"' shape=point coords='array(ra,dec)' out=nearby_stars.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PARALLAX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 356.8431 and latitude -26.7934. Please use a search radius of 0.0413 degrees. Save the results to a votable file called query_results_56.votable. The coordinates are in the fk4 system.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=356.8431 lat=-26.7934 radius=0.0413 skysys=fk4 omode=out ofmt=votable out=query_results_56.votable",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 using sky error quadrature (skyerr_q). Input columns RA, DEC, and POS_ERR.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=skyerr_q params=1 values1='RA DEC POS_ERR' values2='RA DEC POS_ERR' values3='RA DEC POS_ERR' in1=T1.fits in2=T2.fits in3=T3.fits out=skyerr_q_match_full.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I have a catalog of globular clusters. Generate a MOC with a 0.5 degree radius around each.",
        "response": "stilts mocshape in=globulars.fits shape=circle coords='array(RA,DEC,0.5)' out=globular_regions.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Group match three catalogs (C1, C2, C3). Filter C1 to keep only rows where the calculated magnitude MAG_R < 18.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=2 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=C1.fits icmd1='select \"MAG_R < 18\"' in2=C2.fits in3=C3.fits out=C1_bright_only_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_R < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Create a MOC from the first half of my catalog.",
        "response": "stilts pixfoot in=full_cat.fits icmd='select \"$0 <= ($nrow/2)\"' out=first_half.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '($nrow/2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 <= ($nrow/2)\n\nUsage: select <expr>\n    (Unused arguments: '<=' '($nrow/2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match four tables using Cartesian 3D coordinates (X, Y, Z) within 20 units. T4 output columns prefixed '_IV'.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=3d params=20 values1='X Y Z' values2='X Y Z' values3='X Y Z' values4='X Y Z' in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits fixcols=dups suffix4=_IV out=d4_3d_suffixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Use synthetic sky data, calculate the proper motion vector magnitude (PM_TOTAL), and delete the individual PM components.",
        "response": "stilts tpipe in=:skysim:1000 cmd='addcol PM_TOTAL \"hypot(pmra, pmdec)\"' cmd='delcols \"pmra pmdec\"' out=sim_pm_total.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOTAL hypot(pmra, pmdec)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Map observation coverage defined by STC-S strings in an ECSV file, setting the output to CDS JSON format.",
        "response": "stilts mocshape in=obs.ecsv ifmt=ecsv shape=stc-s coords=REGION_STRING mocfmt=cds_json out=obs_footprint.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Retrieve the names and types of all tables available on the PADC Astro server and output the result in LaTeX format.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT table_name, table_type FROM TAP_SCHEMA.tables' ofmt=latex out=tables.tex",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find the MOC for targets within 3 arcseconds, converted from 3000 mas.",
        "response": "stilts pixfoot in=targets.fits ra=RA dec=DEC radius='3000.0 / 3600000.0' out=targets_3as.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Match two catalogs using position and parallax (sky3d). T1 parallax is in mas, T2 distance is in Mpc. Convert T2 distance to parsec before matching (1 Mpc tolerance).",
        "response": "stilts tmatch2 in1=C1.fits in2=C2.fits icmd2='replacecol DIST_PC DIST_MPC*1e6' matcher=sky3d params=1 values1='RA DEC 1000/PLX' values2='RA DEC DIST_PC' out=parallax_distance_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine two tables, but replace the 'RA_STRING' column in the second table with a numeric degree value.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits icmd2='replacecol RA hmsToDegrees(RA_STRING)' ocmd='keepcols \"RA DEC\"' out=numeric_ra.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Match T_ref against T_sup. T_ref position errors (E_POS) are given in arcminutes. Convert to degrees inline before skyerr matching.",
        "response": "stilts tmatch2 in1=T_ref.fits in2=T_sup.fits matcher=skyerr params=1 values1='RA DEC E_POS/60' values2='RA DEC E_POS/3600.0' out=inline_arcmin_error.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate a plot with 1-pixel markers.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y size=0.5",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Join T_A (Parquet) and T_B (VOTable). Match exactly on 'OBS_KEY'. Output to standard output as text.",
        "response": "stilts tmatch2 ifmt1=parquet in1=T_A.parquet in2=T_B.vot matcher=exact values1=OBS_KEY values2=OBS_KEY ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "What's the command to convert a CDF file into a VOTable?",
        "response": "stilts tcopy in=space_data.cdf out=space_data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. Include all columns but rename conflicting columns with suffixes '_1', '_2', '_3'.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_1 suffix2=_2 suffix3=_3 values1='RA DEC' values2='RA DEC' values3='RA DEC' out=numbered_suffixes_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Show me the groups of objects that exist in `cat_u.fits` and `cat_g.fits`, but specifically DO NOT have a counterpart in `cat_r.fits`.",
        "response": "stilts tmatchn nin=3 in1=cat_u.fits in2=cat_g.fits in3=cat_r.fits multimode=group matcher=sky params=1 values1='ra dec' values2='ra dec' values3='ra dec' join1=match join2=match join3=nomatch out=ug_not_r_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve the statistical summary (min, max, mean) of the 'J' magnitude column for 2MASS sources near the Galactic Centre from VizieR.",
        "response": "stilts tapquery tapurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap adql='SELECT Jmag FROM \"II/246/out\" WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 266.417, -29.008, 0.01))' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine two ASCII tables, using single quotes as quotes and the pipe '|' as a delimiter.",
        "response": "stilts tcat ifmt='csv(delimiter=|)' in='quoted1.txt quoted2.txt' out=pipe_quoted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Submit a short asynchronous job to the PADC RR server and set the polling interval to 500 milliseconds (0.5 seconds).",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT TOP 5 * FROM TAP_SCHEMA.tables' poll=500 out=padc_rr_fast_poll.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate multiple tables, ensuring lazy reading is enabled for input files listed in 'big_list.txt'.",
        "response": "stilts tcat in=@big_list.txt lazy=true out=lazy_list_merge.fits",
        "chat.jar": "fixed",
        "error": "Error: big_list.txt (No such file or directory)\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Query the European JWST Archive for ObsCore entries and locally add a column `IS_HIGH_Z` that is true if `REDSHIFT` > 7 (assuming redshift is provided).",
        "response": "stilts tapquery tapurl=https://jwst.esac.esa.int/server/tap adql='SELECT TOP 100 * FROM ivoa.ObsCore' ocmd='addcol IS_HIGH_Z \"REDSHIFT > 7.0\"' out=jwst_high_z_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '7.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_HIGH_Z REDSHIFT > 7.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '7.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a VOTable to a basic column-oriented FITS file.",
        "response": "stilts tcopy in=my_table.vot ofmt=colfits-basic out=col_basic.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine ASCII tables, forcing input fields delimited by a vertical bar ('|').",
        "response": "stilts tcat ifmt='csv(delimiter=|)' in='pipe1.txt pipe2.txt' out=pipe_delimited_output.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables and then calculate the minimum and maximum values of the 'LUMINOSITY' column.",
        "response": "stilts tcat in='l1.fits l2.fits' ocmd='keepcols \"LUMINOSITY\"' omode=stats ocmd='keepcols \"Minimum Maximum\"'",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Maximum'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Minimum Maximum\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Maximum'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "I need to do a crossmatch, but I want to see the progress because the tables are huge. The match is on `RA`, `DEC` with a 2\" radius.",
        "response": "stilts tmatch2 in1=huge1.fits in2=huge2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' progress=log out=huge_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Select rows where the value of 'MAG' is numerically smaller than 10.5.",
        "response": "stilts tpipe in=cat.fits cmd='select \"MAG < 10.5\"' out=bright_cat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '10.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 10.5\n\nUsage: select <expr>\n    (Unused arguments: '<' '10.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'POS_GAL_Y' containing the Y (Galactic) Cartesian component derived from RA/DEC/PARALLAX.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_Y \"icrsToGal(astromXYZ(RA, DEC, PARALLAX))\"' out=galactic_y_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_Y icrsToGal(astromXYZ(RA, DEC, PARALLAX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find MAST HSCv3 objects (point sources) within a small region of M31 (RA 10.6, Dec 41.2, radius 0.01 deg) and output the result using plain text to standard output.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 100 * FROM hsc_v3.point WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 10.6, 41.2, 0.01))' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Generate a MOC at HEALPix order 10 for sources in targets.vot.",
        "response": "stilts pixfoot in=targets.vot ra=RA dec=DEC order=10 out=targets_o10.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the Chandra Source Catalog (CSC) Release 2.1 service for sources near the Galactic Center and output the table's checksum.",
        "response": "stilts tapquery tapurl=https://cda.cfa.harvard.edu/csc21tap adql='SELECT ra, dec, flux_aper FROM csc.master_source WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 266.417, -29.008, 0.005))' omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate a FITS table and a remote ECSV file accessed via HTTPS, then output as Parquet.",
        "response": "stilts tcatn nin=2 in1=local.fits in2=https://archive.org/remote.ecsv ifmt2=ecsv ofmt=parquet out=remote_ecsv_parquet.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "I need the MOC for sources where the radius is $\text{log}_{10}(\text{FLUX})$ degrees, constrained by minimum flux of 10.",
        "response": "stilts pixfoot in=log_flux.fits icmd='select \"FLUX >= 10.0\"' ra=RA dec=DEC radius='log10(FLUX)' out=log_flux_radius.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX >= 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Query the PADC TAP RR server for table metadata, outputting the results in FITS format.",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.tables' ofmt=fits out=padc_rr_meta.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Convert a table from a strange attractor scheme (Rampe, 10e6 points) to a VOTable.",
        "response": "stilts tcopy in=':attractor:10e6,rampe' out=rampe.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch T1 and T2. T1 is an ECSV file, T2 is an IPAC table. Match exactly on NAME.",
        "response": "stilts tmatch2 in1=T1.ecsv ifmt1=ecsv in2=T2.tbl ifmt2=ipac matcher=exact values1=NAME values2=NAME out=ecsv_ipac_exact.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you generate the MOC for my data and save it as a JSON file named `celestial_tapestry.moc.json`?",
        "response": "stilts pixfoot in=my_data.fits mocfmt=json out=celestial_tapestry.moc.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a plot with Latin Modern Serif font style and the title formatted as LaTeX.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y title='\\textbf{My LaTeX Title}' texttype=latex fontstyle=serif out=latex_font_serif.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "From a list of source names, I want to resolve their coordinates using SIMBAD and add RA/DEC columns.",
        "response": "stilts tpipe ifmt=ascii in=source_names.txt cmd='addresolve NAME RA_SIMBAD DEC_SIMBAD' out=resolved_coords.txt",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Upload a table with magnitude data to ARI Gaia and join it to calculate the absolute magnitude for the remote sources.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT g.source_id, g.parallax, u.mag - 5 * LOG10(g.parallax) + 5 AS abs_mag FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.s1 AS u ON g.source_id = u.source_id' nupload=1 upload1=stars_with_mag.fits upname1=s1 out=abs_mags.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate three tables (obs1, obs2, obs3). In obs3, add a new column 'LOG_FLUX' which is the natural logarithm of FLUX.",
        "response": "stilts tcatn nin=3 in1=obs1.fits in2=obs2.fits in3=obs3.fits icmd3='addcol LOG_FLUX ln(FLUX)' out=log_flux_added.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Crossmatch T1 and T2 (2 arcsec sky). After match, include a calculated column 'MJD_DIFF' representing the time difference between the two sources.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' fixcols=dups suffix1=_1 suffix2=_2 ocmd='addcol MJD_DIFF \"abs(MJD_1 - MJD_2)\"' out=time_diff_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MJD_2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MJD_DIFF abs(MJD_1 - MJD_2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MJD_2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB_NEW' converting J magnitude to AB and then to absolute magnitude using distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_NEW \"MAG_J + VEGA_AB_J\"' cmd='addcol MAG_ABS_J_AB_NEW \"MAG_J_AB_NEW - distanceToModulus(DISTANCE_PC)\"' out=j_abs_ab_new.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_NEW MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the Konkoly TAP server for the entire structure of the first table it holds, outputting directly to TOPCAT.",
        "response": "stilts tapquery tapurl=http://nadir.konkoly.hu:80/tap adql='SELECT * FROM tap_schema.columns WHERE table_name = (SELECT TOP 1 table_name FROM TAP_SCHEMA.tables)' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T2 has columns in sexagesimal (RA_HMS, DEC_DMS). Convert T2 to degrees using an inline expression before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=5 values1='RA DEC' values2='hmsToDegrees(RA_HMS) dmsToDegrees(DEC_DMS)' values3='RA DEC' in1=T_REF.fits in2=T2.fits in3=T3.fits out=inline_sexagesimal_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Add a column 'LOG_ABS_FLUX' applying log scaling to the absolute value of flux.",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_ABS_FLUX log10(abs(FLUX))' out=log_abs_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a FITS file to an HTML table, specifying that the output should be just a table fragment (standalone=false).",
        "response": "stilts tcopy in=data.fits ofmt='html(standalone=false)' out=data_fragment.html",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch T1, T2, T3. T1 is reference. T2 requires calculation of distance modulus (DM) from redshift (Z) using flat cosmology (DM=5*log10(luminosityDistance(...))). Match on position + DM (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='1 0.5' in1=T1.fits in2=T2.fits icmd2='addcol DM \"luminosityDistance(Z, 70, 0.3, 0.7)\"' icmd2='replacecol DM \"5*log10(DM)-5\"' in3=T3.fits values1='RA DEC DM' values2='RA DEC DM' values3='RA DEC DM' out=cosmo_dm_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DM luminosityDistance(Z, 70, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve the top 50 records from the Subaru/XMM-Newton Deep Survey (SXDS) and output the result in IPAC format.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/sxds_v1 adql='SELECT TOP 50 * FROM sxds.point_source' ofmt=ipac out=sxds_sample.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read an MRT format file and convert it to ECSV.",
        "response": "stilts tcopy in=mrt_catalogue.txt ifmt=mrt out=mrt_output.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Upload a local table of 500 simulated sources to the ESA Gaia TAP service and crossmatch it, filtering the local table first to keep only sources with DEC > 0.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT g.source_id, u.ra_input FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.s_in AS u ON 1=CONTAINS(POINT(''ICRS'', g.ra, g.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.001))' nupload=1 upload1=:skysim:500 upname1=s_in ucmd1='select \"dec > 0\"' out=gaia_xmatch_filtered.fits",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select dec > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "What's the command to get a JSON MOC for the first 1000 objects in my `large_survey.colfits` file?",
        "response": "stilts pixfoot in=large_survey.colfits icmd='head 1000' mocfmt=json out=survey_sample.moc.json",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Can you query the cone search service at http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone? I'm looking for objects around longitude 321.7238 and latitude 73.2043. Please use a search radius of 1.1334 degrees. Save the results to a fits file called query_results_0.fits. Use verbosity level 1.",
        "response": "stilts cone servicetype=cone serviceurl=http://www3.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus/cone lon=321.7238 lat=73.2043 radius=1.1334 verb=1 omode=out ofmt=fits out=query_results_0.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert an ASCII catalogue 'star_list.txt' into a LaTeX tabular environment file.",
        "response": "stilts tcopy in=star_list.txt ifmt=ascii ofmt=latex out=stars.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "I need a histogram normalized by the maximum bin height.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE normalise=maximum",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot points, coloring them based on density and applying a linear function scaling to the density values.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=density densefunc=linear out=linear_density_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "How to combine three tables where the second one has a different magnitude column name?",
        "response": "stilts tcatn nin=3 in1=t1.fits in2=t2.fits icmd2='colmeta -name Vmag V_band' in3=t3.fits ocmd='keepcols Vmag' out=combined_vmag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert a VOTable to IPAC format, ensuring table parameters (metadata) are included in the output.",
        "response": "stilts tcopy in=meta.vot ofmt='ipac(params=true)' out=meta.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Concatenate data1.fits and data2.fits, then calculate the median absolute deviation (MAD) of the combined 'MAG' column.",
        "response": "stilts tcatn nin=2 in1=data1.fits in2=data2.fits ocmd='addcol MAG_ABS_DEV \"abs(MAG - median(MAG))\"' ocmd='keepcols \"MAG_ABS_DEV\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'median(MAG))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_ABS_DEV abs(MAG - median(MAG))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'median(MAG))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Draw polygon outlines from an array column, setting the minsize replacement shape to a filled diamond (size 5).",
        "response": "stilts plot2sky in=regions.fits layer=polygon coords=VERTICES polymode=outline minsize=5 minshape=filled_diamond out=diamond_minshape_poly.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter lon: null value not allowed\nUsage: lon=<deg-expr>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine tables table1.fits and table2.fits, renaming columns in table2 with proper motions 'PM_RA_MYS' and 'PM_DEC_MYS' to 'PM_RA' and 'PM_DEC' respectively.",
        "response": "stilts tcatn nin=2 in1=table1.fits in2=table2.fits icmd2='colmeta -name PM_RA PM_RA_MYS; colmeta -name PM_DEC PM_DEC_MYS' out=renamed_pm.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Set the output mode to stream the table directly to the running TOPCAT application.",
        "response": "stilts tpipe in=data.fits omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate two tables, adding a column 'PARALLAX_UAS' calculated from 'PARALLAX' (in mas) as 'PARALLAX * 1000.0'.",
        "response": "stilts tcat in='p1.fits p2.fits' ocmd='addcol PARALLAX_UAS \"PARALLAX * 1000.0\"' out=uas_parallax.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_UAS PARALLAX * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Find the MOC (order 15) for circles where the radius is the quadrature sum of X_ERR and Y_ERR (in degrees).",
        "response": "stilts pixfoot in=quad_errors.fits ra=RA dec=DEC radius='hypot(X_ERR, Y_ERR)' order=15 out=quadrature_radius.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Crossmatch five catalogs (c1-c5.fits) in group mode, forcing parallel execution.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=2 in1=c1.fits in2=c2.fits in3=c3.fits in4=c4.fits in5=c5.fits runner=parallel values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA DEC' out=parallel_group_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot markers and label them using the 'ID' column, ensuring labels are anchored exactly at the center of the marker.",
        "response": "stilts plot2sky in=named.fits layer_m=mark lon_m=RA lat_m=DEC size_m=3 layer_l=label lon_l=RA lat_l=DEC label_l=ID anchor_l=center out=centered_labels_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Copy a FITS file and save it as a local Parquet file, ensuring the output respects the default FITS format setting.",
        "response": "stilts tcopy in=input.fits out=output.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Run an asynchronous query on the European HST Archive for 10 ObsCore entries and set the destruction time to a specific ISO date.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' destruction='2025-12-31T23:59:59' out=hst_timed_job.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the PADC TAP RR server for tables, outputting the result to standard output in plain text format.",
        "response": "stilts tapquery tapurl=http://voparis-rr.obspm.fr/tap adql='SELECT TOP 5 table_name, description FROM TAP_SCHEMA.tables' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match two tables on 2D coordinates (X, Y) with independent anisotropic cuboid tolerances: 10 units in X, 5 units in Y.",
        "response": "stilts tmatch2 in1=D1.fits in2=D2.fits matcher=2d_cuboid params='10 5' values1='X Y' values2='X Y' out=anisotropic_cuboid_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find sources around RA 10, Dec 10, using a maximum radius equal to 1/2 arcminute.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ lon=10.0 lat=10.0 radius='1.0 / (2.0 * 60.0)' out=hsc_half_am.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / (2.0 * 60.0)\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Crossmatch T1 and T2 using position AND proper motion error in quadrature (skyerr_q+2d_err_q). Scale factor 1.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=skyerr_q+2d_err_q params='1 1' values1='RA DEC POS_ERR PMRA PMDEC PM_ERR' values2='RA DEC POS_ERR PMRA PMDEC PM_ERR' out=combined_quad_error_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I want to match three tables and then output the result in ECSV format.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=group matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' ofmt=ecsv out=3way_match.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Generate a very fine-grained MOC (order 18) for a tiny area around a specific target.",
        "response": "stilts pixfoot in=target_area.fits order=18 out=target_fine_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find the statistical summary (min, max, mean) of exposure times (t_exptime) for all Chandra ObsCore entries at MAST.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT t_exptime FROM ivoa.ObsCore WHERE facility_name = ''Chandra''' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I need the coverage area of sources with a fixed radius of 10 arcminutes, converted from $600$ arcseconds.",
        "response": "stilts pixfoot in=fixed_am.fits ra=RA dec=DEC radius='600.0 / 3600.0' out=fixed_10am.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Copy a VOTable to FITS, forcing the output to FITS-plus convention to store full VOTable metadata.",
        "response": "stilts tcopy in=rich.vot ofmt=fits-plus out=rich.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine two photometric tables, A and B. In the combined table, calculate the K-correction K(r) for redshift Z, using the g-r color value.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits ocmd='addcol KR_CORR \"kCorr(KCF_r, Z, KCC_gr, gmag-rmag)\"' out=kcorr_calculated.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Z,' 'KCC_gr,' 'gmag-rmag)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KR_CORR kCorr(KCF_r, Z, KCC_gr, gmag-rmag)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Z,' 'KCC_gr,' 'gmag-rmag)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Convert my table `results.fits` to an HTML file for a web page.",
        "response": "stilts tpipe in=results.fits ofmt=html out=results_report.html",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot a spherical grid (spheregrid) with 5 latitude and 10 longitude lines (meridians).",
        "response": "stilts plot2sphere layer_g=spheregrid nlat_g=5 nlon_g=10 out=high_density_spheregrid.png",
        "chat.jar": "executed successfully",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot positions using Aitoff projection, coloring by density using the Square Root scaling function (densefunc=sqrt).",
        "response": "stilts plot2sky in=survey.fits projection=aitoff layer=mark lon=RA lat=DEC shading=density densefunc=sqrt out=aitoff_sqrt_density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Query the MAST CAOM service using a large radius of 20 arcminutes and output the result directly to the terminal as plain text.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=10.0 lat=0.0 radius='20.0 / 60.0' ofmt=text out=-",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"20.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Submit an asynchronous query to the PADC helio server, setting the job execution duration to 1 hour (3600 seconds), displaying continuous progress.",
        "response": "stilts tapquery tapurl=http://voparis-tap-helio.obspm.fr/tap adql='SELECT * FROM some_solar_wind_table' progress=true executionduration=3600 out=helio_long_job.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'TIME_ISO_DATE' converting JD time 'TIME_JD' to ISO-8601 date-only format string.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_ISO_DATE mjdToDate(jdToMjd(TIME_JD))' out=iso_date.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find objects in the MAST TESS Input Catalog (TIC) around RA 195, Dec -60, with a radius of 10 mas, and count the resultant rows.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic lon=195.0 lat=-60.0 radius='10.0 / 3600000.0' omode=count",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"10.0 / 3600000.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find the coverage MOC (order 18) for circles with an extremely small fixed radius of 0.000001 degrees.",
        "response": "stilts pixfoot in=microdeg_fix.fits ra=RA dec=DEC radius=1.0e-6 order=18 out=microdeg_o18.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Check if a given angular distance column 'SEP_DEG' is always positive and assert it.",
        "response": "stilts tpipe in=measurements.fits cmd='assert \"SEP_DEG >= 0.0\"' out=positive_sep.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert SEP_DEG >= 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Join table_A (all rows) and table_B (matched rows only). T_A columns suffixed '_A'. T_B columns suffixed '_B'.",
        "response": "stilts tmatch2 in1=table_A.fits in2=table_B.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' join=all1 fixcols=all suffix1=_A suffix2=_B out=left_outer_suffixed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "For my list of galaxies, I need to add a column for luminosity distance, assuming H0=70, OmegaM=0.3, OmegaLambda=0.7.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol LUM_DIST_MPC luminosityDistance(z,70,0.3,0.7)' out=galaxies_dist.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Match T_A and T_B using position error quadrature (skyerr_q). Input columns are RA, DEC, and POS_ERR.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=skyerr_q params=1 values1='RA DEC POS_ERR' values2='RA DEC POS_ERR' out=skyerr_q_match_2.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine an ObsCore table with a supplementary data table, keeping only rows from the ObsCore table that successfully join.",
        "response": "stilts tcatn nin=2 in1=obscore.fits in2=suppl.fits out=filtered_obscore.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "How can I generate a MOC for circles whose radius is `0.1 * log10(FLUX)`?",
        "response": "stilts pixfoot in=flux_cat.fits radius='0.1 * log10(FLUX)' out=flux_scaled_radius.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Search the GAVO Data Center near RA 250, Dec 10, using 1.0 arcminute, and output the result using VOTable FITS serialization.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=250.0 lat=10.0 radius='1.0 / 60.0' ofmt='votable(format=FITS)' out=gavo_fits_votable.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot markers sized by the error column, using weighted shading where the weight is proportional to 1/FLUX.",
        "response": "stilts plot2sky in=data.fits layer=size lon=RA lat=DEC size=ERR shading=weighted weight='1.0/FLUX' out=inv_flux_weighted_size.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a MOC (order 12) for sources with a radius given by $\text{PLX} \times 0.001$ (Plx in arcsec).",
        "response": "stilts pixfoot in=plx_scaled.fits ra=RA dec=DEC radius='PLX * 0.001' out=plx_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Concatenate tables, filtering inputs to keep only rows where the row index (0-based) is less than 1000 in each input.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='select \"$0 < 1000\"' out=first_thousand_per_file.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 < 1000\n\nUsage: select <expr>\n    (Unused arguments: '<' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Join table1.fits with a random view of table2.fits.",
        "response": "stilts tcatn nin=2 in1=table1.fits in2=table2.fits icmd2=randomview out=random_view.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Use the assert filter to verify that all values in 'FLUX' are convertible to 32-bit integers without overflow.",
        "response": "stilts tpipe in=data.fits cmd='assert \"FLUX == toFloat(toInteger(FLUX))\"' out=float_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'toFloat(toInteger(FLUX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX == toFloat(toInteger(FLUX))\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'toFloat(toInteger(FLUX))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Can you query the cone search service at http://gaia.ari.uni-heidelberg.de/cone/search? I'm looking for objects around longitude 55.4489 and latitude 1.9008. Please use a search radius of 0.3621 degrees. Instead of a file, just give me the stats. Don't use compression for the download.",
        "response": "stilts cone servicetype=cone serviceurl=http://gaia.ari.uni-heidelberg.de/cone/search lon=55.4489 lat=1.9008 radius=0.3621 compress=false omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Create a MOC from all sources that are not flagged (`FLAG_COL == 0`).",
        "response": "stilts mocshape in=flags.fits icmd='select FLAG_COL==0' shape=point coords='array(RA,DEC)' out=unflagged.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine two tables, and then get a checksum of the final result.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Run a search and output the final table as an easy-to-read, standard CSV file.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=250.0 lat=40.0 radius=0.1 ofmt=csv out=simple_cone.csv",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Combine rows from data_1.vot and data_2.vot and add a column named 'DataSource' indicating the numerical order (1 or 2).",
        "response": "stilts tcat in=data_1.vot in=data_2.vot seqcol=DataSource out=sequenced_data.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Pair match T_MAIN against T_SUPP1, T_SUPP2. For T_MAIN, discard rows where 'FLAG' is true before it is used as reference.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T_MAIN.fits icmd1='select !FLAG' in2=T_SUPP1.fits in3=T_SUPP2.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=filtered_ref_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert a Parquet file to FITS, forcing the output to FITS-plus.",
        "response": "stilts tcopy in=input.parquet ofmt=fits-plus out=parquet_plus.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Join table_x.fits and table_y.fits. Before matching, filter table_x to only include sources with FLUX > 100. Match on sky coordinates pos_ra, pos_dec with a 3 arcsec tolerance.",
        "response": "stilts tmatch2 in1=table_x.fits icmd1='select \"FLUX > 100\"' in2=table_y.fits matcher=sky params=3 values1='pos_ra pos_dec' values2='pos_ra pos_dec' out=filtered_join.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T1 and T2. T1 position errors are in arcminutes. Convert them to arcseconds before skyerr matching (ERR_ARCSEC * 60).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='replacecol E_ARCSEC \"E_ARCMIN * 60\"' in2=T2.fits matcher=skyerr params=1 values1='RA DEC E_ARCSEC' values2='RA DEC E_ARCSEC' out=arcmin_converted_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '60'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol E_ARCSEC E_ARCMIN * 60\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '60'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match T1, T2, T3 (T1 ref). T2 contains magnitude in Vega, T3 in AB. Convert T2 to AB (MAG_AB = MAG_V + 0.03) before matching on position.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits in2=T2.fits icmd2='replacecol MAG_AB \"MAG_V + 0.03\"' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=vega_ab_aligned.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '0.03'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_AB MAG_V + 0.03\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' '0.03'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a table, calculate a new column 'LOG_R' (log base 10 of radius), filter out nulls, and rename the original 'R' column to 'OLD_R'.",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_R log10(R)' cmd='select !NULL_R' cmd='colmeta -name OLD_R R' out=log_r_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch T1.fits and T2.fits exactly on ID, but only return rows present in T1 that have no match in T2.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID join=1not2 out=T1_unmatched.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create a MOC for all sources that are not flagged (`FLAG_COL == 0`).",
        "response": "stilts mocshape in=flags.fits icmd='select FLAG_COL==0' shape=point coords='array(RA,DEC)' out=unflagged.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 13 MOC for all sources where 'FLUX' is non-null.",
        "response": "stilts mocshape in=flux_data.fits icmd='select !NULL_FLUX' shape=point coords='array(RA, DEC)' order=13 out=non_null_flux_o13.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter the input table to only keep rows where the proper motion (PM) is non-zero, then generate a MOC for 1 arcsecond circles.",
        "response": "stilts pixfoot in=pm_data.fits icmd='select \"PMRA != 0 || PMDEC != 0\"' ra=RA dec=DEC radius='1.0 / 3600.0' out=pm_filtered_1as.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0' '||' 'PMDEC' '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA != 0 || PMDEC != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0' '||' 'PMDEC' '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a FITS MOC from a 10 million star simulation at order 9.",
        "response": "stilts mocshape in=:skysim:1e7 shape=point coords='array(ra,dec)' order=9 out=sim_10M_o9.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need the footprint for a 1 pixel radius from my camera, where the plate scale is 0.5 arcsec/pixel.",
        "response": "stilts pixfoot in=detections.fits radius='1.0 * 0.5 / 3600.0' out=single_pixel_regions.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC for circles whose radius is given by 1 degree divided by 3600 (1 arcsecond).",
        "response": "stilts pixfoot in=one_as_div.fits ra=RA dec=DEC radius='1.0 / 3600.0' out=one_as_div_moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Add a column 'RA_HMS_S' converting RA in degrees to HMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_S \"degreesToHms(RA, 1)\"' out=hms_ra_s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_S degreesToHms(RA, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query MAST PanSTARRS 1 DR2 and include a local filter to remove rows where the `G_MEAN_MAG` is null.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT TOP 100 * FROM dbo.detection_object' ocmd='select !NULL_G_MEAN_MAG' out=ps2_clean_mag.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "I have two tables, one with magnitudes and one with fluxes. Convert the fluxes to magnitudes in the second table before concatenating.",
        "response": "stilts tcatn nin=2 in1=mags.fits in2=fluxes.fits icmd2='replacecol MAG janskyToAb(FLUX_JY)' ocmd='keepcols \"ID MAG\"' out=all_mags.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Query the ESA Herschel TAP service and set a maximum query record count of 5000.",
        "response": "stilts tapquery tapurl=https://archives.esac.esa.int/hsa/whsa-tap-server/tap adql='SELECT * FROM ivoa.ObsCore' maxrec=5000 out=herschel_maxrec.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot vectors using the small filled dart shape and coloring by density, using the logarithmic function scaling.",
        "response": "stilts plot2sky in=vectors.fits layer=skyvector lon=RA lat=DEC dlon=DX dlat=DY unit=scaled shading=density densefunc=log out=log_density_darts.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Convert a CSV file to LaTeX output, specifying semicolon as the delimiter in the output.",
        "response": "stilts tcopy in=input.csv ifmt=csv ofmt='csv(delimiter=;)' out=semi_latex.tex",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Use the 'meta' filter to extract only the Name, Description, and UCD columns for all fields.",
        "response": "stilts tpipe in=data.fits cmd='meta Name Description UCD' ofmt=text out=-",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot the mean of multiple spectra stored in an array column FLUX_ARRAY vs WAVE_ARRAY.",
        "response": "stilts plot2plane in=spectra.fits layer=statline xs=WAVE_ARRAY ys=FLUX_ARRAY xcombine=mean ycombine=mean thick=3 out=mean_spectrum.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"WAVE_ARRAY\"\n    (The name \"WAVE_ARRAY\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve the RA, Dec, and redshift (z) for the top 10 quasars from the GAVO SDSS DR16 QSO catalog.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 10 ra, dec, z FROM sdss.dr16qso' out=gavo_qso_sample.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a HEALPix map (level 8) and calculate the minimum 'MAG' value per degraded pixel (degrade=2).",
        "response": "stilts plot2sky in=HPX.fits layer=healpix value=MAG degrade=2 combine=min out=min_mag_hpx_degrade2.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MAG\"\n    (The name \"MAG\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Calculate the population variance of the 'TEMP' column, but first discard rows where 'FLAG' is greater than 5.",
        "response": "stilts tpipe in=measurements.fits cmd='select \"FLAG <= 5\"' cmd='keepcols \"TEMP\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG <= 5\n\nUsage: select <expr>\n    (Unused arguments: '<=' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need data from the Europlanet Telescope Network Database TAP service near RA 10, Dec 10, using 15 arcminutes.",
        "response": "stilts cone serviceurl=http://parsec-europlanet.eu:81/tap lon=10.0 lat=10.0 radius='15.0 / 60.0' out=parsec_15arcmin.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"15.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Filter input data to only keep rows where declination is positive, and generate a MOC at order 9, writing to standard output in ASCII.",
        "response": "stilts mocshape in=sky_cat.fits icmd='select \"DEC > 0\"' shape=point coords='array(RA, DEC)' order=9 mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find data in the CSIRO ASKAP Science Data Archive TAP Service near Galactic L=340, B=-40, using a 5 arcminute radius.",
        "response": "stilts cone serviceurl=https://casda.csiro.au/casda_vo_tools/tap lon=340.0 lat=-40.0 radius='5.0 / 60.0' skysys=galactic out=askap_5arcmin.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"5.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read a VOTable and convert it to FITS, ensuring the output uses VOTable version 1.2 metadata in the primary HDU.",
        "response": "stilts tcopy in=data.vot ofmt='fits(primary=votable1.2)' out=v12_phdu.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Run a TAP query and save the output as a parquet file.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT TOP 1000 * FROM gaiadr3.gaia_source' ofmt=parquet out=gaia_data.parquet",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Check if any entry in the 'FLUX' column is positive and assert it is true for at least one row.",
        "response": "stilts tpipe in=zero_data.fits cmd='assert \"FLUX > 0.0\"' out=positive_flux_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX > 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Query the ESA Integral Science Archive TAP near Galactic L=10, B=-10, with $0.025$ degree radius, limiting the output to 50 rows.",
        "response": "stilts cone serviceurl=https://isla.esac.esa.int/tap/tap lon=10.0 lat=-10.0 radius=0.025 skysys=galactic ocmd='head 50' out=integral_head50.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Retrieve the top 10 rows from the NED database and output the result as a multi-table VOTable file with BINARY serialization.",
        "response": "stilts tapquery tapurl=https://ned.ipac.caltech.edu/tap/ adql='SELECT TOP 10 * FROM object' ofmt='votable(format=BINARY)' out=ned_binary.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match source_A and source_B on 2D coordinates (X, Y). T_B columns X and Y are array elements  and [1] of column POS_VEC. Use array indexing in values2.",
        "response": "stilts tmatch2 in1=source_A.fits in2=source_B.fits matcher=2d params=5 values1='X Y' values2='POS_VEC POS_VEC[1]' out=array_coord_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Group match three catalogs. T3 contains an epoch column (MJD) that needs an absolute value calculation before matching on time (1d matcher).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.001 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='replacecol MJD abs(MJD)' values1=MJD values2=MJD values3=MJD out=absolute_time_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve metadata about the source table from the MACHO TAP service.",
        "response": "stilts tapquery tapurl=http://machotap.asvo.nci.org.au/ncitap//tap adql='SELECT * FROM machotap.master' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot vectors where the color is determined by the Aux variable 'VELOCITY', using the Logarithmic function to scale color mapping.",
        "response": "stilts plot2sky in=vectors.fits layer=skyvector lon=RA lat=DEC dlon=DX dlat=DY aux=VELOCITY auxfunc=log out=log_aux_vectors.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Can you query the cone search service at http://archive.stsci.edu/hst/search.php? I'm looking for objects around longitude 114.3985 and latitude 19.8468. Please use a search radius of 0.5294 degrees. Instead of a file, just give me the out. The coordinates are in the supergalactic system.",
        "response": "stilts cone servicetype=cone serviceurl=http://archive.stsci.edu/hst/search.php lon=114.3985 lat=19.8468 radius=0.5294 skysys=supergalactic omode=out",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Send the resulting table to all registered SAMP clients.",
        "response": "stilts tpipe in=data.fits omode=samp",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Concatenate three tables (T1, T2, T3). T1 is gzipped FITS. T2 is a remote VOTable. T3 is local ASCII.",
        "response": "stilts tcatn nin=3 in1=T1.fits.gz in2=http://archive.org/T2.vot in3=T3.txt ifmt3=ascii out=mixed_location_formats.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Can you plot y-error bars from one column and x-error bars from another column?",
        "response": "stilts plot2plane in=errors.fits layer=xyerror x=X y=Y xerrhi=X_ERROR_COL yerrhi=Y_ERROR_COL",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve the 100 brightest J-PAS EDR sources, locally sorting the results in descending order by the R-band magnitude.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jpas-edr adql='SELECT TOP 100 * FROM jpas_edr.master' ocmd='sort -down MAG_R' out=jpas_brightest.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine a file 'data.fits' with a simulated table of 5000 stars, then view the final table in TOPCAT.",
        "response": "stilts tcatn nin=2 in1=data.fits in2=:skysim:5000 omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find the top 50 planetary nebula entries in the SIMBAD database using pattern matching on the primary identifier.",
        "response": "stilts tapquery tapurl=http://simbad.cds.unistra.fr/simbad/sim-tap adql='SELECT TOP 50 main_id, otype FROM basic WHERE otype = ''PN''' out=simbad_pn.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Plot a histogram with 50 bins and filled blue bars.",
        "response": "stilts plot2plane in=data.fits layer=histogram x=VALUE binsize=-50 barform=filled color=blue",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"VALUE\"\n    (The name \"VALUE\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match two catalogs using elliptical sky regions. T1 positions are in Ecliptic coordinates (ELON, ELAT). Convert to ICRS before matching.",
        "response": "stilts tmatch2 in1=C1.fits icmd1='addskycoords ecliptic icrs ELON ELAT RA DEC' in2=C2.fits matcher=skyellipse params=1 values1='RA DEC A B PA' values2='RA DEC A B PA' out=ecl_converted_ellipse.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find all sources from MAST PanSTARRS 1 DR1 whose mean r-band magnitude is brighter than 17.5.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT objid, ra, dec, r_mean_mag FROM dbo.detection_object WHERE r_mean_mag < 17.5' out=ps1dr1_bright.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Create a circle MOC using a very specific radius expression: $1 / (\text{PI} \times 100)$ degrees.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 1.0 / (PI * 100.0))' out=pi_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a MOC from all sources that have a non-zero `IS_VARIABLE` flag.",
        "response": "stilts mocshape in=variables.fits icmd='select \"IS_VARIABLE != 0\"' shape=point coords='array(RA,DEC)' out=variable_sources.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select IS_VARIABLE != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need SSA spectra from ESO near RA 300, Dec -5, using a cone of 0.2 arcminutes, keeping only columns matching 'WAVELENGTH' UCD.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=300.0 lat=-5.0 radius='0.2 / 60.0' servicetype=ssa ocmd='keepcols \"ucd$em.freq*\"' out=ssa_ucd_filter.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.2 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Filter data to keep only the first 5 columns, then generate a circle MOC (radius 3 arcminutes).",
        "response": "stilts mocshape in=wide_table.fits icmd='keepcols \"$1 $2 $3 $4 $5\"' shape=circle coords='array(RA, DEC, 3.0 / 60.0)' out=subset_cols_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Can `mocshape` read a file from a URL?",
        "response": "Yes, the `in` parameter can accept a URL. For example: `stilts mocshape in=http://example.com/cat.fits ...`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "mocshape"
    },
    {
        "prompt": "Draw lines connecting positions (R1, D1) and (R2, D2) from the same row, thickness 2 pixels.",
        "response": "stilts plot2sky in=paths.fits layer=link2 lon1=R1 lat1=D1 lon2=R2 lat2=D2 thick=2 out=thick_sky_path.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Match T_A and T_B. T_A should only contain every 5th row before matching (every 5).",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='every 5' in2=T_B.fits matcher=exact values1=ID values2=ID out=every_5th_row_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Plot a density map using density shading, applying a logarithmic function to the density values.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y shading=density densefunc=log out=log_density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match T1 and T2. T2 has a string column 'TIME_STR' in JD format. Convert T2 time to MJD before matching on 1D time.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='replacecol MJD jdToMjd(parseDouble(TIME_STR))' matcher=1d params=0.01 values1=MJD values2=MJD out=jd_string_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find the statistical summary (min, max, mean) of the redshift values in the MUSE-Wide survey deep field catalogue.",
        "response": "stilts tapquery tapurl=https://musewide.aip.de/tap adql='SELECT redshift FROM mwide.deep_field WHERE redshift IS NOT NULL' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Combine table_A.fits and table_B.fits. Table A is missing the column 'G_FLUX' that exists in table B. Add G_FLUX to table A with null values before joining.",
        "response": "stilts tcatn nin=2 in1=table_A.fits icmd1='addcol G_FLUX NULL' in2=table_B.fits out=aligned_flux.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve 50 ObsCore records from MAST CAOM, keep only the observation ID and time columns, and save the result as ECSV.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom adql='SELECT TOP 50 obs_id, t_min, facility_name FROM ivoa.ObsCore' ocmd='keepcols \"obs_id t_min\"' ofmt=ecsv out=caom_time.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T_REF uses the symmetric logarithmic scale (symlog) on its MAG column before matching on position+magnitude (sky*1d, 1 arcsec, 1.0 symlog tolerance).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky*1d params='1 1.0' in1=T_REF.fits icmd1='replacecol MAG \"symlog(10, 1, MAG)\"' in2=T2.fits in3=T3.fits values1='RA DEC MAG' values2='RA DEC MAG' values3='RA DEC MAG' out=symlog_mag_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1,' 'MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG symlog(10, 1, MAG)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '1,' 'MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Show me the metadata of the table that would result from a 3-way sky match.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=group matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Draw a line plot (line layer) colored by density, where 10 points make a pixel opaque (transparent shading).",
        "response": "stilts plot2sky in=data.fits layer=line lon=RA lat=DEC shading=transparent opaque=10 out=transp_line_density.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad value for parameter layer: Unknown value \"line\" - must be one of mark, size, sizexy, skyvector, skyellipse, skycorr, link2, mark2, poly4, mark4, polygon, area, central, label, arealabel, contour, skydensity, healpix, skygrid\nUsage: layer=<layer-type> <layer-specific-params>\n\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Map coverage from STC-S strings, forcing the output version to VOTable BINARY2.",
        "response": "stilts mocshape in=stcs.vot shape=stc-s coords=S_REGION mocfmt=cds_fits out=stcs_binary2.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Query MAST for images (SIA) but restrict the search to a field of view calculated as the hypotenuse of (0.1, 0.2) in degrees, resulting in a slightly larger search radius.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=11.0 lat=11.0 radius='hypot(0.1, 0.2)' servicetype=sia out=hypot_sia.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"hypot(0.1, 0.2)\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert a FITS file to Feather format.",
        "response": "stilts tcopy in=input.fits out=output.feather",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Plot vectors (in arcseconds) using the 'large_filled_dart' shape, fixed scale factor 1000.",
        "response": "stilts plot2sky in=v_data.fits layer=skyvector lon=RA lat=DEC dlon=DR dlat=DD unit=arcsec scale=1000 arrow=large_filled_dart out=large_dart_scale1000.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Pair match T_REF (ref) against T2, T3, T4. Only keep rows where T_REF finds a match in T4, regardless of T2/T3 status. Use 1 arcsec sky tolerance.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' in1=T_REF.fits in2=T2.fits join2=default in3=T3.fits join3=default in4=T4.fits join4=match out=T4_match_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve ObsCore entries from the ESO TAP_OBS and locally sort the result by the maximum wavelength (`em_max`) in ascending order.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 100 s_ra, s_dec, em_max FROM ivoa.ObsCore' ocmd='sort em_max' out=eso_sorted_em.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Read a local CSV table, convert RA/DEC from decimal degrees to radians for new columns, and output the result in ECSV format.",
        "response": "stilts tpipe in=targets.csv ifmt=csv cmd='addcol RA_RAD degreesToRadians(RA)' cmd='addcol DEC_RAD degreesToRadians(DEC)' ofmt=ecsv out=targets_rad.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve all rows from a remote VOTable URL, upload it, and use it in a join against the MAST Gaia DR3 catalog, serializing the upload as VOTable BINARY.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT g.*, u.id FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.remote AS u ON g.source_id = u.id' nupload=1 upload1=http://example.com/data.vot upname1=remote upvotformat=BINARY out=gaia_remote_xmatch.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match (ref T1) against T2, T3. T3 contains coordinate RA_RAD/DEC_RAD in radians. Convert them to degrees before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='addcol RA_DEG radiansToDegrees(RA_RAD); addcol DEC_DEG radiansToDegrees(DEC_RAD)' values1='RA DEC' values2='RA DEC' values3='RA_DEG DEC_DEG' out=t3_rad_converted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Copy an ASCII table, explicitly telling the parser to skip type checking and treat all columns as strings (notypes).",
        "response": "stilts tcopy in=mixed_data.txt ifmt='ascii(notypes=int;float;double)' out=strings_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Generate an all-sky density map (skydensity, level 5) combining the median of 'MAG' values per pixel.",
        "response": "stilts plot2sky in=data.fits layer=skydensity lon=RA lat=DEC level=5 weight=MAG combine=median out=median_mag_hpx5.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine `field_A.csv` and `field_B.csv` and add a sequence column named 'FieldNum'. Each input file should first be filtered to remove rows where `MAG_ERR` > 0.1.",
        "response": "stilts tcat ifmt=csv in=field_A.csv in=field_B.csv icmd='select \"MAG_ERR <= 0.1\"' seqcol=FieldNum out=clean_fields.csv",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR <= 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<=' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Plot a HEALPix map and color it using the weighted shading mode, combining the mean FLUX per pixel.",
        "response": "stilts plot2sky in=hpx_map.fits layer=healpix healpix=PIXEL value=FLUX shading=weighted combine=mean out=weighted_hpx_mean.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"PIXEL\"\n    (The name \"PIXEL\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine catalogue_A and catalogue_B. Catalogue_A uses 'ID' and 'B' uses 'SOURCE_ID'. Rename B's column to match A's before joining.",
        "response": "stilts tcatn nin=2 in1=catalogue_A.fits in2=catalogue_B.fits icmd2='colmeta -name ID SOURCE_ID' out=id_unified.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Group match three tables (T1-T3). Filter the final output to keep only rows where the combined table size is between 3 and 5, inclusive.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits ocmd='select \"GroupSize >= 3 && GroupSize <= 5\"' out=filtered_size_groups.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '3' '&&' 'GroupSize' '<=' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GroupSize >= 3 && GroupSize <= 5\n\nUsage: select <expr>\n    (Unused arguments: '>=' '3' '&&' 'GroupSize' '<=' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Query the KSB-ROB TAP service for its top 5 entries and save the results in the ECSV format.",
        "response": "stilts tapquery tapurl=http://vo-tap.oma.be/tap adql='SELECT TOP 5 * FROM TAP_SCHEMA.tables' ofmt=ecsv out=ksbrob_sample.ecsv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Set the output mode to perform an integrity check on the table (checksum mode).",
        "response": "stilts tpipe in=data.fits omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Pair match T_MAIN against T2, T3. T3 is a multi-extension FITS file, match against extension #4. Output rows from T3 should always be included.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=T_MAIN.fits in2=T2.fits in3=T3.fits#4 join3=always out=ext4_outer_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Retrieve 50 random sources from the WiggleZ Final Data Release and save the result using the maximally efficient VOTable BINARY format.",
        "response": "stilts tapquery tapurl=http://wiggleztap.asvo.nci.org.au/ncitap//tap adql='SELECT TOP 50 * FROM wigglez_final.sources ORDER BY random()' ofmt='votable(format=BINARY)' out=wigglez_sample.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Concatenate input files, applying a filter to each that removes columns 'X_COORD' and 'Y_COORD' before merging.",
        "response": "stilts tcat in='pos1.fits pos2.fits' icmd='delcols \"X_COORD Y_COORD\"' out=xy_removed.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Search MAST PS1 DR2 near RA 50.0, Dec -50.0, with a radius of 2 arcminutes, keeping only columns whose name starts with 'gmag'.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 lon=50.0 lat=-50.0 radius='2.0 / 60.0' ocmd='keepcols gmag*' out=ps1_gmag_only.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"2.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Draw filled quadrilaterals (poly4 layer), coloring them based on density using the translucent shading mode (default transparency).",
        "response": "stilts plot2sky in=quads.fits layer=poly4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 polymode=fill shading=translucent out=translucent_poly4_sky.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Generate a polygon MOC for a complex structure described by a multi-part STC-S column.",
        "response": "stilts mocshape in=complex_stcs.fits shape=stc-s coords=FULL_REGION out=complex_footprint.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Read a table, keep only columns with UCD starting with 'phot.', and output the result to TOPCAT.",
        "response": "stilts tpipe in=full_cat.fits cmd='keepcols ucd$phot_*' omode=topcat",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a MOC from `data.fits`, but only use rows with an even row index.",
        "response": "stilts pixfoot in=data.fits icmd='select \"$0 % 2 == 0\"' out=even_rows.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a low-resolution MOC (order 2) for sources with 1 degree radius.",
        "response": "stilts pixfoot in=coarse_1deg.fits ra=RA dec=DEC radius=1.0 order=2 out=coarse_o2_1deg.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Merge tables and then eliminate adjacent duplicates, but only based on equality of the 'OBS_ID' column.",
        "response": "stilts tcat in='o1.fits o2.fits' ocmd='sort OBS_ID; uniq OBS_ID' out=obs_id_unique.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Calculate the population standard deviation of the column 'AGE', excluding rows where AGE is negative.",
        "response": "stilts tpipe in=population.fits cmd='select \"AGE >= 0\"' cmd='keepcols \"AGE\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select AGE >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Plot markers at the four corner positions (R1, D1, R2, D2, R3, D3, R4, D4) using the mark4 layer.",
        "response": "stilts plot2sky in=corners.fits layer=mark4 lon1=R1 lat1=D1 lon2=R2 lat2=D2 lon3=R3 lat3=D3 lon4=R4 lat4=D4 shape=cross out=mark4_corners.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"R1\"\n    (The name \"R1\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "I need a high-resolution MOC (order 18) for coordinates X_ICRS and Y_ICRS found in deep_field.fits.",
        "response": "stilts pixfoot in=deep_field.fits ra=X_ICRS dec=Y_ICRS order=18 out=hires_moc_o18.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Read an ECSV file, forcing validation to ignore minor header inconsistencies (colcheck=WARN, which is default).",
        "response": "stilts tcopy in=risky.ecsv ifmt='ecsv(colcheck=WARN)' out=risky.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch three tables on 2D Cartesian coordinates (X, Y) where the match tolerance is 2D error combined in quadrature.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=2d_err_q params=1 values1='X Y ERR' values2='X Y ERR' values3='X Y ERR' in1=d1.fits in2=d2.fits in3=d3.fits out=cartesian_err_q_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match three catalogs where position errors are `e_pos1`, `e_pos2`, `e_pos3` and combine them in quadrature.",
        "response": "stilts tmatchn nin=3 in1=c1.fits in2=c2.fits in3=c3.fits multimode=group matcher=skyerr_q params=3 values1='ra dec e_pos1' values2='ra dec e_pos2' values3='ra dec e_pos3' out=quadrature_error_groups.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Concatenate two tables, calculating the total angular distance in micro-arcseconds from coordinates RA, DEC and RA_2, DEC_2.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='addcol SEP_UAS \"skyDistanceDegrees(RA, DEC, RA_2, DEC_2) * 3600000000.0\"' out=sep_uas.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'RA_2,' 'DEC_2)' '*' '3600000000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SEP_UAS skyDistanceDegrees(RA, DEC, RA_2, DEC_2) * 3600000000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'RA_2,' 'DEC_2)' '*' '3600000000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "I have coordinates in hours and minutes only (RA_H, RA_M, DEC_D, DEC_M). Convert them to degrees for a point MOC.",
        "response": "stilts mocshape in=partial_sex.fits icmd='addcol RA_DEG \"hmsToDegrees(RA_H, RA_M, 0)\"; addcol DEC_DEG \"dmsToDegrees(DEC_D, DEC_M, 0)\"' shape=point coords='array(RA_DEG, DEC_DEG)' out=partial_sex_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA_M,' '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DEG hmsToDegrees(RA_H, RA_M, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA_M,' '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Combine two FITS files, forcing the output to a compressed VOTable using gzip compression.",
        "response": "stilts tcat in='a.fits b.fits' ofmt=votable out=combined.vot.gz",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge a table where magnitudes are in Janskys, converting them to AB magnitudes, before combining with a magnitude table.",
        "response": "stilts tcatn nin=2 in1=fluxes.fits icmd1='replacecol MAG janskyToAb(FLUX_JY)' in2=mags.fits out=ab_mag_merged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot density contours (linear scaling, 5 levels) on a small 0.5 degree region centered at RA=150, DEC=45.",
        "response": "stilts plot2sky in=data.fits clon=150.0 clat=45.0 radius=0.5 layer=contour lon=RA lat=DEC scaling=linear nlevel=5 out=small_linear_contour.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Use a long command string to perform filtering, column addition, and sorting.",
        "response": "stilts tpipe in=data.fits cmd='select \"MAG < 20\"; addcol B_R \"B_MAG - R_MAG\"; sort \"-down B_R\"' out=processed_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 20\n\nUsage: select <expr>\n    (Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create a plot with fixed boundaries X=[-200, 200] and Y=[-10, 10], and apply a post-processing filter to keep only rows where Z>0.",
        "response": "stilts plot2plane in=full_data.fits xmin=-200 xmax=200 ymin=-10 ymax=10 layer=mark x=X y=Y ocmd='select Z>0' out=fixed_range_z.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Match two tables on position, using quadrature error (skyerr_q). T1 position angles are 0 (circular errors).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=skyerr_q params=1 values1='RA DEC ERR' values2='RA DEC ERR' out=skyerr_q_circular.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). T1 uses coordinate system Supergalactic. Convert T1 coordinates to ICRS before matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=1 in1=T1.fits icmd1='addskycoords supergalactic icrs SLON SLAT RA DEC' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=supergal_converted_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Merge two tables, sorting the resulting rows first by 'RA' ascending, then by 'DEC' descending.",
        "response": "stilts tcatn nin=2 in1=C1.fits in2=C2.fits ocmd='sort \"RA -down DEC\"' out=multi_key_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-down' 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort RA -down DEC\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '-down' 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Select all rows where the `NAME` column is not null.",
        "response": "stilts tpipe in=data.fits cmd='select !NULL_NAME' out=named_objects.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch T1, T2, T3. T1 is reference. T2 has an array column 'POS_VEC'. Explode T2 column into scalar RA/DEC before matching T1 and T3.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits icmd2='explodecols POS_VEC; colmeta -name RA POS_VEC_0; colmeta -name DEC POS_VEC_1' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=exploded_coords_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot the boundaries of an ASCII MOC string column, coloring the outlines green, and setting the thickness to 2 pixels.",
        "response": "stilts plot2sky in=mocs.fits layer=area area=MOC_STR areatype=MOC-ASCII polymode=outline color=green thick=2 out=green_moc_outline.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"MOC_STR\"\n    (The name \"MOC_STR\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Upload a table to the PADC Heliophysics server, and locally rename a column named 'old_ID' to 'NEW_ID' using ucmd before the server processes the upload.",
        "response": "stilts tapquery tapurl=http://voparis-tap-he.obspm.fr/tap adql='SELECT * FROM some_table AS t JOIN TAP_UPLOAD.U AS u ON t.NEW_ID = u.NEW_ID' nupload=1 upload1=local.fits upname1=U ucmd1='colmeta -name NEW_ID old_ID' out=heliophysics_join.fits",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Join T1 and T2 using a full outer join (1or2). Include the separation column in the output.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=4 values1='RA DEC' values2='RA DEC' join=1or2 scorecol=Separation out=full_outer_join_scored.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Execute a cone search against Gaia TAP for RA 160, Dec 35, where the radius is equivalent to 1/100th of a degree.",
        "response": "stilts cone serviceurl=https://gea.esac.esa.int/tap-server/tap lon=160.0 lat=35.0 radius='1.0 / 100.0' out=gaia_one_hundredth_deg.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"1.0 / 100.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Search the SIMBAD TAP near 0h 0m 0s, 90d 0m 0s (North Pole), using 0.01 arcminutes as radius, ensuring verbose output.",
        "response": "stilts cone serviceurl=http://simbad.cds.unistra.fr/simbad/sim-tap lon=0.0 lat=90.0 radius='0.01 / 60.0' verb=3 out=np_verbose.vot",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"0.01 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Convert the remote VOTable document 'http://archive.org/data.vot' into a local FITS file, 'remote_data.fits'.",
        "response": "stilts tcopy in=http://archive.org/data.vot out=remote_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "What's the command to find the best match for each row in `table1.fits` from `table2.fits`, and include all rows from `table1` in the output, even if they have no match?",
        "response": "stilts tmatch2 in1=table1.fits in2=table2.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' find=best1 join=all1 out=complete_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Add a column 'VEL_GAL_X_COMP_3' containing the X (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_X_COMP_3 \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_x_vel_comp_4.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_X_COMP_3 icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a MOC from STC-S strings, but only for polygons with more than 4 vertices.",
        "response": "stilts mocshape in=obscore.vot shape=stc-s coords=s_region icmd='select \"size(parseDoubles(s_region)) > 8\"' out=many_vertex_polygons.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '8'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select size(parseDoubles(s_region)) > 8\n\nUsage: select <expr>\n    (Unused arguments: '>' '8'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Find the best match (best1) for T1 from T2. T2 coordinates are in FK4 B1950. Convert T2 positions to ICRS J2000 before matching.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='addskycoords fk4 icrs RA_B DEC_B RA DEC' matcher=sky params=3 values1='RA DEC' values2='RA DEC' find=best1 out=fk4_best1.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Copy a VOTable and explicitly output it using the **TST format**.",
        "response": "stilts tcopy in=cat.vot out=cat.tst ofmt=tst",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Get the target name, instrument, and time range for the 5 earliest planetary observations recorded by PADC, running the query synchronously.",
        "response": "stilts tapquery tapurl=http://voparis-tap-planeto.obspm.fr/tap adql='SELECT TOP 5 target_name, instrument_name, t_min, t_max FROM epn_core.epn_core ORDER BY t_min ASC' sync=true out=earliest_padc.vot",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Run a synchronous query on the Pithia VO datacenter to retrieve table schemas and calculate the checksum of the resulting table.",
        "response": "stilts tapquery tapurl=http://pithia.cbk.waw.pl/tap adql='SELECT TOP 10 * FROM TAP_SCHEMA.schemas' sync=true omode=checksum",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Explode a 2D array column of shape (3, 5) into 15 scalar columns, naming them automatically (C1_1...C3_5).",
        "response": "stilts tpipe in=arrays.fits cmd='explodecols \"-ifshape 3,5 array_col\"' out=exploded.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3,5' 'array_col'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: explodecols -ifshape 3,5 array_col\n\nUsage: explodecols <colid-list>\n    (Unused arguments: '3,5' 'array_col'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Crossmatch catA.fits and catB.fits exactly on the composite key ID + EPOCH. Only output rows found in BOTH tables.",
        "response": "stilts tmatch2 in1=catA.fits in2=catB.fits matcher=exact values1='concat(ID,toString(EPOCH))' values2='concat(ID,toString(EPOCH))' join=1and2 out=exact_composite.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine T1 and T2. In T2, use the inverse hyperbolic sine function to scale the 'FLUX' column before concatenation.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='replacecol FLUX asinh(FLUX)' out=asinh_flux_merged.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Retrieve 10 Chandra Source Catalog Release 2.1 entries near the South Ecliptic Pole, saving output in IPAC format.",
        "response": "stilts tapquery tapurl=https://cda.cfa.harvard.edu/csc21tap adql='SELECT TOP 10 * FROM csc.master_source WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 90.0, -66.56, 0.01))' ofmt=ipac out=csc_sep.ipac",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Merge T1.fits and T2.fits. T1 has magnitude in Vega; T2 has magnitude in AB. Convert T1's 'MAG' to AB magnitude using the constant 2.5 log10(F_nu_AB/F_nu_Vega) = -0.04.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='replacecol MAG \"MAG + VEGA_AB_g\"' in2=T2.fits out=ab_vega_aligned.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_g'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG MAG + VEGA_AB_g\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' 'VEGA_AB_g'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Plot markers, enforcing a high grid crowding factor (crowd=5.0) to display denser grid lines.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC crowd=5.0 out=dense_grid_marks.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Filter rows to keep only those with non-null values in columns 1, 3, and 5.",
        "response": "stilts tpipe in=data.fits cmd='select \"!NULL_$1 && !NULL_$3 && !NULL_$5\"' out=non_null_subset.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_$3' '&&' '!NULL_$5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_$1 && !NULL_$3 && !NULL_$5\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_$3' '&&' '!NULL_$5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Group match four time series tables (TS1-TS4) on MJD, 0.01 day tolerance. After matching, drop the GroupID column.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=1d params=0.01 values1=MJD values2=MJD values3=MJD values4=MJD in1=TS1.fits in2=TS2.fits in3=TS3.fits in4=TS4.fits ocmd='delcols GroupID' out=time_group_no_id.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Read a CSV file that specifies a custom delimiter (`|`) and convert it to a FITS file.",
        "response": "stilts tcopy in=piped_data.txt ifmt='csv(delimiter=|)' out=piped_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch A and B. A contains velocity components in an array 'VEL_XYZ'. Explode the array and match on VX and VY only (2d anisotropic).",
        "response": "stilts tmatch2 in1=A.fits icmd1='explodecols VEL_XYZ; colmeta -name VX VEL_XYZ_0; colmeta -name VY VEL_XYZ_1' in2=B.fits matcher=2d_anisotropic params='1 1' values1='VX VY' values2='VX VY' out=exploded_velocity_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Combine an ECSV table with a FITS table. The FITS file needs its columns renamed to comply with the ECSV file's column names ('RA_ICRS' to 'RA').",
        "response": "stilts tcatn nin=2 in1=E.ecsv ifmt1=ecsv in2=F.fits icmd2='colmeta -name RA RA_ICRS' out=ecsv_aligned.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Find all pairs (find=all) between A.fits and B.fits (sky 5 arcsec). After matching, retain only the 'Separation' column and display statistics.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' find=all ocmd='keepcols Separation' omode=stats",
        "chat.jar": "executed successfully",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Can you query the Simple Spectral Access service at https://sdss.vos.pnsn.org/ssa? I'm looking for objects around longitude 155.1418 and latitude 28.6495. Please use a search radius of 0.4589 degrees. Save the results to a fits file called query_results_89.fits. The coordinates are in the supergalactic system.",
        "response": "stilts cone servicetype=ssa serviceurl=https://sdss.vos.pnsn.org/ssa lon=155.1418 lat=28.6495 radius=0.4589 skysys=supergalactic omode=out ofmt=fits out=query_results_89.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Group match five tables (D1-D5). Output only the groups where the group ID is less than 100, and show only the ID and GroupSize columns.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID values5=ID in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits in5=D5.fits ocmd='select \"GroupID < 100\"; keepcols \"ID GroupSize\"' out=small_id_groups.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GroupID < 100\n\nUsage: select <expr>\n    (Unused arguments: '<' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Convert a FITS table to CSV, using a **tab character** as the delimiter in the output.",
        "response": "stilts tcopy in=input.fits ofmt='csv(delimiter=tab)' out=tab_data.csv",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Find the number of MAST SkyMapper DR4 sources near the South Ecliptic Pole (RA 90, Dec -66.56, radius 1.0 deg) and retrieve only the count.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/skymapperdr4/ adql='SELECT COUNT(*) FROM smssdr4.master WHERE 1=CONTAINS(POINT(''ICRS'', ra, dec), CIRCLE(''ICRS'', 90.0, -66.56, 1.0))' omode=count",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Copy a FITS table to another FITS table. Is this useful?",
        "response": "Yes, it can be. For example, it can be used to regularize a non-standard FITS file into a standard one: `stilts tcopy in=weird.fits out=standard.fits`",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tcopy"
    },
    {
        "prompt": "Create a copy of 'catalog.vot' but force the output to the bare **FITS-basic** format, stripping rich metadata.",
        "response": "stilts tcopy in=catalog.vot ofmt=fits-basic out=basic_catalog.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Crossmatch four tables using position and velocity (sky+2d_anisotropic) where tolerances are 1 arcsec, 10 mas/yr (PMRA), and 5 mas/yr (PMDEC).",
        "response": "stilts tmatchn nin=4 multimode=group matcher=sky+2d_anisotropic params='1 10 5' values1='RA DEC PMRA PMDEC' values2='RA DEC PMRA PMDEC' values3='RA DEC PMRA PMDEC' values4='RA DEC PMRA PMDEC' in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits out=high_fidelity_spacetime.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Plot source positions, coloring them based on the aux map 'cubehelix' and logarithmic function scaling.",
        "response": "stilts plot2sky in=data.fits layer=mark lon=RA lat=DEC shading=aux aux=Z auxfunc=log auxmap=cubehelix out=cubehelix_log_aux.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"RA\"\n    (The name \"RA\" is unknown.)\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Add a column 'MAG_R_AB_V_2' converting Johnson R magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_R_AB_V_2 \"MAG_R + JOHNSON_AB_V\"' out=r_ab_v_conv_2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_R_AB_V_2 MAG_R + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Group match three tables (T1, T2, T3) using 1D matching on 'FLUX' within 10 units. Before matching, T2 must be filtered to keep only rows where 'FLAG' is false.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=10 values1=FLUX values2=FLUX values3=FLUX in1=T1.fits in2=T2.fits icmd2='select !FLAG' in3=T3.fits out=filtered_flux_group.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "How to create a MOC from an ASCII file where RA and Dec are columns 5 and 6?",
        "response": "stilts pixfoot in=mydata.txt ifmt=ascii ra=$5 dec=$6 out=mydata_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find sources in MAST SkyMapper DR4 around RA 10, Dec 10, within a 20 arcminute search radius.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/skymapperdr4/ lon=10.0 lat=10.0 radius='20.0 / 60.0' out=skymapper_20arcmin.fits",
        "chat.jar": "skipped-operaton in param",
        "error": "Error: Bad value for parameter radius: For input string: \"20.0 / 60.0\"\nUsage: radius=<degrees>\n\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Can `pixfoot` output anything other than a MOC?",
        "response": "No, the primary purpose of `pixfoot` is to generate a Multi-Order Coverage map (MOC). It outputs this MOC in one of three formats: FITS, JSON, or ASCII.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Check if a numeric column is constant (all values identical or null) and keep only non-constant columns.",
        "response": "stilts tpipe in=data.fits cmd='constcol -acceptnull' out=non_constant_only.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Merge time series tables, ensuring that the final output is sorted by 'TIME' in descending order.",
        "response": "stilts tcat in='ts*.fits' ocmd='sort -down TIME' out=time_desc_sorted.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Generate a MOC for all sources where the error in position is below a certain threshold.",
        "response": "stilts mocshape in=errors.fits icmd='select \"hypot(RA_ERR,DEC_ERR) < 0.5\"' shape=point coords='array(RA,DEC)' out=low_total_err.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(RA_ERR,DEC_ERR) < 0.5\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Plot two datasets: dataA.fits (magenta stars) and dataB.fits (cyan circles) on the same graph.",
        "response": "stilts plot2plane layer_a=mark in_a=dataA.fits x_a=X y_a=Y color_a=magenta shape_a=filled_star layer_b=mark in_b=dataB.fits x_b=X y_b=Y color_b=cyan out=dual_catalog_plot.png",
        "chat.jar": "skipped-plot",
        "error": "Error: Bad Expression \"X\"\n    (The name \"X\" is unknown.)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Retrieve the metadata details (omode=meta) of the resulting table structure when querying MAST MissionMAST for 10 HST data entries.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/missionmast/ adql='SELECT TOP 10 * FROM hst.summary' omode=meta",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Add a column 'FLUX_CONV_LUMIN' converting flux to luminosity distance, explicitly using the luminosityDistance function.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol LUMINOSITY \"fluxToLuminosity(FLUX, mToMpc(luminosityDistance(Z, 70.0, 0.3, 0.7)))\"' out=derived_luminosity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'mToMpc(luminosityDistance(Z,' '70.0,' '0.3,' '0.7)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LUMINOSITY fluxToLuminosity(FLUX, mToMpc(luminosityDistance(Z, 70.0, 0.3, 0.7)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'mToMpc(luminosityDistance(Z,' '70.0,' '0.3,' '0.7)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "How do I specify the name of my uploaded table within the ADQL query?",
        "response": "You use the syntax `TAP_UPLOAD.<upname>`, where `<upname>` is the name you provided with the `upnameN` parameter. For example, if you set `upname1=mydata`, you would use `TAP_UPLOAD.mydata` in the ADQL.",
        "chat.jar": "skipped - no 'stilts' prefix",
        "cmd": "tapquery"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T3 needs a conversion of a string coordinate (RA_STR) to numeric degrees (hmsToDegrees).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=5 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='addcol RA_DEG hmsToDegrees(RA_STR)' values1='RA DEC' values2='RA DEC' values3='RA_DEG DEC' out=string_coord_match.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I need to stack `jan.csv`, `feb.csv`, and `mar.csv`. The final output should be a FITS file and should include a column `MonthID` indicating the source file number.",
        "response": "stilts tcat ifmt=csv in=jan.csv in=feb.csv in=mar.csv ofmt=fits seqcol=MonthID out=q1_data.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcat"
    },
    {
        "prompt": "Add a column 'PM_VEL_ICRS' containing the 3-element velocity vector calculated from astrometric parameters (RA, DEC, PMRA, PMDEC, PARALLAX, RV).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_ICRS \"astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\"' out=gaia_velocity_vector.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_ICRS astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Propagate the position defined by (RA, DEC, PMRA, PMDEC, PARALLAX) forward by 5 years, updating RA and DEC columns.",
        "response": "stilts tpipe in=gaia.fits cmd='replacecol RA \"epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))\"' cmd='replacecol DEC \"epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))\"' out=propagated.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' '0.0))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' '0.0))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'TIME_MJD_FROM_JULIAN' converting Julian Epoch to MJD.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_MJD_FROM_JULIAN julianToMjd(TIME_JULIAN)' out=mjd_from_julian.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve metadata information from the Pithia VO datacenter and output it as a CSV file using a semicolon (;) as the column delimiter.",
        "response": "stilts tapquery tapurl=http://pithia.cbk.waw.pl/tap adql='SELECT * FROM TAP_SCHEMA.tables' ofmt='csv(delimiter=;)' out=pithia_tables.csv",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Can you query the Simple Image Access service at https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl? I'm looking for objects around longitude 297.8657 and latitude -64.2264. Please use a search radius of 1.208 degrees. Save the results to a fits file called query_results_5.fits. The coordinates are in the icrs system. Don't use compression for the download.",
        "response": "stilts cone servicetype=sia1 serviceurl=https://skyview.gsfc.nasa.gov/cgi-bin/vo/sia.pl lon=297.8657 lat=-64.2264 radius=1.208 skysys=icrs compress=false omode=out ofmt=fits out=query_results_5.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Can you query the Simple Image Access service at http://irsa.ipac.caltech.edu/SIA? I'm looking for objects around longitude 140.8549 and latitude -65.5237. Please use a search radius of 1.7603 degrees. Save the results to a ascii file called query_results_119.ascii.",
        "response": "stilts cone servicetype=sia1 serviceurl=http://irsa.ipac.caltech.edu/sia lon=140.8549 lat=-65.5237 radius=1.7603 omode=out ofmt=ascii out=query_results_119.ascii",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Read a CDF file and save its data as a VOTable, selecting a different extension by index #2.",
        "response": "stilts tcopy in=multi.cdf#2 ifmt=cdf out=cdf_ext2.vot",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Join the first 10 rows of table A with the last 10 rows of table B.",
        "response": "stilts tcatn nin=2 in1=table_A.fits icmd1='head 10' in2=table_B.fits icmd2='tail 10' out=head_tail.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    },
    {
        "prompt": "Get 100 rows from GAVO and then view them in a temporary GUI window.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT TOP 100 * FROM ivoa.obscore' omode=gui",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Extract only rows 1000 to 1999 (inclusive, 1-based index) and output the result in Feather format.",
        "response": "stilts tpipe in=large_file.fits cmd='rowrange 1000 +1000' ofmt=feather out=mid_slice.feather",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Retrieve the top 100 HSCv3 sources and output the result in IPAC text format.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 100 * FROM hsc_v3.point' ofmt=ipac out=hsc_sample.ipac",
        "chat.jar": "executed successfully",
        "cmd": "tapquery"
    },
    {
        "prompt": "Match T1 (ref) against T2, T3. T1 coordinates are in FK4 B1950. Convert T1 coordinates to ICRS J2000 before being used as reference.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits icmd1='addskycoords fk4 icrs RA_B DEC_B RA DEC' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=T1_fk4_icrs_ref.fits",
        "chat.jar": "executed successfully",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Filter the input table to only retain rows where the RA coordinate is between 0 and 10 degrees, and use a 3 arcminute radius.",
        "response": "stilts pixfoot in=narrow_ra.fits icmd='select \"RA >= 0 && RA <= 10.0\"' ra=RA dec=DEC radius='3.0 / 60.0' out=narrow_ra_3am.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0' '&&' 'RA' '<=' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA >= 0 && RA <= 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0' '&&' 'RA' '<=' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find rows where the galactic latitude (GLAT) is within the southern hemisphere (GLAT < 0) and filter the result.",
        "response": "stilts tpipe in=coords.fits cmd='select \"GLAT < 0.0\"' out=southern_sky.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GLAT < 0.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Apply a filter to ensure non-sequential read access to optimize parallel operations.",
        "response": "stilts tpipe in=big_table.fits cmd=random out=randomized_view.fits",
        "chat.jar": "executed successfully",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert an ASCII table to IPAC format, limiting maximum parameter length to 500 characters.",
        "response": "stilts tcopy in=ascii_meta.txt ifmt=ascii ofmt='ipac(maxParam=500)' out=ipac_limited.tbl",
        "chat.jar": "executed successfully",
        "cmd": "tcopy"
    },
    {
        "prompt": "Combine data from a remote TAP query result table with a local file.",
        "response": "stilts tcatn nin=2 in1=tap_query_result.vot in2=local_data.fits out=tap_local_merge.fits",
        "chat.jar": "executed successfully",
        "cmd": "tcatn"
    }
]