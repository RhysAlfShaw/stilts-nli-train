[
    {
        "prompt": "Query HST ObsCore for optical observations, then filter the results locally to keep only observations with quality_flag > 5.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT * FROM ivoa.ObsCore WHERE em_min < 7000 AND em_max > 3000' ocmd='select \"quality_flag > 5\"' out=hst_reliable.vot",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select quality_flag > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query the ESO TAP_OBS service for all VIRCAM raw observations, keeping only the rows that satisfy the local filter condition 's_fov > 0.05' after retrieval.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM raw.vircam' ocmd='select \"s_fov > 0.05\"' out=vircam_wide.fits",
        "error": "Error: Unused arguments: '>' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select s_fov > 0.05\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.05'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query the Subaru SAGA database for a large sample of records, retaining only the RA and DEC columns after retrieval.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT * FROM saga.stellar_abundances' maxrec=5000 ocmd='keepcols \"RA DEC\"' out=saga_coords.fits",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols RA DEC\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query MAST HSCv3 and define a post-processing operation to calculate the F475W - F814W color index and replace the existing magnitude column with this new value locally.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 10 * FROM hsc_v3.point' ocmd='replacecol F814W_MAG \"F475W_MAG - F814W_MAG\"' out=hsc_color.fits",
        "error": "Error: Unused arguments: '-' 'F814W_MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol F814W_MAG F475W_MAG - F814W_MAG\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' 'F814W_MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query MAST Gaia DR3 and locally filter the results to include only sources brighter than G=15.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT * FROM gaiadr3.gaia_source' maxrec=1000 ocmd='select \"phot_g_mean_mag < 15\"' out=mast_gaia_filtered.fits",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select phot_g_mean_mag < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query the ESO TAP_OBS service, calculate a new column 'TOTAL_TIME' by multiplying 'ndit' and 'dit' values, and include it in the output.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 ndit, dit FROM raw.vircam' ocmd='addcol TOTAL_TIME \"ndit * dit\"' out=vircam_total_time.fits",
        "error": "Error: Unused arguments: '*' 'dit'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol TOTAL_TIME ndit * dit\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'dit'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Retrieve photometry from the J-PLUS EDR Catalogue, keeping only 100 rows and the 'mag_g' and 'mag_r' columns locally.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jpas-edr adql='SELECT * FROM jpas_edr.master' ocmd='head \"100\"; keepcols \"mag_g mag_r\"' out=jpas_subset.fits",
        "error": "Error: Unused arguments: 'mag_r'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols mag_g mag_r\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'mag_r'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query the VSA (VISTA) archive and locally calculate the absolute K magnitude (K_ABS) based on parallax (assuming it exists locally) and K magnitude.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/vsa adql='SELECT * FROM vsa.catalogue' ocmd='addcol K_ABS \"K_MAG - 5 * log10(parallax) + 5\"' out=vsa_k_abs.fits",
        "error": "Error: Unused arguments: '-' '5' '*' 'log10(parallax)' '+' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol K_ABS K_MAG - 5 * log10(parallax) + 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '5' '*' 'log10(parallax)' '+' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query MAST HSCv3, filtering locally to keep only point sources where the G-band magnitude error is below 0.1.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT * FROM hsc_v3.point' ocmd='select \"f606w_mag_err < 0.1\"' out=hsc_low_err.fits",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select f606w_mag_err < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query the ESO TAP_OBS service and assert locally that the minimum exposure time ('dit') is greater than 1.0 second for all retrieved VIRCAM rows.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 dit FROM raw.vircam' ocmd='assert \"dit > 1.0\"' out=vircam_assert_dit.fits",
        "error": "Error: Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert dit > 1.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query MAST Gaia DR3 and apply a pre-processing step to filter out rows with a high parallax error (> 1.0 mas) before writing the output.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/gaiadr3/ adql='SELECT * FROM gaiadr3.gaia_source' maxrec=1000 ocmd='select \"parallax_error < 1.0\"' out=mast_gaia_low_err.fits",
        "error": "Error: Unused arguments: '<' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select parallax_error < 1.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query the PADC TAP Astro server for column data and assert locally that the number of columns is greater than 10.",
        "response": "stilts tapquery tapurl=http://voparis-tap-astro-m.obspm.fr/tap adql='SELECT * FROM TAP_SCHEMA.columns' ocmd='assert \"$ncol > 10\"' out=padc_assert_cols.vot",
        "error": "Error: Unused arguments: '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $ncol > 10\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query MAST HSCv3 and assert locally that the table contains at least 10 columns.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 1 * FROM hsc_v3.point' ocmd='assert \"$ncol > 10\"' out=hsc_assert_cols.fits",
        "error": "Error: Unused arguments: '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $ncol > 10\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Query MAST PanSTARRS DR1 and locally remove all columns except the source ID, RA, and DEC.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 10 * FROM dbo.detection_object' ocmd='keepcols \"objid ra dec\"' out=ps1_minimal.fits",
        "error": "Error: Unused arguments: 'ra' 'dec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols objid ra dec\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ra' 'dec'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Retrieve positions and proper motions from ARI Gaia for 100 sources where proper motion in RA (`pmra`) is not null, then locally convert PMRA from mas/yr to arcsec/yr and rename the column.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 100 ra, dec, pmra, pmdec FROM gaiadr3.gaia_source WHERE pmra IS NOT NULL' ocmd='replacecol PMRA_ARCSEC \"pmra * 0.001\"; delcols \"pmra\"' out=ari_pm_converted.fits",
        "error": "Error: Unused arguments: '*' '0.001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PMRA_ARCSEC pmra * 0.001\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '0.001'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Upload a local table of 500 simulated sources to the ESA Gaia TAP service and crossmatch it, filtering the local table first to keep only sources with DEC > 0.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT g.source_id, u.ra_input FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.s_in AS u ON 1=CONTAINS(POINT(''ICRS'', g.ra, g.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.001))' nupload=1 upload1=:skysim:500 upname1=s_in ucmd1='select \"dec > 0\"' out=gaia_xmatch_filtered.fits",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select dec > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Run a synchronous query against ARI Gaia for 5 sources, then assert locally that all retrieved parallaxes are positive.",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 5 * FROM gaiadr3.gaia_source' sync=true ocmd='assert \"parallax > 0\"' out=ari_positive_plx.vot",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert parallax > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Find 100 VIRCAM raw frames from ESO TAP_OBS, then locally filter the output table to keep only those with airmass < 1.1.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 100 * FROM raw.vircam' ocmd='select \"airmass < 1.1\"' out=vircam_low_airmass.fits",
        "error": "Error: Unused arguments: '<' '1.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select airmass < 1.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '1.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Retrieve GOODS photometry rows where V and I magnitude are non-null, then calculate V-I color locally using an `addcol` command.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/goods/ adql='SELECT * FROM goods.photometry WHERE V_MAG IS NOT NULL AND I_MAG IS NOT NULL' ocmd='addcol V_I \"V_MAG - I_MAG\"' out=goods_v_i.fits",
        "error": "Error: Unused arguments: '-' 'I_MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol V_I V_MAG - I_MAG\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'I_MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Retrieve 10 VSA catalogue sources and locally calculate a new column J_H_COLOR from existing J_MAG and H_MAG columns using a post-processing command.",
        "response": "stilts tapquery tapurl=http://tap.roe.ac.uk/vsa adql='SELECT TOP 10 J_MAG, H_MAG FROM vsa.catalogue' ocmd='addcol J_H_COLOR \"J_MAG - H_MAG\"' out=vsa_color.fits",
        "error": "Error: Unused arguments: '-' 'H_MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol J_H_COLOR J_MAG - H_MAG\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'H_MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Upload a list of galaxies with magnitudes to GAVO DC, and perform a crossmatch against SDSS quasars where the uploaded galaxy magnitude is less than 20 (filtered before upload).",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT t.ra, t.dec, u.mag FROM sdss.dr16qso AS t JOIN TAP_UPLOAD.bright_gals AS u ON 1=CONTAINS(POINT(''ICRS'', t.ra, t.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.0001))' nupload=1 upload1=gals.fits upname1=bright_gals ucmd1='select \"MAG < 20\"' out=gavo_upload_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 20\n\nUsage: select <expr>\n    (Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Upload local catalogue 'data.fits' to the Gaia TAP service and filter the upload before sending, ensuring only rows where G magnitude is brighter than 17 are included in the server's temporary table.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT g.* FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.D AS u ON g.source_id = u.source_id' nupload=1 upload1=data.fits upname1=D ucmd1='select \"G < 17\"' out=gaia_filtered_upload.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '17'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G < 17\n\nUsage: select <expr>\n    (Unused arguments: '<' '17'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 100 rows from the Subaru SAGA database, then filter the resulting table locally to keep only the stars with super-solar iron abundance ([Fe/H] > 0.0).",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 100 * FROM saga.stellar_abundances' ocmd='select \"FE_H > 0.0\"' out=saga_high_feh.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FE_H > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query MAST MissionMAST for the HST summary table and filter the columns locally to retain only the observation ID and facility name.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/missionmast/ adql='SELECT TOP 10 * FROM hst.summary' ocmd='keepcols \"obs_id facility_name\"' out=missionmast_subset.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'facility_name'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols obs_id facility_name\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'facility_name'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query ESO TAP OBS for VIRCAM raw data and apply a post-processing filter to keep only rows where the detector integration time (DIT) exceeds 100 seconds.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM raw.vircam' ocmd='select \"dit > 100\"' out=vircam_long_dit.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select dit > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Upload a local table of prospective targets to MAST PanSTARRS 1 DR2 and filter the local data before sending, keeping only sources with positive proper motion in RA (PMRA > 0).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT t.*, u.PMRA FROM dbo.detection_object AS t JOIN TAP_UPLOAD.L AS u ON t.objid = u.ID' nupload=1 upload1=targets.fits upname1=L ucmd1='select \"PMRA > 0\"' out=ps1_upload_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Calculate the checksum of the plate metadata table from the APPLAUSE archive, but filter the retrieved rows first to keep only ID and DATE columns.",
        "response": "stilts tapquery tapurl=https://www.plate-archive.org/tap adql='SELECT * FROM apl.plate_meta' omode=checksum ocmd='keepcols \"ID, DATE\"' ",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DATE'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID, DATE\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'DATE'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Upload a local table to MAST HSCv3, filtering the uploaded table to include only bright sources (F606W < 20) before the crossmatch occurs.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT t.*, u.ID FROM hsc_v3.point AS t JOIN TAP_UPLOAD.T AS u ON t.hst_id = u.ID' nupload=1 upload1=local_cat.fits upname1=T ucmd1='select \"F606W_MAG < 20\"' out=hsc_upload.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select F606W_MAG < 20\n\nUsage: select <expr>\n    (Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Upload a catalogue of coordinates to GAVO DC and filter the local table before upload to keep only rows with RA greater than zero.",
        "response": "stilts tapquery tapurl=http://dc.g-vo.org/tap adql='SELECT t.ra, u.mag FROM sdss.dr16qso AS t JOIN TAP_UPLOAD.C AS u ON 1=CONTAINS(POINT(''ICRS'', t.ra, t.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.001))' nupload=1 upload1=coords.csv upname1=C ucmd1='select \"RA > 0\"' out=gavo_positive_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 100 stellar abundance records from the Subaru SAGA database and locally remove the RA and DEC columns after retrieval.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 100 * FROM saga.stellar_abundances' ocmd='delcols \"RA DEC\"' out=saga_no_coords.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: delcols RA DEC\n\nUsage: delcols <colid-list>\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query J-PLUS DR3 for galaxies, locally calculating a new color index (`g_mag - r_mag`) and sorting the result by this color in ascending order.",
        "response": "stilts tapquery tapurl=https://archive.cefca.es/catalogues/vo/tap/jplus-dr3 adql='SELECT TOP 50 g_mag, r_mag FROM jplus_dr3.master' ocmd='addcol COLOR \"g_mag - r_mag\"; sort \"COLOR\"' out=jplus_color_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'r_mag'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COLOR g_mag - r_mag\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'r_mag'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve ObsCore data from Chandra CXC and filter the output locally to keep only the sources identified as matched (m_match_flag = 1).",
        "response": "stilts tapquery tapurl=https://cda.cfa.harvard.edu/csctap adql='SELECT TOP 100 * FROM csc.master_source' ocmd='select \"m_match_flag == 1\"' out=csc_matched.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select m_match_flag == 1\n\nUsage: select <expr>\n    (Unused arguments: '==' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve TESS Input Catalog entries and locally filter them to keep only sources where the TESS magnitude (TMAG) is between 12 and 13.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 100 * FROM tic.v8' ocmd='select \"tmag BETWEEN 12 AND 13\"' out=tic_mid_range.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'BETWEEN' '12' 'AND' '13'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select tmag BETWEEN 12 AND 13\n\nUsage: select <expr>\n    (Unused arguments: 'BETWEEN' '12' 'AND' '13'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the Subaru HDS Spectrum data service for 10 records and locally remove all columns except RA and DEC.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/hds/ adql='SELECT TOP 10 * FROM hds.spectrum' ocmd='keepcols \"ra dec\"' out=hds_coords_only.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'dec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ra dec\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'dec'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the ESO TAP_OBS service for VIRCAM raw data, and locally filter the results to keep only rows where the detector integration time (DIT) is exactly 10.0 seconds.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT * FROM raw.vircam' ocmd='select \"dit == 10.0\"' out=vircam_10s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select dit == 10.0\n\nUsage: select <expr>\n    (Unused arguments: '==' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the Subaru SAGA database for a sample of stars, and locally calculate the surface gravity in cgs units (log10(g)) using the LOGG column.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 50 LOGG FROM saga.stellar_abundances' ocmd='addcol GRAVITY_CGS \"pow(10, LOGG)\"' out=saga_gravity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'LOGG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol GRAVITY_CGS pow(10, LOGG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'LOGG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find all Subaru Suprime-Cam point sources and locally calculate a new column `R_ABS` based on parallax (if available) and R magnitude.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/spcam adql='SELECT * FROM hsc_v3.point' ocmd='addcol R_ABS \"R_MAG - 5 * log10(parallax) + 5\"' out=spcam_abs_r.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '5' '*' 'log10(parallax)' '+' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol R_ABS R_MAG - 5 * log10(parallax) + 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '5' '*' 'log10(parallax)' '+' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 50 stellar abundance records from the Subaru SAGA database and locally convert the proper motion (PMRA) to arcseconds per year.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 50 pmra FROM saga.stellar_abundances' ocmd='replacecol PMRA_ARCSEC \"pmra / 1000.0\"' out=saga_pm_arcsec.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PMRA_ARCSEC pmra / 1000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Upload a local table of source coordinates to ESA Gaia, apply a local filter to keep only sources where ID > 1000 before upload, and crossmatch them on RA/DEC.",
        "response": "stilts tapquery tapurl=https://gea.esac.esa.int/tap-server/tap adql='SELECT g.source_id FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.mylist AS u ON 1=CONTAINS(POINT(''ICRS'', g.ra, g.dec), CIRCLE(''ICRS'', u.ra, u.dec, 0.0001))' nupload=1 upload1=local_targets.fits upname1=mylist ucmd1='select \"ID > 1000\"' out=gaia_xmatch_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID > 1000\n\nUsage: select <expr>\n    (Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 PanSTARRS DR2 sources from MAST and locally reformat the RA column from decimal degrees to sexagesimal hours:minutes:seconds.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr2 adql='SELECT TOP 10 ra, dec FROM dbo.detection_object' ocmd='replacecol RA_HMS \"degreesToHms(ra, 2)\"; delcols \"ra\"' out=ps1_hms_ra_rename.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA_HMS degreesToHms(ra, 2)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find all records in the MAST PanSTARRS 1 DR1 TAP service with a quality flag greater than 0, and locally delete the RA and DEC columns after retrieval.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 100 * FROM dbo.detection_object WHERE quality_flag > 0' ocmd='delcols \"ra dec\"' out=ps1_filtered_no_coords.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'dec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: delcols ra dec\n\nUsage: delcols <colid-list>\n    (Unused arguments: 'dec'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the CSIRO ASKAP Science Data Archive for 50 ObsCore entries and locally calculate the row index ($0) plus 1.",
        "response": "stilts tapquery tapurl=https://casda.csiro.au/casda_vo_tools/tap adql='SELECT TOP 50 obs_id FROM obs_core' ocmd='addcol ROW_INDEX \"$0 + 1\"' out=askap_indexed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ROW_INDEX $0 + 1\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the European HST Archive for 10 ObsCore entries and locally filter the result to keep only the `obs_id` and `t_exptime` columns.",
        "response": "stilts tapquery tapurl=https://hst.esac.esa.int/tap-server/tap adql='SELECT TOP 10 * FROM ivoa.ObsCore' ocmd='keepcols \"obs_id t_exptime\"' out=hst_minimal.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 't_exptime'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols obs_id t_exptime\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 't_exptime'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Upload a table 'my_bright_stars.vot' to AIP Gaia, filtering the local file before upload to keep only rows where the 'MAG' column is less than 12.",
        "response": "stilts tapquery tapurl=https://gaia.aip.de/tap adql='SELECT g.* FROM gaiadr3.gaia_source AS g JOIN TAP_UPLOAD.mydata AS u ON g.source_id = u.source_id' nupload=1 upload1=my_bright_stars.vot upname1=mydata ucmd1='select \"MAG < 12\"' out=aip_filtered_upload.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 12\n\nUsage: select <expr>\n    (Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve the top 50 sources from MAST HSCv3, requiring that the stellarity index is greater than 0.95, using a post-processing filter.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/hsc/ adql='SELECT TOP 50 * FROM hsc_v3.point' ocmd='select \"stellarity_index > 0.95\"' out=hsc_high_stellarity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.95'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select stellarity_index > 0.95\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.95'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query ARI Gaia for 100 sources and locally compute a new column `MU` representing the total proper motion vector magnitude (SQRT(pmra^2 + pmdec^2)).",
        "response": "stilts tapquery tapurl=https://gaia.ari.uni-heidelberg.de/tap adql='SELECT TOP 100 pmra, pmdec FROM gaiadr3.gaia_source' ocmd='addcol MU \"hypot(pmra, pmdec)\"' out=ari_pm_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MU hypot(pmra, pmdec)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the MAST SkyMapper DR4 service for 10 sources, filtering the output locally to keep only the source ID and coordinates.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/skymapperdr4/ adql='SELECT TOP 10 * FROM smssdr4.master' ocmd='keepcols \"source_id ra dec\"' out=smss_minimal.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ra' 'dec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols source_id ra dec\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ra' 'dec'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find 50 sources from MAST PanSTARRS 1 DR1 and calculate the ratio of G magnitude to R magnitude (assuming G_MEAN_MAG and R_MEAN_MAG columns exist).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ps1dr1 adql='SELECT TOP 50 g_mean_mag, r_mean_mag FROM dbo.detection_object' ocmd='addcol G_R_RATIO \"g_mean_mag / r_mean_mag\"' out=ps1_ratio.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'r_mean_mag'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol G_R_RATIO g_mean_mag / r_mean_mag\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'r_mean_mag'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the MAST TESS Input Catalog (TIC) for objects, and filter the data locally to keep only rows where the TESS magnitude is brighter than 14.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 100 * FROM tic.v8' ocmd='select \"Tmag < 14\"' out=tic_bright_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '14'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Tmag < 14\n\nUsage: select <expr>\n    (Unused arguments: '<' '14'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 stellar abundance records from the Subaru SAGA database and locally convert the proper motion in RA (pmra) from mas/yr to degrees/yr.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 10 pmra FROM saga.stellar_abundances' ocmd='replacecol PMRA \"pmra / 3600000.0\"' out=saga_pm_deg.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PMRA pmra / 3600000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the European JWST Archive for ObsCore entries and locally add a column `IS_HIGH_Z` that is true if `REDSHIFT` > 7 (assuming redshift is provided).",
        "response": "stilts tapquery tapurl=https://jwst.esac.esa.int/server/tap adql='SELECT TOP 100 * FROM ivoa.ObsCore' ocmd='addcol IS_HIGH_Z \"REDSHIFT > 7.0\"' out=jwst_high_z_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '7.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_HIGH_Z REDSHIFT > 7.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '7.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 stellar abundance records from the Subaru SAGA database and locally convert the temperature column (`Teff`) from Kelvin to Celsius.",
        "response": "stilts tapquery tapurl=http://jvo.nao.ac.jp/skynode/do/tap/saga adql='SELECT TOP 10 Teff FROM saga.stellar_abundances' ocmd='replacecol T_CELSIUS \"Teff - 273.15\"' out=saga_celsius.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '273.15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol T_CELSIUS Teff - 273.15\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '273.15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Find XMM-Newton XCATDB sources and locally filter them to keep only rows where the flux in band 1 is greater than 1e-13.",
        "response": "stilts tapquery tapurl=https://xcatdb.unistra.fr/xtapdb adql='SELECT TOP 100 flux_b1 FROM dbo.xcat_source' ocmd='select \"flux_b1 > 1E-13\"' out=xcat_flux_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1E-13'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select flux_b1 > 1E-13\n\nUsage: select <expr>\n    (Unused arguments: '>' '1E-13'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve MAST ULLYSES HLSP ObsCore entries and locally remove all columns except the target name and coordinates.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/ullyses/ adql='SELECT * FROM ivoa.ObsCore' ocmd='keepcols \"target_name s_ra s_dec\"' out=ullyses_minimal.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 's_ra' 's_dec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols target_name s_ra s_dec\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 's_ra' 's_dec'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the MAST TESS Input Catalog (TIC) for 50 records and locally add a column `TEFF_K` by multiplying the `TEFF` column by 1.0 (utility operation).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/tic adql='SELECT TOP 50 Teff FROM tic.v8' ocmd='addcol TEFF_K \"Teff * 1.0\"' out=tic_teff_copy.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol TEFF_K Teff * 1.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the MAST CANDELS HLSP for photometry and locally add a column `FLUX_RATIO` (F160W_FLUX / F140W_FLUX).",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/candels/ adql='SELECT TOP 10 F160W_FLUX, F140W_FLUX FROM candels.photometry' ocmd='addcol FLUX_RATIO \"F160W_FLUX / F140W_FLUX\"' out=candels_flux_ratio.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'F140W_FLUX'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_RATIO F160W_FLUX / F140W_FLUX\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'F140W_FLUX'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Query the ESO TAP_OBS for ObsCore entries and locally assert that the minimum time `T_MIN` is greater than MJD 50000.",
        "response": "stilts tapquery tapurl=https://archive.eso.org/tap_obs adql='SELECT TOP 10 T_MIN FROM ivoa.ObsCore' ocmd='assert \"T_MIN > 50000\"' out=eso_assert_time.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '50000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert T_MIN > 50000\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '50000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Retrieve 10 sources from MAST SkyMapper DR4 and locally add a column `G_R_COLOR` calculated from `G_MAG` and `R_MAG`.",
        "response": "stilts tapquery tapurl=https://mast.stsci.edu/vo-tap/api/v0.1/skymapperdr4/ adql='SELECT TOP 10 G_MAG, R_MAG FROM smssdr4.master' ocmd='addcol G_R_COLOR \"G_MAG - R_MAG\"' out=smss_color_calc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'R_MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol G_R_COLOR G_MAG - R_MAG\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'R_MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tapquery"
    },
    {
        "prompt": "Filter the table `galaxy_catalog.fits` to only include rows where the redshift `z` is greater than 0.5. Save the result to a new file `high_z_galaxies.fits`.",
        "response": "stilts tpipe in=galaxy_catalog.fits cmd='select \"z > 0.5\"' out=high_z_galaxies.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select z > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need to perform two steps on `raw_data.csv`: first, select rows where `QUALITY_FLAG == 0`, and second, sort the result by `TIMESTAMP`. Save the final table as `clean_sorted_data.vot`.",
        "response": "stilts tpipe ifmt=csv in=raw_data.csv cmd='select \"QUALITY_FLAG == 0\"' cmd='sort \"TIMESTAMP\"' ofmt=votable out=clean_sorted_data.vot",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select QUALITY_FLAG == 0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I have `data.fits`. I want to filter it for `FLUX > 100`, add a new column `MAG` as `-2.5*log10(FLUX)`, and then send the result to TOPCAT.",
        "response": "stilts tpipe in=data.fits cmd='select \"FLUX > 100\"' cmd='addcol MAG \"-2.5*log10(FLUX)\"' omode=topcat",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "How do I take a random sample of 1000 rows from `massive_survey.colfits` and save it to `survey_sample.fits`?",
        "response": "stilts tpipe in=massive_survey.colfits cmd='random \"1000\"' out=survey_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1000'\n\nCommand was: random \"1000\"\n\nUsage: random\n    (Unused arguments: '1000')\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate a checksum for the table `final_product.fits` after selecting only rows where `CONFIDENCE > 0.95`.",
        "response": "stilts tpipe in=final_product.fits cmd='select \"CONFIDENCE > 0.95\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.95'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select CONFIDENCE > 0.95\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.95'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "From the simulated sky catalog `:skysim:1e6`, select all stars with gmag < 12 and count them.",
        "response": "stilts tpipe in=:skysim:1e6 cmd='select \"gmag < 12\"' omode=count",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select gmag < 12\n\nUsage: select <expr>\n    (Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Take `propermotion.fits` and select only objects with a total proper motion `sqrt(PMRA*PMRA + PMDEC*PMDEC)` greater than 500 mas/yr.",
        "response": "stilts tpipe in=propermotion.fits cmd='select \"hypot(PMRA,PMDEC) > 500\"' out=high_pm_stars.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '500'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA,PMDEC) > 500\n\nUsage: select <expr>\n    (Unused arguments: '>' '500'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Select every 10th row from `big_table.fits` and then take a random sample of 50 from that subset.",
        "response": "stilts tpipe in=big_table.fits cmd='every \"10\"' cmd='random \"50\"' out=random_subsample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '50'\n\nCommand was: random \"50\"\n\nUsage: random\n    (Unused arguments: '50')\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I need to select rows where `FLAG_A` OR `FLAG_B` is set. These are bitmask columns, so I need to check bit 3 (value 8).",
        "response": "stilts tpipe in=flags.fits cmd='select \"hasBit(FLAG_A,3) || hasBit(FLAG_B,3)\"' out=flagged_objects.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '||' 'hasBit(FLAG_B,3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(FLAG_A,3) || hasBit(FLAG_B,3)\n\nUsage: select <expr>\n    (Unused arguments: '||' 'hasBit(FLAG_B,3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "I have a table of spectral lines. I need to select lines where the `WAVELENGTH` is between 4000 and 5000 Angstroms.",
        "response": "stilts tpipe in=spectral_lines.fits cmd='select \"WAVELENGTH>4000 && WAVELENGTH<5000\"' out=optical_lines.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'WAVELENGTH<5000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select WAVELENGTH>4000 && WAVELENGTH<5000\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'WAVELENGTH<5000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column `SNR` calculated as `FLUX / FLUX_ERROR` and then keep only rows where `SNR` is greater than 5.",
        "response": "stilts tpipe in=detections.fits cmd='addcol SNR \"FLUX/FLUX_ERROR\"' cmd='select \"SNR > 5\"' out=high_snr.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select SNR > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a table of 1000 random points on the sky from `:skysim:1000`, convert to galactic coordinates, and keep only points near the galactic center (abs(l) < 10 && abs(b) < 10).",
        "response": "stilts tpipe in=:skysim:1000 cmd='addskycoords \"icrs galactic ra dec l b\"' cmd='select \"abs(l)<10 && abs(b)<10\"' out=galactic_center_sim.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic ra dec l b\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table to keep only rows where the flux is non-null and greater than 10, and count the remaining rows.",
        "response": "stilts tpipe in=data.fits cmd='select \"!NULL_FLUX && FLUX > 10\"' omode=count",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'FLUX' '>' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_FLUX && FLUX > 10\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'FLUX' '>' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Select only objects where the proper motion in RA (PMRA) is within two times its error (PMRA_ERR).",
        "response": "stilts tpipe in=gaia.fits cmd='select \"abs(PMRA) < 2.0 * PMRA_ERR\"' out=clean_pm.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '2.0' '*' 'PMRA_ERR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(PMRA) < 2.0 * PMRA_ERR\n\nUsage: select <expr>\n    (Unused arguments: '<' '2.0' '*' 'PMRA_ERR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Verify that all magnitude values are positive before writing the output.",
        "response": "stilts tpipe in=test.fits cmd='assert \"MAG > 0.0\"' out=verified.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG > 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Select a random 1% sample of the data and send the result directly to TOPCAT for immediate viewing.",
        "response": "stilts tpipe in=full_survey.fits cmd='random \"0.01\"' omode=topcat",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.01'\n\nCommand was: random \"0.01\"\n\nUsage: random\n    (Unused arguments: '0.01')\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Apply a redshift zero-point correction of -0.001 to the 'Z_SPEC' column.",
        "response": "stilts tpipe in=spec_data.fits cmd='replacecol Z_SPEC \"Z_SPEC - 0.001\"' out=z_corrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '0.001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol Z_SPEC Z_SPEC - 0.001\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '0.001'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Verify that the total number of rows is exactly 5000 before proceeding.",
        "response": "stilts tpipe in=fixed_size.fits cmd='assert \"$nrow == 5000L\"' out=validated.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '5000L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $nrow == 5000L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '5000L'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Check if a given angular distance column 'SEP_DEG' is always positive and assert it.",
        "response": "stilts tpipe in=measurements.fits cmd='assert \"SEP_DEG >= 0.0\"' out=positive_sep.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert SEP_DEG >= 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "For every row, compute the luminosity distance (Mpc) for a given redshift (Z) using cosmological constants (H0=70, OmegaM=0.3, OmegaLambda=0.7).",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol L_DIST \"luminosityDistance(Z, 70.0, 0.3, 0.7)\"' out=galaxies_dist.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol L_DIST luminosityDistance(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Replace a faulty proper motion column 'PM' with the calculated hypotenuse of PMRA and PMDEC, only for rows where PM is null.",
        "response": "stilts tpipe in=data.fits cmd='replacecol PM \"NULL_PM ? hypot(PMRA, PMDEC) : PM\"' out=data_repaired.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' 'hypot(PMRA,' 'PMDEC)' ':' 'PM'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PM NULL_PM ? hypot(PMRA, PMDEC) : PM\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' 'hypot(PMRA,' 'PMDEC)' ':' 'PM'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the catalogue to keep only objects with magnitude 'MAG' in the range 10 to 15, inclusive.",
        "response": "stilts tpipe in=cat.fits cmd='select \"MAG >= 10.0 && MAG <= 15.0\"' out=mid_range.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '10.0' '&&' 'MAG' '<=' '15.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG >= 10.0 && MAG <= 15.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '10.0' '&&' 'MAG' '<=' '15.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Propagate the position defined by (RA, DEC, PMRA, PMDEC, PARALLAX) forward by 5 years, updating RA and DEC columns.",
        "response": "stilts tpipe in=gaia.fits cmd='replacecol RA \"epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))\"' cmd='replacecol DEC \"epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))\"' out=propagated.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' '0.0))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' '0.0))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Select only the rows that have a redshift (Z) greater than 2, and write the output as a LaTeX table.",
        "response": "stilts tpipe in=qso.fits cmd='select \"Z > 2.0\"' ofmt=latex out=qso_report.tex",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '2.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 2.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '2.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Replace null values in the proper motion error column (PM_ERR) with a fixed value of 0.5 mas.",
        "response": "stilts tpipe in=errors.fits cmd='replacecol PM_ERR \"NULL_PM_ERR ? 0.5 : PM_ERR\"' out=fixed_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '0.5' ':' 'PM_ERR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PM_ERR NULL_PM_ERR ? 0.5 : PM_ERR\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '0.5' ':' 'PM_ERR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the photometric distance modulus (DM) from absolute magnitude (M_ABS) and apparent magnitude (M_APP).",
        "response": "stilts tpipe in=phot.fits cmd='addcol DM \"M_APP - M_ABS\"' out=phot_dm.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'M_ABS'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DM M_APP - M_ABS\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'M_ABS'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Split the table rows into 10 independent groups based on the row index modulo 10.",
        "response": "stilts tpipe in=big_cat.fits cmd='addcol GROUP_ID \"toInteger($0 % 10)\"' cmd='group \"GROUP_ID 0\"; count; COUNT' out=grouped_data.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: count\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Check if bit 3 (zero-indexed) is set in the integer column 'STATUS_WORD', adding a boolean column 'BIT3_SET'.",
        "response": "stilts tpipe in=telemetry.fits cmd='addcol BIT3_SET \"hasBit(STATUS_WORD, 3)\"' out=telemetry_bit.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol BIT3_SET hasBit(STATUS_WORD, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table so that the logarithm of the row count in the output table is greater than 5.",
        "response": "stilts tpipe in=large_data.fits cmd='select \"log10($nrow) > 5.0\"' omode=count",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select log10($nrow) > 5.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '5.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "For every row, generate a new array column 'RAND_ERR' containing 5 random Gaussian numbers.",
        "response": "stilts tpipe in=data.fits cmd='addcol RAND_ERR \"randomGaussianArray($0, 5)\"' out=data_rand.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RAND_ERR randomGaussianArray($0, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column giving the HEALPix pixel index (order 10, NEST scheme) for ICRS coordinates (RA, DEC).",
        "response": "stilts tpipe in=coords.fits cmd='addcol HPX_INDEX \"healpixNestIndex(10, RA, DEC)\"' out=hpx_indexed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA,' 'DEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HPX_INDEX healpixNestIndex(10, RA, DEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA,' 'DEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Check if there is a column named 'RA' present in the input table and assert its existence.",
        "response": "stilts tpipe in=data.fits cmd='assert \"$ncol > 0L\"' out=checked_nonempty.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $ncol > 0L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a scalar column 'FLUX_RATIO' calculated as 'FLUX_A' / 'FLUX_B', and suppress the output if the operation causes division by zero or null values.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_RATIO \"FLUX_A / FLUX_B\"' cmd='select \"!NULL_FLUX_RATIO\"' out=safe_ratio.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_RATIO FLUX_A / FLUX_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_K' derived by converting flux in mJy from 'FLUX_MJY' to magnitudes, assuming Vega zeropoint 18.5.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol MAG_K \"18.5 - 2.5 * log10(FLUX_MJY)\"' out=mags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '2.5' '*' 'log10(FLUX_MJY)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_K 18.5 - 2.5 * log10(FLUX_MJY)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '2.5' '*' 'log10(FLUX_MJY)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the proper motion error (PM_ERR) is never negative.",
        "response": "stilts tpipe in=data.fits cmd='assert \"PM_ERR >= 0.0\"' out=asserted_pm_err.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert PM_ERR >= 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Remove the existing magnitude column 'MAG' and add a new one named 'MAG_RECAL' using the expression 'MAG_OLD + 0.1'.",
        "response": "stilts tpipe in=data.fits cmd='replacecol MAG \"MAG_OLD + 0.1\"' cmd='colmeta \"-name MAG MAG_RECAL\"' out=recalibrated.fits",
        "chat.jar": "failed",
        "error": "Error: No such flag -name MAG MAG_RECAL\n\nCommand was: colmeta \"-name MAG MAG_RECAL\"\n\nUsage: colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n               [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n               [-shape <n>[,<n>...][,*]] [-elsize <n>]\n               <colid-list>\n    (No such flag -name MAG MAG_RECAL)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a boolean column 'IS_FAINT' that is true if 'FLUX' is less than its mean value across the entire table (requires initial pass).",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='addcol IS_FAINT \"FLUX < mean(FLUX)\"' out=faint_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT FLUX < mean(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Create an output column 'RA_DEG' by calculating degrees from an array of three string components (HH, MM, SS) stored in 'RA_HMS_ARRAY'.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_DEG \"hmsToDegrees(RA_HMS_ARRAY, RA_HMS_ARRAY, RA_HMS_ARRAY)\"' out=array_hms_conversion.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA_HMS_ARRAY,' 'RA_HMS_ARRAY)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DEG hmsToDegrees(RA_HMS_ARRAY, RA_HMS_ARRAY, RA_HMS_ARRAY)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA_HMS_ARRAY,' 'RA_HMS_ARRAY)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_ABS' using the formula M_abs = G_MAG - 5 * log10(DISTANCE_PC) + 5, then rename G_MAG to M_APP.",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_ABS \"G_MAG - 5.0 * log10(DISTANCE_PC) + 5.0\"' cmd='colmeta \"-name M_APP G_MAG\"' out=absolute_mag.fits",
        "chat.jar": "failed",
        "error": "Error: No such flag -name M_APP G_MAG\n\nCommand was: colmeta \"-name M_APP G_MAG\"\n\nUsage: colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n               [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n               [-shape <n>[,<n>...][,*]] [-elsize <n>]\n               <colid-list>\n    (No such flag -name M_APP G_MAG)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column named 'ERROR_ARRAY' containing the sum of the square of two array columns, 'ERR1' and 'ERR2', element-wise.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol ERROR_ARRAY \"add(square(ERR1), square(ERR2))\"' out=error_quadrature.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'square(ERR2))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_ARRAY add(square(ERR1), square(ERR2))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'square(ERR2))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Explode a 2D array column of shape (3, 5) into 15 scalar columns, naming them automatically (C1_1...C3_5).",
        "response": "stilts tpipe in=arrays.fits cmd='explodecols \"-ifshape 3,5 array_col\"' out=exploded.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3,5' 'array_col'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: explodecols -ifshape 3,5 array_col\n\nUsage: explodecols <colid-list>\n    (Unused arguments: '3,5' 'array_col'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a new column that gives the number of hours since the Unix epoch for the given 'TIME_UNIX' column (seconds).",
        "response": "stilts tpipe in=time_data.fits cmd='addcol HOURS_SINCE \"TIME_UNIX / 3600.0\"' out=time_hours.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HOURS_SINCE TIME_UNIX / 3600.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'LOG_FLUX' and ensure that it is typed as a 32-bit floating point value (float).",
        "response": "stilts tpipe in=data.fits cmd='addcol -type \"float LOG_FLUX log10(FLUX)\"' out=float_log.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'LOG_FLUX' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type float LOG_FLUX log10(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'LOG_FLUX' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the catalogue to keep rows corresponding to the last 10 minutes of observation, given a 'TIME_MJD' column and a constant parameter 'OBS_END_MJD'.",
        "response": "stilts tpipe in=logs.fits cmd='select \"TIME_MJD > param$OBS_END_MJD - 10.0/1440.0\"' out=last_10_min.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' 'param$OBS_END_MJD' '-' '10.0/1440.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TIME_MJD > param$OBS_END_MJD - 10.0/1440.0\n\nUsage: select <expr>\n    (Unused arguments: '>' 'param$OBS_END_MJD' '-' '10.0/1440.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column representing the parallax error in micro-arcseconds (uas) given the column 'PLX_ERR_MAS' in milli-arcseconds.",
        "response": "stilts tpipe in=data.fits cmd='addcol -units \"uas PLX_ERR_UAS PLX_ERR_MAS * 1000.0\"' out=uas_error.fits",
        "chat.jar": "failed",
        "error": "Error: Bad addcol specification\n\nCommand was: addcol -units \"uas PLX_ERR_UAS PLX_ERR_MAS * 1000.0\"\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Bad addcol specification)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Replace null values in boolean column 'FLAG' with false.",
        "response": "stilts tpipe in=bool_data.fits cmd='replacecol FLAG \"NULL_FLAG ? false : FLAG\"' out=bool_fixed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' 'false' ':' 'FLAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLAG NULL_FLAG ? false : FLAG\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' 'false' ':' 'FLAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Check if any entry in the 'FLUX' column is positive and assert it is true for at least one row.",
        "response": "stilts tpipe in=zero_data.fits cmd='assert \"FLUX > 0.0\"' out=positive_flux_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX > 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the difference between RA and DEC in degrees and assert that the difference is always less than 10 degrees.",
        "response": "stilts tpipe in=data.fits cmd='addcol DIFF \"abs(RA-DEC)\"' cmd='assert \"DIFF < 10.0\"' out=diff_checked.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert DIFF < 10.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Remove the column 'VEL_ERR' if the table parameter 'ERROR_CORRECTED' is present and true.",
        "response": "stilts tpipe in=data.fits cmd='select \"!NULL_ERROR_CORRECTED && ERROR_CORRECTED\"' cmd='delcols \"VEL_ERR\"' out=vel_cleaned.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'ERROR_CORRECTED'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_ERROR_CORRECTED && ERROR_CORRECTED\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'ERROR_CORRECTED'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Display a progress monitor on the console while calculating a large, slow transformation, but immediately discard the output table.",
        "response": "stilts tpipe in=huge_data.fits cmd='addcol SLOW_COL \"log10($0 * 1.0)\"' cmd=progress omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SLOW_COL log10($0 * 1.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter out rows where the string column 'COMMENT' is either null or an empty string.",
        "response": "stilts tpipe in=data.fits cmd='select \"!NULL_COMMENT && length(COMMENT) > 0\"' out=comments_present.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'length(COMMENT)' '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_COMMENT && length(COMMENT) > 0\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'length(COMMENT)' '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'FLAG_NEW' that is the logical OR of 'FLAG_A' and 'FLAG_B'.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLAG_NEW \"FLAG_A || FLAG_B\"' out=logical_flags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '||' 'FLAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLAG_NEW FLAG_A || FLAG_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '||' 'FLAG_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate K-correction for SDSS g-band (KCF_g) at redshift Z=0.1, using g-r color (KCC_gr).",
        "response": "stilts tpipe in=data.fits cmd='addcol KCORR \"kCorr(KCF_g, 0.1, KCC_gr, G_MAG-R_MAG)\"' out=kcorrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.1,' 'KCC_gr,' 'G_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR kCorr(KCF_g, 0.1, KCC_gr, G_MAG-R_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.1,' 'KCC_gr,' 'G_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find rows where the galactic latitude (GLAT) is within the southern hemisphere (GLAT < 0) and filter the result.",
        "response": "stilts tpipe in=coords.fits cmd='select \"GLAT < 0.0\"' out=southern_sky.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GLAT < 0.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_K_ABS' using the luminosity distance (Mpc) calculated from the Z column (using default cosmology).",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_K_ABS \"K_MAG - distanceToModulus(mToMpc(comovingDistanceL(Z, 70.0, 0.3, 0.7)))\"' out=k_abs_dist.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'distanceToModulus(mToMpc(comovingDistanceL(Z,' '70.0,' '0.3,' '0.7)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_K_ABS K_MAG - distanceToModulus(mToMpc(comovingDistanceL(Z, 70.0, 0.3, 0.7)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'distanceToModulus(mToMpc(comovingDistanceL(Z,' '70.0,' '0.3,' '0.7)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PM_VEL_ICRS' containing the 3-element velocity vector calculated from astrometric parameters (RA, DEC, PMRA, PMDEC, PARALLAX, RV).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_ICRS \"astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\"' out=gaia_velocity_vector.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_ICRS astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Propagate the full 22-element astrometric error matrix backwards by 5 years, updating all fields.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PROP_22 \"epochPropErr(-5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV, RA_error, DEC_error, PARALLAX_error, PMRA_error, PMDEC_error, RV_error, RA_DEC_corr, RA_PARALLAX_corr, RA_PMRA_corr, RA_PMDEC_corr, DEC_PARALLAX_corr, DEC_PMRA_corr, DEC_PMDEC_corr, PARALLAX_PMRA_corr, PARALLAX_PMDEC_corr, PMRA_PMDEC_corr))\"' out=gaia_error_propagated.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV,' 'RA_error,' 'DEC_error,' 'PARALLAX_error,' 'PMRA_error,' 'PMDEC_error,' 'RV_error,' 'RA_DEC_corr,' 'RA_PARALLAX_corr,' 'RA_PMRA_corr,' 'RA_PMDEC_corr,' 'DEC_PARALLAX_corr,' 'DEC_PMRA_corr,' 'DEC_PMDEC_corr,' 'PARALLAX_PMRA_corr,' 'PARALLAX_PMDEC_corr,' 'PMRA_PMDEC_corr))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PROP_22 epochPropErr(-5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV, RA_error, DEC_error, PARALLAX_error, PMRA_error, PMDEC_error, RV_error, RA_DEC_corr, RA_PARALLAX_corr, RA_PMRA_corr, RA_PMDEC_corr, DEC_PARALLAX_corr, DEC_PMRA_corr, DEC_PMDEC_corr, PARALLAX_PMRA_corr, PARALLAX_PMDEC_corr, PMRA_PMDEC_corr))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV,' 'RA_error,' 'DEC_error,' 'PARALLAX_error,' 'PMRA_error,' 'PMDEC_error,' 'RV_error,' 'RA_DEC_corr,' 'RA_PARALLAX_corr,' 'RA_PMRA_corr,' 'RA_PMDEC_corr,' 'DEC_PARALLAX_corr,' 'DEC_PMRA_corr,' 'DEC_PMDEC_corr,' 'PARALLAX_PMRA_corr,' 'PARALLAX_PMDEC_corr,' 'PMRA_PMDEC_corr))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Assert that the number of good rows ($nrow) is within a defined range.",
        "response": "stilts tpipe in=data.fits cmd='assert \"$nrow >= 1000L && $nrow <= 100000L\"' out=size_checked.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1000L' '&&' '$nrow' '<=' '100000L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $nrow >= 1000L && $nrow <= 100000L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1000L' '&&' '$nrow' '<=' '100000L'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column of boolean values indicating whether the integer column 'STATUS' has bit 5 set.",
        "response": "stilts tpipe in=flags.fits cmd='addcol HAS_BIT5 \"hasBit(STATUS, 5)\"' out=bit_checked.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HAS_BIT5 hasBit(STATUS, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the ratio of 'FLUX_A' to 'FLUX_B' is never infinite.",
        "response": "stilts tpipe in=data.fits cmd='assert \"isFinite(FLUX_A / FLUX_B)\"' out=ratio_finite.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert isFinite(FLUX_A / FLUX_B)\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Extract the first 5 elements of the array column 'DATA_ARRAY' and make them a new array column 'SUB_ARRAY'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol SUB_ARRAY \"slice(DATA_ARRAY, 0, 5)\"' out=sliced_array.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0,' '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SUB_ARRAY slice(DATA_ARRAY, 0, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0,' '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the string column 'NAME' has a non-zero length for all rows.",
        "response": "stilts tpipe in=data.fits cmd='assert \"length(NAME) > 0\"' out=name_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert length(NAME) > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_Q' containing the quadrature sum of 'ERR1' and 'ERR2'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q \"hypot(ERR1, ERR2)\"' out=quad_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ERR2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q hypot(ERR1, ERR2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'ERR2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Select rows where the value of 'MAG' is numerically smaller than 10.5.",
        "response": "stilts tpipe in=cat.fits cmd='select \"MAG < 10.5\"' out=bright_cat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '10.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 10.5\n\nUsage: select <expr>\n    (Unused arguments: '<' '10.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table to keep only rows where the integer value of 'QUALITY_FLAG' has the bit pattern 0x04 set.",
        "response": "stilts tpipe in=data.fits cmd='select \"hasBit(QUALITY_FLAG, 2)\"' out=flag_4_set.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(QUALITY_FLAG, 2)\n\nUsage: select <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "For every row, check if the value of 'MAG' is greater than 25 and assert this condition is met by all rows.",
        "response": "stilts tpipe in=faint_sources.fits cmd='assert \"MAG > 25.0\"' out=faint_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '25.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG > 25.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '25.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the assert filter to verify that all values in 'FLUX' are convertible to 32-bit integers without overflow.",
        "response": "stilts tpipe in=data.fits cmd='assert \"FLUX == toFloat(toInteger(FLUX))\"' out=float_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'toFloat(toInteger(FLUX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX == toFloat(toInteger(FLUX))\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'toFloat(toInteger(FLUX))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_KCORR' using the formula M_corr = M + K_corr, where K_corr is calculated using the photometric redshift (Z_PHOT).",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_KCORR \"MAG + kCorr(KCF_r, Z_PHOT, KCC_gr, G_MAG-R_MAG)\"' out=kcorr_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'kCorr(KCF_r,' 'Z_PHOT,' 'KCC_gr,' 'G_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_KCORR MAG + kCorr(KCF_r, Z_PHOT, KCC_gr, G_MAG-R_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'kCorr(KCF_r,' 'Z_PHOT,' 'KCC_gr,' 'G_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a boolean column 'IS_BRIGHT' only if MAG is defined (not null) and less than 18.",
        "response": "stilts tpipe in=cat.fits cmd='addcol IS_BRIGHT \"!NULL_MAG && MAG < 18.0\"' out=flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'MAG' '<' '18.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT !NULL_MAG && MAG < 18.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '&&' 'MAG' '<' '18.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PM_VEL_GAL' containing the 3-element Galactic velocity vector (UVW) derived from astrometric parameters.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_GAL \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=gaia_galactic_velocity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_GAL icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Validate that the column 'MAG_ERR' only contains values that are small (less than 1.0) for all rows.",
        "response": "stilts tpipe in=errors.fits cmd='assert \"MAG_ERR < 1.0\"' out=small_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG_ERR < 1.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table to keep rows where 'RA' is greater than 100 degrees, and calculate the number of remaining rows.",
        "response": "stilts tpipe in=cat.fits cmd='select \"RA > 100.0\"' omode=count",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 100.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the difference between the maximum and minimum values of the array column 'TEMP_READINGS'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol TEMP_RANGE \"maximum(TEMP_READINGS) - minimum(TEMP_READINGS)\"' out=temp_range.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'minimum(TEMP_READINGS)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol TEMP_RANGE maximum(TEMP_READINGS) - minimum(TEMP_READINGS)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'minimum(TEMP_READINGS)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Replace the existing 'FLUX' column with a normalized version: 'FLUX / SUM(FLUX)' (requires initial pass for sum).",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='replacecol FLUX \"FLUX / sum(FLUX)\"' out=normalized_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'sum(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX / sum(FLUX)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' 'sum(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "For every row, check if the sum of 'FLUX_A' and 'FLUX_B' is zero and assert that it never happens.",
        "response": "stilts tpipe in=data.fits cmd='assert \"FLUX_A + FLUX_B != 0.0\"' out=non_zero_sum.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_B' '!=' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX_A + FLUX_B != 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'FLUX_B' '!=' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a boolean column 'IS_ODD' which is true if the 'ID' number is odd.",
        "response": "stilts tpipe in=data.fits cmd='addcol IS_ODD \"ID % 2 != 0\"' out=odd_ids.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_ODD ID % 2 != 0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '%' '2' '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add columns corresponding to the X, Y, Z Cartesian components of the object position derived from (RA, DEC, DISTANCE_PC).",
        "response": "stilts tpipe in=data.fits cmd='addcol XYZ_VEC \"polarXYZ(RA, DEC, DISTANCE_PC)\"' out=xyz_vectors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'DISTANCE_PC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol XYZ_VEC polarXYZ(RA, DEC, DISTANCE_PC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'DISTANCE_PC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_U_ABS' using the conversion constant 'JOHNSON_AB_U' to approximate the absolute magnitude.",
        "response": "stilts tpipe in=stars.fits cmd='addcol MAG_U_ABS \"U_MAG + JOHNSON_AB_U\"' out=u_abs_approx.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_ABS U_MAG + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the logical array column 'MASK' does not contain any true values.",
        "response": "stilts tpipe in=arrays.fits cmd='assert \"countTrue(MASK) == 0L\"' out=mask_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert countTrue(MASK) == 0L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add an array column 'FLUX_NORM' where each element is the ratio of the original flux array element to the sum of the flux array elements.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol FLUX_NORM \"divide(FLUX_ARRAY, sum(FLUX_ARRAY))\"' out=normalized_array.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'sum(FLUX_ARRAY))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_NORM divide(FLUX_ARRAY, sum(FLUX_ARRAY))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'sum(FLUX_ARRAY))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table to remove rows where the proper motion error in RA ('PMRA_ERR') is larger than 1.0 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMRA_ERR <= 1.0\"' out=low_pm_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA_ERR <= 1.0\n\nUsage: select <expr>\n    (Unused arguments: '<=' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Extract the proper motion vector (PMRA, PMDEC) and convert it to the Galactic coordinate system.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_ICRS \"astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\"' cmd='addcol PM_GAL \"icrsToGal(PM_ICRS)\"' out=pm_galactic.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_ICRS astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add columns corresponding to the X, Y, Z Cartesian components of the object position (XYZ) in Galactic coordinates.",
        "response": "stilts tpipe in=data.fits cmd='addcol XYZ_VEC \"icrsToGal(astromXYZ(RA, DEC, PARALLAX))\"' out=galactic_xyz.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol XYZ_VEC icrsToGal(astromXYZ(RA, DEC, PARALLAX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_U_AB' converting Johnson U magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB \"MAG_U + JOHNSON_AB_U\"' out=u_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table to keep rows where the distance (DIST) is between 100 and 200 parsecs.",
        "response": "stilts tpipe in=data.fits cmd='select \"DISTANCE_PC >= 100.0 && DISTANCE_PC <= 200.0\"' out=mid_dist.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '100.0' '&&' 'DISTANCE_PC' '<=' '200.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DISTANCE_PC >= 100.0 && DISTANCE_PC <= 200.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '100.0' '&&' 'DISTANCE_PC' '<=' '200.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_HMS' converting the RA in degrees to HMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS \"degreesToHms(RA, 2)\"' out=hms_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS degreesToHms(RA, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Simulate drawing a random sample of 100 rows, ensuring the precise number is obtained.",
        "response": "stilts tpipe in=large_data.fits cmd='random \"100.0/$nrow\"' cmd='assert \"$nrow >= 100L\"' out=exact_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '100.0/$nrow'\n\nCommand was: random \"100.0/$nrow\"\n\nUsage: random\n    (Unused arguments: '100.0/$nrow')\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those with non-null values in columns 1, 3, and 5.",
        "response": "stilts tpipe in=data.fits cmd='select \"!NULL_$1 && !NULL_$3 && !NULL_$5\"' out=non_null_subset.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_$3' '&&' '!NULL_$5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_$1 && !NULL_$3 && !NULL_$5\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_$3' '&&' '!NULL_$5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column containing the velocity (km/s) derived from the redshift (Z) using the speed of light constant (approximate conversion).",
        "response": "stilts tpipe in=data.fits cmd='addcol VELOCITY_KMS \"Z * C_KMS / 1000.0\"' out=vel_kms.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' 'C_KMS' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VELOCITY_KMS Z * C_KMS / 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'C_KMS' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the ratio of the number of rows where 'FLUX' is positive to the total number of rows.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='addcol POS_RATIO \"toDouble(sum(FLUX > 0)) / $nrow\"' out=ratio_table.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0))' '/' '$nrow'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_RATIO toDouble(sum(FLUX > 0)) / $nrow\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0))' '/' '$nrow'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_V_AB' converting Johnson V magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_V_AB \"MAG_V + JOHNSON_AB_V\"' out=v_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_V_AB MAG_V + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_ECL' containing the ICRS RA converted to Ecliptic Longitude (approximate conversion for comparison).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol COORDS_ICRS \"astromXYZ(RA, DEC, 1.0)\"' cmd='addcol COORDS_ECL \"icrsToEcl(COORDS_ICRS)\"' cmd='addcol RA_ECL \"cartesianToLon(COORDS_ECL, COORDS_ECL)\"' out=ecliptic_coords.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' '1.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COORDS_ICRS astromXYZ(RA, DEC, 1.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' '1.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_INV' as the inverse of 'PARALLAX', but set it to null if 'PARALLAX' is less than 0.1 mas.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_INV \"PARALLAX > 0.1 ? 1.0 / PARALLAX : NULL\"' out=inverse_parallax.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.1' '?' '1.0' '/' 'PARALLAX' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_INV PARALLAX > 0.1 ? 1.0 / PARALLAX : NULL\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0.1' '?' '1.0' '/' 'PARALLAX' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add an array column 'FLUX_NORM' calculated by normalizing the original flux array by the maximum element.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol FLUX_NORM \"divide(FLUX_ARRAY, maximum(FLUX_ARRAY))\"' out=max_normalized_array.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'maximum(FLUX_ARRAY))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_NORM divide(FLUX_ARRAY, maximum(FLUX_ARRAY))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'maximum(FLUX_ARRAY))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Round the numeric column 'FLUX' to 3 decimal places for storage as a string.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_STR \"formatDecimal(FLUX, 3)\"' out=flux_formatted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_STR formatDecimal(FLUX, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_J_AB' converting 2MASS J magnitude (Vega) to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB \"MAG_J + VEGA_AB_J\"' out=j_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'KCORR_UV' using the KCF_FUV filter at Z=0.3, leveraging the FUV-NUV color (KCC_FUVNUV).",
        "response": "stilts tpipe in=uv_data.fits cmd='addcol KCORR_UV \"kCorr(KCF_FUV, 0.3, KCC_FUVNUV, FUV-NUV)\"' out=kcorr_uv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.3,' 'KCC_FUVNUV,' 'FUV-NUV)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_UV kCorr(KCF_FUV, 0.3, KCC_FUVNUV, FUV-NUV)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.3,' 'KCC_FUVNUV,' 'FUV-NUV)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the time difference between 'TIME_END' and 'TIME_START' is less than 100 units.",
        "response": "stilts tpipe in=logs.fits cmd='select \"TIME_END - TIME_START < 100.0\"' out=short_events.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'TIME_START' '<' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TIME_END - TIME_START < 100.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'TIME_START' '<' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a boolean column 'HIGH_RA' that is true if the RA value is between 180 and 360 degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol HIGH_RA \"RA >= 180.0 && RA <= 360.0\"' out=high_ra_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '180.0' '&&' 'RA' '<=' '360.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HIGH_RA RA >= 180.0 && RA <= 360.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>=' '180.0' '&&' 'RA' '<=' '360.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column containing the velocity vector (XYZ) corresponding to the proper motion (PMRA, PMDEC, PARALLAX) of the object, assuming zero radial velocity.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_XYZ \"astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))\"' out=pm_xyz.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' '0.0))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_XYZ astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' '0.0))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DMS_DEC' converting DEC in degrees to DMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DMS_DEC \"degreesToDms(DEC, 1)\"' out=dms_dec.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DMS_DEC degreesToDms(DEC, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter to keep only rows where the integer column 'STATUS' has the 6th bit set (0x20).",
        "response": "stilts tpipe in=flags.fits cmd='select \"hasBit(STATUS, 5)\"' out=bit_5_set.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(STATUS, 5)\n\nUsage: select <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'FLUX_DIFF' which is the element-wise subtraction of array 'FLUX_A' from array 'FLUX_B'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_DIFF \"subtract(FLUX_B, FLUX_A)\"' out=array_diff.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_A)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_DIFF subtract(FLUX_B, FLUX_A)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_A)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows where the proper motion magnitude is greater than 10 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"hypot(PMRA, PMDEC) > 10.0\"' out=high_pm.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 10.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_R_AB' converting Johnson R magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_R_AB \"MAG_R + JOHNSON_AB_R\"' out=r_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_R_AB MAG_R + JOHNSON_AB_R\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the mean of the array column 'FLUX_ARRAY' element-wise, but only for the first 10 elements.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol MEAN_FLUX_10 \"mean(slice(FLUX_ARRAY, 0, 10))\"' out=sliced_mean.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0,' '10))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MEAN_FLUX_10 mean(slice(FLUX_ARRAY, 0, 10))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0,' '10))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a string column containing the decimal year equivalent of the JD time 'TIME_JD' with 4 decimal places.",
        "response": "stilts tpipe in=time.fits cmd='addcol DEC_YEAR \"formatDecimal(mjdToDecYear(jdToMjd(TIME_JD)), 4)\"' out=dec_year_formatted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_YEAR formatDecimal(mjdToDecYear(jdToMjd(TIME_JD)), 4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the difference between the parallax error in mas and the radial velocity error in km/s.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol ERROR_DIFF \"PARALLAX_ERR - RV_ERR\"' out=error_diff.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'RV_ERR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_DIFF PARALLAX_ERR - RV_ERR\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'RV_ERR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table to keep rows where the absolute magnitude 'M_G' is numerically larger than 0.5.",
        "response": "stilts tpipe in=stars.fits cmd='select \"M_G > 0.5\"' out=giants.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select M_G > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the line-of-sight comoving distance (Mpc) for redshift Z using standard cosmology.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol COMOVING_DIST \"comovingDistanceL(Z, 70.0, 0.3, 0.7)\"' out=galaxies_comoving.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COMOVING_DIST comovingDistanceL(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a boolean column 'HIGH_FLUX_ERROR' based on the condition that FLUX_ERR > 0.1.",
        "response": "stilts tpipe in=data.fits cmd='addcol HIGH_FLUX_ERROR \"FLUX_ERR > 0.1\"' out=high_err_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HIGH_FLUX_ERROR FLUX_ERR > 0.1\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Sort the table in descending order of the combination of 'MAG' and 'COLOR'.",
        "response": "stilts tpipe in=data.fits cmd='sort \"-down MAG COLOR\"' out=double_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'COLOR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort -down MAG COLOR\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'COLOR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows where the absolute magnitude is brighter than -20.",
        "response": "stilts tpipe in=qso.fits cmd='select \"M_ABS < -20.0\"' out=ultra_bright.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '-20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select M_ABS < -20.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '-20.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_B_AB' converting Johnson B magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_B_AB \"MAG_B + JOHNSON_AB_B\"' out=b_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_B_AB MAG_B + JOHNSON_AB_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to guarantee that the integer ID column is always positive.",
        "response": "stilts tpipe in=data.fits cmd='assert \"ID > 0\"' out=id_positive.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert ID > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'VEL_GAL_X' containing the X component of the Galactic velocity vector derived from astrometric parameters.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_X \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_x_vel.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_X icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Extract the best distance estimate (parsec) using the EDSD prior (L=1350pc) given 'PARALLAX' and 'PARALLAX_ERR'.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol DIST_EDSD \"distanceEstimateEdsd(PARALLAX, PARALLAX_ERR, 1350.0)\"' out=edsd_distance.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DIST_EDSD distanceEstimateEdsd(PARALLAX, PARALLAX_ERR, 1350.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Replace null values in the 32-bit integer column 'INT_COL' with -999.",
        "response": "stilts tpipe in=data.fits cmd='replacecol INT_COL \"NULL_INT_COL ? -999 : INT_COL\"' out=int_fixed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '-999' ':' 'INT_COL'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol INT_COL NULL_INT_COL ? -999 : INT_COL\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '-999' ':' 'INT_COL'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PM_VEL_ICRS_X' containing the X component of the ICRS velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_ICRS_X \"astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\"' out=icrs_x_vel.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_ICRS_X astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_I_AB' converting Johnson I magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_I_AB \"MAG_I + JOHNSON_AB_I\"' out=i_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_I'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_I_AB MAG_I + JOHNSON_AB_I\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_I'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'POS_ANGLE_DEG' calculating the position angle between the North Pole and (RA, DEC) relative to the North Pole (requires a fixed secondary point).",
        "response": "stilts tpipe in=data.fits cmd='addcol POS_ANGLE_DEG \"posAngDegrees(RA, DEC, RA, 90.0)\"' out=pos_angle.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'RA,' '90.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_ANGLE_DEG posAngDegrees(RA, DEC, RA, 90.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'RA,' '90.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_LOG' using the logarithmic scaling function 'log' and assert that all resulting values are greater than -10.",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_LOG \"log10(MAG)\"' cmd='assert \"MAG_LOG > -10.0\"' out=log_mag_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG_LOG > -10.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '-10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those with non-null values for both 'RA' and 'DEC'.",
        "response": "stilts tpipe in=data.fits cmd='select \"!NULL_RA && !NULL_DEC\"' out=clean_coords.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_RA && !NULL_DEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'AVG_FLUX_ARR' containing the element-wise average of two array columns, 'FLUX_A' and 'FLUX_B'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol AVG_FLUX_ARR \"multiply(add(FLUX_A, FLUX_B), 0.5)\"' out=array_average.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_B),' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AVG_FLUX_ARR multiply(add(FLUX_A, FLUX_B), 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_B),' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Check if a given angular separation column 'SEP' is strictly positive and assert this for the whole table.",
        "response": "stilts tpipe in=data.fits cmd='assert \"SEP > 0.0\"' out=positive_sep_check.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert SEP > 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PM_VEL_GAL_Z' containing the Z component of the Galactic velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_GAL_Z \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_z_vel.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_GAL_Z icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a string column containing the decimal year of the JD time 'TIME_JD' rounded to 0 decimal places.",
        "response": "stilts tpipe in=time.fits cmd='addcol DEC_YEAR_INT \"formatDecimal(round(mjdToDecYear(jdToMjd(TIME_JD))), 0)\"' out=dec_year_int.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_YEAR_INT formatDecimal(round(mjdToDecYear(jdToMjd(TIME_JD))), 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'KCORR_UV_R' using the KCF_NUV filter at Z=0.2, leveraging the NUV-r color (KCC_NUVr).",
        "response": "stilts tpipe in=uv_data.fits cmd='addcol KCORR_UV_R \"kCorr(KCF_NUV, 0.2, KCC_NUVr, NUV-R_MAG)\"' out=kcorr_nuvr.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.2,' 'KCC_NUVr,' 'NUV-R_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_UV_R kCorr(KCF_NUV, 0.2, KCC_NUVr, NUV-R_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.2,' 'KCC_NUVr,' 'NUV-R_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the integer column 'STATUS' has bit 1 (0x02) set.",
        "response": "stilts tpipe in=flags.fits cmd='select \"hasBit(STATUS, 1)\"' out=bit_1_set.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(STATUS, 1)\n\nUsage: select <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_HMS_S' converting RA in degrees to HMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_S \"degreesToHms(RA, 1)\"' out=hms_ra_s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_S degreesToHms(RA, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Ensure that the total row count matches the number stored in the table parameter 'N_TOTAL_EXPECTED'.",
        "response": "stilts tpipe in=data.fits cmd='assert \"$nrow == param$N_TOTAL_EXPECTED\"' out=count_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'param$N_TOTAL_EXPECTED'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $nrow == param$N_TOTAL_EXPECTED\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'param$N_TOTAL_EXPECTED'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'X_SQUARE' calculated as X*X, but only for rows where X is not null.",
        "response": "stilts tpipe in=data.fits cmd='addcol X_SQUARE \"!NULL_X ? X*X : NULL\"' out=squared_x.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' 'X*X' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol X_SQUARE !NULL_X ? X*X : NULL\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '?' 'X*X' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table, keeping every 10th row exactly, starting from the 5th row.",
        "response": "stilts tpipe in=big_data.fits cmd='every \"-exact 10\"' cmd='select \"($0 % 10) == 5\"' out=offset_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown flag -exact 10\n\nCommand was: every \"-exact 10\"\n\nUsage: every [-exact|-approx] <step>\n    (Unknown flag -exact 10)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PM_XYZ_GAL_X' containing the X (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_XYZ_GAL_X \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_x_vel_comp.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_XYZ_GAL_X icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_K_AB' converting 2MASS K magnitude (Vega) to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_K_AB \"MAG_K + VEGA_AB_K\"' out=k_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_K'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_K_AB MAG_K + VEGA_AB_K\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_K'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the angular diameter distance (Mpc) for redshift Z using standard cosmology.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol ANGULAR_DIAMETER_DIST \"angularDiameterDistance(Z, 70.0, 0.3, 0.7)\"' out=galaxies_angular_dist.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ANGULAR_DIAMETER_DIST angularDiameterDistance(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Remove the column 'FLUX_ERR' and implicitly derive a similar column using a simple formula (FLUX/10).",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLUX_ERR \"FLUX / 10.0\"' out=derived_err.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_ERR FLUX / 10.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table to remove rows where the magnitude 'MAG' is outside the range 10 to 20.",
        "response": "stilts tpipe in=cat.fits cmd='select \"MAG >= 10.0 && MAG <= 20.0\"' out=mag_range_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '10.0' '&&' 'MAG' '<=' '20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG >= 10.0 && MAG <= 20.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '10.0' '&&' 'MAG' '<=' '20.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the assert filter to ensure that the array length of 'SPECTRA' is exactly 100 for all rows.",
        "response": "stilts tpipe in=arrays.fits cmd='assert \"size(SPECTRA) == 100L\"' out=size_100_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '100L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert size(SPECTRA) == 100L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '100L'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a new column 'LOG_MASS' which is the base-10 logarithm of 'MASS', explicitly setting its type as double.",
        "response": "stilts tpipe in=stars.fits cmd='addcol -type \"double LOG_MASS log10(MASS)\"' out=double_log_stars.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'LOG_MASS' 'log10(MASS)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type double LOG_MASS log10(MASS)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'LOG_MASS' 'log10(MASS)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_H_AB' converting 2MASS H magnitude (Vega) to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_H_AB \"MAG_H + VEGA_AB_H\"' out=h_ab_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_H'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_H_AB MAG_H + VEGA_AB_H\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_H'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column containing the radial velocity (RV) in km/s derived from the normalized RV in mas/yr, given 'PARALLAX'.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol RV_KMS \"rvMasyrToKms(RV_MASYR, PARALLAX)\"' out=rv_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RV_KMS rvMasyrToKms(RV_MASYR, PARALLAX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Remove the column 'ID_2' and replace it with a newly calculated column 'NEW_ID_2' based on the product of 'ID_1' and 2.",
        "response": "stilts tpipe in=data.fits cmd='replacecol ID_2 \"ID_1 * 2\"' out=recalculated_id.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol ID_2 ID_1 * 2\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'VELOCITY_GAL' containing the full 3-component galactic velocity vector (UVW).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VELOCITY_GAL \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=full_galactic_vel.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VELOCITY_GAL icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_U_KCORR' using the KCF_u filter at Z=0.1, leveraging the u-r color (KCC_ur).",
        "response": "stilts tpipe in=uv_data.fits cmd='addcol MAG_U_KCORR \"MAG_U - kCorr(KCF_u, 0.1, KCC_ur, U_MAG-R_MAG)\"' out=u_kcorr_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'kCorr(KCF_u,' '0.1,' 'KCC_ur,' 'U_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_KCORR MAG_U - kCorr(KCF_u, 0.1, KCC_ur, U_MAG-R_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'kCorr(KCF_u,' '0.1,' 'KCC_ur,' 'U_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter by 'FLAG' and ensure that the filtered table contains at least 100 rows.",
        "response": "stilts tpipe in=data.fits cmd='select \"FLAG == 1\"' cmd='assert \"$nrow >= 100L\"' out=min_100_rows.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG == 1\n\nUsage: select <expr>\n    (Unused arguments: '==' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column that is the arc tangent of Y/X in degrees, suitable for position angle calculations.",
        "response": "stilts tpipe in=data.fits cmd='addcol ANGLE_DEG \"atan2Deg(Y, X)\"' out=angle_degrees.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'X)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ANGLE_DEG atan2Deg(Y, X)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'X)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERR_PROD' containing the dot product of array columns 'ERR1' and 'ERR2'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol ERR_PROD \"dotProduct(ERR1, ERR2)\"' out=error_dot_product.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ERR2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERR_PROD dotProduct(ERR1, ERR2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'ERR2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert the coordinate array 'POS_ARRAY' (RA, DEC) to an explicit Cartesian X, Y, Z vector, assuming unit distance.",
        "response": "stilts tpipe in=coords.fits cmd='addcol CARTESIAN \"polarXYZ(POS_ARRAY, POS_ARRAY, 1.0)\"' out=cartesian_vector.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'POS_ARRAY,' '1.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol CARTESIAN polarXYZ(POS_ARRAY, POS_ARRAY, 1.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'POS_ARRAY,' '1.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the proper motion in RA is never zero.",
        "response": "stilts tpipe in=data.fits cmd='assert \"PMRA != 0.0\"' out=nonzero_pmra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert PMRA != 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the integer 'ID' column has an even value.",
        "response": "stilts tpipe in=data.fits cmd='select \"ID % 2 == 0\"' out=even_ids_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the lookback time (Gyr) for redshift Z using standard cosmology.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol LOOKBACK_TIME \"lookbackTime(Z, 70.0, 0.3, 0.7)\"' out=galaxies_lookback.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOOKBACK_TIME lookbackTime(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Set a flag in the column 'QUALITY_FLAG' only if bit 0 is not set (i.e., bit 0 is 0).",
        "response": "stilts tpipe in=flags.fits cmd='addcol BIT0_FALSE \"!hasBit(QUALITY_FLAG, 0)\"' out=bit0_false.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol BIT0_FALSE !hasBit(QUALITY_FLAG, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'FLUX_CONV' converting flux to luminosity, assuming unit distance of 1 Mpc.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol FLUX_CONV \"fluxToLuminosity(FLUX, 3.086e22)\"' out=luminosities.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3.086e22)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_CONV fluxToLuminosity(FLUX, 3.086e22)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3.086e22)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column with the minimum value of three related magnitude columns: 'MAG1', 'MAG2', 'MAG3'.",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_MIN \"min(MAG1, MAG2, MAG3)\"' out=min_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MAG2,' 'MAG3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_MIN min(MAG1, MAG2, MAG3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'MAG2,' 'MAG3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial sphere position is within a polygon defined by a fixed coordinate array (e.g., poly_coords).",
        "response": "stilts tpipe in=data.fits cmd='select \"inSkyPolygon(RA, DEC, poly_coords)\"' out=polygon_overlap.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'poly_coords)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select inSkyPolygon(RA, DEC, poly_coords)\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' 'poly_coords)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the average and standard deviation of 'PMRA' values after filtering out outliers (PMRA > 10).",
        "response": "stilts tpipe in=data.fits cmd='select \"PMRA <= 10.0\"' cmd='stats \"PMRA\"; mean; stdev' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unknown quantity PMRA must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn\n\nCommand was: stats \"PMRA\"\n\nUsage: stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n    (Unknown quantity PMRA must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'Z_VEL' that converts redshift (Z) to velocity (km/s) using the formula c * Z.",
        "response": "stilts tpipe in=data.fits cmd='addcol Z_VEL \"Z * C_KMS / 1000.0\"' out=z_velocity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' 'C_KMS' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol Z_VEL Z * C_KMS / 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'C_KMS' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_ICRS_DEG' converting FK4 RA/DEC (B1950) to ICRS RA (J2000) using the old function with explicit input/output units.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_ICRS_DEG \"raFK4toFK5degrees(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_ICRS_DEG raFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'FLUX_CONV_LUMIN' converting flux to luminosity distance, explicitly using the luminosityDistance function.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol LUMINOSITY \"fluxToLuminosity(FLUX, mToMpc(luminosityDistance(Z, 70.0, 0.3, 0.7)))\"' out=derived_luminosity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'mToMpc(luminosityDistance(Z,' '70.0,' '0.3,' '0.7)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LUMINOSITY fluxToLuminosity(FLUX, mToMpc(luminosityDistance(Z, 70.0, 0.3, 0.7)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'mToMpc(luminosityDistance(Z,' '70.0,' '0.3,' '0.7)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that all values in a floating point column 'WEIGHT' are less than 1.0.",
        "response": "stilts tpipe in=data.fits cmd='assert \"WEIGHT < 1.0\"' out=weight_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert WEIGHT < 1.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the mean of the array column 'FLUX_ARRAY' and assert that the mean is always positive.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol MEAN_FLUX \"mean(FLUX_ARRAY)\"' cmd='assert \"MEAN_FLUX > 0.0\"' out=mean_flux_positive.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MEAN_FLUX > 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep those where the proper motion error (PM_ERR) is zero, asserting the condition is met.",
        "response": "stilts tpipe in=data.fits cmd='assert \"PM_ERR == 0.0\"' out=zero_error_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert PM_ERR == 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_INV_SAFE' calculated as the inverse of parallax, returning a safe default of 0.0 if parallax is null or non-positive.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_INV_SAFE \"PARALLAX > 0.0 ? 1.0 / PARALLAX : 0.0\"' out=safe_inverse_parallax.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0' '?' '1.0' '/' 'PARALLAX' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_INV_SAFE PARALLAX > 0.0 ? 1.0 / PARALLAX : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0.0' '?' '1.0' '/' 'PARALLAX' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the table is always non-empty ($nrow > 0).",
        "response": "stilts tpipe in=data.fits cmd='assert \"$nrow > 0L\"' out=non_empty_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $nrow > 0L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'VEL_GAL_Y' containing the Y component of the Galactic velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_Y \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_y_vel.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_Y icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'FLUX_LOG_NORM' calculated as the base-10 logarithm of 'FLUX', divided by the mean flux (requires caching).",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='addcol FLUX_LOG_NORM \"log10(FLUX) / mean(FLUX)\"' out=log_normalized.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_LOG_NORM log10(FLUX) / mean(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Replace null values in the 64-bit integer column 'LONG_ID' with -1.",
        "response": "stilts tpipe in=data.fits cmd='replacecol LONG_ID \"NULL_LONG_ID ? -1L : LONG_ID\"' out=long_id_fixed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '-1L' ':' 'LONG_ID'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol LONG_ID NULL_LONG_ID ? -1L : LONG_ID\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '-1L' ':' 'LONG_ID'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'KCORR_V' using the KCF_V filter at Z=0.1, leveraging the V-Rc color (KCC_VRc).",
        "response": "stilts tpipe in=phot.fits cmd='addcol KCORR_V \"kCorr(KCF_V, 0.1, KCC_VRc, MAG_V-MAG_RC)\"' out=kcorr_v.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.1,' 'KCC_VRc,' 'MAG_V-MAG_RC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_V kCorr(KCF_V, 0.1, KCC_VRc, MAG_V-MAG_RC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.1,' 'KCC_VRc,' 'MAG_V-MAG_RC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Check if a given angular separation column 'SEP' is strictly less than 1.0 arcsecond (1/3600 degrees) and assert it.",
        "response": "stilts tpipe in=data.fits cmd='assert \"SEP < 1.0/3600.0\"' out=sub_arcsec_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1.0/3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert SEP < 1.0/3600.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1.0/3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the time column 'TIME_MJD' is strictly increasing (requires sort).",
        "response": "stilts tpipe in=data.fits cmd='sort \"TIME_MJD\"' cmd='addcol TIME_DIFF \"TIME_MJD - param$TIME_MJD\"' cmd='assert \"TIME_DIFF >= 0.0\"' out=time_sequence_checked.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'param$TIME_MJD'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol TIME_DIFF TIME_MJD - param$TIME_MJD\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'param$TIME_MJD'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those with 'MAG_ERR' greater than 0.1 and output the resultant metadata.",
        "response": "stilts tpipe in=data.fits cmd='select \"MAG_ERR > 0.1\"' omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR > 0.1\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Remove all rows which are exact duplicates based on columns 'RA' and 'DEC'.",
        "response": "stilts tpipe in=data.fits cmd='sort \"RA DEC\"' cmd='uniq \"RA DEC\"' out=unique_coords.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort RA DEC\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'COM_VOL' calculating the comoving volume (Gpc\u00b3) out to redshift Z using standard cosmology.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol COM_VOL \"comovingVolume(Z, 70.0, 0.3, 0.7)\"' out=galaxies_volume.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COM_VOL comovingVolume(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert RA/DEC (degrees) to the Ecliptic coordinate system, storing the coordinates in a new column 'ECL_VEC'.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol ECL_VEC \"icrsToEcl(astromXYZ(RA, DEC, 1.0))\"' out=ecliptic_vector.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' '1.0))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ECL_VEC icrsToEcl(astromXYZ(RA, DEC, 1.0))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' '1.0))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to check that the total number of columns ($ncol) is less than 50.",
        "response": "stilts tpipe in=wide_table.fits cmd='assert \"$ncol < 50L\"' out=narrow_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '50L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $ncol < 50L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '50L'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'COMPLEX_RATIO' that is the ratio of two complex array columns, 'FLUX_COMPLEX_A' and 'FLUX_COMPLEX_B', element-wise.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol COMPLEX_RATIO \"divide(FLUX_COMPLEX_A, FLUX_COMPLEX_B)\"' out=complex_ratio.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_COMPLEX_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COMPLEX_RATIO divide(FLUX_COMPLEX_A, FLUX_COMPLEX_B)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_COMPLEX_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the mean of the array column 'ERROR_ARR' and assert that the mean is always less than 0.1.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol MEAN_ERR \"mean(ERROR_ARR)\"' cmd='assert \"MEAN_ERR < 0.1\"' out=mean_err_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MEAN_ERR < 0.1\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table to keep every 100th row, starting from row 50.",
        "response": "stilts tpipe in=data.fits cmd='every \"100\"' cmd='select \"($0 % 100) == 50\"' out=offset_100_sample.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '100)' '==' '50'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ($0 % 100) == 50\n\nUsage: select <expr>\n    (Unused arguments: '%' '100)' '==' '50'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB' calculating absolute magnitude using J-band AB magnitude and distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB \"MAG_J + VEGA_AB_J\"' cmd='addcol MAG_ABS_J_AB \"MAG_J_AB - distanceToModulus(DISTANCE_PC)\"' out=j_abs_ab.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_HMS_0' converting RA in degrees to HMS string format with 0 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_0 \"degreesToHms(RA, 0)\"' out=hms_ra_0.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_0 degreesToHms(RA, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PM_VEL_ICRS_Y' containing the Y component of the ICRS velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_ICRS_Y \"astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\"' out=icrs_y_vel.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_ICRS_Y astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Assert that the current version of STILTS being used is greater than 3.0.",
        "response": "stilts tpipe in=data.fits cmd='assert \"param$stilts.version > 3.0\"' out=version_checked.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert param$.version > 3.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '3.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate K-correction for SDSS z-band (KCF_z) at Z=0.5, using r-z color (KCC_rz).",
        "response": "stilts tpipe in=data.fits cmd='addcol KCORR_Z \"kCorr(KCF_z, 0.5, KCC_rz, R_MAG-Z_MAG)\"' out=kcorrected_z.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.5,' 'KCC_rz,' 'R_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_Z kCorr(KCF_z, 0.5, KCC_rz, R_MAG-Z_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.5,' 'KCC_rz,' 'R_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'FLUX_SUM' calculated as the element-wise sum of two array columns, 'FLUX_A' and 'FLUX_B'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_SUM \"add(FLUX_A, FLUX_B)\"' out=array_sum.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_SUM add(FLUX_A, FLUX_B)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where 'RA' and 'DEC' are not null and within 1 degree of M31 (RA=10.68, DEC=41.27).",
        "response": "stilts tpipe in=cat.fits cmd='select \"!NULL_RA && !NULL_DEC && skyDistanceDegrees(RA, DEC, 10.68, 41.27) < 1.0\"' out=m31_vicinity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_DEC' '&&' 'skyDistanceDegrees(RA,' 'DEC,' '10.68,' '41.27)' '<' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_RA && !NULL_DEC && skyDistanceDegrees(RA, DEC, 10.68, 41.27) < 1.0\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_DEC' '&&' 'skyDistanceDegrees(RA,' 'DEC,' '10.68,' '41.27)' '<' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'Z_COMOVING' converting Redshift (Z) to the transverse comoving distance (Mpc).",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol Z_COMOVING \"comovingDistanceT(Z, 70.0, 0.3, 0.7)\"' out=galaxies_trans_comoving.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol Z_COMOVING comovingDistanceT(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PM_VEL_ICRS_Z' containing the Z component of the ICRS velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_ICRS_Z \"astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\"' out=icrs_z_vel.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_ICRS_Z astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows where the proper motion in RA is exactly 0.0.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMRA == 0.0\"' out=zero_pmra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA == 0.0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a string column that contains the absolute value of 'FLUX', rounded to 2 decimal places.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_STR \"formatDecimal(abs(FLUX), 2)\"' out=abs_flux_str.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_STR formatDecimal(abs(FLUX), 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'Z_COMOVING_ABS' calculating the absolute magnitude using Z converted to distance modulus.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol L_DIST_PC \"10.0^((25.0 + luminosityDistance(Z, 70.0, 0.3, 0.7)) / 5.0)\"' out=absolute_mag_gal.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'luminosityDistance(Z,' '70.0,' '0.3,' '0.7))' '/' '5.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol L_DIST_PC 10.0^((25.0 + luminosityDistance(Z, 70.0, 0.3, 0.7)) / 5.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'luminosityDistance(Z,' '70.0,' '0.3,' '0.7))' '/' '5.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_DMS_S' converting RA in degrees to DMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_S \"degreesToDms(RA, 1)\"' out=dms_ra_s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_S degreesToDms(RA, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table to keep rows where 'PMRA' is numerically positive.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMRA > 0.0\"' out=positive_pmra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_OLD' converting Johnson U magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB_OLD \"MAG_U + JOHNSON_AB_U\"' out=u_ab_old_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB_OLD MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_COND' that is 1.0 if 'ERR_A' is greater than 'ERR_B', and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND \"ERR_A > ERR_B ? 1.0 : 0.0\"' out=conditional_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND ERR_A > ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the proper motion vector is always physically defined (i.e., non-null).",
        "response": "stilts tpipe in=data.fits cmd='assert \"!NULL_PMRA && !NULL_PMDEC\"' out=pm_non_null.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert !NULL_PMRA && !NULL_PMDEC\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table to keep rows where the absolute value of RA is less than 10 degrees.",
        "response": "stilts tpipe in=coords.fits cmd='select \"abs(RA) < 10.0\"' out=central_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(RA) < 10.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_I_AB_OLD' converting Johnson I magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_I_AB_OLD \"MAG_I + JOHNSON_AB_I\"' out=i_ab_old_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_I'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_I_AB_OLD MAG_I + JOHNSON_AB_I\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_I'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'FLUX_JV_SUM' calculated as the element-wise sum of two array columns, 'FLUX_J' and 'FLUX_V'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_JV_SUM \"add(FLUX_J, FLUX_V)\"' out=jv_array_sum.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_V)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_JV_SUM add(FLUX_J, FLUX_V)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_V)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'POS_GAL_X' containing the X (Galactic) Cartesian component derived from RA/DEC/PARALLAX.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_X \"icrsToGal(astromXYZ(RA, DEC, PARALLAX))\"' out=galactic_x_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_X icrsToGal(astromXYZ(RA, DEC, PARALLAX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'VELOCITY_KM_S' converting normalized RV (RV_MASYR) to km/s, given 'PARALLAX' in mas.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VELOCITY_KM_S \"rvMasyrToKms(RV_MASYR, PARALLAX)\"' out=rv_kms_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VELOCITY_KM_S rvMasyrToKms(RV_MASYR, PARALLAX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a boolean column 'IS_FAINT' which is true if the magnitude is greater than 20.0.",
        "response": "stilts tpipe in=cat.fits cmd='addcol IS_FAINT \"MAG > 20.0\"' out=faint_flag_output.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 20.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '20.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_DMS' converting RA in degrees to DMS string format with 0 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS \"degreesToDms(RA, 0)\"' out=dms_ra_0s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS degreesToDms(RA, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XY' containing the quadrature sum of X_ERR and Y_ERR.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XY \"hypot(X_ERR, Y_ERR)\"' out=xy_quad_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Y_ERR)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XY hypot(X_ERR, Y_ERR)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_ERR)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the fractional error (FLUX_ERR/FLUX) is never greater than 0.2.",
        "response": "stilts tpipe in=data.fits cmd='assert \"FLUX_ERR / FLUX <= 0.2\"' out=fractional_err_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX' '<=' '0.2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX_ERR / FLUX <= 0.2\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'FLUX' '<=' '0.2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_J_AB_OLD' converting 2MASS J magnitude (Vega) to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_OLD \"MAG_J + VEGA_AB_J\"' out=j_ab_old_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_OLD MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'VEL_GAL_Z_COMP' containing the Z (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_Z_COMP \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_z_vel_comp_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_Z_COMP icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial position is within 1 arcminute of the center of M101 (RA=210.8, DEC=54.3).",
        "response": "stilts tpipe in=cat.fits cmd='select \"skyDistanceDegrees(RA, DEC, 210.8, 54.3) < 1.0/60.0\"' out=m101_vicinity_1arcmin.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' '210.8,' '54.3)' '<' '1.0/60.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, 210.8, 54.3) < 1.0/60.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' '210.8,' '54.3)' '<' '1.0/60.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'AVG_MAG' calculated as the average of 'MAG_G' and 'MAG_R'.",
        "response": "stilts tpipe in=data.fits cmd='addcol AVG_MAG \"(MAG_G + MAG_R) / 2.0\"' out=avg_mag_calc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'MAG_R)' '/' '2.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AVG_MAG (MAG_G + MAG_R) / 2.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'MAG_R)' '/' '2.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column that is the square of the proper motion (PMRA_SQ + PMDEC_SQ).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_SQ \"square(PMRA) + square(PMDEC)\"' out=pm_squared.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'square(PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_SQ square(PMRA) + square(PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'square(PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a string column that contains the inverse hyperbolic sine of 'FLUX', rounded to 4 decimal places.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_ASINH_STR \"formatDecimal(asinh(FLUX), 4)\"' out=asinh_flux_str.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_ASINH_STR formatDecimal(asinh(FLUX), 4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'POS_GAL_Y' containing the Y (Galactic) Cartesian component derived from RA/DEC/PARALLAX.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_Y \"icrsToGal(astromXYZ(RA, DEC, PARALLAX))\"' out=galactic_y_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_Y icrsToGal(astromXYZ(RA, DEC, PARALLAX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_U_KCORR_UV' using the KCF_u filter at Z=0.01, leveraging the u-i color (KCC_ui).",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_KCORR_UV \"MAG_U - kCorr(KCF_u, 0.01, KCC_ui, U_MAG-I_MAG)\"' out=u_kcorr_uv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'kCorr(KCF_u,' '0.01,' 'KCC_ui,' 'U_MAG-I_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_KCORR_UV MAG_U - kCorr(KCF_u, 0.01, KCC_ui, U_MAG-I_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'kCorr(KCF_u,' '0.01,' 'KCC_ui,' 'U_MAG-I_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_HMS_2' converting RA in degrees to HMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_2 \"degreesToHms(RA, 2)\"' out=hms_ra_2s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_2 degreesToHms(RA, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'LOG_PM' applying log scaling to proper motion (hypot(PMRA, PMDEC)).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol LOG_PM \"log10(hypot(PMRA, PMDEC))\"' out=log_pm.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_PM log10(hypot(PMRA, PMDEC))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the proper motion is non-zero, using proper motion vector magnitude.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"hypot(PMRA, PMDEC) != 0.0\"' out=nonzero_pm.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '!=' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) != 0.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '!=' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'L_DIST_MPC' converting the lookback time (Gyr) to luminosity distance (Mpc) using an approximation.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol L_DIST_MPC \"lookbackTime(Z, 70.0, 0.3, 0.7) * 10.0\"' out=l_dist_approx.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)' '*' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol L_DIST_MPC lookbackTime(Z, 70.0, 0.3, 0.7) * 10.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)' '*' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the proper motion in DEC is negative.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMDEC < 0.0\"' out=negative_pmdec.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMDEC < 0.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Assert that the standard deviation of 'MAG' is greater than 0.5.",
        "response": "stilts tpipe in=data.fits cmd='cache' cmd='assert \"stdev(MAG) > 0.5\"' out=stdev_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert stdev(MAG) > 0.5\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_ICRS_RAD' converting FK4 RA/DEC (B1950) to ICRS RA (J2000) in radians.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_ICRS_RAD \"raFK4toFK5radians(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_ra_rad.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_ICRS_RAD raFK4toFK5radians(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert the coordinate array 'POS_ARRAY' (RA, DEC) to a Cartesian X, Y, Z vector, explicitly using unit distance of 1.0.",
        "response": "stilts tpipe in=coords.fits cmd='addcol CARTESIAN \"polarXYZ(POS_ARRAY, POS_ARRAY, 1.0)\"' out=unit_cartesian.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'POS_ARRAY,' '1.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol CARTESIAN polarXYZ(POS_ARRAY, POS_ARRAY, 1.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'POS_ARRAY,' '1.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table to keep rows where the proper motion in RA is positive.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMRA > 0.0\"' out=positive_pmra_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_ICRS_RAD' converting FK4 RA/DEC (B1950) to ICRS DEC (J2000) in radians.",
        "response": "stilts tpipe in=data.fits cmd='addcol DEC_ICRS_RAD \"decFK4toFK5radians(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_dec_rad.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_ICRS_RAD decFK4toFK5radians(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_OLD_2' converting Johnson U magnitude to AB, using the deprecated constant name and explicit unit.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -units \"mag MAG_U_AB_OLD_2 MAG_U + JOHNSON_AB_U\"' out=u_ab_old_conv_unit.fits",
        "chat.jar": "failed",
        "error": "Error: Bad addcol specification\n\nCommand was: addcol -units \"mag MAG_U_AB_OLD_2 MAG_U + JOHNSON_AB_U\"\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Bad addcol specification)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the difference between the mean and median of the array column 'FLUX_ARRAY' per row.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol MEAN_MEDIAN_DIFF \"mean(FLUX_ARRAY) - median(FLUX_ARRAY)\"' out=mean_median_diff.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'median(FLUX_ARRAY)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MEAN_MEDIAN_DIFF mean(FLUX_ARRAY) - median(FLUX_ARRAY)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'median(FLUX_ARRAY)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the 'NAME' column length is exactly 5 characters.",
        "response": "stilts tpipe in=data.fits cmd='select \"length(NAME) == 5\"' out=names_length_5.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select length(NAME) == 5\n\nUsage: select <expr>\n    (Unused arguments: '==' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'KCORR_Z_I' using the KCF_z filter at Z=0.05, leveraging the i-z color (KCC_iz).",
        "response": "stilts tpipe in=data.fits cmd='addcol KCORR_Z_I \"kCorr(KCF_z, 0.05, KCC_iz, I_MAG-Z_MAG)\"' out=kcorrected_z_i.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.05,' 'KCC_iz,' 'I_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_Z_I kCorr(KCF_z, 0.05, KCC_iz, I_MAG-Z_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.05,' 'KCC_iz,' 'I_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a boolean column 'IS_EVEN_ID' which is true if the 'ID' number is even.",
        "response": "stilts tpipe in=data.fits cmd='addcol IS_EVEN_ID \"ID % 2 == 0\"' out=even_ids.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_EVEN_ID ID % 2 == 0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'Z_COMOVING_ABS_DIST' converting Z to absolute magnitude (M_ABS) via luminosity distance and adding it to the table.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol L_DIST_M \"luminosityDistance(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC\"' out=galaxies_abs_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol L_DIST_M luminosityDistance(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table by keeping columns with UCD 'pos.eq.ra' and 'pos.eq.dec'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"ucd$pos_eq_ra ucd$pos_eq_dec\"' out=pos_ucd_only.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ucd$pos_eq_dec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$pos_eq_ra ucd$pos_eq_dec\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$pos_eq_dec'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to check that the table has columns 'RA' and 'DEC'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"RA DEC\"' cmd='assert \"$ncol == 2L\"' omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $ncol == 2L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '2L'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'FLUX_DIFF' calculated as the dot product of two array columns, 'FLUX_A' and 'FLUX_B'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_DOT_PROD \"dotProduct(FLUX_A, FLUX_B)\"' out=flux_dot_product.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_DOT_PROD dotProduct(FLUX_A, FLUX_B)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_U_OLD' converting Johnson U magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_OLD \"MAG_U + JOHNSON_AB_U\"' out=u_old_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_OLD MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a boolean column 'IS_HIGH_SNR' which is true if SNR is greater than 10.0.",
        "response": "stilts tpipe in=data.fits cmd='addcol IS_HIGH_SNR \"SNR > 10.0\"' out=high_snr_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_HIGH_SNR SNR > 10.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'POS_GAL_Z' containing the Z (Galactic) Cartesian component derived from RA/DEC/PARALLAX.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_Z \"icrsToGal(astromXYZ(RA, DEC, PARALLAX))\"' out=galactic_z_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_Z icrsToGal(astromXYZ(RA, DEC, PARALLAX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_DMS_0' converting DEC in degrees to DMS string format with 0 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_0 \"degreesToDms(DEC, 0)\"' out=dms_dec_0s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_0 degreesToDms(DEC, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'AVG_MAG_ARRAY' containing the element-wise average of the array column 'MAG_ARRAY' and a scalar 'MAG_ZEROPOINT'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol AVG_MAG_ARRAY \"multiply(add(MAG_ARRAY, MAG_ZEROPOINT), 0.5)\"' out=array_scalar_average.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MAG_ZEROPOINT),' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AVG_MAG_ARRAY multiply(add(MAG_ARRAY, MAG_ZEROPOINT), 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'MAG_ZEROPOINT),' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_MEDIAN' containing the median distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_MEDIAN \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.5)\"' out=median_dist_3kpc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_MEDIAN distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'VELOCITY_MS' converting velocity in km/s to m/s.",
        "response": "stilts tpipe in=data.fits cmd='addcol VELOCITY_MS \"VELOCITY_KMS * 1000.0\"' out=vel_m_s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VELOCITY_MS VELOCITY_KMS * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Remove the column 'FLUX_ERR' and implicitly derive a similar column using a simple formula (FLUX * 0.1).",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLUX_ERR \"FLUX * 0.1\"' out=derived_err_factor.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_ERR FLUX * 0.1\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that 'DEC' is always between -90 and 90 degrees.",
        "response": "stilts tpipe in=coords.fits cmd='assert \"DEC >= -90.0 && DEC <= 90.0\"' out=dec_range_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-90.0' '&&' 'DEC' '<=' '90.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert DEC >= -90.0 && DEC <= 90.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '-90.0' '&&' 'DEC' '<=' '90.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q99' containing the 99th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q99 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.99)\"' out=q99_dist_1350pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.99)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q99 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.99)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.99)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where 'MAG' is numerically smaller than 10.0.",
        "response": "stilts tpipe in=cat.fits cmd='select \"MAG < 10.0\"' out=very_bright_cat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 10.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table to keep rows where 'PMDEC' is negative.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMDEC < 0.0\"' out=negative_pmdec_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMDEC < 0.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_DMS_2' converting DEC in degrees to DMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_2 \"degreesToDms(DEC, 2)\"' out=dms_dec_2s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_2 degreesToDms(DEC, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_DMS' converting RA in degrees to DMS string format with 0 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS \"degreesToDms(RA, 0)\"' out=dms_ra_0.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS degreesToDms(RA, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_V_AB_OLD' converting Johnson V magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_V_AB_OLD \"MAG_V + JOHNSON_AB_V\"' out=v_ab_old_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_V_AB_OLD MAG_V + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'KCORR_B' using the KCF_B filter at Z=0.2, leveraging the B-Rc color (KCC_BRc).",
        "response": "stilts tpipe in=phot.fits cmd='addcol KCORR_B \"kCorr(KCF_B, 0.2, KCC_BRc, MAG_B-MAG_RC)\"' out=kcorr_b.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.2,' 'KCC_BRc,' 'MAG_B-MAG_RC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_B kCorr(KCF_B, 0.2, KCC_BRc, MAG_B-MAG_RC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.2,' 'KCC_BRc,' 'MAG_B-MAG_RC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XYZ' containing the quadrature sum of X_ERR, Y_ERR, and Z_ERR.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XYZ \"hypot(X_ERR, Y_ERR, Z_ERR)\"' out=xyz_quad_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Y_ERR,' 'Z_ERR)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XYZ hypot(X_ERR, Y_ERR, Z_ERR)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_ERR,' 'Z_ERR)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_ICRS_DEG' converting FK4 RA/DEC (B1950) to ICRS DEC (J2000) using the old function with explicit output units.",
        "response": "stilts tpipe in=data.fits cmd='addcol DEC_ICRS_DEG \"decFK4toFK5degrees(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_dec.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_ICRS_DEG decFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_V' converting Johnson U magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB_V \"MAG_U + JOHNSON_AB_V\"' out=u_ab_v_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB_V MAG_U + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_DMS' converting RA in degrees to DMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS \"degreesToDms(RA, 1)\"' out=dms_ra_1s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS degreesToDms(RA, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_COND_2' that is 1.0 if 'ERR_A' is less than 'ERR_B', and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_2 \"ERR_A < ERR_B ? 1.0 : 0.0\"' out=conditional_error_2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_2 ERR_A < ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q5' containing the 5th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q5 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.05)\"' out=q5_dist_1350pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.05)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q5 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.05)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.05)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'POS_GAL_R' containing the magnitude of the Galactic Cartesian position vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_R \"hypot(icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\"' out=galactic_r_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_R hypot(icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows where the proper motion in RA is between 1 and 10 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMRA >= 1.0 && PMRA <= 10.0\"' out=mid_pmra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '1.0' '&&' 'PMRA' '<=' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA >= 1.0 && PMRA <= 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '1.0' '&&' 'PMRA' '<=' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_RATIO' calculated as the ratio of 'ERR_A' to 'ERR_B'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_RATIO \"ERR_A / ERR_B\"' out=error_ratio.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'ERR_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_RATIO ERR_A / ERR_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'ERR_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_ICRS_DEG_2' converting FK4 RA/DEC (B1950) to ICRS DEC (J2000) using the old function.",
        "response": "stilts tpipe in=data.fits cmd='addcol DEC_ICRS_DEG_2 \"decFK4toFK5degrees(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_dec_2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_ICRS_DEG_2 decFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_DMS' converting DEC in degrees to DMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_1 \"degreesToDms(DEC, 1)\"' out=dms_dec_1s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_1 degreesToDms(DEC, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'KCORR_J' using the KCF_J filter at Z=0.08, leveraging the J-H color (KCC_JH).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_J \"kCorr(KCF_J, 0.08, KCC_JH, MAG_J-MAG_H)\"' out=kcorr_j.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.08,' 'KCC_JH,' 'MAG_J-MAG_H)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_J kCorr(KCF_J, 0.08, KCC_JH, MAG_J-MAG_H)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.08,' 'KCC_JH,' 'MAG_J-MAG_H)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_COND_3' that is 1.0 if 'ERR_A' equals 'ERR_B', and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_3 \"ERR_A == ERR_B ? 1.0 : 0.0\"' out=conditional_error_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_3 ERR_A == ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '==' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q95' containing the 95th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q95 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.95)\"' out=q95_dist_1350pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.95)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q95 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.95)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.95)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_V_AB_OLD_2' converting Johnson V magnitude to AB, using the deprecated constant name and explicit unit.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -units \"mag MAG_V_AB_OLD_2 MAG_V + JOHNSON_AB_V\"' out=v_ab_old_conv_unit.fits",
        "chat.jar": "failed",
        "error": "Error: Bad addcol specification\n\nCommand was: addcol -units \"mag MAG_V_AB_OLD_2 MAG_V + JOHNSON_AB_V\"\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Bad addcol specification)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'KCORR_H' using the KCF_H filter at Z=0.15, leveraging the H-K color (KCC_HK).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_H \"kCorr(KCF_H, 0.15, KCC_HK, MAG_H-MAG_K)\"' out=kcorr_h.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.15,' 'KCC_HK,' 'MAG_H-MAG_K)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_H kCorr(KCF_H, 0.15, KCC_HK, MAG_H-MAG_K)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.15,' 'KCC_HK,' 'MAG_H-MAG_K)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XYZ_MAG' containing the magnitude of the 3D error vector (quadrature sum).",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XYZ_MAG \"hypot(ERROR_X, ERROR_Y, ERROR_Z)\"' out=xyz_error_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ERROR_Y,' 'ERROR_Z)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XYZ_MAG hypot(ERROR_X, ERROR_Y, ERROR_Z)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'ERROR_Y,' 'ERROR_Z)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_HMS_1' converting RA in degrees to HMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_1 \"degreesToHms(RA, 1)\"' out=hms_ra_1s_new.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_1 degreesToHms(RA, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'POS_GAL_THETA' containing the latitude component of the Galactic position vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_THETA \"cartesianToLat(icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\"' out=galactic_theta_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_THETA cartesianToLat(icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_DMS_2' converting RA in degrees to DMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_2 \"degreesToDms(RA, 2)\"' out=dms_ra_2s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_2 degreesToDms(RA, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial position is within 2 arcminutes of the Andromeda galaxy (RA=10.68, DEC=41.27).",
        "response": "stilts tpipe in=cat.fits cmd='select \"skyDistanceDegrees(RA, DEC, 10.68, 41.27) < 2.0/60.0\"' out=andromeda_vicinity_2arcmin.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' '10.68,' '41.27)' '<' '2.0/60.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, 10.68, 41.27) < 2.0/60.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' '10.68,' '41.27)' '<' '2.0/60.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_J_AB_OLD_2' converting 2MASS J magnitude (Vega) to AB, using the deprecated constant name and explicit unit.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -units \"mag MAG_J_AB_OLD_2 MAG_J + VEGA_AB_J\"' out=j_ab_old_conv_unit_2.fits",
        "chat.jar": "failed",
        "error": "Error: Bad addcol specification\n\nCommand was: addcol -units \"mag MAG_J_AB_OLD_2 MAG_J + VEGA_AB_J\"\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Bad addcol specification)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_DMS_2S' converting DEC in degrees to DMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_2S \"degreesToDms(DEC, 2)\"' out=dms_dec_2s_new.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_2S degreesToDms(DEC, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_RATIO_INV' calculated as the inverse ratio of 'ERR_A' to 'ERR_B'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_RATIO_INV \"ERR_B / ERR_A\"' out=inverse_error_ratio.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'ERR_A'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_RATIO_INV ERR_B / ERR_A\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'ERR_A'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q1' containing the 25th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q1 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.25)\"' out=q1_dist_1350pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.25)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q1 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.25)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.25)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a boolean column 'IS_BRIGHT_G' which is true if G_MAG is defined and less than 15.",
        "response": "stilts tpipe in=phot.fits cmd='addcol IS_BRIGHT_G \"!NULL_G_MAG && G_MAG < 15.0\"' out=g_bright_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'G_MAG' '<' '15.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT_G !NULL_G_MAG && G_MAG < 15.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '&&' 'G_MAG' '<' '15.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the proper motion in DEC is positive.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMDEC > 0.0\"' out=positive_pmdec_filter_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMDEC > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_R_AB_OLD' converting Johnson R magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_R_AB_OLD \"MAG_R + JOHNSON_AB_R\"' out=r_ab_old_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_R_AB_OLD MAG_R + JOHNSON_AB_R\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'KCORR_K' using the KCF_K filter at Z=0.2, leveraging the H-K color (KCC_HK).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_K \"kCorr(KCF_K, 0.2, KCC_HK, MAG_H-MAG_K)\"' out=kcorr_k.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.2,' 'KCC_HK,' 'MAG_H-MAG_K)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_K kCorr(KCF_K, 0.2, KCC_HK, MAG_H-MAG_K)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.2,' 'KCC_HK,' 'MAG_H-MAG_K)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'Z_COMOVING_ABS_DIST_2' converting Z to absolute magnitude (M_ABS) via transverse comoving distance.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol ABS_MAG_TRANS \"MAG_V - distanceToModulus(comovingDistanceT(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC)\"' out=galaxies_abs_mag_trans.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'distanceToModulus(comovingDistanceT(Z,' '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ABS_MAG_TRANS MAG_V - distanceToModulus(comovingDistanceT(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'distanceToModulus(comovingDistanceT(Z,' '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the integer 'ID' column is odd.",
        "response": "stilts tpipe in=data.fits cmd='select \"ID % 2 != 0\"' out=odd_ids_filtered_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID % 2 != 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB_NEW' converting J magnitude to AB and then to absolute magnitude using distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_NEW \"MAG_J + VEGA_AB_J\"' cmd='addcol MAG_ABS_J_AB_NEW \"MAG_J_AB_NEW - distanceToModulus(DISTANCE_PC)\"' out=j_abs_ab_new.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_NEW MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PM_XYZ_GAL_Y' containing the Y component of the Galactic space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_XYZ_GAL_Y \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_y_vel_comp_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_XYZ_GAL_Y icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_COND_4' that is 1.0 if 'ERR_A' is greater than 1.0, and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_4 \"ERR_A > 1.0 ? 1.0 : 0.0\"' out=conditional_error_4.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_4 ERR_A > 1.0 ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '1.0' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_H_AB_V' converting 2MASS H magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_H_AB_V \"MAG_H + JOHNSON_AB_V\"' out=h_ab_v_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_H_AB_V MAG_H + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'POS_GAL_PHI' containing the longitude component of the Galactic position vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_PHI \"cartesianToLon(icrsToGal(astromXYZ(RA, DEC, PARALLAX)), icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\"' out=galactic_phi_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX)),' 'icrsToGal(astromXYZ(RA,' 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_PHI cartesianToLon(icrsToGal(astromXYZ(RA, DEC, PARALLAX)), icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX)),' 'icrsToGal(astromXYZ(RA,' 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XYZ_ABS' containing the magnitude of the 3D absolute error vector.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XYZ_ABS \"hypot(abs(ERROR_X), abs(ERROR_Y), abs(ERROR_Z))\"' out=xyz_abs_error_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'abs(ERROR_Y),' 'abs(ERROR_Z))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XYZ_ABS hypot(abs(ERROR_X), abs(ERROR_Y), abs(ERROR_Z))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'abs(ERROR_Y),' 'abs(ERROR_Z))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the proper motion magnitude is less than 5 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"hypot(PMRA, PMDEC) < 5.0\"' out=low_pm.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '<' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) < 5.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '<' '5.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_OLD_3' converting Johnson U magnitude to AB, using the deprecated V-band constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB_OLD_3 \"MAG_U + JOHNSON_AB_V\"' out=u_ab_old_conv_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB_OLD_3 MAG_U + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'Z_COMOVING_ABS_DIST_3' converting Z to absolute magnitude (M_ABS) via angular diameter distance.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol ABS_MAG_ANG \"MAG_V - distanceToModulus(angularDiameterDistance(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC)\"' out=galaxies_abs_mag_angular.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'distanceToModulus(angularDiameterDistance(Z,' '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ABS_MAG_ANG MAG_V - distanceToModulus(angularDiameterDistance(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'distanceToModulus(angularDiameterDistance(Z,' '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_DMS_3' converting RA in degrees to DMS string format with 3 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_3 \"degreesToDms(RA, 3)\"' out=dms_ra_3s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_3 degreesToDms(RA, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q84' containing the 84th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q84 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.84)\"' out=q84_dist_1350pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.84)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q84 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.84)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.84)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_R_AB_V' converting Johnson R magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_R_AB_V \"MAG_R + JOHNSON_AB_V\"' out=r_ab_v_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_R_AB_V MAG_R + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_RATIO_SQ' calculated as the squared ratio of 'ERR_A' to 'ERR_B'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_RATIO_SQ \"square(ERR_A / ERR_B)\"' out=error_ratio_sq.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'ERR_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_RATIO_SQ square(ERR_A / ERR_B)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'ERR_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_DMS_3' converting DEC in degrees to DMS string format with 3 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_3 \"degreesToDms(DEC, 3)\"' out=dms_dec_3s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_3 degreesToDms(DEC, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_B_AB_OLD_2' converting Johnson B magnitude to AB, using the deprecated constant name and explicit unit.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -units \"mag MAG_B_AB_OLD_2 MAG_B + JOHNSON_AB_B\"' out=b_ab_old_conv_unit_2.fits",
        "chat.jar": "failed",
        "error": "Error: Bad addcol specification\n\nCommand was: addcol -units \"mag MAG_B_AB_OLD_2 MAG_B + JOHNSON_AB_B\"\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Bad addcol specification)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the magnitude 'MAG' is numerically positive.",
        "response": "stilts tpipe in=cat.fits cmd='select \"MAG > 0.0\"' out=positive_mag_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q16' containing the 16th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q16 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.16)\"' out=q16_dist_1350pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.16)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q16 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.16)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.16)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_I_AB_V' converting Johnson I magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_I_AB_V \"MAG_I + JOHNSON_AB_V\"' out=i_ab_v_conv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_I_AB_V MAG_I + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'KCORR_Y' using the KCF_Y filter at Z=0.1, leveraging the Y-K color (KCC_YK).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_Y \"kCorr(KCF_Y, 0.1, KCC_YK, MAG_Y-MAG_K)\"' out=kcorr_y.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.1,' 'KCC_YK,' 'MAG_Y-MAG_K)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_Y kCorr(KCF_Y, 0.1, KCC_YK, MAG_Y-MAG_K)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.1,' 'KCC_YK,' 'MAG_Y-MAG_K)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter the table by keeping columns with UCD 'pos.eq.ra' and 'phot.mag'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"ucd$pos_eq_ra ucd$phot_mag\"' out=pos_mag_ucd_only.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ucd$phot_mag'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$pos_eq_ra ucd$phot_mag\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$phot_mag'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_COND_5' that is 1.0 if 'ERR_A' is greater than 1.0, and 0.0 otherwise, using the conditional operator.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_5 \"ERR_A > 1.0 ? 1.0 : 0.0\"' out=conditional_error_5.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_5 ERR_A > 1.0 ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '1.0' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PM_XYZ_ICRS_MAG' containing the magnitude of the 3D ICRS velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_XYZ_ICRS_MAG \"hypot(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=icrs_velocity_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_XYZ_ICRS_MAG hypot(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q50_3KPC' containing the median distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q50_3KPC \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.5)\"' out=median_dist_3kpc_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q50_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_COND_6' that is 1.0 if 'ERR_A' is not equal to 'ERR_B', and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_6 \"ERR_A != ERR_B ? 1.0 : 0.0\"' out=conditional_error_6.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_6 ERR_A != ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_ICRS_DEG_3' converting FK4 RA/DEC (B1950) to ICRS RA (J2000) using the old function.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_ICRS_DEG_3 \"raFK4toFK5degrees(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_ra_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_ICRS_DEG_3 raFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_ICRS_DEG_3' converting FK4 RA/DEC (B1950) to ICRS DEC (J2000) using the old function.",
        "response": "stilts tpipe in=data.fits cmd='addcol DEC_ICRS_DEG_3 \"decFK4toFK5degrees(RA_B1950, DEC_B1950)\"' out=fk4_to_icrs_dec_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_ICRS_DEG_3 decFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XY_LOG' containing the natural log of the quadrature sum of X_ERR and Y_ERR.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XY_LOG \"ln(hypot(X_ERR, Y_ERR))\"' out=xy_quad_error_log.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Y_ERR))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XY_LOG ln(hypot(X_ERR, Y_ERR))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_ERR))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q84_3KPC' containing the 84th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q84_3KPC \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.84)\"' out=q84_dist_3kpc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.84)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q84_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.84)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.84)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_HMS_3' converting RA in degrees to HMS string format with 3 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_3 \"degreesToHms(RA, 3)\"' out=hms_ra_3s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_3 degreesToHms(RA, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'POS_GAL_R_MAG' containing the magnitude of the Galactic Cartesian position vector squared.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_R_MAG \"square(hypot(icrsToGal(astromXYZ(RA, DEC, PARALLAX))))\"' out=galactic_r_sq_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_R_MAG square(hypot(icrsToGal(astromXYZ(RA, DEC, PARALLAX))))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_COND_7' that is 1.0 if 'ERR_A' is not equal to 'ERR_B', and 0.0 otherwise, using the logical operator.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_7 \"ERR_A != ERR_B ? 1.0 : 0.0\"' out=conditional_error_7.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_7 ERR_A != ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_DMS_4' converting RA in degrees to DMS string format with 4 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_4 \"degreesToDms(RA, 4)\"' out=dms_ra_4s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_4 degreesToDms(RA, 4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_DMS_4' converting DEC in degrees to DMS string format with 4 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_4 \"degreesToDms(DEC, 4)\"' out=dms_dec_4s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_4 degreesToDms(DEC, 4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q25_3KPC' containing the 25th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q25_3KPC \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.25)\"' out=q25_dist_3kpc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.25)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q25_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.25)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.25)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_B_AB_OLD_3' converting Johnson B magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_B_AB_OLD_3 \"MAG_B + JOHNSON_AB_V\"' out=b_ab_old_conv_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_B_AB_OLD_3 MAG_B + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XYZ_MAG_SQ' containing the magnitude of the 3D error vector squared.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XYZ_MAG_SQ \"square(hypot(ERROR_X, ERROR_Y, ERROR_Z))\"' out=xyz_error_mag_sq.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ERROR_Y,' 'ERROR_Z))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XYZ_MAG_SQ square(hypot(ERROR_X, ERROR_Y, ERROR_Z))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'ERROR_Y,' 'ERROR_Z))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'VEL_GAL_X_COMP_2' containing the X (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_X_COMP_2 \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_x_vel_comp_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_X_COMP_2 icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB_OLD' converting J magnitude to AB and then to absolute magnitude using distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_OLD \"MAG_J + VEGA_AB_J\"' cmd='addcol MAG_ABS_J_AB_OLD \"MAG_J_AB_OLD - distanceToModulus(DISTANCE_PC)\"' out=j_abs_ab_old.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_OLD MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_COND_8' that is 1.0 if 'ERR_A' is not equal to 'ERR_B', and 0.0 otherwise, using numerical comparison.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_8 \"ERR_A != ERR_B ? 1.0 : 0.0\"' out=conditional_error_8.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_8 ERR_A != ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q16_3KPC' containing the 16th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q16_3KPC \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.16)\"' out=q16_dist_3kpc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.16)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q16_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.16)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.16)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_R_AB_OLD_2' converting Johnson R magnitude to AB, using the deprecated constant name and explicit unit.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -units \"mag MAG_R_AB_OLD_2 MAG_R + JOHNSON_AB_R\"' out=r_ab_old_conv_unit_2.fits",
        "chat.jar": "failed",
        "error": "Error: Bad addcol specification\n\nCommand was: addcol -units \"mag MAG_R_AB_OLD_2 MAG_R + JOHNSON_AB_R\"\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Bad addcol specification)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'KCORR_Z_R' using the KCF_z filter at Z=0.01, leveraging the r-z color (KCC_rz).",
        "response": "stilts tpipe in=data.fits cmd='addcol KCORR_Z_R \"kCorr(KCF_z, 0.01, KCC_rz, R_MAG-Z_MAG)\"' out=kcorrected_z_r.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.01,' 'KCC_rz,' 'R_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_Z_R kCorr(KCF_z, 0.01, KCC_rz, R_MAG-Z_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.01,' 'KCC_rz,' 'R_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_DMS_5' converting RA in degrees to DMS string format with 5 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_5 \"degreesToDms(RA, 5)\"' out=dms_ra_5s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_5 degreesToDms(RA, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_DMS_5' converting DEC in degrees to DMS string format with 5 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_5 \"degreesToDms(DEC, 5)\"' out=dms_dec_5s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_5 degreesToDms(DEC, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_COND_9' that is 1.0 if 'ERR_A' is not equal to 'ERR_B', and 0.0 otherwise, using strict comparison.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_9 \"!equals(toString(ERR_A), toString(ERR_B)) ? 1.0 : 0.0\"' out=conditional_error_9.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'toString(ERR_B))' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_9 !equals(toString(ERR_A), toString(ERR_B)) ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'toString(ERR_B))' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q50_1350PC' containing the median distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q50_1350PC \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.5)\"' out=median_dist_1350pc_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q50_1350PC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'VEL_GAL_Y_COMP_2' containing the Y (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_Y_COMP_2 \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_y_vel_comp_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_Y_COMP_2 icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB_NEW_2' converting J magnitude to AB and then to absolute magnitude using distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_NEW_2 \"MAG_J + VEGA_AB_J\"' cmd='addcol MAG_ABS_J_AB_NEW_2 \"MAG_J_AB_NEW_2 - distanceToModulus(DISTANCE_PC)\"' out=j_abs_ab_new_2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_NEW_2 MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_COND_10' that is 1.0 if 'ERR_A' is greater than 1.0 and 'ERR_B' is less than 0.5, and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_10 \"(ERR_A > 1.0 && ERR_B < 0.5) ? 1.0 : 0.0\"' out=conditional_error_10.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0' '&&' 'ERR_B' '<' '0.5)' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_10 (ERR_A > 1.0 && ERR_B < 0.5) ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '1.0' '&&' 'ERR_B' '<' '0.5)' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q5_3KPC' containing the 5th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q5_3KPC \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.05)\"' out=q5_dist_3kpc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.05)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q5_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.05)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.05)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_R_AB_V_2' converting Johnson R magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_R_AB_V_2 \"MAG_R + JOHNSON_AB_V\"' out=r_ab_v_conv_2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_R_AB_V_2 MAG_R + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'KCORR_J_K' using the KCF_J filter at Z=0.01, leveraging the J-K color (KCC_JK).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_J_K \"kCorr(KCF_J, 0.01, KCC_JK, MAG_J-MAG_K)\"' out=kcorr_jk.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.01,' 'KCC_JK,' 'MAG_J-MAG_K)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_J_K kCorr(KCF_J, 0.01, KCC_JK, MAG_J-MAG_K)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.01,' 'KCC_JK,' 'MAG_J-MAG_K)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'RA_DMS_6' converting RA in degrees to DMS string format with 6 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_6 \"degreesToDms(RA, 6)\"' out=dms_ra_6s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '6)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_6 degreesToDms(RA, 6)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '6)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'DEC_DMS_6' converting DEC in degrees to DMS string format with 6 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_6 \"degreesToDms(DEC, 6)\"' out=dms_dec_6s.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '6)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_6 degreesToDms(DEC, 6)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '6)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Group by 'FIELD' and calculate the mean and median of the absolute magnitude (M_ABS).",
        "response": "stilts tpipe in=data.fits cmd='addcol M_ABS \"MAG - distanceToModulus(DISTANCE)\"' cmd='group \"FIELD M_ABS\"; mean; MEAN_M_ABS \"M_ABS\"; median; MEDIAN_M_ABS' out=field_abs_mag_stats.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_OLD_4' converting Johnson U magnitude to AB, using the R-band deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB_OLD_4 \"MAG_U + JOHNSON_AB_R\"' out=u_ab_old_conv_4.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB_OLD_4 MAG_U + JOHNSON_AB_R\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'ERROR_COND_11' that is true if 'ERR_A' is greater than 1.0 and 'ERR_B' is less than 0.5.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_11 \"ERR_A > 1.0 && ERR_B < 0.5\"' out=conditional_error_11.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0' '&&' 'ERR_B' '<' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_11 ERR_A > 1.0 && ERR_B < 0.5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '1.0' '&&' 'ERR_B' '<' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q95_3KPC' containing the 95th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q95_3KPC_2 \"distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.95)\"' out=q95_dist_3kpc_v2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.95)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q95_3KPC_2 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.95)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.95)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'VEL_GAL_X_COMP_3' containing the X (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_X_COMP_3 \"icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\"' out=galactic_x_vel_comp_4.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_X_COMP_3 icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB_OLD_3' converting J magnitude to AB and then to absolute magnitude using distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_OLD_3 \"MAG_J + VEGA_AB_J\"' cmd='addcol MAG_ABS_J_AB_OLD_3 \"MAG_J_AB_OLD_3 - distanceToModulus(DISTANCE_PC)\"' out=j_abs_ab_old_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_OLD_3 MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a FITS file, calculate the absolute K magnitude (K_abs), then output the first 100 rows to an ECSV file.",
        "response": "stilts tpipe in=catalog.fits cmd='addcol K_ABS \"K_MAG + 5 * log10(PARALLAX) + 5\"' cmd='head \"100\"' ofmt=ecsv out=abs_k_mag.ecsv",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '5' '*' 'log10(PARALLAX)' '+' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol K_ABS K_MAG + 5 * log10(PARALLAX) + 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '5' '*' 'log10(PARALLAX)' '+' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter a catalog for sources within 5 arcminutes of RA 150, Dec 10, then count the total number of remaining rows.",
        "response": "stilts tpipe in=survey.fits cmd='select \"skyDistanceDegrees(RA, DEC, 150.0, 10.0) * 3600.0 < 300.0\"' omode=count",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' '150.0,' '10.0)' '*' '3600.0' '<' '300.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, 150.0, 10.0) * 3600.0 < 300.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' '150.0,' '10.0)' '*' '3600.0' '<' '300.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the mean, minimum, and maximum of the 'FLUX' column for objects where 'Z' > 0.5.",
        "response": "stilts tpipe in=data.fits cmd='select \"Z > 0.5\"' cmd='keepcols \"FLUX\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Rename 'RA' to 'RA_DEG', 'DEC' to 'DEC_DEG', set their units to 'deg', and output the table metadata only.",
        "response": "stilts tpipe in=coords.fits cmd='colmeta \"-name RA_DEG RA -units deg\"' cmd='colmeta \"-name DEC_DEG DEC -units deg\"' omode=meta",
        "chat.jar": "failed",
        "error": "Error: No such flag -name RA_DEG RA -units deg\n\nCommand was: colmeta \"-name RA_DEG RA -units deg\"\n\nUsage: colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n               [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n               [-shape <n>[,<n>...][,*]] [-elsize <n>]\n               <colid-list>\n    (No such flag -name RA_DEG RA -units deg)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use synthetic sky data, calculate the proper motion vector magnitude (PM_TOTAL), and delete the individual PM components.",
        "response": "stilts tpipe in=:skysim:1000 cmd='addcol PM_TOTAL \"hypot(pmra, pmdec)\"' cmd='delcols \"pmra pmdec\"' out=sim_pm_total.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOTAL hypot(pmra, pmdec)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Apply a simple magnitude correction formula to the 'MAG_G' column in place.",
        "response": "stilts tpipe in=phot.fits cmd='replacecol MAG_G \"MAG_G - 0.03 * (MAG_G - MAG_R)\"' out=phot_corrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '0.03' '*' '(MAG_G' '-' 'MAG_R)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_G MAG_G - 0.03 * (MAG_G - MAG_R)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '0.03' '*' '(MAG_G' '-' 'MAG_R)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Replace the 'FLUX_ERR' column with a new one calculated as 1.0 / sqrt(FLUX_ERR) and rename it 'WEIGHT'.",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLUX_ERR \"1.0 / sqrt(FLUX_ERR)\"' cmd='colmeta \"-name WEIGHT FLUX_ERR\"' out=weighted_data.fits",
        "chat.jar": "failed",
        "error": "Error: No such flag -name WEIGHT FLUX_ERR\n\nCommand was: colmeta \"-name WEIGHT FLUX_ERR\"\n\nUsage: colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n               [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n               [-shape <n>[,<n>...][,*]] [-elsize <n>]\n               <colid-list>\n    (No such flag -name WEIGHT FLUX_ERR)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, filter rows where 'QUALITY' flag is not 0, then shuffle the remaining rows randomly.",
        "response": "stilts tpipe in=large.fits cmd='select \"QUALITY != 0\"' cmd='shuffle' out=shuffled_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select QUALITY != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a radial velocity column (RV) in km/s to normalized velocity (RV/c), adding a new column.",
        "response": "stilts tpipe in=stars.fits cmd='addcol RV_NORM \"RV / 299792.458\"' out=normalized_rv.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '299792.458'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RV_NORM RV / 299792.458\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '299792.458'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep those where the flux ratio (FLUX1/FLUX2) is between 0.9 and 1.1.",
        "response": "stilts tpipe in=bands.fits cmd='select \"FLUX1/FLUX2 BETWEEN 0.9 AND 1.1\"' out=low_variability.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'BETWEEN' '0.9' 'AND' '1.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX1/FLUX2 BETWEEN 0.9 AND 1.1\n\nUsage: select <expr>\n    (Unused arguments: 'BETWEEN' '0.9' 'AND' '1.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate 1000 rows, add a random number, then keep only the rows with a random number greater than 0.9.",
        "response": "stilts tpipe in=:loop:1000 cmd='addcol RAND \"random($0)\"' cmd='select \"RAND > 0.9\"' out=random_sample_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RAND > 0.9\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert degrees/min/sec components to a single decimal degree RA column, then delete the components.",
        "response": "stilts tpipe in=raw.fits cmd='replacecol RA \"hmsToDegrees(RA_H, RA_M, RA_S)\"' cmd='delcols \"RA_H RA_M RA_S\"' out=decimal_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA_M,' 'RA_S)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA hmsToDegrees(RA_H, RA_M, RA_S)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'RA_M,' 'RA_S)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table with string column names containing spaces, automatically fix those names, and select only the fixed columns.",
        "response": "stilts tpipe in=messy.fits cmd='fixcolnames' cmd='keepcols \"ID_OBJ RA_DEG DEC_DEG\"' out=clean_names.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA_DEG' 'DEC_DEG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID_OBJ RA_DEG DEC_DEG\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'RA_DEG' 'DEC_DEG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a numeric column based on a conditional expression, setting it to 1 if MAG<15, else 0.",
        "response": "stilts tpipe in=phot.fits cmd='addcol IS_BRIGHT \"MAG < 15 ? 1 : 0\"' out=phot_flags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15' '?' '1' ':' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT MAG < 15 ? 1 : 0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '15' '?' '1' ':' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Take a random 10% subset of a table and calculate the population standard deviation of 'Z' in that subset.",
        "response": "stilts tpipe in=big_data.fits cmd='random \"0.1\"' cmd='keepcols \"Z\"' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1'\n\nCommand was: random \"0.1\"\n\nUsage: random\n    (Unused arguments: '0.1')\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows where proper motion in RA (PMRA) is greater than 10 mas/yr, then pipe the result to TOPCAT.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PMRA > 10.0\"' omode=topcat",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate a distance modulus column (DIST_MOD) from parallax (PLX) and filter out any rows where PLX < 0.",
        "response": "stilts tpipe in=stars.fits cmd='select \"PLX > 0\"' cmd='addcol DIST_MOD \"5 * log10(1.0 / (PLX/1000.0)) - 5\"' out=dist_mod.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PLX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use a long command string to perform filtering, column addition, and sorting.",
        "response": "stilts tpipe in=data.fits cmd='select \"MAG < 20\"; addcol B_R \"B_MAG - R_MAG\"; sort \"-down B_R\"' out=processed_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 20\n\nUsage: select <expr>\n    (Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a FITS catalog, remove rows where the magnitude error (MAG_ERR) is zero, and replace the column description of 'RA_ICRS' to include units.",
        "response": "stilts tpipe in=survey.fits cmd='select \"MAG_ERR != 0\"' cmd='colmeta -desc \"Right Ascension (ICRS, deg)\" RA_ICRS' out=clean_survey.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a million simulated stars, select only those visible in the Southern Hemisphere (DEC < 0), and then calculate the statistical summary of their magnitudes (GMAG).",
        "response": "stilts tpipe in=:skysim:1000000 cmd='select \"dec < 0\"' cmd='keepcols \"gmag\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select dec < 0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Take a file, apply a boolean expression check, and halt execution with an error message if any row fails the check (e.g., if Z > 10).",
        "response": "stilts tpipe in=qso_data.fits cmd='assert \"Z < 10.0\"' cmd='assert \"Redshift is too high at row \" + $0' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '$0'\n\nCommand was: assert \"Redshift is too high at row \" + $0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '$0')\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a VOTable, define a new string column 'SHORT_NAME' using the substring function on 'FULL_NAME', and save the output in JSON format.",
        "response": "stilts tpipe in=objects.vot cmd='addcol SHORT_NAME \"substring(FULL_NAME, 0, 10)\"' ofmt=json out=short_names",
        "chat.jar": "failed",
        "error": "Error: No handler for output format json\n    (No handler for table format \"json\")\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, convert the proper motion columns (PMRA, PMDEC) from mas/yr to km/s at 1 kpc distance (using distance=1000/PLX), then remove the original PM columns.",
        "response": "stilts tpipe in=gaia_abundances.fits cmd='addcol RV_RA \"(PMRA * 4.740470446 / 1000) * (1000/PLX)\"' cmd='addcol RV_DEC \"(PMDEC * 4.740470446 / 1000) * (1000/PLX)\"' cmd='delcols \"PMRA PMDEC\"' out=rv_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '4.740470446' '/' '1000)' '*' '(1000/PLX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RV_RA (PMRA * 4.740470446 / 1000) * (1000/PLX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '4.740470446' '/' '1000)' '*' '(1000/PLX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table with columns 'RA_H', 'RA_M', 'RA_S' and combine them into a single decimal degree column 'RA_DEG', then remove the original columns.",
        "response": "stilts tpipe in=hms_cat.fits cmd='replacecol RA_H \"hmsToDegrees(RA_H, RA_M, RA_S)\"' cmd='colmeta \"-name RA_DEG RA_H\"' cmd='delcols \"RA_M RA_S\"' out=decimal_hms.fits",
        "chat.jar": "failed",
        "error": "Error: No such flag -name RA_DEG RA_H\n\nCommand was: colmeta \"-name RA_DEG RA_H\"\n\nUsage: colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n               [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n               [-shape <n>[,<n>...][,*]] [-elsize <n>]\n               <colid-list>\n    (No such flag -name RA_DEG RA_H)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the population variance of the 'TEMP' column, but first discard rows where 'FLAG' is greater than 5.",
        "response": "stilts tpipe in=measurements.fits cmd='select \"FLAG <= 5\"' cmd='keepcols \"TEMP\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG <= 5\n\nUsage: select <expr>\n    (Unused arguments: '<=' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Select only rows where the expression 'log10(FLUX) > 1.5' is true.",
        "response": "stilts tpipe in=deep_field.fits cmd='select \"log10(FLUX) > 1.5\"' out=high_log_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select log10(FLUX) > 1.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter a table to keep only the second and third table columns (using $ID notation).",
        "response": "stilts tpipe in=full.fits cmd='keepcols \"$2 $3\"' out=cols2_3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '$3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols $2 $3\n\nUsage: keepcols <colid-list>\n    (Unused arguments: '$3'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "In a table with proper motions, filter out sources where the total proper motion (hypot(PMRA, PMDEC)) is less than 10 mas/yr.",
        "response": "stilts tpipe in=gaia_pm.fits cmd='select \"hypot(PMRA, PMDEC) >= 10.0\"' out=high_pm.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>=' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) >= 10.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>=' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a table from the loop scheme with 50 rows, then add a second column calculated as sin(i / 10.0).",
        "response": "stilts tpipe in=:loop:50 cmd='addcol Y \"sin(i / 10.0)\"' out=sine_loop.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '10.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol Y sin(i / 10.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '10.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter out rows where the stellarity index is 0.0 or less, treating blank values in STELLARITY as false.",
        "response": "stilts tpipe in=stars.fits cmd='select \"STELLARITY > 0.0\"' out=positive_stellarity.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select STELLARITY > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find rows where 'MJD' is greater than 58000 and calculate the column `DEC_YEAR` from MJD.",
        "response": "stilts tpipe in=obs.fits cmd='select \"MJD > 58000\"' cmd='addcol DEC_YEAR \"mjdToDecYear(MJD)\"' out=recent_obs.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '58000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MJD > 58000\n\nUsage: select <expr>\n    (Unused arguments: '>' '58000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter an input table, then duplicate every resulting row exactly once.",
        "response": "stilts tpipe in=data.fits cmd='select \"FLAG == true\"' cmd='repeat \"-row 2\"' out=duplicated_flags.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown flag -row 2\n\nCommand was: repeat \"-row 2\"\n\nUsage: repeat [-row|-table] <count>\n    (Unknown flag -row 2)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Remove all rows that have identical values in both the 'ID' and 'FIELD' columns.",
        "response": "stilts tpipe in=detections.fits cmd='sort \"ID FIELD\"' cmd='uniq \"ID FIELD\"' out=unique_detections.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FIELD'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort ID FIELD\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'FIELD'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the average 'FLUX_U' and 'FLUX_G' across the entire catalog and output the statistics.",
        "response": "stilts tpipe in=survey.fits cmd='keepcols \"FLUX_U FLUX_G\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_G'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols FLUX_U FLUX_G\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'FLUX_G'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the assert filter to check if the total number of rows is exactly 500.",
        "response": "stilts tpipe in=fixed_list.fits cmd='assert \"$nrow == 500\"' omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '500'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $nrow == 500\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '500'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table from a compressed URL, convert the proper motion (PM) from mas/yr to degrees/yr, and save the checksum.",
        "response": "stilts tpipe in=http://example.com/gaia.fits.gz cmd='replacecol PMRA \"PMRA / 3600000.0\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PMRA PMRA / 3600000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the population standard deviation of the column 'AGE', excluding rows where AGE is negative.",
        "response": "stilts tpipe in=population.fits cmd='select \"AGE >= 0\"' cmd='keepcols \"AGE\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select AGE >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Select rows where RA is greater than 180 degrees, then randomly permute the remaining rows.",
        "response": "stilts tpipe in=sky_data.fits cmd='select \"RA > 180.0\"' cmd='shuffle' out=shuffled_hemisphere.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '180.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 180.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '180.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the distance modulus (DM) from parallax (PLX) in mas, assuming DM = 5 * log10(100 / PLX) - 5, and filter out all rows where PLX is non-positive.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"PLX > 0.0\"' cmd='addcol DIST_MOD \"5 * log10(100.0 / PLX) - 5\"' out=dist_mod_positive.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PLX > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the conditional operator to create a column 'MAG_CLEAN' which is 'MAG' if 'MAG_FLAG' is false, otherwise it is null.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_CLEAN \"MAG_FLAG == false ? MAG : NULL\"' out=phot_conditional.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' 'false' '?' 'MAG' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_CLEAN MAG_FLAG == false ? MAG : NULL\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '==' 'false' '?' 'MAG' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Replace a column 'FLUX_ERR' with the expression '1.0 / (FLUX_ERR * FLUX_ERR)' to calculate the weight, and rename the column to 'WEIGHT'.",
        "response": "stilts tpipe in=errors.fits cmd='replacecol FLUX_ERR \"1.0 / (FLUX_ERR * FLUX_ERR)\"' cmd='colmeta \"-name WEIGHT FLUX_ERR\"' out=weights.fits",
        "chat.jar": "failed",
        "error": "Error: No such flag -name WEIGHT FLUX_ERR\n\nCommand was: colmeta \"-name WEIGHT FLUX_ERR\"\n\nUsage: colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n               [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n               [-shape <n>[,<n>...][,*]] [-elsize <n>]\n               <colid-list>\n    (No such flag -name WEIGHT FLUX_ERR)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a long integer row index ($0) to a string padded with zeros to 8 digits.",
        "response": "stilts tpipe in=:loop:100 cmd='replacecol i \"padWithZeros(i, 8)\"' out=padded_index.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '8)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol i padWithZeros(i, 8)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '8)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, select only columns with 'RA' or 'DEC' in their UCD, and output the total data checksum.",
        "response": "stilts tpipe in=astro_data.fits cmd='keepcols \"ucd$pos_eq_ra_* ucd$pos_eq_dec_*\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ucd$pos_eq_dec_*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$pos_eq_ra_* ucd$pos_eq_dec_*\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$pos_eq_dec_*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows where the ICRS distance between (RA, DEC) and a fixed point (10, 5) is less than 0.1 degrees.",
        "response": "stilts tpipe in=cat.fits cmd='select \"skyDistanceDegrees(RA, DEC, 10.0, 5.0) < 0.1\"' out=cone_0_1.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' '10.0,' '5.0)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, 10.0, 5.0) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' '10.0,' '5.0)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find rows where the magnitude 'MAG_J' is null and replace the value with 25.0.",
        "response": "stilts tpipe in=phot.fits cmd='replacecol MAG_J \"NULL_MAG_J ? 25.0 : MAG_J\"' out=imputed_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '25.0' ':' 'MAG_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_J NULL_MAG_J ? 25.0 : MAG_J\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '25.0' ':' 'MAG_J'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the fraction of the year passed (using day-of-year expression) and add it as a column `FRAC_YEAR`.",
        "response": "stilts tpipe in=dates.fits cmd='addcol FRAC_YEAR \"(MJD - decYearToMjd(round(mjdToDecYear(MJD)))) / 365.25\"' out=fractional_year.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'decYearToMjd(round(mjdToDecYear(MJD))))' '/' '365.25'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FRAC_YEAR (MJD - decYearToMjd(round(mjdToDecYear(MJD)))) / 365.25\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'decYearToMjd(round(mjdToDecYear(MJD))))' '/' '365.25'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Set the table name parameter to 'Final Catalog' and remove all existing table parameters.",
        "response": "stilts tpipe in=input.fits cmd='clearparams \"*\"; tablename \"Final Catalog\"' out=final_cat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Catalog'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  tablename Final Catalog\n\nUsage: tablename <name>\n    (Unused arguments: 'Catalog'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the `assert` filter to check that the minimum value of 'MAG' is greater than 10.0.",
        "response": "stilts tpipe in=bright_stars.fits cmd='select \"MAG < 10.0\"' cmd='assert $nrow == 0 \"Found stars brighter than MAG=10.0\"' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0' 'Found stars brighter than MAG=10.0'\n\nCommand was: assert $nrow == 0 \"Found stars brighter than MAG=10.0\"\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0' 'Found stars brighter than MAG=10.0')\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Load a table, apply a filter, and ensure that the intermediate filtered result is written to a disk cache before the final output.",
        "response": "stilts tpipe in=huge_data.fits cmd='select \"RA > 50\"' cmd=cache storage=disk out=cached_filtered.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: storage=disk\n\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a 10,000-row table using the synthetic attractor scheme (clifford), keep only the Y and Z coordinates, and calculate the checksum.",
        "response": "stilts tpipe in=:attractor:10000,clifford cmd='keepcols \"Y Z\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Z'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Y Z\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Z'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read an ECSV file, verify that the 'FLUX_ERR' is always positive, and discard the table data afterward.",
        "response": "stilts tpipe in=photometry.ecsv ifmt=ecsv cmd='assert \"FLUX_ERR > 0\"' omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX_ERR > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter a catalog to include only sources where the total proper motion (hypot(PMRA, PMDEC)) is greater than 50 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select \"hypot(PMRA, PMDEC) > 50.0\"' out=high_pm_stars.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '50.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 50.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '50.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a catalogue, calculate the statistical summary (mean, min, max, etc.) of 'TEMP' for rows where the error 'ERR_TEMP' is less than 0.1.",
        "response": "stilts tpipe in=measurements.fits cmd='select \"ERR_TEMP < 0.1\"' cmd='keepcols \"TEMP\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ERR_TEMP < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Sort a table by 'Z' ascending, then by 'MAG' descending, and output the first 50 results as a LaTeX table.",
        "response": "stilts tpipe in=data.fits cmd='sort \"Z -down MAG\"' cmd='head \"50\"' ofmt=latex out=top_z_mag.tex",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-down' 'MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort Z -down MAG\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '-down' 'MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Take a random 5% sample of a massive table and send the resulting subset directly to TOPCAT.",
        "response": "stilts tpipe in=massive_cat.fits cmd='random \"0.05\"' omode=topcat",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.05'\n\nCommand was: random \"0.05\"\n\nUsage: random\n    (Unused arguments: '0.05')\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table with string column 'TIME_ISO', convert it to MJD, assert all MJDs are post-2000 (MJD > 51544), and save the checksum.",
        "response": "stilts tpipe in=obs.fits cmd='addcol MJD \"isoToMjd(TIME_ISO)\"' cmd='assert \"MJD > 51544\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '51544'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MJD > 51544\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '51544'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a VOTable, use the positional crossmatch error matcher (skyerr) parameters to perform local filtering, keeping rows where separation is less than the quadrature sum of errors.",
        "response": "stilts tpipe in=matched.vot cmd='addcol SEP \"skyDistanceDegrees(RA_1, DEC_1, RA_2, DEC_2) * 3600.0\"' cmd='select \"SEP < hypot(ERR_1, ERR_2)\"' out=clean_skyerr.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_1,' 'RA_2,' 'DEC_2)' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SEP skyDistanceDegrees(RA_1, DEC_1, RA_2, DEC_2) * 3600.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_1,' 'RA_2,' 'DEC_2)' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Select only rows where the decimal year (`DECYEAR`) is 2010.0 or later, and convert the RA coordinate to radians in a new column.",
        "response": "stilts tpipe in=data.fits cmd='select \"DECYEAR >= 2010.0\"' cmd='addcol RA_RAD \"degreesToRadians(RA)\"' out=recent_rad_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '2010.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DECYEAR >= 2010.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '2010.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a new column 'MAG_CHECK' that is 1 if 'MAG_G' is null, and 'MAG_G' otherwise (using the conditional operator).",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_CHECK \"NULL_MAG_G ? 1 : MAG_G\"' out=checked_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '1' ':' 'MAG_G'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_CHECK NULL_MAG_G ? 1 : MAG_G\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '?' '1' ':' 'MAG_G'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate a million synthetic sky sources, and select only a random 0.01% subset for analysis.",
        "response": "stilts tpipe in=:skysim:1000000 cmd='random \"0.0001\"' out=tiny_sim_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0001'\n\nCommand was: random \"0.0001\"\n\nUsage: random\n    (Unused arguments: '0.0001')\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Replace a column 'X_OLD' with the result of 'X_OLD + 10.0' and set the column unit to 'parsec'.",
        "response": "stilts tpipe in=coords.fits cmd='replacecol -units \"parsec X_OLD X_OLD + 10.0\"' out=shifted_coords.fits",
        "chat.jar": "failed",
        "error": "Error: Bad replacecol specification\n\nCommand was: replacecol -units \"parsec X_OLD X_OLD + 10.0\"\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Bad replacecol specification)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a large integer column 'SOURCE_ID' to a string, padded with leading zeros up to 19 digits.",
        "response": "stilts tpipe in=cat.fits cmd='addcol ID_STR \"padWithZeros(SOURCE_ID, 19)\"' out=padded_ids.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '19)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ID_STR padWithZeros(SOURCE_ID, 19)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '19)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, convert the string column 'DATE_TIME' (ISO 8601) to Unix seconds, and explicitly set the output column type to 64-bit integer.",
        "response": "stilts tpipe in=log.csv ifmt=csv cmd='addcol -type \"long UNIX_TIME isoToUnixSec(DATE_TIME)\"' out=unix_time.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'UNIX_TIME' 'isoToUnixSec(DATE_TIME)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type long UNIX_TIME isoToUnixSec(DATE_TIME)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'UNIX_TIME' 'isoToUnixSec(DATE_TIME)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Add a column 'MAG_ABS' using the distance modulus formula with parallax in mas: 5 * log10(100 / PLX) - 5.",
        "response": "stilts tpipe in=gaia_plx.fits cmd='addcol MAG_ABS \"5 * log10(100.0 / PARALLAX) - 5\"' out=abs_mag_calc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' 'log10(100.0' '/' 'PARALLAX)' '-' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_ABS 5 * log10(100.0 / PARALLAX) - 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'log10(100.0' '/' 'PARALLAX)' '-' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find all rows where the total flux (F_G + F_R + F_I) is greater than 1.0, and calculate the checksum of the resulting table.",
        "response": "stilts tpipe in=phot.fits cmd='select \"F_G + F_R + F_I > 1.0\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'F_R' '+' 'F_I' '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select F_G + F_R + F_I > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '+' 'F_R' '+' 'F_I' '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Remove all columns except those with UCDs starting with 'pos.eq.' and 'phot.mag'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"ucd$pos_eq_* ucd$phot_mag_*\"' out=ucd_subset.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ucd$phot_mag_*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$pos_eq_* ucd$phot_mag_*\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$phot_mag_*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate an HTM pixel index at level 20 for sources with coordinates RA and DEC.",
        "response": "stilts tpipe in=coords.fits cmd='addcol HTM20 \"htmIndex(20, RA, DEC)\"' out=htm_indexed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA,' 'DEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HTM20 htmIndex(20, RA, DEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA,' 'DEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to include only those where both magnitude 'MAG_A' and 'MAG_B' are non-null.",
        "response": "stilts tpipe in=phot.fits cmd='select \"!NULL_MAG_A && !NULL_MAG_B\"' out=phot_complete.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_MAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_MAG_A && !NULL_MAG_B\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_MAG_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Convert a column of degrees, minutes, and seconds (DEG, MIN, SEC) into a single decimal degree column, replacing the original columns.",
        "response": "stilts tpipe in=dms.fits cmd='replacecol DEG \"dmsToDegrees(DEG, MIN, SEC)\"' cmd='delcols \"MIN SEC\"' out=decimal_dms.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MIN,' 'SEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol DEG dmsToDegrees(DEG, MIN, SEC)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'MIN,' 'SEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, convert the integer column 'AGE' to a string, and pad it with leading zeros to 4 characters.",
        "response": "stilts tpipe in=objects.fits cmd='replacecol AGE \"padWithZeros(AGE, 4)\"' out=padded_age.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol AGE padWithZeros(AGE, 4)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "In a table of astrometric measurements, propagate the RA and DEC to a new epoch, setting the epoch difference to 5.0 years.",
        "response": "stilts tpipe in=astrom.fits cmd='addcol RA_NEW \"epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\"' cmd='addcol DEC_NEW \"epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))[6]\"' out=propagated_pos.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_NEW epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Sort the table by the logical expression 'MAG_G < 15' (brighter stars first), then output the entire table, displaying all its metadata.",
        "response": "stilts tpipe in=stars.fits cmd='sort \"MAG_G < 15\"' omode=meta",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort MAG_G < 15\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, convert a column 'TEMP_K' from Kelvin to Celsius, replacing the column and setting the unit to 'degC'.",
        "response": "stilts tpipe in=phys.fits cmd='replacecol -units \"degC TEMP_K TEMP_K - 273.15\"' out=temp_celsius.fits",
        "chat.jar": "failed",
        "error": "Error: Bad replacecol specification\n\nCommand was: replacecol -units \"degC TEMP_K TEMP_K - 273.15\"\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Bad replacecol specification)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Select only the columns with names 'ID' and those that are Boolean type (ucd$meta.code.qual).",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"ID ucd$meta_code_qual_*\"' out=id_and_flags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ucd$meta_code_qual_*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID ucd$meta_code_qual_*\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$meta_code_qual_*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find rows where the total flux (sum of 'F1', 'F2', 'F3') is negative and replace the individual flux values with null for those rows.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol IS_NEGATIVE \"(F1+F2+F3 < 0)\"' cmd='replaceval \"IS_NEGATIVE ? NULL : F1 F1\"' cmd='replaceval \"IS_NEGATIVE ? NULL : F2 F2\"' cmd='replaceval \"IS_NEGATIVE ? NULL : F3 F3\"' cmd='delcols \"IS_NEGATIVE\"' out=negative_flux_null.fits",
        "chat.jar": "failed",
        "error": "Error: Bad replaceval specification\n\nCommand was: replaceval \"IS_NEGATIVE ? NULL : F1 F1\"\n\nUsage: replaceval <old-val> <new-val> <colid-list>\n    (Bad replaceval specification)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, and perform a horizontal reflection of the coordinates: `RA_NEW = 360 - RA`.",
        "response": "stilts tpipe in=coords.fits cmd='replacecol RA \"360.0 - RA\"' out=reflected_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'RA'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA 360.0 - RA\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' 'RA'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate a custom proper motion magnitude column (PM_TOTAL) using `hypot(PMRA, PMDEC)` and explicitly assign it a UCD.",
        "response": "stilts tpipe in=gaia_dr3.fits cmd='addcol -ucd \"veloc.proper PM_TOTAL hypot(PMRA, PMDEC)\"' out=gaia_pm_ucd.fits",
        "chat.jar": "failed",
        "error": "Error: Bad addcol specification\n\nCommand was: addcol -ucd \"veloc.proper PM_TOTAL hypot(PMRA, PMDEC)\"\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Bad addcol specification)\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial separation between the two positions (RA1, DEC1) and (RA2, DEC2) is exactly 0.0 arcseconds.",
        "response": "stilts tpipe in=pairs.fits cmd='select \"skyDistanceDegrees(RA1, DEC1, RA2, DEC2) * 3600.0 == 0.0\"' out=exact_pos_pairs.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC1,' 'RA2,' 'DEC2)' '*' '3600.0' '==' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA1, DEC1, RA2, DEC2) * 3600.0 == 0.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC1,' 'RA2,' 'DEC2)' '*' '3600.0' '==' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use the celestial proper motion vector propagation function (`epochPropErr`) to calculate the astrometric parameters at J1950.0 (epoch difference of -50 years).",
        "response": "stilts tpipe in=gaia_22.fits cmd='addcol J1950_PROP \"epochPropErr(-50.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV, RAE, DECE, PLXE, PMRAE, PMDECE, RVE, RAC, RAPLX, RAPMRA, RAPMDEC, DECPLX, DECPMRA, DECPMDEC, PLXPMRA, PLXPMDEC, PMRAPMDEC))\"' out=j1950_astrom.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV,' 'RAE,' 'DECE,' 'PLXE,' 'PMRAE,' 'PMDECE,' 'RVE,' 'RAC,' 'RAPLX,' 'RAPMRA,' 'RAPMDEC,' 'DECPLX,' 'DECPMRA,' 'DECPMDEC,' 'PLXPMRA,' 'PLXPMDEC,' 'PMRAPMDEC))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol J1950_PROP epochPropErr(-50.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV, RAE, DECE, PLXE, PMRAE, PMDECE, RVE, RAC, RAPLX, RAPMRA, RAPMDEC, DECPLX, DECPMRA, DECPMDEC, PLXPMRA, PLXPMDEC, PMRAPMDEC))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV,' 'RAE,' 'DECE,' 'PLXE,' 'PMRAE,' 'PMDECE,' 'RVE,' 'RAC,' 'RAPLX,' 'RAPMRA,' 'RAPMDEC,' 'DECPLX,' 'DECPMRA,' 'DECPMDEC,' 'PLXPMRA,' 'PLXPMDEC,' 'PMRAPMDEC))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read an external Parquet file, apply a magnitude correction (MAG_CORR = MAG - 0.1), and save it in FITS format.",
        "response": "stilts tpipe in=input.parquet ifmt=parquet cmd='addcol MAG_CORR \"MAG - 0.1\"' out=corrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_CORR MAG - 0.1\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate 1000 synthetic stars, calculate the total proper motion vector magnitude (PM_MAG), and find the statistical minimum and maximum of that new column.",
        "response": "stilts tpipe in=:skysim:1000 cmd='addcol PM_MAG \"hypot(pmra, pmdec)\"' cmd='keepcols \"PM_MAG\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_MAG hypot(pmra, pmdec)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, assert that the 'Z' column is always positive, and discard the table data afterward.",
        "response": "stilts tpipe in=quasars.fits cmd='assert \"Z > 0\"' omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert Z > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Load a large FITS catalogue, select a random 0.001% subset of the rows, and output the coordinates to standard output in plain text.",
        "response": "stilts tpipe in=huge_cat.fits cmd='random \"0.00001\"' cmd='keepcols \"RA DEC\"' ofmt=text out=-",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.00001'\n\nCommand was: random \"0.00001\"\n\nUsage: random\n    (Unused arguments: '0.00001')\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Find the checksum of a table after removing all columns whose names start with 'ERR' or 'FLAG'.",
        "response": "stilts tpipe in=survey.fits cmd='delcols \"ERR* FLAG*\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLAG*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: delcols ERR* FLAG*\n\nUsage: delcols <colid-list>\n    (Unused arguments: 'FLAG*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter a table to keep rows where magnitude 'MAG' is greater than 25, and use the result for plotting/inspection in the GUI mode.",
        "response": "stilts tpipe in=deep.fits cmd='select \"MAG <= 25\"' omode=topcat",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '25'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG <= 25\n\nUsage: select <expr>\n    (Unused arguments: '<=' '25'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, filter rows to keep those where the value of 'FLAG' is not 0, and shuffle the resulting rows randomly.",
        "response": "stilts tpipe in=data.fits cmd='select \"FLAG != 0\"' cmd=shuffle out=filtered_shuffled.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, calculate the proper motion vector magnitude (PM_MAG) using hypot, and assert that PM_MAG is never negative.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_MAG \"hypot(PMRA, PMDEC)\"' cmd='assert \"PM_MAG >= 0\"' out=pm_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_MAG hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Generate 50 rows using the loop scheme, add a column `LOG_INDEX` using `log10(i+1)`, and save the result in Feather format.",
        "response": "stilts tpipe in=:loop:50 cmd='addcol LOG_INDEX \"log10(i + 1)\"' ofmt=feather out=indexed_log.feather",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_INDEX log10(i + 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, calculate the proper motion vector magnitude (PM_MAG) using hypot, and explicitly set the output data type for the new column to 32-bit float.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol -type \"float PM_TOTAL hypot(PMRA, PMDEC)\"' out=pm_float.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PM_TOTAL' 'hypot(PMRA,' 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type float PM_TOTAL hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PM_TOTAL' 'hypot(PMRA,' 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter rows where 'MAG_G' is between 18.0 and 20.0, and calculate the checksum of the resulting table.",
        "response": "stilts tpipe in=survey.fits cmd='select \"MAG_G BETWEEN 18.0 AND 20.0\"' omode=checksum",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'BETWEEN' '18.0' 'AND' '20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_G BETWEEN 18.0 AND 20.0\n\nUsage: select <expr>\n    (Unused arguments: 'BETWEEN' '18.0' 'AND' '20.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Filter a table to keep rows where 'V_MAG' < 10, then duplicate the entire resulting selection three times using `repeat`.",
        "response": "stilts tpipe in=bright.fits cmd='select \"V_MAG < 10\"' cmd='repeat \"3\"' out=tripled_bright.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select V_MAG < 10\n\nUsage: select <expr>\n    (Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table and check that the row index ($0) is always less than the total number of rows ($nrow).",
        "response": "stilts tpipe in=data.fits cmd='assert \"$0 <= $nrow\"' omode=discard",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '$nrow'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $0 <= $nrow\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '$nrow'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Calculate the distance modulus (DIST_MOD) from parallax (PLX) in mas, assuming a simple inversion, and apply a select filter to keep only objects with DM > 10.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol DIST_MOD \"5 * log10(100.0 / PLX) - 5\"' cmd='select \"DIST_MOD > 10\"' out=dm_far.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' 'log10(100.0' '/' 'PLX)' '-' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DIST_MOD 5 * log10(100.0 / PLX) - 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'log10(100.0' '/' 'PLX)' '-' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, keep only the rows that have identical values in the 'SOURCE_ID' column and the 'RA' column.",
        "response": "stilts tpipe in=duplicates.fits cmd='uniq \"SOURCE_ID RA\"' out=unique_id_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: uniq SOURCE_ID RA\n\nUsage: uniq [-count] [<colid-list>]\n    (Unused arguments: 'RA'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Read a table, calculate the total proper motion using `hypot(PMRA, PMDEC)`, and explicitly set the output data type for the new column to 32-bit float.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol -type \"float PM_TOTAL hypot(PMRA, PMDEC)\"' out=pm_float.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PM_TOTAL' 'hypot(PMRA,' 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type float PM_TOTAL hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PM_TOTAL' 'hypot(PMRA,' 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use `sorthead` filter to efficiently find the 10 rows with the smallest proper motion magnitude (`hypot(PMRA, PMDEC)`).",
        "response": "stilts tpipe in=gaia.fits cmd='sorthead \"10 hypot(PMRA, PMDEC)\"' out=lowest_pm.fits",
        "chat.jar": "failed",
        "error": "Error: <nrows> not numeric: 10 hypot(PMRA, PMDEC)\n\nCommand was: sorthead \"10 hypot(PMRA, PMDEC)\"\n\nUsage: sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n    (<nrows> not numeric: 10 hypot(PMRA, PMDEC))\n",
        "cmd": "tpipe"
    },
    {
        "prompt": "Use stilts tcat to join `part_A.fits` and `part_B.fits`. Before joining, for each table, select only rows where FLUX > 100. After joining, sort the final table by RA.",
        "response": "stilts tcat in=part_A.fits in=part_B.fits icmd='select \"FLUX > 100\"' ocmd='sort \"RA\"' out=filtered_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine `field_A.csv` and `field_B.csv` and add a sequence column named 'FieldNum'. Each input file should first be filtered to remove rows where `MAG_ERR` > 0.1.",
        "response": "stilts tcat ifmt=csv in=field_A.csv in=field_B.csv icmd='select \"MAG_ERR <= 0.1\"' seqcol=FieldNum out=clean_fields.csv",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR <= 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<=' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "How to combine `a.fits` and `b.fits` and then take a random sample of 1000 rows from the result?",
        "response": "stilts tcat in=a.fits in=b.fits ocmd='random \"1000\"' out=random_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1000'\n\nCommand was: random \"1000\"\n\nUsage: random\n    (Unused arguments: '1000')\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge two tables, filtering each one first to only include rows where 'QUALITY' is better than 0.9.",
        "response": "stilts tcat in='q1.fits q2.fits' icmd='select \"QUALITY > 0.9\"' out=high_quality_merge.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select QUALITY > 0.9\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate files and then randomly sample 10% of the combined total rows.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='random \"0.1\"' out=random_tenth.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1'\n\nCommand was: random \"0.1\"\n\nUsage: random\n    (Unused arguments: '0.1')\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge spectroscopic tables (spec*.fits), but ensure the final table is sorted by 'WAVELENGTH' then by 'TIME'.",
        "response": "stilts tcat in='spec*.fits' ocmd='sort \"WAVELENGTH TIME\"' out=sorted_spectra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'TIME'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort WAVELENGTH TIME\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'TIME'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine two tables, but only keep rows where the expression 'RA / DEC' is greater than 1.0.",
        "response": "stilts tcat in='pos1.fits pos2.fits' ocmd='select \"RA/DEC > 1.0\"' out=ratio_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA/DEC > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, and then run an expression check to ensure that all values in the final 'FLUX' column are positive.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='assert \"FLUX > 0\"' out=positive_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables and then keep only rows where the expression 'abs(MAG_G - MAG_R)' is less than 0.1.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='select \"abs(MAG_G - MAG_R) < 0.1\"' out=narrow_color_band.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_R)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(MAG_G - MAG_R) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG_R)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine two tables, and replace the column 'FLUX' with a new column calculated as 'FLUX * 1e-12' (unit conversion).",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replacecol FLUX \"FLUX * 1e-12\"' out=unit_corrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1e-12'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX * 1e-12\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '1e-12'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine three tables. Before joining, convert the magnitude column 'Vmag' to AB magnitude scale using the AB constant, assuming they are currently Johnson V.",
        "response": "stilts tcat in='v1.fits v2.fits v3.fits' icmd='replacecol Vmag \"Vmag + JOHNSON_AB_V\"' out=ab_mags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol Vmag Vmag + JOHNSON_AB_V\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables and then add a column 'IS_FAINT' that is true if 'MAG' > 20 and false otherwise.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol IS_FAINT \"MAG > 20\"' out=faint_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 20\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, then randomly discard 50% of the rows from the combined table.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='random \"0.5\"' out=half_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.5'\n\nCommand was: random \"0.5\"\n\nUsage: random\n    (Unused arguments: '0.5')\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, adding a column 'PARALLAX_M' calculated as parallax in micro-arcseconds, assuming input parallax is in mas.",
        "response": "stilts tcat in='p1.fits p2.fits' ocmd='addcol PARALLAX_M \"parallax * 1000.0\"' out=micro_parallax.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_M parallax * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables and, after combining, enforce that the column 'ERROR' contains only non-negative values, replacing negatives with null.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='replacecol ERROR \"max(ERROR, 0.0)\"' out=non_negative_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol ERROR max(ERROR, 0.0)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '0.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, and then calculate the 1st and 3rd quartiles (Q1, Q3) for the column 'FLUX'.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='keepcols \"FLUX\"' omode=stats ocmd='keepcols \"Q.25 Q.75\"'",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Q.75'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Q.25 Q.75\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Q.75'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, replacing the magnitude column 'gmag' with a corrected value 'gmag - 0.05' in the final output.",
        "response": "stilts tcat in='raw1.fits raw2.fits' ocmd='replacecol gmag \"gmag - 0.05\"' out=corrected_mags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol gmag gmag - 0.05\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '0.05'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables and, before final output, keep only rows where the calculated column 'COLOR' (MAG_R - MAG_I) is positive.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='addcol COLOR \"MAG_R - MAG_I\"' ocmd='select \"COLOR > 0\"' out=positive_color.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_I'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COLOR MAG_R - MAG_I\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_I'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, keeping only rows where the exposure time ('EXPTIME') is greater than 1000 seconds.",
        "response": "stilts tcat in='e1.fits e2.fits' icmd='select \"EXPTIME > 1000\"' out=long_exposures.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select EXPTIME > 1000\n\nUsage: select <expr>\n    (Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, calculating a new column 'DIST_MPc' where distance is 1000 times the reciprocal of parallax (in mas).",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol DIST_MPc \"1000.0 / PARALLAX\"' out=dist_mpc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'PARALLAX'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DIST_MPc 1000.0 / PARALLAX\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'PARALLAX'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge photometric data and output the result mode as `stats`, calculating the Median and Median Absolute Deviation (ScMedAbsDev) for MAG.",
        "response": "stilts tcat in='mag1.fits mag2.fits' ocmd='keepcols \"MAG\"' omode=stats ocmd='keepcols \"Median ScMedAbsDev\"'",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ScMedAbsDev'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Median ScMedAbsDev\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ScMedAbsDev'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, filtering the output to keep rows where 'TIME' is after MJD 59000, and asserting that the row count is greater than 100.",
        "response": "stilts tcat in='obs*.fits' ocmd='select \"isoToMjd(TIME) > 59000\"' ocmd='assert \"$nrow > 100\"' out=recent_obs_assert.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '59000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select isoToMjd(TIME) > 59000\n\nUsage: select <expr>\n    (Unused arguments: '>' '59000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate all tables from a VOTable document (`archive.xml`) where the table names are ambiguous, filtering out rows where 'MAG' > 20 in all inputs.",
        "response": "stilts tcat in=archive.xml multi=true icmd='select \"MAG <= 20\"' out=bright_multi.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"archive.xml\"\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate two tables, then calculate the average 'FLUX' and maximum 'ERROR' across the resulting single column using `omode=stats`.",
        "response": "stilts tcat in='a.fits b.fits' ocmd='keepcols \"FLUX ERROR\"' omode=stats ocmd='keepcols \"Mean_FLUX Maximum_ERROR\"'",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ERROR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols FLUX ERROR\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ERROR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, adding a column 'WEIGHT_KG' which is the expression 'MASS * 0.453592' (assuming input mass is in pounds).",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='addcol WEIGHT_KG \"MASS * 0.453592\"' out=weight_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '0.453592'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol WEIGHT_KG MASS * 0.453592\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '0.453592'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, and add a column 'IS_NEAR' that is true if the 'DISTANCE' column is less than 10 kpc.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol IS_NEAR \"DISTANCE < 10\"' out=near_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_NEAR DISTANCE < 10\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine three tables where the input format is FITS, outputting the rows that have a final magnitude (MAG) less than 15, and keeping only the first 50 rows of that selection.",
        "response": "stilts tcat in='f1.fits f2.fits f3.fits' ocmd='select \"MAG < 15\"; head \"50\"' out=bright_head50.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, and then keep only rows where the expression 'abs(MAG_G - MAG_R)' is less than 0.1.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='select \"abs(MAG_G - MAG_R) < 0.1\"' out=narrow_color_band_b.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_R)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(MAG_G - MAG_R) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG_R)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables and then calculate the minimum and maximum values of the 'LUMINOSITY' column.",
        "response": "stilts tcat in='l1.fits l2.fits' ocmd='keepcols \"LUMINOSITY\"' omode=stats ocmd='keepcols \"Minimum Maximum\"'",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Maximum'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Minimum Maximum\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Maximum'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, and then run an expression check to assert that all magnitudes are positive (MAG > 0).",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='assert \"MAG > 0\"' out=positive_mag_assert.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate two tables, adding a column 'PARALLAX_UAS' calculated from 'PARALLAX' (in mas) as 'PARALLAX * 1000.0'.",
        "response": "stilts tcat in='p1.fits p2.fits' ocmd='addcol PARALLAX_UAS \"PARALLAX * 1000.0\"' out=uas_parallax.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_UAS PARALLAX * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, and then randomly sample 100 rows from the combined result.",
        "response": "stilts tcat in='rand1.fits rand2.fits' ocmd='random \"100\"' out=random_sample_100.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '100'\n\nCommand was: random \"100\"\n\nUsage: random\n    (Unused arguments: '100')\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, replacing the magnitude column 'G_MAG' with a corrected value 'G_MAG + 0.01' in the final output.",
        "response": "stilts tcat in='raw1.fits raw2.fits' ocmd='replacecol G_MAG \"G_MAG + 0.01\"' out=zp_corrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol G_MAG G_MAG + 0.01\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' '0.01'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, and apply an input filter to remove rows where 'DEC' is greater than 80 degrees or less than -80 degrees.",
        "response": "stilts tcat in='all_sky.fits near_pole.fits' icmd='select \"abs(DEC) < 80.0\"' out=polar_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '80.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC) < 80.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '80.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables and add a new column 'LOG_LUM' defined by the algebraic expression '10 + MAG * -0.4'.",
        "response": "stilts tcat in='l1.fits l2.fits' ocmd='addcol LOG_LUM \"10 + MAG * -0.4\"' out=absolute_lum.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'MAG' '*' '-0.4'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_LUM 10 + MAG * -0.4\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'MAG' '*' '-0.4'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine two tables, adding a column 'PARALLAX_PC' calculated from 'PARALLAX' (in mas) using the expression '1.0 / (PARALLAX * 0.001)'.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol PARALLAX_PC \"1.0 / (PARALLAX * 0.001)\"' out=parallax_pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '(PARALLAX' '*' '0.001)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_PC 1.0 / (PARALLAX * 0.001)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '(PARALLAX' '*' '0.001)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, and add a column 'IS_HIGH_ERR' that is true if 'ERROR' > 5.0.",
        "response": "stilts tcat in='err1.fits err2.fits' ocmd='addcol IS_HIGH_ERR \"ERROR > 5.0\"' out=high_err_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_HIGH_ERR ERROR > 5.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '5.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, and add a column 'LOG_COUNT' calculated as 'log10($0 + 1)' where $0 is the row index.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol LOG_COUNT \"log10($0 + 1)\"' out=log_row_index.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_COUNT log10($0 + 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, adding a column 'PARALLAX_UAS' calculated from the existing 'PARALLAX' (mas) column, then sort the output by this new column.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol PARALLAX_UAS \"PARALLAX * 1000.0\"; sort \"PARALLAX_UAS\"' out=uas_sorted_parallax.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_UAS PARALLAX * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables and then calculate the first quartile (Q1) and third quartile (Q3) of the final combined 'FLUX' column.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='keepcols \"FLUX\"' omode=stats ocmd='keepcols \"Q1 Q3\"'",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Q3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Q1 Q3\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Q3'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, and then assert that every row in the output table has a positive 'MASS' value, failing if not.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='assert \"MASS > 0\"' out=positive_mass.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MASS > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, filtering each input to only include sources where $\\text{G-R}$ color is positive.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='select \"G-R > 0\"' out=positive_color_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G-R > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, adding a boolean column 'IS_BRIGHT' that flags rows where $\\text{MAG} < 18$.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='addcol IS_BRIGHT \"MAG < 18\"' out=flagged_bright.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT MAG < 18\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge three tables, and then randomly sample 50% of the combined rows.",
        "response": "stilts tcat in='r1.fits r2.fits r3.fits' ocmd='random \"0.5\"' out=half_random_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.5'\n\nCommand was: random \"0.5\"\n\nUsage: random\n    (Unused arguments: '0.5')\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables and then add a column 'LOG_ABS_Z' calculated as $\\log_{10}(|\\text{REDSHIFT}| + 1)$ to handle near-zero values.",
        "response": "stilts tcat in='z1.fits z2.fits' ocmd='addcol LOG_ABS_Z \"log10(abs(REDSHIFT) + 1)\"' out=robust_log_z.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_ABS_Z log10(abs(REDSHIFT) + 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, filtering each input to only retain rows where the geometric column 'RA' is between 100 and 150 degrees.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='select \"RA > 100 && RA < 150\"' out=ra_range_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100' '&&' 'RA' '<' '150'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 100 && RA < 150\n\nUsage: select <expr>\n    (Unused arguments: '>' '100' '&&' 'RA' '<' '150'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables and then randomly sample 10% of the combined total, using a fixed seed for reproducibility.",
        "response": "stilts tcat in='r1.fits r2.fits' ocmd='random \"0.1 -seed 1234\"' out=reproducible_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1 -seed 1234'\n\nCommand was: random \"0.1 -seed 1234\"\n\nUsage: random\n    (Unused arguments: '0.1 -seed 1234')\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables and, in the final table, replace the column 'FLUX_UNC' with a scaled version: 'FLUX_UNC * 1e-3'.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replacecol FLUX_UNC \"FLUX_UNC * 1e-3\"' out=milli_flux_unc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1e-3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_UNC FLUX_UNC * 1e-3\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '1e-3'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge spectroscopic tables, filtering each input to only keep rows where the 'WAVELENGTH' column is greater than 5000 Angstroms.",
        "response": "stilts tcat in='spec*.fits' icmd='select \"WAVELENGTH > 5000\"' out=long_wave_spectra.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select WAVELENGTH > 5000\n\nUsage: select <expr>\n    (Unused arguments: '>' '5000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, adding a column 'AGE_YR' calculated by converting a column 'AGE_DAY' using the 'SEC_PER_YEAR' constant.",
        "response": "stilts tcat in='p1.fits p2.fits' ocmd='addcol AGE_YR \"AGE_DAY / 365.25\"' out=age_in_years.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '365.25'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AGE_YR AGE_DAY / 365.25\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '365.25'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, enforcing that the column 'ERROR' has only non-negative values, replacing negatives with 0.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='replacecol ERROR \"max(ERROR, 0.0)\"' out=non_negative_errors_b.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol ERROR max(ERROR, 0.0)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '0.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables and then add a column 'IS_NEARBY' based on a complex geometric calculation: $\\text{DISTANCE} < 100 / \\text{sqrt}(\\text{AREA})$.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol IS_NEARBY \"DISTANCE < 100 / sqrt(AREA)\"' out=complex_proximity_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '100' '/' 'sqrt(AREA)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_NEARBY DISTANCE < 100 / sqrt(AREA)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '100' '/' 'sqrt(AREA)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate two tables, but only keep rows where the absolute difference between 'MAG1' and 'MAG2' is less than 0.5.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='select \"abs(MAG1 - MAG2) < 0.5\"' out=small_mag_diff.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG2)' '<' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(MAG1 - MAG2) < 0.5\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG2)' '<' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, filtering inputs to keep only rows where the row index (0-based) is less than 1000 in each input.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='select \"$0 < 1000\"' out=first_thousand_per_file.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 < 1000\n\nUsage: select <expr>\n    (Unused arguments: '<' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, adding a column 'JD' calculated from 'MJD' plus the required offset.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='addcol JD \"MJD + 2400000.5\"' out=jd_from_mjd.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol JD MJD + 2400000.5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables and ensure the resulting table is sorted first by 'CLASS' and then by 'REDSHIFT'.",
        "response": "stilts tcat in='z1.fits z2.fits' ocmd='sort \"CLASS REDSHIFT\"' out=double_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'REDSHIFT'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort CLASS REDSHIFT\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'REDSHIFT'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables and then replace the column 'FLUX' with 'FLUX / 1e-3' to convert millijanskys to janskys.",
        "response": "stilts tcat in='mj1.fits mj2.fits' ocmd='replacecol FLUX \"FLUX / 1e-3\"' out=jansky_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '1e-3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX / 1e-3\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1e-3'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables and then calculate the standard deviation and mean of the 'G_FLUX' column.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='keepcols \"G_FLUX\"' omode=stats ocmd='keepcols \"Mean StDev\"'",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'StDev'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Mean StDev\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'StDev'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, and then add a column 'PAR_ERR_SQ' calculated as the square of 'PARALLAX_ERR'.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='addcol PAR_ERR_SQ \"PARALLAX_ERR * PARALLAX_ERR\"' out=squared_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' 'PARALLAX_ERR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PAR_ERR_SQ PARALLAX_ERR * PARALLAX_ERR\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'PARALLAX_ERR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, filtering the final combined table to include only rows where the 'RA' column is between 100 and 200 degrees.",
        "response": "stilts tcat in='sky1.fits sky2.fits' ocmd='select \"RA >= 100.0 && RA <= 200.0\"' out=ra_restricted_merge.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '100.0' '&&' 'RA' '<=' '200.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA >= 100.0 && RA <= 200.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '100.0' '&&' 'RA' '<=' '200.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge files, and then add a column 'IS_FAINT' that is true if 'MAG' > 21 and false otherwise, writing the output as an ECSV file.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol IS_FAINT \"MAG > 21\"' ofmt=ecsv out=faint_ecsv.ecsv",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '21'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 21\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '21'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, and add a column 'JD' by converting the existing 'MJD' column to Julian Date.",
        "response": "stilts tcat in='t1.fits t2.fits' ocmd='addcol JD \"MJD + 2400000.5\"' out=mjd_to_jd.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol JD MJD + 2400000.5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate three tables and then randomly select 1000 rows from the combined result.",
        "response": "stilts tcat in='d1.fits d2.fits d3.fits' ocmd='random \"1000\"' out=thousand_random_rows.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1000'\n\nCommand was: random \"1000\"\n\nUsage: random\n    (Unused arguments: '1000')\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, and then run an expression assertion to ensure that all 'ERROR' values are non-negative.",
        "response": "stilts tcat in='err1.fits err2.fits' ocmd='assert \"ERROR >= 0\"' out=error_asserted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert ERROR >= 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, adding a column 'PARALLAX_PC' using the expression $1000.0/\\text{PARALLAX}$ to calculate distance in parsecs.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol PARALLAX_PC \"1000.0 / PARALLAX\"' out=parallax_to_pc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'PARALLAX'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_PC 1000.0 / PARALLAX\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'PARALLAX'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, applying an input filter to keep only rows where $\\text{MAG_G} < 18$ before concatenation.",
        "response": "stilts tcat in='m1.fits m2.fits' icmd='select \"MAG_G < 18\"' out=mag_filtered_inputs.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_G < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, adding a column 'OBS_JD' by converting the ISO date string 'DATE_OBS' to Julian Day.",
        "response": "stilts tcat in='obs_a.fits obs_b.fits' ocmd='addcol OBS_JD \"isoToMjd(DATE_OBS) + 2400000.5\"' out=iso_to_jd.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol OBS_JD isoToMjd(DATE_OBS) + 2400000.5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, adding a column 'LOG_FLUX_E' calculated as $\\ln(\\text{FLUX} + \\text{ERROR})$.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol LOG_FLUX_E \"ln(FLUX + ERROR)\"' out=log_flux_error_sum.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'ERROR)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_FLUX_E ln(FLUX + ERROR)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'ERROR)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, using an ocmd to eliminate duplicate adjacent rows based on the 'RA' and 'DEC' columns.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='sort \"RA DEC\"; uniq \"RA DEC\"' out=position_deduplicated.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort RA DEC\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge two tables, filtering each input to keep only the rows where the error column 'ERR_G' is non-null and greater than zero.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='select \"!NULL_ERR_G && ERR_G > 0\"' out=clean_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'ERR_G' '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_ERR_G && ERR_G > 0\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'ERR_G' '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, adding a column 'LOG_ABS_FLUX' calculated as $\\log_{10}(\\text{abs}(\\text{FLUX}) + 1)$ to handle near-zero values safely.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol LOG_ABS_FLUX \"log10(abs(FLUX) + 1)\"' out=robust_log_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_ABS_FLUX log10(abs(FLUX) + 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, and then select only rows where the expression 'RA > 180' is true.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='select \"RA > 180\"' out=southern_hemisphere.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '180'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 180\n\nUsage: select <expr>\n    (Unused arguments: '>' '180'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate tables, and then add a column 'IS_NEGATIVE' that is true if 'FLUX' is negative.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol IS_NEGATIVE \"FLUX < 0\"' out=negative_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_NEGATIVE FLUX < 0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge two Parquet files, filtering them first to keep only columns named 'ID' and 'Z'.",
        "response": "stilts tcat ifmt=parquet in='p1.parquet p2.parquet' icmd='keepcols \"ID Z\"' out=id_z_parquet.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Z'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID Z\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Z'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, and add an array-valued column 'COLOR_ARRAY' containing $[\text{MAG_G}, \text{MAG_R}, \text{MAG_I}]$ for each row.",
        "response": "stilts tcat in='p1.fits p2.fits' ocmd='addcol COLOR_ARRAY \"array(MAG_G, MAG_R, MAG_I)\"' out=color_array.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MAG_R,' 'MAG_I)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COLOR_ARRAY array(MAG_G, MAG_R, MAG_I)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'MAG_R,' 'MAG_I)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Concatenate two tables, and then keep only rows where the 'FLAG_INT' column has the 5th bit set (using the expression language).",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='select \"hasBit(FLAG_INT, 5)\"' out=bit_set_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(FLAG_INT, 5)\n\nUsage: select <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Merge tables, then randomly sample 10% of the entire combined dataset.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='random \"0.1\"' out=random_sample_b.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1'\n\nCommand was: random \"0.1\"\n\nUsage: random\n    (Unused arguments: '0.1')\n",
        "cmd": "tcat"
    },
    {
        "prompt": "Combine tables, and add a column 'GAL_POS' which is a 2-element array containing the Galactic coordinates $[\text{L}, \text{B}]$ derived from input $\text{RA}$ and $\text{DEC}$ (ICRS).",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='addcol GAL_POS \"array(icrsToGal(astromXYZ(RA,DEC,1)), icrsToGal(astromXYZ(RA,DEC,1))[3])\"' out=gal_pos_array.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'icrsToGal(astromXYZ(RA,DEC,1))[3])'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol GAL_POS array(icrsToGal(astromXYZ(RA,DEC,1)), icrsToGal(astromXYZ(RA,DEC,1))[3])\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'icrsToGal(astromXYZ(RA,DEC,1))[3])'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcat"
    },
    {
        "prompt": "I'm looking for high proper motion candidates by comparing three epochs. Find groups of objects within 1 arcsec, then select only groups where the total sky motion between epoch 1 and 3 is large.",
        "response": "stilts tmatchn nin=3 in1=epoch1.fits in2=epoch2.fits in3=epoch3.fits multimode=group matcher=sky params=1 values1='ra dec' values2='ra dec' values3='ra dec' fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 ocmd='select \"skyDistanceDegrees(ra_1,dec_1,ra_3,dec_3) > 1./3600.\"' out=high_pm_groups.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1./3600.'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(ra_1,dec_1,ra_3,dec_3) > 1./3600.\n\nUsage: select <expr>\n    (Unused arguments: '>' '1./3600.'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Combine `epoch1.fits`, `epoch2.fits`, `epoch3.fits`. Before matching, for each table, select only rows with a `FLUX_ERROR < 0.1`.",
        "response": "stilts tmatchn nin=3 in1=epoch1.fits in2=epoch2.fits in3=epoch3.fits icmd1='select \"FLUX_ERROR < 0.1\"' icmd2='select \"FLUX_ERROR < 0.1\"' icmd3='select \"FLUX_ERROR < 0.1\"' multimode=group matcher=sky params=1 values1='ra dec' values2='ra dec' values3='ra dec' out=clean_epoch_groups.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX_ERROR < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Join three tables on `OBJECT_ID`. Before joining, for each table, remove rows where `MAG_ERR > 0.2`.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits icmd1='select \"MAG_ERR <= 0.2\"' icmd2='select \"MAG_ERR <= 0.2\"' icmd3='select \"MAG_ERR <= 0.2\"' multimode=group matcher=exact values1=OBJECT_ID values2=OBJECT_ID values3=OBJECT_ID out=clean_id_groups.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '0.2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR <= 0.2\n\nUsage: select <expr>\n    (Unused arguments: '<=' '0.2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "After a 3-way match, I want to see which groups have members from `table1` and `table3` but not `table2`.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=group matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 ocmd='select \"!NULL_ID_1 && NULL_ID_2 && !NULL_ID_3\"' out=groups_1_and_3_only.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'NULL_ID_2' '&&' '!NULL_ID_3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_ID_1 && NULL_ID_2 && !NULL_ID_3\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'NULL_ID_2' '&&' '!NULL_ID_3'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match my `main.fits` against `survey1.fits` and `survey2.fits`, but only for sources in `main.fits` brighter than magnitude 15.",
        "response": "stilts tmatchn nin=3 in1=main.fits in2=survey1.fits in3=survey2.fits multimode=pairs iref=1 icmd1='select \"MAG < 15\"' matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' out=bright_source_matches.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Find all groups across three catalogs, then take a random sample of 100 groups from the result.",
        "response": "stilts tmatchn nin=3 in1=t1.fits in2=t2.fits in3=t3.fits multimode=group matcher=sky params=2 values1='ra dec' values2='ra dec' values3='ra dec' ocmd='random \"100\"' out=random_group_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '100'\n\nCommand was: random \"100\"\n\nUsage: random\n    (Unused arguments: '100')\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. For T1, only include rows with 'COLOR > 0.5'.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits icmd1='select \"COLOR > 0.5\"' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=T1_color_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select COLOR > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match four tables exactly on a custom column 'UNIQUE_KEY' computed beforehand in all tables.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=exact params=0 in1=t1.fits icmd1='addcol UNIQUE_KEY \"concat(ID, TYPE)\"' in2=t2.fits icmd2='addcol UNIQUE_KEY \"concat(ID, TYPE)\"' in3=t3.fits icmd3='addcol UNIQUE_KEY \"concat(ID, TYPE)\"' in4=t4.fits icmd4='addcol UNIQUE_KEY \"concat(ID, TYPE)\"' values1=UNIQUE_KEY values2=UNIQUE_KEY values3=UNIQUE_KEY values4=UNIQUE_KEY out=multi_custom_key_match.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: params=0\n\nUsage: tmatchn nin=<count> ifmtN=<in-format> inN=<tableN> icmdN=<cmds>\n               ocmd=<cmds>\n               omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n               out=<out-table> ofmt=<out-format> multimode=pairs|group\n               iref=<table-index> matcher=<matcher-name> params=<match-params>\n               tuning=<tuning-params> valuesN=<expr-list>\n               joinN=default|match|nomatch|always fixcols=none|dups|all\n               suffixN=<label> progress=none|log|time|profile\n               runner=parallel|parallel<n>|parallel-all|sequential|classic|partest\n\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Pair match T1 (ref) against T2 and T3. After matching, compute and add a column for the magnitude difference: |MAG_1 - MAG_2|.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_1 suffix2=_2 ocmd='addcol MAG_DIFF_1_2 \"abs(MAG_1 - MAG_2)\"' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=mag_diff_added.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_DIFF_1_2 abs(MAG_1 - MAG_2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three tables, sorting the output by 'ID' ascending and 'GroupSize' descending.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=t1.fits in2=t2.fits in3=t3.fits ocmd='sort \"ID -down GroupSize\"' out=multi_sort_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-down' 'GroupSize'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort ID -down GroupSize\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '-down' 'GroupSize'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3, T4 (group mode). For T2, only select rows where Z > 1.0 before matching, and use parallel processing.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=sky params=3 in1=T1.fits in2=T2.fits icmd2='select \"Z > 1.0\"' in3=T3.fits in4=T4.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' runner=parallel out=high_z_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match five tables (D1-D5). Output only the groups where the group ID is less than 100, and show only the ID and GroupSize columns.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID values5=ID in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits in5=D5.fits ocmd='select \"GroupID < 100\"; keepcols \"ID GroupSize\"' out=small_id_groups.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GroupID < 100\n\nUsage: select <expr>\n    (Unused arguments: '<' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match three catalogs (A, B, C). C has errors (ERR_C) that must be calculated in quadrature with a fixed 0.5 arcsec systematic error before skyerr matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=skyerr_q params=1 in1=A.fits in2=B.fits in3=C.fits icmd3='addcol TOT_ERR \"hypot(ERR_C, 0.5)\"' values1='RA DEC ERR_A' values2='RA DEC ERR_B' values3='RA DEC TOT_ERR' out=systematic_err_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol TOT_ERR hypot(ERR_C, 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.5)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match four tables T1-T4 exactly on ID. Filter the final output to only show the ID, and the magnitude columns (MAG_1, MAG_2, MAG_3, MAG_4) from all sources.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=exact params=0 values1=ID values2=ID values3=ID values4=ID in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 suffix4=_4 ocmd='keepcols \"ID MAG_*\"' out=id_mag_only_4way.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: params=0\n\nUsage: tmatchn nin=<count> ifmtN=<in-format> inN=<tableN> icmdN=<cmds>\n               ocmd=<cmds>\n               omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n               out=<out-table> ofmt=<out-format> multimode=pairs|group\n               iref=<table-index> matcher=<matcher-name> params=<match-params>\n               tuning=<tuning-params> valuesN=<expr-list>\n               joinN=default|match|nomatch|always fixcols=none|dups|all\n               suffixN=<label> progress=none|log|time|profile\n               runner=parallel|parallel<n>|parallel-all|sequential|classic|partest\n\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (group mode). Filter the output to keep only groups where the size is greater than 2.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits ocmd='select \"GroupSize > 2\"' out=size_gt_2_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GroupSize > 2\n\nUsage: select <expr>\n    (Unused arguments: '>' '2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match four tables (D1-D4). Output should only contain the ID column and the calculated separation column 'DISTANCE'.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=sky params=2 in1=D1.fits in2=D2.fits in3=D3.fits in4=D4.fits scorecol=DISTANCE values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' ocmd='keepcols \"ID DISTANCE\"' out=minimal_score_output.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: scorecol=DISTANCE\n\nUsage: tmatchn nin=<count> ifmtN=<in-format> inN=<tableN> icmdN=<cmds>\n               ocmd=<cmds>\n               omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n               out=<out-table> ofmt=<out-format> multimode=pairs|group\n               iref=<table-index> matcher=<matcher-name> params=<match-params>\n               tuning=<tuning-params> valuesN=<expr-list>\n               joinN=default|match|nomatch|always fixcols=none|dups|all\n               suffixN=<label> progress=none|log|time|profile\n               runner=parallel|parallel<n>|parallel-all|sequential|classic|partest\n\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three tables (T1-T3). Filter the final output to keep only rows where the combined table size is between 3 and 5, inclusive.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits ocmd='select \"GroupSize >= 3 && GroupSize <= 5\"' out=filtered_size_groups.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '3' '&&' 'GroupSize' '<=' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GroupSize >= 3 && GroupSize <= 5\n\nUsage: select <expr>\n    (Unused arguments: '>=' '3' '&&' 'GroupSize' '<=' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three tables. T1 has a column 'NAME' that needs to be truncated to the first 10 characters before matching on NAME.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=SHORT_NAME values2=NAME values3=NAME in1=T1.fits icmd1='addcol SHORT_NAME \"substring(NAME, 0, 10)\"' in2=T2.fits in3=T3.fits out=truncated_name_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0,' '10)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SHORT_NAME substring(NAME, 0, 10)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0,' '10)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch five tables using sky position (2 arcsec). For T5, calculate a new coordinate column 'RA_NEW' = RA + 0.01 deg before matching.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=2 in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits in5=T5.fits icmd5='addcol RA_NEW \"RA + 0.01\"' values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA_NEW DEC' out=T5_shifted_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_NEW RA + 0.01\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '0.01'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). T1 contains proper motions (PMRA, PMDEC) and requires a filter to keep only objects with PM > 5 mas/yr before matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=2 in1=T1.fits icmd1='select \"hypot(PMRA, PMDEC) > 5\"' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=high_pm_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 5\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match three tables, T1, T2, T3. T2 needs filtering to only keep rows where magnitude MAG > 20 (faint objects).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=5 in1=T1.fits in2=T2.fits icmd2='select \"MAG > 20\"' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=faint_group_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 20\n\nUsage: select <expr>\n    (Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. T_REF uses the symmetric logarithmic scale (symlog) on its MAG column before matching on position+magnitude (sky*1d, 1 arcsec, 1.0 symlog tolerance).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky*1d params='1 1.0' in1=T_REF.fits icmd1='replacecol MAG \"symlog(10, 1, MAG)\"' in2=T2.fits in3=T3.fits values1='RA DEC MAG' values2='RA DEC MAG' values3='RA DEC MAG' out=symlog_mag_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1,' 'MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG symlog(10, 1, MAG)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '1,' 'MAG)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (group mode). Add a column 'MAX_FLUX_DIFF' in the output showing the maximum absolute difference in FLUX values across all members of the group.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_1 suffix2=_2 suffix3=_3 ocmd='addcol MAX_FLUX_DIFF \"maximum(abs(FLUX_1-FLUX_2), abs(FLUX_1-FLUX_3), abs(FLUX_2-FLUX_3))\"' out=max_flux_diff_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'abs(FLUX_1-FLUX_3),' 'abs(FLUX_2-FLUX_3))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAX_FLUX_DIFF maximum(abs(FLUX_1-FLUX_2), abs(FLUX_1-FLUX_3), abs(FLUX_2-FLUX_3))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'abs(FLUX_1-FLUX_3),' 'abs(FLUX_2-FLUX_3))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T1 contains proper motion components. Calculate the total proper motion (PM_TOT) in T1 and match on position + PM_TOT (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='1 5' in1=T1.fits icmd1='addcol PM_TOT \"hypot(PMRA, PMDEC)\"' in2=T2.fits in3=T3.fits values1='RA DEC PM_TOT' values2='RA DEC PM_TOT' values3='RA DEC PM_TOT' out=pm_magnitude_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOT hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three tables (A, B, C). Filter A to keep only rows where magnitude difference (B-V) > 1.0 before matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=3 in1=A.fits icmd1='select \"B_MAG - V_MAG > 1.0\"' in2=B.fits in3=C.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=color_filtered_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'V_MAG' '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select B_MAG - V_MAG > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'V_MAG' '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three tables, sorting the output by the total number of columns in the result (constant for all rows) followed by the magnitude descending.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=1 in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_1 ocmd='sort \"$ncol -down MAG_1\"' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=sort_by_col_and_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-down' 'MAG_1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort $ncol -down MAG_1\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '-down' 'MAG_1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). Filter T1 to only include rows where 'V_MAG' is brighter than 18.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=5 in1=T1.fits icmd1='select \"V_MAG < 18\"' in2=T2.fits in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=T1_bright_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select V_MAG < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three tables (D1, D2, D3) on 2D coordinates (X, Y). Apply geometric rotation (90 degrees clockwise) to D3's coordinates before matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=2d params=5 in1=D1.fits in2=D2.fits in3=D3.fits icmd3='replacecol X \"X*cosDeg(-90) - Y*sinDeg(-90)\"; replacecol Y \"X*sinDeg(-90) + Y*cosDeg(-90)\"' values1='X Y' values2='X Y' values3='X Y' out=rotated_2d_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'Y*sinDeg(-90)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol X X*cosDeg(-90) - Y*sinDeg(-90)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' 'Y*sinDeg(-90)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). Filter the final output to keep only rows where the original input table index (GroupSeq) for T1 is less than 1000.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits seqcol=GroupSeq ocmd='select \"GroupSeq_1 < 1000\"' out=first_1k_t1_group.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: seqcol=GroupSeq\n\nUsage: tmatchn nin=<count> ifmtN=<in-format> inN=<tableN> icmdN=<cmds>\n               ocmd=<cmds>\n               omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n               out=<out-table> ofmt=<out-format> multimode=pairs|group\n               iref=<table-index> matcher=<matcher-name> params=<match-params>\n               tuning=<tuning-params> valuesN=<expr-list>\n               joinN=default|match|nomatch|always fixcols=none|dups|all\n               suffixN=<label> progress=none|log|time|profile\n               runner=parallel|parallel<n>|parallel-all|sequential|classic|partest\n\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 (group mode). Filter the final output to keep only rows where the Separation score is less than 0.1 arcsec.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=T1.fits in2=T2.fits in3=T3.fits scorecol=Separation ocmd='select \"Separation < 0.1/3600.0\"' out=low_sep_group.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: scorecol=Separation\n\nUsage: tmatchn nin=<count> ifmtN=<in-format> inN=<tableN> icmdN=<cmds>\n               ocmd=<cmds>\n               omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n               out=<out-table> ofmt=<out-format> multimode=pairs|group\n               iref=<table-index> matcher=<matcher-name> params=<match-params>\n               tuning=<tuning-params> valuesN=<expr-list>\n               joinN=default|match|nomatch|always fixcols=none|dups|all\n               suffixN=<label> progress=none|log|time|profile\n               runner=parallel|parallel<n>|parallel-all|sequential|classic|partest\n\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3, T4 (group mode). Filter the final output to keep only groups where the calculated standard deviation of the MAG column is less than 0.1.",
        "response": "stilts tmatchn nin=4 multimode=group matcher=exact values1=ID values2=ID values3=ID values4=ID in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits fixcols=dups suffix1=_1 suffix2=_2 suffix3=_3 suffix4=_4 ocmd='addcol MAG_STDEV \"stdev(MAG_1, MAG_2, MAG_3, MAG_4)\"' ocmd='select \"MAG_STDEV < 0.1\"' out=low_stdev_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MAG_2,' 'MAG_3,' 'MAG_4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_STDEV stdev(MAG_1, MAG_2, MAG_3, MAG_4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'MAG_2,' 'MAG_3,' 'MAG_4)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three catalogs (C1, C2, C3). Only output groups that contain sources from C1 or C2, but NOT C3.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=C1.fits in2=C2.fits in3=C3.fits join3=nomatch ocmd='select \"GroupSize > 0\"' out=C1_or_C2_not_C3.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GroupSize > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match five tables using 1D matching on 'FLUX' within 5 units. Filter T1 to only include FLUX > 100.",
        "response": "stilts tmatchn nin=5 multimode=pairs matcher=1d params=5 in1=F1.fits icmd1='select \"FLUX > 100\"' in2=F2.fits in3=F3.fits in4=F4.fits in5=F5.fits values1=FLUX values2=FLUX values3=FLUX values4=FLUX values5=FLUX out=filtered_1d_5way.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T2 only includes the first 10% of rows (random 0.1) before matching.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits icmd2='random \"0.1\"' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=t2_random_sample_match.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1'\n\nCommand was: random \"0.1\"\n\nUsage: random\n    (Unused arguments: '0.1')\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3. T1 is reference. T2 requires calculation of distance modulus (DM) from redshift (Z) using flat cosmology (DM=5*log10(luminosityDistance(...))). Match on position + DM (sky+1d).",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky+1d params='1 0.5' in1=T1.fits in2=T2.fits icmd2='addcol DM \"luminosityDistance(Z, 70, 0.3, 0.7)\"' icmd2='replacecol DM \"5*log10(DM)-5\"' in3=T3.fits values1='RA DEC DM' values2='RA DEC DM' values3='RA DEC DM' out=cosmo_dm_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '70,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DM luminosityDistance(Z, 70, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match five tables. Filter T4 to keep only rows where the calculated parallax error (1000/ERR_PLX) is less than 0.1.",
        "response": "stilts tmatchn nin=5 multimode=group matcher=sky params=2 in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits icmd4='select \"1000/ERR_PLX < 0.1\"' in5=T5.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' values4='RA DEC' values5='RA DEC' out=low_parallax_err_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select 1000/ERR_PLX < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). T2 contains magnitude in AB units; T3 in Vega units. Convert T3 magnitude (MAG_V) to AB (MAG_V - 0.04) before matching.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.1 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='replacecol MAG_V \"MAG_V - 0.04\"' values1=MAG_AB values2=MAG_AB values3=MAG_V out=ab_vega_aligned_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '0.04'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_V MAG_V - 0.04\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '0.04'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Pair match T1 (ref) against T2, T3. T3 contains proper motion error (PM_ERR). Only include T3 rows where PM_ERR < 0.1 mas/yr.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=1 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='select \"PM_ERR < 0.1\"' values1='RA DEC' values2='RA DEC' values3='RA DEC' out=low_pm_error_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PM_ERR < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match T1, T2, T3 (group mode). T1, T2, T3 all have a string array column 'FLAG_ARRAY'. Calculate the mean size of this array across all tables and add it to the output.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_1 suffix2=_2 suffix3=_3 ocmd='addcol AVG_FLAG_SIZE \"mean(size(FLAG_ARRAY_1), size(FLAG_ARRAY_2), size(FLAG_ARRAY_3))\"' out=array_size_stats_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'size(FLAG_ARRAY_2),' 'size(FLAG_ARRAY_3))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AVG_FLAG_SIZE mean(size(FLAG_ARRAY_1), size(FLAG_ARRAY_2), size(FLAG_ARRAY_3))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'size(FLAG_ARRAY_2),' 'size(FLAG_ARRAY_3))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three tables (L1, L2, L3). L2 and L3 only include rows where 'TIME' > 55000 MJD.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.01 in1=L1.fits in2=L2.fits icmd2='select \"TIME > 55000\"' in3=L3.fits icmd3='select \"TIME > 55000\"' values1=TIME values2=TIME values3=TIME out=time_filtered_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '55000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TIME > 55000\n\nUsage: select <expr>\n    (Unused arguments: '>' '55000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match T1, T2, T3, T4 (pairs, T1 ref). Output should only contain the ID and RA columns from T1, T2, T3, T4.",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=exact values1=ID values2=ID values3=ID values4=ID in1=T1.fits in2=T2.fits in3=T3.fits in4=T4.fits fixcols=all suffix1=_1 suffix2=_2 suffix3=_3 suffix4=_4 ocmd='keepcols \"ID_1 RA_1 ID_2 RA_2 ID_3 RA_3 ID_4 RA_4\"' out=id_ra_subset_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA_1' 'ID_2' 'RA_2' 'ID_3' 'RA_3' 'ID_4' 'RA_4'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID_1 RA_1 ID_2 RA_2 ID_3 RA_3 ID_4 RA_4\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'RA_1' 'ID_2' 'RA_2' 'ID_3' 'RA_3' 'ID_4' 'RA_4'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three tables (D1-D3). Output should be sorted by GroupSize descending, then by RA ascending.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=1 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=D1.fits in2=D2.fits in3=D3.fits scorecol=Distance ocmd='sort \"-down GroupSize RA\"' out=group_sorted_complex.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: scorecol=Distance\n\nUsage: tmatchn nin=<count> ifmtN=<in-format> inN=<tableN> icmdN=<cmds>\n               ocmd=<cmds>\n               omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n               out=<out-table> ofmt=<out-format> multimode=pairs|group\n               iref=<table-index> matcher=<matcher-name> params=<match-params>\n               tuning=<tuning-params> valuesN=<expr-list>\n               joinN=default|match|nomatch|always fixcols=none|dups|all\n               suffixN=<label> progress=none|log|time|profile\n               runner=parallel|parallel<n>|parallel-all|sequential|classic|partest\n\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match T1, T2, T3 (T1 ref). T2 contains magnitude in Vega, T3 in AB. Convert T2 to AB (MAG_AB = MAG_V + 0.03) before matching on position.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=2 in1=T1.fits in2=T2.fits icmd2='replacecol MAG_AB \"MAG_V + 0.03\"' in3=T3.fits values1='RA DEC' values2='RA DEC' values3='RA DEC' out=vega_ab_aligned.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '0.03'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_AB MAG_V + 0.03\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' '0.03'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Pair match T_REF against T2, T3. Use sky separation (5 arcsec). After matching, add a boolean column 'HIGH_SEP' if the separation is > 3 arcsec.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=5 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=T_REF.fits in2=T2.fits in3=T3.fits scorecol=Separation ocmd='addcol HIGH_SEP \"Separation > 3/3600.0\"' out=high_sep_flagged.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: scorecol=Separation\n\nUsage: tmatchn nin=<count> ifmtN=<in-format> inN=<tableN> icmdN=<cmds>\n               ocmd=<cmds>\n               omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n               out=<out-table> ofmt=<out-format> multimode=pairs|group\n               iref=<table-index> matcher=<matcher-name> params=<match-params>\n               tuning=<tuning-params> valuesN=<expr-list>\n               joinN=default|match|nomatch|always fixcols=none|dups|all\n               suffixN=<label> progress=none|log|time|profile\n               runner=parallel|parallel<n>|parallel-all|sequential|classic|partest\n\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three tables. After matching, calculate the standard deviation of the 'FLUX' column across the matched members.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=exact values1=ID values2=ID values3=ID in1=T1.fits in2=T2.fits in3=T3.fits fixcols=dups suffix1=_1 suffix2=_2 suffix3=_3 ocmd='addcol FLUX_STDEV \"stdev(FLUX_1, FLUX_2, FLUX_3)\"' out=flux_stdev_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'FLUX_2,' 'FLUX_3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_STDEV stdev(FLUX_1, FLUX_2, FLUX_3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_2,' 'FLUX_3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match four tables using Cartesian 2D coordinates (X, Y). T2 coordinates are computed by rotation (90 degrees).",
        "response": "stilts tmatchn nin=4 multimode=pairs matcher=2d params=5 in1=T1.fits in2=T2.fits icmd2='addcol X_ROT \"X*cosDeg(90) - Y*sinDeg(90)\"; addcol Y_ROT \"X*sinDeg(90) + Y*cosDeg(90)\"' in3=T3.fits in4=T4.fits values1='X Y' values2='X_ROT Y_ROT' values3='X Y' values4='X Y' out=rotated_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'Y*sinDeg(90)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol X_ROT X*cosDeg(90) - Y*sinDeg(90)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'Y*sinDeg(90)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Match T_REF against T2, T3. T2 only includes rows where 'COLOR' > 0.5. T3 columns should always be included.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=sky params=3 in1=T_REF.fits in2=T2.fits icmd2='select \"COLOR > 0.5\"' in3=T3.fits join3=always values1='RA DEC' values2='RA DEC' values3='RA DEC' out=color_filter_T3_outer.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select COLOR > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Crossmatch T1, T2, T3 using Cartesian 3D coordinates (X, Y, Z). After matching, calculate the Euclidean distance column 'EDIST' from the coordinates of the first table.",
        "response": "stilts tmatchn nin=3 multimode=pairs matcher=3d params=10 values1='X Y Z' values2='X Y Z' values3='X Y Z' in1=T1.fits in2=T2.fits in3=T3.fits ocmd='addcol EDIST \"hypot(X_1, Y_1, Z_1)\"' out=euclidean_distance_calc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Y_1,' 'Z_1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol EDIST hypot(X_1, Y_1, Z_1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_1,' 'Z_1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three tables (A, B, C). A has magnitude MAG_V. Convert A to MAG_AB (MAG_AB = MAG_V + 0.03) and match on MAG_AB (1D, 0.2 tolerance).",
        "response": "stilts tmatchn nin=3 multimode=group matcher=1d params=0.2 in1=A.fits icmd1='addcol MAG_AB \"MAG_V + 0.03\"' in2=B.fits in3=C.fits values1=MAG_AB values2=MAG_AB values3=MAG_AB out=mag_converted_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '0.03'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_AB MAG_V + 0.03\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '0.03'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "Group match three catalogs (C1, C2, C3). Filter C1 to keep only rows where the calculated magnitude MAG_R < 18.",
        "response": "stilts tmatchn nin=3 multimode=group matcher=sky params=2 values1='RA DEC' values2='RA DEC' values3='RA DEC' in1=C1.fits icmd1='select \"MAG_R < 18\"' in2=C2.fits in3=C3.fits out=C1_bright_only_group.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_R < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatchn"
    },
    {
        "prompt": "I want to join `table_x.fits` and `table_y.fits`. Before matching, I need to filter table_x to only include sources with `FLUX > 100`. The match should be on sky coordinates `pos_ra`, `pos_dec` with a 3 arcsec tolerance.",
        "response": "stilts tmatch2 in1=table_x.fits icmd1='select \"FLUX > 100\"' in2=table_y.fits matcher=sky params=3 values1='pos_ra pos_dec' values2='pos_ra pos_dec' out=filtered_join.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I need to match `file1.dat` and `file2.dat`. The coordinates are `RA1`, `DEC1` and `RA2`, `DEC2`. After matching within 2 arcsec, calculate the color `MAG_B - MAG_R` from the joined table and save it.",
        "response": "stilts tmatch2 ifmt=ascii in1=file1.dat in2=file2.dat matcher=sky params=2 values1='RA1 DEC1' values2='RA2 DEC2' ocmd='addcol COLOR \"MAG_B_1 - MAG_R_2\"' out=color_match.dat",
        "chat.jar": "failed",
        "error": "Error: Can't guess output format for color_match.dat\n    (No handler specified for writing table.\nKnown formats: jdbc, fits, colfits, votable, fits-healpix, ECSV, parquet, text, ascii, CSV, IPAC, HTML, LaTeX, TST, feather, mirage)\nUsage: tmatch2 ifmt1=<in-format> ifmt2=<in-format> icmd1=<cmds> icmd2=<cmds>\n               ocmd=<cmds>\n               omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n               out=<out-table> ofmt=<out-format> matcher=<matcher-name>\n               values1=<expr-list> values2=<expr-list> params=<match-params>\n               tuning=<tuning-params>\n               join=1and2|1or2|all1|all2|1not2|2not1|1xor2\n               find=all|best|best1|best2 fixcols=none|dups|all suffix1=<label>\n               suffix2=<label> scorecol=<col-name>\n               progress=none|log|time|profile\n               runner=parallel|parallel<n>|parallel-all|sequential|classic|partest\n               [in1=]<table1> [in2=]<table2>\n\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I have two tables, `t1.fits` and `t2.fits`. Match them on `RA`, `DEC`. The separation should be named 'dist'. Then, select only matches with `dist < 0.5` arcsec.",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' scorecol=dist ocmd='select \"dist < 0.5/3600.\"' out=close_matches.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.5/3600.'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select dist < 0.5/3600.\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.5/3600.'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match `cat.fits` against itself to find close pairs. Use a 5 arcsec radius.",
        "response": "stilts tmatch2 in1=cat.fits in2=cat.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' find=all ocmd='select \"ID_1 < ID_2\"' out=internal_pairs.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' 'ID_2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID_1 < ID_2\n\nUsage: select <expr>\n    (Unused arguments: '<' 'ID_2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find objects in `cat_new.fits` which have a counterpart in `cat_ref.fits` within 3 arcsec, but only if the magnitude in `cat_new` is brighter than 18.",
        "response": "stilts tmatch2 in1=cat_new.fits icmd1='select \"MAG < 18\"' in2=cat_ref.fits matcher=sky params=3 values1='RA DEC' values2='RA DEC' out=bright_matches.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match `table1.fits` and `table2.fits`. The coordinates in `table2` are `RA_RADS` and `DEC_RADS`. Then, add a column `IS_BRIGHT` to the output if `MAG_1` is less than 15.",
        "response": "stilts tmatch2 in1=table1.fits in2=table2.fits matcher=sky params=2 values1='RA DEC' values2='radiansToDegrees(RA_RADS) radiansToDegrees(DEC_RADS)' ocmd='addcol IS_BRIGHT \"MAG_1 < 15\"' out=bright_matches_processed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT MAG_1 < 15\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I need to match `data.fits` with `template.fits`. For `data.fits`, I need to apply a zero-point correction `MAG_CORR = MAG_RAW + 0.05` before matching on magnitude within a tolerance of 0.1.",
        "response": "stilts tmatch2 in1=data.fits in2=template.fits icmd1='addcol MAG_CORR \"MAG_RAW + 0.05\"' matcher=1d params=0.1 values1=MAG_CORR values2=MAG_TEMPLATE out=zp_corrected_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_CORR MAG_RAW + 0.05\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '0.05'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match `a.fits` and `b.fits`. Then select only the rows from the output where the magnitude from `a` is brighter than the magnitude from `b`.",
        "response": "stilts tmatch2 in1=a.fits in2=b.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=all suffix1=_a suffix2=_b ocmd='select \"MAG_a < MAG_b\"' out=brighter_matches.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' 'MAG_b'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_a < MAG_b\n\nUsage: select <expr>\n    (Unused arguments: '<' 'MAG_b'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "I'm trying to find variable stars by matching two observations `obs1.fits` and `obs2.fits`. Find pairs within 1 arcsec and then select pairs where the magnitude difference is greater than 0.5.",
        "response": "stilts tmatch2 in1=obs1.fits in2=obs2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=all suffix1=_1 suffix2=_2 ocmd='select \"abs(MAG_1 - MAG_2) > 0.5\"' out=variable_candidates.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_2)' '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(MAG_1 - MAG_2) > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG_2)' '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match two tables, `t1.fits` and `t2.fits`. Then, for the matched pairs, calculate the average magnitude, `(MAG_1 + MAG_2) / 2`.",
        "response": "stilts tmatch2 in1=t1.fits in2=t2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' ocmd='addcol AVG_MAG \"(MAG_1 + MAG_2) / 2\"' out=avg_mag_matches.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'MAG_2)' '/' '2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AVG_MAG (MAG_1 + MAG_2) / 2\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'MAG_2)' '/' '2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Please match `cat1.fits` against `cat2.fits` using `skyerr`. After matching, add a column `RELIABLE` if the separation is less than half the combined error.",
        "response": "stilts tmatch2 in1=cat1.fits in2=cat2.fits matcher=skyerr params=5 values1='RA DEC ERR_1' values2='RA DEC ERR_2' scorecol=sep ocmd='addcol RELIABLE \"sep < (ERR_1+ERR_2)/2\"' out=reliable_matches.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '(ERR_1+ERR_2)/2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RELIABLE sep < (ERR_1+ERR_2)/2\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '(ERR_1+ERR_2)/2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Join table_x.fits and table_y.fits. Before matching, filter table_x to only include sources with FLUX > 100. Match on sky coordinates pos_ra, pos_dec with a 3 arcsec tolerance.",
        "response": "stilts tmatch2 in1=table_x.fits icmd1='select \"FLUX > 100\"' in2=table_y.fits matcher=sky params=3 values1='pos_ra pos_dec' values2='pos_ra pos_dec' out=filtered_join.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match survey_X and survey_Y on sky position and filter survey_X beforehand to only include sources with MAG < 16. Use a 2 arcsec tolerance.",
        "response": "stilts tmatch2 in1=survey_X.fits icmd1='select \"MAG < 16\"' in2=survey_Y.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' out=bright_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '16'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 16\n\nUsage: select <expr>\n    (Unused arguments: '<' '16'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T1 and T2 using position and distance (sky3d). T2 distance is in km; convert to parsec (1 pc = 3.086e13 km) before matching (1 Mpc tolerance).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='addcol DIST_PC \"DIST_KM / (3.086e19 / 1e6)\"' matcher=sky3d params=1 values1='RA DEC DIST_PC' values2='RA DEC DIST_PC' out=distance_unit_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '(3.086e19' '/' '1e6)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DIST_PC DIST_KM / (3.086e19 / 1e6)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '(3.086e19' '/' '1e6)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits on sky position (1 arcsec). Before matching, filter A to keep only rows with Z > 0.5.",
        "response": "stilts tmatch2 in1=A.fits icmd1='select \"Z > 0.5\"' in2=B.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' out=high_z_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits using position and velocity (sky+2d). A.fits only includes sources with Z > 0.1. Tolerances 2 arcsec, 10 km/s, 10 km/s.",
        "response": "stilts tmatch2 in1=A.fits icmd1='select \"Z > 0.1\"' in2=B.fits matcher=sky+2d_anisotropic params='2 10 10' values1='RA DEC VX VY' values2='RA DEC VX VY' out=high_z_velocity_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 0.1\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T1 and T2. T2 contains parallax (PLX) in mas. Only include T2 rows where PLX is positive before performing any match.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='select \"PLX > 0\"' matcher=exact values1=ID values2=ID out=positive_parallax_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PLX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T1 and T2 on 3D coordinates (X, Y, Z). After joining, add a column 'DISTANCE' calculated as hypot(X_1, Y_1, Z_1).",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=3d params=1 values1='X Y Z' values2='X Y Z' fixcols=dups suffix1=_1 ocmd='addcol DISTANCE \"hypot(X_1, Y_1, Z_1)\"' out=3d_distance_calc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Y_1,' 'Z_1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DISTANCE hypot(X_1, Y_1, Z_1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_1,' 'Z_1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find all matches (all) between A.fits and B.fits (sky 5 arcsec). After matching, calculate the magnitude difference MAG_DIFF = MAG_A - MAG_B.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=sky params=5 values1='RA DEC' values2='RA DEC' find=all fixcols=dups suffix1=_A suffix2=_B ocmd='addcol MAG_DIFF \"MAG_A - MAG_B\"' out=mag_diff_all_pairs.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_DIFF MAG_A - MAG_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T_A and T_B on a 1D color index (C_IDX) with tolerance 0.1. T_A only includes rows where C_IDX > 0.3.",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='select \"C_IDX > 0.3\"' in2=T_B.fits matcher=1d params=0.1 values1=C_IDX values2=C_IDX out=color_filtered_1d.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select C_IDX > 0.3\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.3'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch T1 and T2 (2 arcsec radius). Filter T1 first, keeping only objects with flux errors less than 0.1, then filter T2, keeping only rows where Z > 0.05.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='select \"FLUX_ERR < 0.1\"' in2=T2.fits icmd2='select \"Z > 0.05\"' matcher=sky params=2 values1='RA DEC' values2='RA DEC' out=double_filtered_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX_ERR < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match Catalog A and B using sky position and R-band magnitude (sky+1d). Tolerances: 3 arcsec position, 0.1 mag difference. Columns MAG_R in B are actually MAG_VEGA; convert them to AB (add 0.9) before matching.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits icmd2='replacecol MAG_R \"MAG_R + 0.9\"' matcher=sky+1d params='3 0.1' values1='RA DEC MAG_R' values2='RA DEC MAG_R' out=vega_corrected_combined.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' '0.9'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_R MAG_R + 0.9\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' '0.9'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Join A.fits and B.fits exactly on ID. After joining, calculate the difference between magnitude columns (MAG_A - MAG_B) and add it as 'MAG_DIFF'.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID fixcols=dups suffix1=_A suffix2=_B ocmd='addcol MAG_DIFF \"MAG_A - MAG_B\"' out=magnitude_difference_exact.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_DIFF MAG_A - MAG_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Join T1 and T2 based on 2D coordinates (X, Y). T2 coordinates are computed by applying a 45-degree rotation to original X_RAW, Y_RAW columns.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='addcol X \"X_RAW*cosDeg(45) - Y_RAW*sinDeg(45)\"; addcol Y \"X_RAW*sinDeg(45) + Y_RAW*cosDeg(45)\"' matcher=2d params=5 values1='X Y' values2='X Y' out=rotated_coord_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'Y_RAW*sinDeg(45)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol X X_RAW*cosDeg(45) - Y_RAW*sinDeg(45)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'Y_RAW*sinDeg(45)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match A.fits and B.fits exactly on 'ID'. After joining, retain only the 'ID' and 'FLUX' columns from both tables.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID fixcols=all suffix1=_A suffix2=_B ocmd='keepcols \"ID_A ID_B FLUX_A FLUX_B\"' out=id_flux_subset.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ID_B' 'FLUX_A' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID_A ID_B FLUX_A FLUX_B\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ID_B' 'FLUX_A' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T1 and T2, filtering T2 to only keep columns ID and MAG before matching on exact ID.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='keepcols \"ID MAG\"' matcher=exact values1=ID values2=ID out=T2_minimal_cols.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID MAG\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits (sky 1 arcsec). Output should be sorted by a calculated color index MAG_G - MAG_R descending.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=dups suffix1=_A suffix2=_B ocmd='sort \"-down (MAG_G_A - MAG_R_B)\"' out=sorted_by_color.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_R_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort -down (MAG_G_A - MAG_R_B)\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '-' 'MAG_R_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T1 and T2. T1 only includes rows with a positive parallax (PLX > 0) before matching.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='select \"PLX > 0\"' in2=T2.fits matcher=sky params=3 values1='RA DEC' values2='RA DEC' out=positive_parallax_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PLX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch T1 and T2 on 3D Cartesian coordinates (X, Y, Z). After joining, calculate the length of the resulting 3D vector.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=3d params=1 values1='X Y Z' values2='X Y Z' fixcols=dups suffix1=_1 ocmd='addcol LENGTH \"hypot(X_1, Y_1, Z_1)\"' out=3d_length_calc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Y_1,' 'Z_1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LENGTH hypot(X_1, Y_1, Z_1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_1,' 'Z_1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find best match (best2) for T2 from T1. T1 only includes rows with high magnitude (MAG > 20).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='select \"MAG > 20\"' in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' find=best2 out=faint_best2_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 20\n\nUsage: select <expr>\n    (Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T1 and T2. T1 position errors are in arcminutes. Convert them to arcseconds before skyerr matching (ERR_ARCSEC * 60).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='replacecol E_ARCSEC \"E_ARCMIN * 60\"' in2=T2.fits matcher=skyerr params=1 values1='RA DEC E_ARCSEC' values2='RA DEC E_ARCSEC' out=arcmin_converted_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '60'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol E_ARCSEC E_ARCMIN * 60\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '60'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T_A and T_B using position and velocity components (sky+2d). T_A velocity components are in mas/yr; normalize them by parallax in T_A to get km/s (rvMasyrToKms).",
        "response": "stilts tmatch2 in1=T_A.fits icmd1='addcol VX \"rvMasyrToKms(PMRA, PLX)\"; addcol VY \"rvMasyrToKms(PMDEC, PLX)\"' in2=T_B.fits matcher=sky+2d params='2 1 1' values1='RA DEC VX VY' values2='RA DEC VX VY' out=velocity_normalized_match.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter params: Wrong number of words - wanted 2, got 3\nUsage: params=<match-params>\n\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits exactly on ID. After matching, apply a row filter to keep only rows where the combined table size is less than 100 rows.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID ocmd='select \"$nrow < 100\"' out=size_filtered_output.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $nrow < 100\n\nUsage: select <expr>\n    (Unused arguments: '<' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits. A has proper motions PMRA, PMDEC. Match on position AND proper motion total magnitude (sky+1d).",
        "response": "stilts tmatch2 in1=A.fits icmd1='addcol PM_TOT \"hypot(PMRA, PMDEC)\"' in2=B.fits matcher=sky+1d params='2 10' values1='RA DEC PM_TOT' values2='RA DEC PM_TOT' out=pos_pm_total_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOT hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find all pairs (find=all) between T1 and T2 using position AND 1D magnitude (sky+1d) and output only the Separation and Score columns.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky+1d params='2 0.2' values1='RA DEC MAG' values2='RA DEC MAG' find=all ocmd='keepcols \"Separation Score\"' out=min_pair_data.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Score'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Separation Score\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Score'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match two tables on a 1D magnitude (MAG) only. T1 magnitude values are derived from a log expression: 25 - 2.5 * log10(FLUX).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='addcol MAG \"25 - 2.5 * log10(FLUX)\"' in2=T2.fits matcher=1d params=0.1 values1=MAG values2=MAG out=calculated_mag_1d.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '2.5' '*' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG 25 - 2.5 * log10(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '2.5' '*' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match A.fits and B.fits using position AND proper motion (sky*2d). T_B proper motion is in km/s (VX, VY). Convert T_B velocity to mas/yr given parallax PLX.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits icmd2='addcol PMRA \"rvKmsToMasyr(VX, PLX)\"; addcol PMDEC \"rvKmsToMasyr(VY, PLX)\"' matcher=sky*2d params='1 5' values1='RA DEC PMRA PMDEC' values2='RA DEC PMRA PMDEC' out=kms_to_masyr_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PLX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PMRA rvKmsToMasyr(VX, PLX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PLX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find rows in T1 that match T2. After matching, add a boolean column 'IS_CLOSE' if Separation < 0.5 arcsec.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' scorecol=Separation ocmd='addcol IS_CLOSE \"Separation < 0.5/3600.0\"' out=close_flagged_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.5/3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_CLOSE Separation < 0.5/3600.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '0.5/3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match A.fits and B.fits. A has proper motion components. Calculate total PM magnitude and match on 1D total PM (1 mas/yr tolerance).",
        "response": "stilts tmatch2 in1=A.fits icmd1='addcol PM_TOT \"hypot(PMRA, PMDEC)\"' in2=B.fits matcher=1d params=1 values1=PM_TOT values2=PM_TOT out=pm_total_1d_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOT hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match two tables on 1D position (X) and 1D velocity (V) (1d+1d). T1 only includes rows where X > 1000.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='select \"X > 1000\"' in2=T2.fits matcher=1d+1d params='5 10' values1='X V' values2='X V' out=filtered_1d_1d.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select X > 1000\n\nUsage: select <expr>\n    (Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Join T1 and T2. T1 columns should use suffix '_1', T2 columns suffix '_2'. Only output the calculated separation score 'Sep' and the IDs.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=all suffix1=_1 suffix2=_2 scorecol=Sep ocmd='keepcols \"ID_1 ID_2 Sep\"' out=minimal_id_sep.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ID_2' 'Sep'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID_1 ID_2 Sep\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ID_2' 'Sep'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find rows in T1 that match T2. After matching, calculate the position angle (posAngDegrees) between the matched coordinates and add it as 'PA_SEP'.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=5 values1='RA_1 DEC_1' values2='RA_2 DEC_2' ocmd='addcol PA_SEP \"posAngDegrees(RA_1, DEC_1, RA_2, DEC_2)\"' out=match_with_pa.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_1,' 'RA_2,' 'DEC_2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PA_SEP posAngDegrees(RA_1, DEC_1, RA_2, DEC_2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_1,' 'RA_2,' 'DEC_2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch T1 and T2. T1 columns should be retained, T2 duplicates renamed with numerical suffixes. T1 must be filtered to keep only rows with magnitude brighter than 22.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='select \"MAG < 22\"' in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' fixcols=dups suffix2=_2 out=filtered_T1_inner.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '22'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 22\n\nUsage: select <expr>\n    (Unused arguments: '<' '22'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Join two tables on exact ID. Output columns ID, MAG_1, MAG_2. Filter the output to select MAG_1 > 10.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=exact values1=ID values2=ID fixcols=dups suffix1=_1 suffix2=_2 ocmd='keepcols \"ID MAG_1 MAG_2\"; select \"MAG_1 > 10\"' out=mag_filtered_subset.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'MAG_1' 'MAG_2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID MAG_1 MAG_2\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'MAG_1' 'MAG_2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match A.fits and B.fits using position AND proper motion total magnitude (sky+1d). A only includes sources with PM > 5 mas/yr.",
        "response": "stilts tmatch2 in1=A.fits icmd1='addcol PM_TOT \"hypot(PMRA, PMDEC)\"; select \"PM_TOT > 5\"' in2=B.fits matcher=sky+1d params='2 10' values1='RA DEC PM_TOT' values2='RA DEC PM_TOT' out=high_pm_combined.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOT hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match two tables on X, Y, Z coordinates (3D) where X, Y, Z are calculated using a rotation function.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd1='replacecol X \"cosDeg(45)*X - sinDeg(45)*Y\"' icmd1='replacecol Y \"sinDeg(45)*X + cosDeg(45)*Y\"' matcher=3d params=1 values1='X Y Z' values2='X Y Z' out=rotated_3d_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'sinDeg(45)*Y'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol X cosDeg(45)*X - sinDeg(45)*Y\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' 'sinDeg(45)*Y'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match A.fits and B.fits exactly on ID. Filter A to only include rows where Z > 1.0. Output to standard output and count the rows.",
        "response": "stilts tmatch2 in1=A.fits icmd1='select \"Z > 1.0\"' in2=B.fits matcher=exact values1=ID values2=ID omode=count",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T_A against itself to find all pairs within 2 arcsec. Exclude matches with identical row indices (i.e., self-matches).",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_A.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' find=all ocmd='select \"ID_1 < ID_2\"' out=internal_pairs_unique.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' 'ID_2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID_1 < ID_2\n\nUsage: select <expr>\n    (Unused arguments: '<' 'ID_2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch T1 and T2 (2 arcsec sky). After match, include a calculated column 'MJD_DIFF' representing the time difference between the two sources.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=2 values1='RA DEC' values2='RA DEC' fixcols=dups suffix1=_1 suffix2=_2 ocmd='addcol MJD_DIFF \"abs(MJD_1 - MJD_2)\"' out=time_diff_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MJD_2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MJD_DIFF abs(MJD_1 - MJD_2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MJD_2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch A.fits and B.fits using position. Filter B first to only include sources with quality flag 'Q_FLAG' > 0.9.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits icmd2='select \"Q_FLAG > 0.9\"' matcher=sky params=2 values1='RA DEC' values2='RA DEC' out=quality_filter_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Q_FLAG > 0.9\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Join T1 and T2. T1 has columns MAG_R, MAG_G. Add column COLOR = MAG_R - MAG_G in T1 before matching T2 on COLOR (1D, 0.1 tolerance).",
        "response": "stilts tmatch2 in1=T1.fits icmd1='addcol COLOR \"MAG_R - MAG_G\"' in2=T2.fits matcher=1d params=0.1 values1=COLOR values2=COLOR out=color_calculated_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_G'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COLOR MAG_R - MAG_G\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_G'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Crossmatch A and B using sky position (1 arcsec). Output only the separation score 'SepDeg' (degrees) and the row indices ($0) from both tables.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=sky params=360 values1='RA DEC' values2='RA DEC' scorecol=SepDeg ocmd='keepcols \"$0_1 $0_2 SepDeg\"' out=minimal_index_score.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '$0_2' 'SepDeg'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols $0_1 $0_2 SepDeg\n\nUsage: keepcols <colid-list>\n    (Unused arguments: '$0_2' 'SepDeg'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T_A and T_B exactly on ID. Filter the resulting matched table to keep only rows where magnitude MAG_A < 15.",
        "response": "stilts tmatch2 in1=T_A.fits in2=T_B.fits matcher=exact values1=ID values2=ID fixcols=dups suffix1=_A ocmd='select \"MAG_A < 15\"' out=matched_magnitude_filter.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_A < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match T1 and T2 (exact ID). T2 contains a column 'NAME' that needs to be truncated to the first 15 characters before matching T1's truncated name.",
        "response": "stilts tmatch2 in1=T1.fits icmd1='addcol SHORT_NAME \"substring(NAME, 0, 15)\"' in2=T2.fits icmd2='addcol SHORT_NAME \"substring(NAME, 0, 15)\"' matcher=exact values1=SHORT_NAME values2=SHORT_NAME out=truncated_name_match_2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0,' '15)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SHORT_NAME substring(NAME, 0, 15)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0,' '15)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Find all rows in T1 that are NOT matched in T2 (sky 5 arcsec). T2 must first be filtered to keep only rows where magnitude MAG > 20.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits icmd2='select \"MAG > 20\"' matcher=sky params=5 values1='RA DEC' values2='RA DEC' join=1not2 out=T1_unmatched_faint_T2.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 20\n\nUsage: select <expr>\n    (Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Join T1 and T2 (sky 1 arcsec). Output table should only contain T1's RA, DEC, ID and the separation distance, named 'Sep_arcsec' in arcseconds.",
        "response": "stilts tmatch2 in1=T1.fits in2=T2.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' scorecol=Separation ocmd='replacecol Sep_arcsec \"Separation*3600\"; keepcols \"ID RA DEC Sep_arcsec\"' out=minimal_scored_arcsec.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA' 'DEC' 'Sep_arcsec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols ID RA DEC Sep_arcsec\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'RA' 'DEC' 'Sep_arcsec'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Match A and B (exact ID). A columns use numerical suffix '_1'. B columns use '_2'. Then, keep only the IDs and a new column 'Sum_A_B' = A.VAL + B.VAL.",
        "response": "stilts tmatch2 in1=A.fits in2=B.fits matcher=exact values1=ID values2=ID fixcols=all suffix1=_1 suffix2=_2 ocmd='addcol Sum_A_B \"VAL_1+VAL_2\"; keepcols \"ID_1 ID_2 Sum_A_B\"' out=summed_values_match.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ID_2' 'Sum_A_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols ID_1 ID_2 Sum_A_B\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ID_2' 'Sum_A_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tmatch2"
    },
    {
        "prompt": "Create a high-resolution MOC (order 14) for all sources brighter than G=15 in `gaia_dr3.fits`.",
        "response": "stilts mocshape in=gaia_dr3.fits icmd='select \"phot_g_mean_mag < 15\"' shape=point coords='array(ra, dec)' order=14 out=bright_gaia_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select phot_g_mean_mag < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC from points, but only for the northern hemisphere.",
        "response": "stilts mocshape in=all_sky.fits icmd='select \"DEC >= 0\"' shape=point coords='array(RA, DEC)' out=north_sky.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC from STC-S strings, but only for polygons with more than 4 vertices.",
        "response": "stilts mocshape in=obscore.vot shape=stc-s coords=s_region icmd='select \"size(parseDoubles(s_region)) > 8\"' out=many_vertex_polygons.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '8'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select size(parseDoubles(s_region)) > 8\n\nUsage: select <expr>\n    (Unused arguments: '>' '8'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC from all sources except those in the Small Magellanic Cloud.",
        "response": "stilts mocshape in=allsky.fits icmd='select \"skyDistanceDegrees(RA,DEC,13.18,-72.82) > 5\"' shape=point coords='array(RA,DEC)' out=no_smc.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,13.18,-72.82) > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I have a table of MOCs. I want to create a new column which is the sky fraction of each, and then make a combined MOC of only the large ones.",
        "response": "stilts tpipe in=mocs.fits cmd='addcol sky_frac \"mocSkyProportion($1)\"' cmd='select \"sky_frac > 0.01\"' | stilts mocshape in=- shape=moc-ascii coords='$1' out=large_mocs.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for all sources with a parallax greater than 100 mas.",
        "response": "stilts mocshape in=gaia.fits icmd='select \"PARALLAX > 100\"' shape=point coords='array(ra,dec)' out=nearby_stars.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PARALLAX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need the footprint for sources where the flux error is less than 5% of the flux.",
        "response": "stilts mocshape in=fluxes.fits icmd='select \"FLUX_ERR < (0.05 * FLUX)\"' shape=point coords='array(RA,DEC)' out=low_relative_error.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '(0.05' '*' 'FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX_ERR < (0.05 * FLUX)\n\nUsage: select <expr>\n    (Unused arguments: '<' '(0.05' '*' 'FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for all sources that are within 5 degrees of the galactic center.",
        "response": "stilts mocshape in=allsky.fits icmd='addskycoords \"icrs galactic RA DEC L B\"' icmd='select \"skyDistance(L,B,0,0) < 5\"' shape=point coords='array(RA,DEC)' out=galactic_center.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC L B\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I want the MOC for all sources in `my_data.fits` that are NOT near the Andromeda galaxy (within 1 degree).",
        "response": "stilts mocshape in=my_data.fits icmd='select \"skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1\"' shape=point coords='array(RA,DEC)' out=not_andromeda.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1\n\nUsage: select <expr>\n    (Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for all sources with `parallax_error < 0.1`.",
        "response": "stilts mocshape in=gaia.fits icmd='select \"parallax_error < 0.1\"' shape=point coords='array(ra,dec)' out=low_parallax_error.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select parallax_error < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC from all sources that have a valid proper motion measurement.",
        "response": "stilts mocshape in=pm.fits icmd='select \"!NULL_PMRA && !NULL_PMDEC\"' shape=point coords='array(RA,DEC)' out=pm_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_PMRA && !NULL_PMDEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a MOC for all sources in `mycat.fits` that are near (within 0.1 deg) the celestial equator.",
        "response": "stilts mocshape in=mycat.fits icmd='select \"abs(DEC) < 0.1\"' shape=point coords='array(RA,DEC)' out=equator_sources.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for sources with a measurement epoch after 2015.0.",
        "response": "stilts mocshape in=epochs.fits icmd='select \"EPOCH > 2015.0\"' shape=point coords='array(RA,DEC)' out=post_2015.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '2015.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select EPOCH > 2015.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '2015.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a MOC from all sources that have a non-zero `IS_VARIABLE` flag.",
        "response": "stilts mocshape in=variables.fits icmd='select \"IS_VARIABLE != 0\"' shape=point coords='array(RA,DEC)' out=variable_sources.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select IS_VARIABLE != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for sources with a given radius, but exclude sources near the galactic center.",
        "response": "stilts mocshape in=sources.fits icmd='addskycoords \"icrs galactic RA DEC L B\"' icmd='select \"skyDistance(L,B,0,0) > 10\"' shape=circle coords='array(RA,DEC,0.1)' out=no_gc_sources.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC L B\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a JSON MOC for the galactic plane (|b| < 5 degrees).",
        "response": "stilts mocshape in=:skysim:1e6 icmd='addskycoords \"icrs galactic ra dec l b\"' icmd='select \"abs(b) < 5\"' shape=point coords='array(ra, dec)' mocfmt=json out=galactic_plane.moc",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic ra dec l b\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for all sources where the error in position is below a certain threshold.",
        "response": "stilts mocshape in=errors.fits icmd='select \"hypot(RA_ERR,DEC_ERR) < 0.5\"' shape=point coords='array(RA,DEC)' out=low_total_err.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(RA_ERR,DEC_ERR) < 0.5\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC from a file `events.fits`, but only use rows with an even index number.",
        "response": "stilts mocshape in=events.fits icmd='select \"$0 % 2 == 0\"' shape=point coords='array(RA,DEC)' out=even_rows_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate the footprint for objects where the magnitude is between 15 and 16.",
        "response": "stilts mocshape in=magnitudes.fits icmd='select \"MAG > 15 && MAG < 16\"' shape=point coords='array(RA,DEC)' out=mag_slice_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '15' '&&' 'MAG' '<' '16'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 15 && MAG < 16\n\nUsage: select <expr>\n    (Unused arguments: '>' '15' '&&' 'MAG' '<' '16'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate the MOC of all sources in a given RA range, e.g., 200 < RA < 210.",
        "response": "stilts mocshape in=survey.fits icmd='select \"RA > 200 && RA < 210\"' shape=point coords='array(RA,DEC)' out=ra_slice.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '200' '&&' 'RA' '<' '210'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 200 && RA < 210\n\nUsage: select <expr>\n    (Unused arguments: '>' '200' '&&' 'RA' '<' '210'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need the footprint for sources with a color `g-r` less than 0.1.",
        "response": "stilts mocshape in=colors.fits icmd='select \"g-r < 0.1\"' shape=point coords='array(RA,DEC)' out=blue_sources_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select g-r < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a MOC from the positions in `my_data.fits`, but give me an error if any of the coordinates are null.",
        "response": "stilts mocshape in=my_data.fits icmd='assert \"!NULL_RA && !NULL_DEC\"' shape=point coords='array(RA,DEC)' out=asserted_coords.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert !NULL_RA && !NULL_DEC\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC at order 11 covering all sources that are more than 10 degrees from the North Ecliptic Pole.",
        "response": "stilts mocshape in=all_sky.fits icmd='addskycoords \"icrs ecliptic RA DEC ELON ELAT\"' icmd='select \"skyDistance(ELON,ELAT,270,90) > 10\"' shape=point coords='array(RA,DEC)' out=far_from_nep.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs ecliptic RA DEC ELON ELAT\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC at order 10 covering all sources that are more than 170 degrees away from the galactic center.",
        "response": "stilts mocshape in=all_sky.fits icmd='addskycoords \"icrs galactic RA DEC L B\"' icmd='select \"skyDistance(L,B,0,0) > 170\"' shape=point coords='array(RA,DEC)' out=far_field.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC L B\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a MOC from the rows where the `MAG_ERROR` is less than 0.05.",
        "response": "stilts mocshape in=photometry.fits icmd='select \"MAG_ERR < 0.05\"' shape=point coords='array(RA,DEC)' out=low_error_phot.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR < 0.05\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.05'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for sources with a `CONFIDENCE_LEVEL` of 95% or higher.",
        "response": "stilts mocshape in=confident_detections.fits icmd='select \"CONFIDENCE_LEVEL >= 0.95\"' shape=point coords='array(RA,DEC)' out=confident_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0.95'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select CONFIDENCE_LEVEL >= 0.95\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0.95'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for objects where `COLOR_INDEX` is between 0.5 and 1.0.",
        "response": "stilts mocshape in=colors.fits icmd='select \"COLOR_INDEX > 0.5 && COLOR_INDEX < 1.0\"' shape=point coords='array(RA,DEC)' out=color_selected.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5' '&&' 'COLOR_INDEX' '<' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select COLOR_INDEX > 0.5 && COLOR_INDEX < 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5' '&&' 'COLOR_INDEX' '<' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a MOC from the central 50% of the rows in my catalog.",
        "response": "stilts mocshape in=mycat.fits icmd='select \"$0 > ($nrow*0.25) && $0 < ($nrow*0.75)\"' shape=point coords='array(RA,DEC)' out=central_50pct.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '($nrow*0.25)' '&&' '$0' '<' '($nrow*0.75)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 > ($nrow*0.25) && $0 < ($nrow*0.75)\n\nUsage: select <expr>\n    (Unused arguments: '>' '($nrow*0.25)' '&&' '$0' '<' '($nrow*0.75)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an ASCII MOC for the southern galactic hemisphere from a simulation.",
        "response": "stilts mocshape in=:skysim:1e5 icmd='addskycoords \"icrs galactic ra dec l b\"' icmd='select \"b < 0\"' shape=point coords='array(ra,dec)' mocfmt=ascii out=south_galactic_sim.txt",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic ra dec l b\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a MOC of all sources within 10 degrees of the north celestial pole.",
        "response": "stilts mocshape in=allsky.fits icmd='select \"DEC > 80\"' shape=point coords='array(RA,DEC)' out=ncp_region.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '80'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 80\n\nUsage: select <expr>\n    (Unused arguments: '>' '80'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an ASCII MOC at order 10 from a random 1% of my catalog.",
        "response": "stilts mocshape in=mycat.fits icmd='random \"0.01\"' order=10 mocfmt=ascii shape=point coords='array(RA,DEC)' out=random_1pct.txt",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.01'\n\nCommand was: random \"0.01\"\n\nUsage: random\n    (Unused arguments: '0.01')\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for all sources except those in the Small Magellanic Cloud.",
        "response": "stilts mocshape in=allsky.fits icmd='select \"skyDistanceDegrees(RA,DEC,13.18,-72.82) > 5\"' shape=point coords='array(RA,DEC)' out=no_smc.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,13.18,-72.82) > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I have a table of MOCs. I want to create a new column which is the sky fraction of each, and then make a combined MOC of only the large ones.",
        "response": "stilts tpipe in=mocs.fits cmd='addcol sky_frac \"mocSkyProportion($1)\"' cmd='select \"sky_frac > 0.01\"' | stilts mocshape in=- shape=moc-ascii coords='$1' out=large_mocs.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for all sources with a parallax greater than 100 mas.",
        "response": "stilts mocshape in=gaia.fits icmd='select \"PARALLAX > 100\"' shape=point coords='array(ra,dec)' out=nearby_stars.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PARALLAX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I want the MOC for all sources in `my_data.fits` that are NOT near the Andromeda galaxy (within 1 degree).",
        "response": "stilts mocshape in=my_data.fits icmd='select \"skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1\"' shape=point coords='array(RA,DEC)' out=not_andromeda.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1\n\nUsage: select <expr>\n    (Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for all sources with `parallax_error < 0.1`.",
        "response": "stilts mocshape in=gaia.fits icmd='select \"parallax_error < 0.1\"' shape=point coords='array(ra,dec)' out=low_parallax_error.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select parallax_error < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC from all sources that have a valid proper motion measurement.",
        "response": "stilts mocshape in=pm.fits icmd='select \"!NULL_PMRA && !NULL_PMDEC\"' shape=point coords='array(RA,DEC)' out=pm_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_PMRA && !NULL_PMDEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need a high-resolution MOC (order 15) for all sources in deep_field.fits brighter than magnitude 20.",
        "response": "stilts mocshape in=deep_field.fits icmd='select \"MAG < 20\"' shape=point coords='array(RA, DEC)' order=15 out=bright_coverage_o15.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 20\n\nUsage: select <expr>\n    (Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter my catalog to keep only sources in the northern hemisphere (DEC > 0) and generate a MOC at order 10.",
        "response": "stilts mocshape in=full_sky.fits icmd='select \"DEC > 0\"' shape=point coords='array(RA, DEC)' order=10 out=north_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate an ASCII MOC (order 7) for sources in the Equatorial region (DEC between -10 and +10).",
        "response": "stilts mocshape in=sky_data.fits icmd='select \"DEC >= -10 && DEC <= 10\"' shape=point coords='array(RA, DEC)' order=7 mocfmt=ascii out=eq_belt_o7.txt",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '-10' '&&' 'DEC' '<=' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC >= -10 && DEC <= 10\n\nUsage: select <expr>\n    (Unused arguments: '>=' '-10' '&&' 'DEC' '<=' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a JSON MOC (order 11) for objects observed after MJD 56000.",
        "response": "stilts mocshape in=obs_log.fits icmd='select \"MJD > 56000\"' shape=point coords='array(RA, DEC)' order=11 mocfmt=json out=recent_obs_o11",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '56000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MJD > 56000\n\nUsage: select <expr>\n    (Unused arguments: '>' '56000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need a point MOC (order 18) for sources where the error in RA (PMRA_ERR) is less than 0.1 mas/yr.",
        "response": "stilts mocshape in=gaia_like.fits icmd='select \"PMRA_ERR < 0.1\"' shape=point coords='array(RA, DEC)' order=18 out=low_error_o18.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA_ERR < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need a summary report of coverage for all sources with velocity (Z) greater than 0.1, calculated at order 9.",
        "response": "stilts mocshape in=velocity.fits icmd='select \"Z > 0.1\"' shape=point coords='array(RA, DEC)' order=9 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 0.1\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC at order 3 for sources in the southern Galactic hemisphere (B < 0).",
        "response": "stilts mocshape in=survey.fits icmd='addskycoords \"icrs galactic RA DEC GLON GLAT\"; select \"GLAT < 0\"' shape=point coords='array(RA, DEC)' order=3 out=south_gal_o3.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC GLON GLAT\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate an order 14 JSON MOC for the top 5% of sources based on 'LUMINOSITY'.",
        "response": "stilts mocshape in=luminosity.fits icmd='random \"0.05\"' shape=point coords='array(RA, DEC)' order=14 mocfmt=json out=top_5_percent",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.05'\n\nCommand was: random \"0.05\"\n\nUsage: random\n    (Unused arguments: '0.05')\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a point MOC for targets within a narrow band of Declination (e.g., 0.1 degrees wide centered at DEC=30).",
        "response": "stilts mocshape in=narrow_band.fits icmd='select \"abs(DEC - 30.0) < 0.05\"' shape=point coords='array(RA, DEC)' out=narrow_band_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '30.0)' '<' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC - 30.0) < 0.05\n\nUsage: select <expr>\n    (Unused arguments: '-' '30.0)' '<' '0.05'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need a MOC at order 16 for objects where the identifier column 'OBJ_ID' is an even number.",
        "response": "stilts mocshape in=ids.fits icmd='select \"OBJ_ID % 2 == 0\"' shape=point coords='array(RA, DEC)' order=16 out=even_id_o16.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select OBJ_ID % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for all sources that have non-zero proper motion (PMRA != 0 || PMDEC != 0).",
        "response": "stilts mocshape in=pm_data.fits icmd='select \"PMRA != 0 || PMDEC != 0\"' shape=point coords='array(RA, DEC)' out=pm_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0' '||' 'PMDEC' '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA != 0 || PMDEC != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0' '||' 'PMDEC' '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter the input table to only process rows where magnitude is exactly 17.5 before generating a point MOC.",
        "response": "stilts mocshape in=mag_points.fits icmd='select \"MAG == 17.5\"' shape=point coords='array(RA, DEC)' out=exact_mag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '17.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG == 17.5\n\nUsage: select <expr>\n    (Unused arguments: '==' '17.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 11 MOC for all objects observed in 2020 (DATE_OBS between MJD 58849 and MJD 59214).",
        "response": "stilts mocshape in=obs_dates.fits icmd='select \"MJD >= 58849 && MJD <= 59214\"' shape=point coords='array(RA, DEC)' order=11 out=2020_obs_o11.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '58849' '&&' 'MJD' '<=' '59214'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MJD >= 58849 && MJD <= 59214\n\nUsage: select <expr>\n    (Unused arguments: '>=' '58849' '&&' 'MJD' '<=' '59214'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter the input catalog to include only rows with positive distance modulus, then generate a point MOC.",
        "response": "stilts mocshape in=dist_mod.fits icmd='select \"DM > 0\"' shape=point coords='array(RA, DEC)' out=positive_dm_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DM > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate an order 16 MOC for stars found within 0.0001 degrees of the North Galactic Pole (L=0, B=90).",
        "response": "stilts mocshape in=ngp_sources.fits icmd='addskycoords \"galactic icrs GLON GLAT RA_ICRS DEC_ICRS\"; select \"skyDistanceDegrees(RA_ICRS, DEC_ICRS, 192.859, 27.128) < 0.0001\"' shape=point coords='array(RA_ICRS, DEC_ICRS)' order=16 out=ngp_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"galactic icrs GLON GLAT RA_ICRS DEC_ICRS\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 13 MOC for sources with a magnitude difference (B-R) greater than 2.0.",
        "response": "stilts mocshape in=color_cat.fits icmd='select \"BMAG - RMAG > 2.0\"' shape=point coords='array(RA, DEC)' order=13 out=red_source_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'RMAG' '>' '2.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select BMAG - RMAG > 2.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'RMAG' '>' '2.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter the input table to select a random 10% sample before generating an order 12 MOC.",
        "response": "stilts mocshape in=full_cat.fits icmd='random \"0.1\"' shape=point coords='array(RA, DEC)' order=12 out=random_sample_o12.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1'\n\nCommand was: random \"0.1\"\n\nUsage: random\n    (Unused arguments: '0.1')\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter the input table to only include rows where the separation between two coordinate pairs is greater than 10 arcseconds, before generating a point MOC.",
        "response": "stilts mocshape in=pairs.fits icmd='select \"skyDistanceDegrees(RA1, DEC1, RA2, DEC2) * 3600.0 > 10.0\"' shape=point coords='array(RA1, DEC1)' out=distant_pairs_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC1,' 'RA2,' 'DEC2)' '*' '3600.0' '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA1, DEC1, RA2, DEC2) * 3600.0 > 10.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC1,' 'RA2,' 'DEC2)' '*' '3600.0' '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a JSON MOC for the footprint of all objects whose redshift (Z) is less than 0.01.",
        "response": "stilts mocshape in=z_data.fits icmd='select \"Z < 0.01\"' shape=point coords='array(RA, DEC)' order=10 mocfmt=json out=low_z_moc",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z < 0.01\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.01'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate an order 6 MOC for sources that fall within the Galactic Anti-Center region (L=180 +/- 10, B=0 +/- 5).",
        "response": "stilts mocshape in=survey.fits icmd='addskycoords \"icrs galactic RA DEC GLON GLAT\"; select \"GLON > 170 && GLON < 190 && GLAT > -5 && GLAT < 5\"' shape=point coords='array(RA, DEC)' order=6 out=gac_region_o6.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC GLON GLAT\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 14 MOC from polygons, applying a pre-filter to keep only polygons with an area greater than 1 square degree (assuming an 'AREA' column exists).",
        "response": "stilts mocshape in=areas.fits icmd='select \"AREA > 1.0\"' shape=polygon coords=VERTICES order=14 out=large_poly_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select AREA > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a raw binary MOC stream (order 9) from positions derived using astrometric propagation functions on epoch data.",
        "response": "stilts mocshape in=epoch_data.fits icmd='addcol RA_PROP \"epochProp(10.0, array(RA, DEC, PLX, PMRA, PMDEC, RV))\"' icmd='addcol DEC_PROP \"epochProp(10.0, array(RA, DEC, PLX, PMRA, PMDEC, RV))[1]\"' shape=point coords='array(RA_PROP, DEC_PROP)' order=9 mocfmt=raw out=propagated_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PLX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_PROP epochProp(10.0, array(RA, DEC, PLX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PLX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter the input to include only galaxies (TYPE=0), and create an order 12 MOC for 0.01 degree circles around them.",
        "response": "stilts mocshape in=types.fits icmd='select \"TYPE == 0\"' shape=circle coords='array(RA, DEC, 0.01)' order=12 out=galaxy_circles_o12.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TYPE == 0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a JSON MOC for objects where the error ellipse semi-major axis (A_WORLD) is greater than 10 arcseconds.",
        "response": "stilts mocshape in=ellipses.fits icmd='select \"A_WORLD > 10.0\"' shape=point coords='array(RA, DEC)' out=large_ellipse_moc",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select A_WORLD > 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 21 MOC for targets that are within 5 mas/yr in proper motion space (requires filtering prior to positional generation).",
        "response": "stilts mocshape in=pm.fits icmd='select \"hypot(PMRA, PMDEC) < 5.0\"' shape=point coords='array(RA, DEC)' order=21 out=pm_filtered_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '<' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) < 5.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '<' '5.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 8 MOC for sources where the magnitude 'R' is within the range 14 to 16.",
        "response": "stilts mocshape in=mag_range.fits icmd='select \"R_MAG >= 14.0 && R_MAG <= 16.0\"' shape=point coords='array(RA, DEC)' order=8 out=mag_filtered_o8.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '14.0' '&&' 'R_MAG' '<=' '16.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select R_MAG >= 14.0 && R_MAG <= 16.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '14.0' '&&' 'R_MAG' '<=' '16.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter a catalog by proper motion (PM > 10 mas/yr) and generate a raw binary MOC stream (order 18).",
        "response": "stilts mocshape in=pm.fits icmd='select \"hypot(PMRA, PMDEC) > 10.0\"' shape=point coords='array(RA, DEC)' order=18 mocfmt=raw out=high_pm_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 10.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 13 MOC for targets that are within $1$ arcsecond of Ecliptic coordinates Lon=0, Lat=0.",
        "response": "stilts mocshape in=ecl_targets.fits icmd='addskycoords \"ecliptic icrs ELON ELAT RA_ICRS DEC_ICRS\"; select \"skyDistanceDegrees(RA_ICRS, DEC_ICRS, 266.0, -11.0) * 3600.0 < 1.0\"' shape=point coords='array(RA_ICRS, DEC_ICRS)' order=13 out=ecl_origin_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"ecliptic icrs ELON ELAT RA_ICRS DEC_ICRS\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter a table to exclude rows where the flux is negative before creating an order 10 MOC.",
        "response": "stilts mocshape in=flux_data.fits icmd='select \"FLUX > 0\"' shape=point coords='array(RA, DEC)' order=10 out=positive_flux_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Map polygon coverage defined by the S_REGION column, retaining only regions larger than 0.1 square degrees, at order 12.",
        "response": "stilts mocshape in=obs_footprints.fits icmd='select \"mocSkyProportion(S_REGION) * 41252.96 > 0.1\"' shape=stc-s coords=S_REGION order=12 out=large_regions_o12.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '41252.96' '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select mocSkyProportion(S_REGION) * 41252.96 > 0.1\n\nUsage: select <expr>\n    (Unused arguments: '*' '41252.96' '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create a raw binary MOC stream (order 15) for sources that have a measured proper motion (PMRA) greater than 10 mas/year.",
        "response": "stilts mocshape in=pm_cat.fits icmd='select \"PMRA > 10.0 / 3600000.0 * 3600.0\"' shape=point coords='array(RA, DEC)' order=15 mocfmt=raw out=high_pm_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 10.0 / 3600000.0 * 3600.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter a catalog to select objects observed after 2018.0 (MJD 58119), convert RA/Dec from radians, and generate an order 11 MOC.",
        "response": "stilts mocshape in=rad_obs.fits icmd='select \"mjdToDecYear(MJD) > 2018.0\"' shape=point coords='array(radiansToDegrees(RA_RAD), radiansToDegrees(DEC_RAD))' order=11 out=recent_obs_o11.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '2018.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select mjdToDecYear(MJD) > 2018.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '2018.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial separation between (RA, DEC) and (REF_RA, REF_DEC) is less than 0.001 degrees, then create a point MOC.",
        "response": "stilts mocshape in=pairs.fits icmd='select \"skyDistanceDegrees(RA, DEC, REF_RA, REF_DEC) < 0.001\"' shape=point coords='array(RA, DEC)' out=close_pairs_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'REF_RA,' 'REF_DEC)' '<' '0.001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, REF_RA, REF_DEC) < 0.001\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' 'REF_RA,' 'REF_DEC)' '<' '0.001'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for positions projected forward 5 years based on proper motion, assuming data is from J2000 epoch.",
        "response": "stilts mocshape in=astrometry.fits icmd='replacecol RA \"epochProp(5.0, array(RA, DEC, 1000/PLX, PMRA, PMDEC, RV))\"; replacecol DEC \"epochProp(5.0, array(RA, DEC, 1000/PLX, PMRA, PMDEC, RV))[1]\"' shape=point coords='array(RA, DEC)' out=prop_5yr.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' '1000/PLX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA epochProp(5.0, array(RA, DEC, 1000/PLX, PMRA, PMDEC, RV))\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' '1000/PLX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 25 MOC for extremely deep coverage around M42, using a simulated point scheme input.",
        "response": "stilts mocshape in=:skysim:100000 shape=point coords='array(ra, dec)' icmd='select \"skyDistanceDegrees(ra, dec, 83.82, -5.39) < 0.1\"' order=25 out=deep_m42_o25.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'dec,' '83.82,' '-5.39)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(ra, dec, 83.82, -5.39) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: 'dec,' '83.82,' '-5.39)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter rows to keep only sources with positive magnitudes before generating a circle MOC (radius 0.01 deg) and writing in CDS ASCII format.",
        "response": "stilts mocshape in=faint_cat.fits icmd='select \"MAG > 0\"' shape=circle coords='array(RA, DEC, 0.01)' mocfmt=cds_ascii out=filtered_cds.txt",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 10 MOC for objects whose proper motion vector length (hypot(PMRA, PMDEC)) exceeds 50 mas/year.",
        "response": "stilts mocshape in=pm_cat.fits icmd='select \"hypot(PMRA, PMDEC) > 50.0 / 3600000.0 * 3600.0\"' shape=point coords='array(RA, DEC)' order=10 out=high_pm_o10.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '50.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 50.0 / 3600000.0 * 3600.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '50.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a point MOC for data where the magnitude error (MAG_ERR) is less than 0.05, and output in ECSV format.",
        "response": "stilts mocshape in=high_quality.fits icmd='select \"MAG_ERR < 0.05\"' shape=point coords='array(RA, DEC)' ofmt=ecsv out=hq_moc.ecsv",
        "chat.jar": "failed",
        "error": "Error: ofmt=ecsv: out and ofmt parameters can only be used when omode=out\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Create an order 14 MOC, filtering on a calculated color (B-V > 1.0), and output in CDS FITS format.",
        "response": "stilts mocshape in=color_cat.fits icmd='select \"B_MAG - V_MAG > 1.0\"' shape=point coords='array(RA, DEC)' order=14 mocfmt=cds_fits out=red_sources_cds.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'V_MAG' '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select B_MAG - V_MAG > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'V_MAG' '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter input data to only keep rows where declination is positive, and generate a MOC at order 9, writing to standard output in ASCII.",
        "response": "stilts mocshape in=sky_cat.fits icmd='select \"DEC > 0\"' shape=point coords='array(RA, DEC)' order=9 mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for positions derived from Ecliptic Lon/Lat and project them to the North Ecliptic Pole (NEP) region.",
        "response": "stilts mocshape in=ecl_pole.fits icmd='addskycoords \"ecliptic icrs ELON ELAT RA_ICRS DEC_ICRS\"; select \"skyDistanceDegrees(RA_ICRS, DEC_ICRS, 270.0, 66.56) < 1.0\"' shape=point coords='array(RA_ICRS, DEC_ICRS)' out=nep_region_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"ecliptic icrs ELON ELAT RA_ICRS DEC_ICRS\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter catalog to only include rows where magnitude (G_MAG) is within 15 to 18, then generate a point MOC.",
        "response": "stilts mocshape in=mag_range_cat.fits icmd='select \"G_MAG >= 15.0 && G_MAG <= 18.0\"' shape=point coords='array(RA, DEC)' out=mag_filtered_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '15.0' '&&' 'G_MAG' '<=' '18.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G_MAG >= 15.0 && G_MAG <= 18.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '15.0' '&&' 'G_MAG' '<=' '18.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need a point MOC for objects with proper motion greater than 100 mas/yr, converting mas/yr velocity to angle/year distance at 1 kpc (parsec).",
        "response": "stilts mocshape in=high_vel.fits icmd='select \"hypot(PMRA, PMDEC) > 100.0 / 3600000.0 * 3600.0\"' shape=circle coords='array(RA, DEC, hypot(PMRA, PMDEC) / 3600000.0 * 1000.0 / 206265.0)' out=high_vel_angle.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '100.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 100.0 / 3600000.0 * 3600.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '100.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for positions converted from J2000 to Galactic coordinates, then mask the input to exclude the Galactic plane (|B| < 5 deg).",
        "response": "stilts mocshape in=survey.fits icmd='addskycoords \"icrs galactic RA DEC GLON GLAT\"; select \"abs(GLAT) > 5\"' shape=point coords='array(RA, DEC)' out=off_plane_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC GLON GLAT\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter an input table to select a random 1% of the data rows before generating a point MOC.",
        "response": "stilts mocshape in=large_file.fits icmd='random \"0.01\"' shape=point coords='array(RA, DEC)' out=one_percent_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.01'\n\nCommand was: random \"0.01\"\n\nUsage: random\n    (Unused arguments: '0.01')\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter input data to only include objects where the redshift (Z) is less than 0.5, and generate an order 11 point MOC.",
        "response": "stilts mocshape in=redshifts.fits icmd='select \"Z < 0.5\"' shape=point coords='array(RA, DEC)' order=11 out=low_z_moc_o11.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z < 0.5\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC for positions converted from J2000 to Galactic coordinates, then mask the input to exclude the Galactic plane (|B| < 5 deg).",
        "response": "stilts mocshape in=survey.fits icmd='addskycoords \"icrs galactic RA DEC GLON GLAT\"; select \"abs(GLAT) > 5\"' shape=point coords='array(RA, DEC)' out=off_plane_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC GLON GLAT\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I need a summary of coverage for points where the magnitude is brighter than 12, calculated at order 15.",
        "response": "stilts mocshape in=bright_stars.fits icmd='select \"MAG < 12.0\"' shape=point coords='array(RA, DEC)' order=15 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '12.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 12.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '12.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "I have coordinates in hours and minutes only (RA_H, RA_M, DEC_D, DEC_M). Convert them to degrees for a point MOC.",
        "response": "stilts mocshape in=partial_sex.fits icmd='addcol RA_DEG \"hmsToDegrees(RA_H, RA_M, 0)\"; addcol DEC_DEG \"dmsToDegrees(DEC_D, DEC_M, 0)\"' shape=point coords='array(RA_DEG, DEC_DEG)' out=partial_sex_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA_M,' '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DEG hmsToDegrees(RA_H, RA_M, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA_M,' '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter the input to only retain objects where magnitude is exactly 19.5, then generate an order 10 point MOC.",
        "response": "stilts mocshape in=mag_data.fits icmd='select \"MAG == 19.5\"' shape=point coords='array(RA, DEC)' order=10 out=exact_mag_o10.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '19.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG == 19.5\n\nUsage: select <expr>\n    (Unused arguments: '==' '19.5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Filter the input to only keep rows with velocity (V) greater than 100 km/s, then generate an order 9 point MOC.",
        "response": "stilts mocshape in=velocity_data.fits icmd='select \"V > 100.0\"' shape=point coords='array(RA, DEC)' order=9 out=high_velocity_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select V > 100.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "mocshape"
    },
    {
        "prompt": "Generate a MOC from my `bright_stars.vot` table, but only for stars with a V magnitude brighter than 10.",
        "response": "stilts pixfoot in=bright_stars.vot icmd='select \"VMAG < 10\"' out=vmag_lt_10.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select VMAG < 10\n\nUsage: select <expr>\n    (Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a very high-resolution MOC (order 16) for a small patch of sky defined by `RA > 180 AND RA < 181 AND DEC > 20 AND DEC < 21`.",
        "response": "stilts pixfoot in=all_sky.fits icmd='select \"RA > 180 && RA < 181 && DEC > 20 && DEC < 21\"' order=16 out=small_patch_hires.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '180' '&&' 'RA' '<' '181' '&&' 'DEC' '>' '20' '&&' 'DEC' '<' '21'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 180 && RA < 181 && DEC > 20 && DEC < 21\n\nUsage: select <expr>\n    (Unused arguments: '>' '180' '&&' 'RA' '<' '181' '&&' 'DEC' '>' '20' '&&' 'DEC' '<' '21'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a FITS MOC for objects with `REDSHIFT > 2` from my quasar catalog.",
        "response": "stilts pixfoot in=quasar_catalog.fits icmd='select \"REDSHIFT > 2\"' out=high_z_qso.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select REDSHIFT > 2\n\nUsage: select <expr>\n    (Unused arguments: '>' '2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need the footprint for every source that is NOT flagged as an artifact (`ARTIFACT_FLAG == 0`).",
        "response": "stilts pixfoot in=sources.fits icmd='select \"ARTIFACT_FLAG == 0\"' out=clean_sources.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ARTIFACT_FLAG == 0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC for sources with a signal-to-noise ratio > 10.",
        "response": "stilts pixfoot in=detections.fits icmd='select \"SNR > 10\"' out=high_snr_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select SNR > 10\n\nUsage: select <expr>\n    (Unused arguments: '>' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC for all entries in a catalog except those at the celestial poles (`abs(DEC) > 89`).",
        "response": "stilts pixfoot in=allsky.fits icmd='select \"abs(DEC) <= 89\"' out=no_poles_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '89'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC) <= 89\n\nUsage: select <expr>\n    (Unused arguments: '<=' '89'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Take a random sample of 5000 objects from `big_survey.fits` and generate a MOC from them.",
        "response": "stilts pixfoot in=big_survey.fits icmd='random \"5000\"' out=big_survey_sample.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '5000'\n\nCommand was: random \"5000\"\n\nUsage: random\n    (Unused arguments: '5000')\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a footprint for all objects that have a proper motion greater than 1000 mas/yr.",
        "response": "stilts pixfoot in=proper_motions.fits icmd='select \"hypot(PMRA,PMDEC) > 1000\"' out=high_pm_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA,PMDEC) > 1000\n\nUsage: select <expr>\n    (Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC from the first half of my catalog.",
        "response": "stilts pixfoot in=full_cat.fits icmd='select \"$0 <= ($nrow/2)\"' out=first_half.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '($nrow/2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 <= ($nrow/2)\n\nUsage: select <expr>\n    (Unused arguments: '<=' '($nrow/2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "How do I make a MOC from the tail end (last 10%) of my catalog?",
        "response": "stilts pixfoot in=long_catalog.fits icmd='select \"$0 > ($nrow * 0.9)\"' out=tail_end_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '($nrow' '*' '0.9)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 > ($nrow * 0.9)\n\nUsage: select <expr>\n    (Unused arguments: '>' '($nrow' '*' '0.9)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate the MOC of all objects between declination -10 and +10.",
        "response": "stilts pixfoot in=all_sky.fits icmd='select \"DEC > -10 && DEC < 10\"' out=equatorial_strip.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '-10' '&&' 'DEC' '<' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > -10 && DEC < 10\n\nUsage: select <expr>\n    (Unused arguments: '>' '-10' '&&' 'DEC' '<' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a JSON MOC for the footprint of objects in `object_cat.fits` that have a non-zero parallax.",
        "response": "stilts pixfoot in=object_cat.fits icmd='select \"PARALLAX != 0\"' mocfmt=json out=parallax_objects.moc",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PARALLAX != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a JSON MOC for objects where `PROBABILITY > 0.99`.",
        "response": "stilts pixfoot in=candidates.fits icmd='select \"PROBABILITY > 0.99\"' mocfmt=json out=high_prob_candidates.moc",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.99'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PROBABILITY > 0.99\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.99'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC for sources within the galactic plane (abs(b) < 2 degrees).",
        "response": "stilts pixfoot in=all_sky.fits icmd='addskycoords \"icrs galactic RA DEC L B\"' icmd='select \"abs(B) < 2\"' out=galactic_plane.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC L B\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC for objects with non-negative flux values.",
        "response": "stilts pixfoot in=fluxes.fits icmd='select \"FLUX >= 0\"' out=non_neg_flux.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a JSON MOC for the southern galactic hemisphere.",
        "response": "stilts pixfoot in=:skysim:1e6 icmd='addskycoords \"icrs galactic ra dec l b\"' icmd='select \"b < 0\"' ra=ra dec=dec mocfmt=json out=south_galactic_hemi.moc",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic ra dec l b\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need the footprint for all sources in `my_data.fits` that are NOT near the Andromeda galaxy (within 1 degree).",
        "response": "stilts pixfoot in=my_data.fits icmd='select \"skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1\"' out=not_andromeda.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1\n\nUsage: select <expr>\n    (Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate an ASCII MOC for objects where the `OBS_DATE` is after 2020.",
        "response": "stilts pixfoot in=obs_log.fits icmd='select \"OBS_DATE > 2020\"' mocfmt=ascii out=post_2020_obs.moc.txt",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '2020'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select OBS_DATE > 2020\n\nUsage: select <expr>\n    (Unused arguments: '>' '2020'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC for the positions in `my_data.fits` but exclude any rows that have null RA or Dec values.",
        "response": "stilts pixfoot in=my_data.fits icmd='select \"!NULL_RA && !NULL_DEC\"' out=valid_coords.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_RA && !NULL_DEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC at order 10 covering all sources that are within 5 degrees of the ecliptic plane.",
        "response": "stilts pixfoot in=all_sky_data.fits icmd='addskycoords \"icrs ecliptic RA DEC ELON ELAT\"' icmd='select \"abs(ELAT) < 5\"' out=ecliptic_plane_sources.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs ecliptic RA DEC ELON ELAT\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC from the rows where the error in magnitude is less than 0.05.",
        "response": "stilts pixfoot in=photometry.fits icmd='select \"MAG_ERR < 0.05\"' out=low_error_phot.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR < 0.05\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.05'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC from a random sample of 1% of the rows in `huge_catalog.fits`.",
        "response": "stilts pixfoot in=huge_catalog.fits icmd='random \"0.01\"' out=huge_cat_1percent.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.01'\n\nCommand was: random \"0.01\"\n\nUsage: random\n    (Unused arguments: '0.01')\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate the footprint of objects where `FLAG_A` AND `FLAG_B` are both true.",
        "response": "stilts pixfoot in=flagged_data.fits icmd='select \"FLAG_A && FLAG_B\"' out=both_flags_set.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'FLAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG_A && FLAG_B\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'FLAG_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC for sources with a `CONFIDENCE_LEVEL` of 95% or higher.",
        "response": "stilts pixfoot in=confident_detections.fits icmd='select \"CONFIDENCE_LEVEL >= 0.95\"' out=confident_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0.95'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select CONFIDENCE_LEVEL >= 0.95\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0.95'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC for objects where `COLOR_INDEX` is between 0.5 and 1.0.",
        "response": "stilts pixfoot in=colors.fits icmd='select \"COLOR_INDEX > 0.5 && COLOR_INDEX < 1.0\"' out=color_selected.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.5' '&&' 'COLOR_INDEX' '<' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select COLOR_INDEX > 0.5 && COLOR_INDEX < 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5' '&&' 'COLOR_INDEX' '<' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a footprint for all objects in `survey.fits` that are near the Andromeda galaxy (within 1 degree).",
        "response": "stilts pixfoot in=survey.fits icmd='select \"skyDistanceDegrees(RA,DEC,10.6847,41.2690) < 1\"' out=andromeda_region.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,10.6847,41.2690) < 1\n\nUsage: select <expr>\n    (Unused arguments: '<' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC for sources with a luminosity greater than 1e30.",
        "response": "stilts pixfoot in=luminosities.fits icmd='select \"LUMINOSITY > 1e30\"' out=bright_sources.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1e30'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select LUMINOSITY > 1e30\n\nUsage: select <expr>\n    (Unused arguments: '>' '1e30'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC for the region covered by a 5 degree radius around the North Galactic Pole.",
        "response": "stilts pixfoot in=:skysim:100000 icmd='addskycoords \"icrs galactic ra dec l b\"' icmd='select \"skyDistance(l,b,0,90) < 5\"' ra=ra dec=dec out=ngp_region.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic ra dec l b\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC for all sources in `mycat.fits` that are NOT within 2 degrees of the galactic center.",
        "response": "stilts pixfoot in=mycat.fits icmd='addskycoords \"icrs galactic RA DEC L B\"' icmd='select \"skyDistance(L,B,0,0) > 2\"' out=not_gc.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC L B\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate the footprint of objects where `FLAG_A` OR `FLAG_B` is false.",
        "response": "stilts pixfoot in=flagged_data.fits icmd='select \"!(FLAG_A || FLAG_B)\"' out=no_flags_set.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '||' 'FLAG_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !(FLAG_A || FLAG_B)\n\nUsage: select <expr>\n    (Unused arguments: '||' 'FLAG_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC at order 10 covering all sources that are more than 170 degrees away from the galactic center.",
        "response": "stilts pixfoot in=all_sky.fits icmd='addskycoords \"icrs galactic RA DEC L B\"' icmd='select \"skyDistance(L,B,0,0) > 170\"' out=far_field.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC L B\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC from the rows where the error in position (`POS_ERR_DEG`) is less than 0.01 degrees.",
        "response": "stilts pixfoot in=positions.fits icmd='select \"POS_ERR_DEG < 0.01\"' out=high_precision_positions.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select POS_ERR_DEG < 0.01\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.01'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC for all sources in `mycat.fits` that are near (within 0.1 deg) the celestial equator.",
        "response": "stilts pixfoot in=mycat.fits icmd='select \"abs(DEC) < 0.1\"' out=equator_sources.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC from `data.fits`, but only use rows with an even row index.",
        "response": "stilts pixfoot in=data.fits icmd='select \"$0 % 2 == 0\"' out=even_rows.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC from the positions in `my_data.fits`, but give me an error if any of the coordinates are null.",
        "response": "stilts pixfoot in=my_data.fits icmd='assert \"!NULL_RA && !NULL_DEC\"' out=asserted_coords.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert !NULL_RA && !NULL_DEC\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC at order 11 covering all sources that are more than 10 degrees from the North Ecliptic Pole.",
        "response": "stilts pixfoot in=all_sky.fits icmd='addskycoords \"icrs ecliptic RA DEC ELON ELAT\"' icmd='select \"skyDistance(ELON,ELAT,270,90) > 10\"' out=far_from_nep.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs ecliptic RA DEC ELON ELAT\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC from a random sample of 250 rows from `large_catalog.fits`.",
        "response": "stilts pixfoot in=large_catalog.fits icmd='random \"250\"' out=large_cat_sample_250.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '250'\n\nCommand was: random \"250\"\n\nUsage: random\n    (Unused arguments: '250')\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input catalog to keep only rows where magnitude G_MAG is brighter than 18, then generate the point MOC.",
        "response": "stilts pixfoot in=gaia.fits icmd='select \"G_MAG < 18\"' ra=RA dec=DEC out=bright_gaia.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G_MAG < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a coverage map for objects only in the northern hemisphere (DEC > 0).",
        "response": "stilts pixfoot in=all_sky.fits icmd='select \"DEC > 0\"' ra=RA dec=DEC out=northern_hemisphere.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a point MOC after converting input RA/DEC, which are in hours/degrees, to degrees.",
        "response": "stilts pixfoot in=hms_data.fits icmd='addcol RA_DEG \"hmsToDegrees(RA_H, RA_M, RA_S)\"' ra=RA_DEG dec=DEC out=hms_conversion_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'RA_M,' 'RA_S)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DEG hmsToDegrees(RA_H, RA_M, RA_S)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA_M,' 'RA_S)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need the MOC for targets around Galactic coordinates L=50, B=0, but the input table coordinates are RA/DEC. Convert the input table positions to Galactic coordinates first.",
        "response": "stilts pixfoot in=galactic_targets.fits icmd='addskycoords \"icrs galactic RA DEC GLON GLAT\"' icmd='select \"abs(GLON-50.0) < 1.0 && abs(GLAT) < 1.0\"' ra=RA dec=DEC out=galactic_region.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC GLON GLAT\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC (order 7) for all sources, but use only the RA and DEC columns, discarding all others in an internal processing step.",
        "response": "stilts pixfoot in=full_table.fits icmd='keepcols \"RA DEC\"' ra=RA dec=DEC order=7 out=minimal_columns.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols RA DEC\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need a MOC for sources found in a FITS table, converting RA to degrees if it was in hours (RA_H).",
        "response": "stilts pixfoot in=hours.fits icmd='replacecol RA \"degreesToRadians(RA_H / 24.0 * 360.0)\"' ra=RA dec=DEC out=hours_to_deg.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '24.0' '*' '360.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA degreesToRadians(RA_H / 24.0 * 360.0)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '24.0' '*' '360.0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input table to only include rows where the position angle (PA) is greater than 90 degrees, then generate the MOC.",
        "response": "stilts pixfoot in=rotational.fits icmd='select \"PA > 90.0\"' ra=RA dec=DEC out=pa_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '90.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PA > 90.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '90.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need to generate a coverage map only for objects observed in 2020 (MJD between 58849 and 59214).",
        "response": "stilts pixfoot in=obs_log.fits icmd='select \"MJD >= 58849 && MJD <= 59214\"' ra=RA dec=DEC out=2020_coverage.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '58849' '&&' 'MJD' '<=' '59214'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MJD >= 58849 && MJD <= 59214\n\nUsage: select <expr>\n    (Unused arguments: '>=' '58849' '&&' 'MJD' '<=' '59214'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need the MOC for sources with a magnitude of exactly 17.0.",
        "response": "stilts pixfoot in=catalog.fits icmd='select \"MAGNITUDE == 17.0\"' ra=RA dec=DEC out=mag17_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '17.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAGNITUDE == 17.0\n\nUsage: select <expr>\n    (Unused arguments: '==' '17.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a coverage map for objects that have non-zero proper motion in RA (PMRA).",
        "response": "stilts pixfoot in=pm_cat.fits icmd='select \"PMRA != 0.0\"' ra=RA dec=DEC out=pm_detected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA != 0.0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC for positions where parallax is greater than 10 mas.",
        "response": "stilts pixfoot in=plx_cat.fits icmd='select \"PLX > 10.0 / 1000.0\"' ra=RA dec=DEC out=high_parallax.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PLX > 10.0 / 1000.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a coverage map only for sources with positive flux.",
        "response": "stilts pixfoot in=flux_cat.fits icmd='select \"FLUX > 0\"' ra=RA dec=DEC out=positive_flux_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need the MOC for sources where the redshift (Z) is less than 0.1.",
        "response": "stilts pixfoot in=redshift.fits icmd='select \"Z < 0.1\"' ra=RA dec=DEC out=low_redshift_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I want a MOC for sources where the distance modulus (DM) is less than 15.",
        "response": "stilts pixfoot in=dm_cat.fits icmd='select \"DM < 15.0\"' ra=RA dec=DEC out=low_dm_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DM < 15.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '15.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a coverage map for objects where the error column (ERR_DEG) is greater than $0.001$ degrees.",
        "response": "stilts pixfoot in=errors.fits icmd='select \"ERR_DEG > 0.001\"' ra=RA dec=DEC radius=ERR_DEG out=large_error_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ERR_DEG > 0.001\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.001'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter input data to remove rows outside the magnitude range 10 < G_MAG < 20 before MOC creation.",
        "response": "stilts pixfoot in=mag_range.fits icmd='select \"G_MAG > 10.0 && G_MAG < 20.0\"' ra=RA dec=DEC out=filtered_mag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0' '&&' 'G_MAG' '<' '20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G_MAG > 10.0 && G_MAG < 20.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0' '&&' 'G_MAG' '<' '20.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input table to select a random 10% sample before generating an order 12 MOC.",
        "response": "stilts pixfoot in=big_table.fits icmd='random \"0.1\"' ra=RA dec=DEC order=12 out=random_sample_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1'\n\nCommand was: random \"0.1\"\n\nUsage: random\n    (Unused arguments: '0.1')\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC for sources where the proper motion in RA (PMRA) is less than 5 mas/yr.",
        "response": "stilts pixfoot in=pm_cat.fits icmd='select \"PMRA < 5.0\"' ra=RA dec=DEC out=low_pmra_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA < 5.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '5.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need the coverage map for all objects where the color (MAG_B - MAG_R) is greater than 1.0.",
        "response": "stilts pixfoot in=colors.fits icmd='select \"MAG_B - MAG_R > 1.0\"' ra=RA dec=DEC out=red_objects_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_R' '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_B - MAG_R > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG_R' '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input table to only retain objects with positive Declination and zero Right Ascension.",
        "response": "stilts pixfoot in=quadrant.fits icmd='select \"DEC > 0.0 && RA == 0.0\"' ra=RA dec=DEC out=zero_ra_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0.0' '&&' 'RA' '==' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 0.0 && RA == 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0' '&&' 'RA' '==' '0.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC (order 16) for objects whose proper motion vector length is greater than $100$ mas/yr.",
        "response": "stilts pixfoot in=pm_vectors.fits icmd='select \"hypot(PMRA, PMDEC) > 100.0\"' ra=RA dec=DEC order=16 out=high_pm_moc_o16.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 100.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC at order 18, ensuring only rows where 'SNR' is greater than 10 are used.",
        "response": "stilts pixfoot in=snr_cat.fits icmd='select \"SNR > 10.0\"' ra=RA dec=DEC order=18 out=high_snr_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select SNR > 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input table to only retain rows where the integer column 'FLAG' is an odd number.",
        "response": "stilts pixfoot in=flags.fits icmd='select \"FLAG % 2 == 1\"' ra=RA dec=DEC out=odd_flag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG % 2 == 1\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC for sources where the magnitude (G_MAG) is within 0.1 of magnitude 19.5.",
        "response": "stilts pixfoot in=catalog.fits icmd='select \"abs(G_MAG - 19.5) < 0.1\"' ra=RA dec=DEC out=narrow_mag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '19.5)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(G_MAG - 19.5) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '-' '19.5)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need the coverage map for all objects with non-null Proper Motion in both RA and DEC.",
        "response": "stilts pixfoot in=pm_cat.fits icmd='select \"!NULL_PMRA && !NULL_PMDEC\"' ra=RA dec=DEC out=pm_non_null.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_PMRA && !NULL_PMDEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create an order 11 MOC for targets that are within 5 arcminutes of the North Pole (DEC=90).",
        "response": "stilts pixfoot in=polar_targets.fits icmd='select \"abs(DEC - 90.0) < 5.0 / 60.0\"' ra=RA dec=DEC radius='5.0 / 60.0' order=11 out=north_pole_5am.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '90.0)' '<' '5.0' '/' '60.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC - 90.0) < 5.0 / 60.0\n\nUsage: select <expr>\n    (Unused arguments: '-' '90.0)' '<' '5.0' '/' '60.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input to only retain objects with a numerical ID greater than 100000, then generate the MOC.",
        "response": "stilts pixfoot in=id_cat.fits icmd='select \"ID > 100000\"' ra=RA dec=DEC out=high_id_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID > 100000\n\nUsage: select <expr>\n    (Unused arguments: '>' '100000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input table to select only rows where magnitude is brighter than 16, and create an order 14 MOC with a 0.05 degree radius.",
        "response": "stilts pixfoot in=bright.fits icmd='select \"MAG < 16\"' ra=RA dec=DEC radius=0.05 order=14 out=bright_filtered_o14.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '16'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 16\n\nUsage: select <expr>\n    (Unused arguments: '<' '16'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate an MOC for only the points with a Declination greater than 80 degrees, using a 1 degree radius.",
        "response": "stilts pixfoot in=polar_data.fits icmd='select \"DEC > 80.0\"' ra=RA dec=DEC radius=1.0 out=polar_cap_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '80.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 80.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '80.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input table to only keep rows where the proper motion (PM) is non-zero, then generate a MOC for 1 arcsecond circles.",
        "response": "stilts pixfoot in=pm_data.fits icmd='select \"PMRA != 0 || PMDEC != 0\"' ra=RA dec=DEC radius='1.0 / 3600.0' out=pm_filtered_1as.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' '0' '||' 'PMDEC' '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA != 0 || PMDEC != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0' '||' 'PMDEC' '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create an MOC (order 6) and filter the input to only include rows with positive magnitude (MAG).",
        "response": "stilts pixfoot in=positive_mag.fits icmd='select \"MAG > 0\"' ra=RA dec=DEC order=6 out=pos_mag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "I need the MOC for sources where the radius is $\text{log}_{10}(\text{FLUX})$ degrees, constrained by minimum flux of 10.",
        "response": "stilts pixfoot in=log_flux.fits icmd='select \"FLUX >= 10.0\"' ra=RA dec=DEC radius='log10(FLUX)' out=log_flux_radius.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX >= 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC (order 12) for points where the error in RA (RA_ERR) is positive, using RA_ERR as the radius.",
        "response": "stilts pixfoot in=err_cat.fits icmd='select \"RA_ERR > 0\"' ra=RA dec=DEC radius=RA_ERR out=ra_err_radius.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA_ERR > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input table to select a random 5% sample before generating an order 9 MOC (radius 0.02 deg).",
        "response": "stilts pixfoot in=random_sample.fits icmd='random \"0.05\"' ra=RA dec=DEC radius=0.02 order=9 out=random_0p05.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.05'\n\nCommand was: random \"0.05\"\n\nUsage: random\n    (Unused arguments: '0.05')\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC (order 16) for sources with a magnitude G_MAG greater than 20, using a 3 arcsecond radius.",
        "response": "stilts pixfoot in=faint_cat.fits icmd='select \"G_MAG > 20\"' ra=RA dec=DEC radius='3.0 / 3600.0' order=16 out=faint_3as.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G_MAG > 20\n\nUsage: select <expr>\n    (Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input table to only keep rows where 'EXPTIME' > 1000 seconds, and use a 10 arcsecond radius.",
        "response": "stilts pixfoot in=long_exp.fits icmd='select \"EXPTIME > 1000\"' ra=RA dec=DEC radius='10.0 / 3600.0' out=long_exp_10as.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select EXPTIME > 1000\n\nUsage: select <expr>\n    (Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input table to only retain rows where the RA coordinate is between 0 and 10 degrees, and use a 3 arcminute radius.",
        "response": "stilts pixfoot in=narrow_ra.fits icmd='select \"RA >= 0 && RA <= 10.0\"' ra=RA dec=DEC radius='3.0 / 60.0' out=narrow_ra_3am.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0' '&&' 'RA' '<=' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA >= 0 && RA <= 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0' '&&' 'RA' '<=' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Find the coverage for sources where the radius is given by $1 / \text{SQUARE}(\text{Z})$ degrees, constrained by minimum $Z=0.1$.",
        "response": "stilts pixfoot in=z_scaled.fits icmd='select \"Z >= 0.1\"' ra=RA dec=DEC radius='1.0 / square(Z)' out=z_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z >= 0.1\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC (order 15) for sources where $\text{B_MAG} - \text{R_MAG} > 2.0$, using a 2 arcminute radius.",
        "response": "stilts pixfoot in=red_sources.fits icmd='select \"B_MAG - R_MAG > 2.0\"' ra=RA dec=DEC radius='2.0 / 60.0' order=15 out=red_sources_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'R_MAG' '>' '2.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select B_MAG - R_MAG > 2.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'R_MAG' '>' '2.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a MOC (order 14) for sources within a 1 degree radius, filtering the input table to only keep rows with positive Declination.",
        "response": "stilts pixfoot in=pos_dec.fits icmd='select \"DEC > 0\"' ra=RA dec=DEC radius=1.0 order=14 out=pos_dec_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Filter the input table to select rows where the source ID is an even number, then generate a MOC for 1 arcminute radius.",
        "response": "stilts pixfoot in=even_ids.fits icmd='select \"ID % 2 == 0\"' ra=RA dec=DEC radius='1.0 / 60.0' out=even_ids_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC (order 13) for all unique RA/DEC pairs, using a small point radius of $1 \times 10^{-6}$ degrees.",
        "response": "stilts pixfoot in=unique_coords.fits icmd='uniq \"RA DEC\"' ra=RA dec=DEC radius=1.0e-6 order=13 out=unique_coords_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: uniq RA DEC\n\nUsage: uniq [-count] [<colid-list>]\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate a MOC (order 10) for sources in observations.fits observed after MJD 59000, using the point location.",
        "response": "stilts pixfoot in=observations.fits icmd='select \"MJD > 59000.0\"' ra=RA dec=DEC order=10 out=recent_obs_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '59000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MJD > 59000.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '59000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create an MOC (order 16) for sources with a fixed 1 arcminute radius, filtering the input to select rows where FLUX > 100.",
        "response": "stilts pixfoot in=flux_cat.fits icmd='select \"FLUX > 100.0\"' ra=RA dec=DEC radius='1.0 / 60.0' order=16 out=bright_1am.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Generate an MOC (order 11) for sources where the radius is calculated as the reciprocal of the redshift column Z, assuming the result is in degrees and Z >= 1.",
        "response": "stilts pixfoot in=z_data.fits icmd='select \"Z >= 1.0\"' ra=RA dec=DEC radius='1.0 / Z' order=11 out=reciprocal_z.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z >= 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '1.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Create a point MOC (order 9) excluding sources within the Galactic plane ($|\text{B}| < 1$ degree).",
        "response": "stilts pixfoot in=gal_survey.fits icmd='addskycoords \"icrs galactic RA DEC GLON GLAT\"; select \"abs(GLAT) > 1.0\"' ra=RA dec=DEC radius=0 order=9 out=off_plane_o9.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC GLON GLAT\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "pixfoot"
    },
    {
        "prompt": "Show a scatter plot of a random 10% sample of my `huge_catalog.fits`.",
        "response": "stilts plot2plane in=huge_catalog.fits icmd='random \"0.1\"' layer=mark x=RA y=DEC",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1'\n\nCommand was: random \"0.1\"\n\nUsage: random\n    (Unused arguments: '0.1')\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a line connecting points, but only for points where `QUALITY > 0.9`.",
        "response": "stilts plot2plane in=data.fits layer=line x=X y=Y icmd='select \"QUALITY > 0.9\"'",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"QUALITY > 0.9\" (The name \"QUALITY\" is unknown.)\n        (The name \"QUALITY\" is unknown.))\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot a scatter plot of a random 10% sample from a huge catalog.",
        "response": "stilts plot2plane in=huge_catalog.fits icmd='random \"0.1\"' layer=mark x=RA y=DEC out=random_10pct.png",
        "chat.jar": "fixed",
        "error": "Error: Unused arguments: '0.1'\n\nCommand was: random \"0.1\"\n\nUsage: random\n    (Unused arguments: '0.1')\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot markers for sources that are brighter than magnitude 15 (MAG < 15).",
        "response": "stilts plot2plane in=catalog.fits icmd='select \"MAG < 15\"' layer=mark x=RA y=DEC out=bright_filter_mark.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"MAG < 15\" (The name \"MAG\" is unknown.)\n        (The name \"MAG\" is unknown.))\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot velocity (V) vs distance (D), restricting the range to only objects where V is less than 500 km/s.",
        "response": "stilts plot2plane in=galaxies.fits icmd='select \"V < 500\"' layer=mark x=D y=V out=filtered_hubble.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"V < 500\" (The name \"V\" is unknown.)\n        (The name \"V\" is unknown.))\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot X vs Y, showing only points where both X_ERR and Y_ERR are greater than 0.1.",
        "response": "stilts plot2plane in=data.fits icmd='select \"X_ERR>0.1 && Y_ERR>0.1\"' layer=mark x=X y=Y out=large_error_points.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"X_ERR>0.1 && Y_ERR>0.1\" (The name \"X_ERR\" is unknown.)\n        (The name \"X_ERR\" is unknown.))\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Create an animation of the scatter plot, where the YMAX range changes from 100 to 10 in 10 steps.",
        "response": "stilts plot2plane in=data.fits layer=mark x=X y=Y ymin=0 animate=:loop:10 acmd='addcol ymax \"100.0 - $0*9.0\"' out=y_zoom_movie.gif",
        "chat.jar": "fixed",
        "error": "java.lang.IllegalStateException\n\tat uk.ac.starlink.table.EmptyRowSequence.getRow(EmptyRowSequence.java:57)\n\tat uk.ac.starlink.ttools.filter.AddColumnsTable$1.getRow(AddColumnsTable.java:148)\n\tat uk.ac.starlink.ttools.plot2.task.AbstractPlot2Task$Row0Table.<init>(AbstractPlot2Task.java:3055)\n\tat uk.ac.starlink.ttools.plot2.task.AbstractPlot2Task.createExecutable(AbstractPlot2Task.java:574)\n\tat uk.ac.starlink.ttools.task.LineInvoker.invoke(LineInvoker.java:285)\n\tat CommandValidator.checkInvocation(CommandValidator.java:46)\n\tat CommandValidator.main(CommandValidator.java:66)\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot points, only keeping rows where the proper motion hypotenuse exceeds 5 mas/yr.",
        "response": "stilts plot2plane in=pm_cat.fits icmd='select \"hypot(PMRA, PMDEC) > 5.0\"' layer=mark x=RA y=DEC out=high_pm_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"hypot(PMRA, PMDEC) > 5.0\" (The name \"PMRA\" is unknown.)\n        (The name \"PMRA\" is unknown.))\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Plot velocity (V) vs distance (D), restricting the range to only objects where V is less than 500 km/s.",
        "response": "stilts plot2plane in=galaxies.fits icmd='select \"V < 500\"' layer=mark x=D y=V out=filtered_hubble.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"V < 500\" (The name \"V\" is unknown.)\n        (The name \"V\" is unknown.))\n",
        "cmd": "plot2plane"
    },
    {
        "prompt": "Query the GAVO TAP service around the North Galactic Pole (l=0, b=90) with a 1 degree radius and select only rows where the 'FLUX_ERR' column is positive.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=0.0 lat=90.0 radius=1.0 skysys=galactic ocmd='select \"FLUX_ERR > 0\"' out=clean_errors.vot",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX_ERR > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find spectroscopic records (SSA) at a target location and use a final filter to compute the ratio of two flux columns ('FLUX_A' / 'FLUX_B').",
        "response": "stilts cone serviceurl=http://jvo.nao.ac.jp/skynode/do/tap/akari/spectrum/slitless_mir_spec lon=15.0 lat=-5.0 radius=0.1 servicetype=ssa ocmd='addcol FLUX_RATIO \"FLUX_A / FLUX_B\"' out=flux_ratio_spec.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_RATIO FLUX_A / FLUX_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Run a query and select only rows where the magnitude is within a specific range (15 to 18).",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=45.0 lat=-45.0 radius=0.02 ocmd='select \"MAG > 15.0 && MAG < 18.0\"' out=mag_range.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '15.0' '&&' 'MAG' '<' '18.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 15.0 && MAG < 18.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '15.0' '&&' 'MAG' '<' '18.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query a service with a radius of 0.05 degrees and filter out rows where both 'FLAG_A' and 'FLAG_B' are true.",
        "response": "stilts cone serviceurl=https://tapvizier.cds.unistra.fr/TAPVizieR/tap lon=120.0 lat=-40.0 radius=0.05 ocmd='select \"!(FLAG_A && FLAG_B)\"' out=no_flags_out.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'FLAG_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !(FLAG_A && FLAG_B)\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'FLAG_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the Europlanet Telescope Network Database TAP service (SSA) and only retain records where the frequency coverage exceeds 10 MHz.",
        "response": "stilts cone serviceurl=http://parsec-europlanet.eu:81/tap lon=20.0 lat=30.0 radius=0.1 servicetype=ssa ocmd='select \"MAX_FREQ - MIN_FREQ > 10.0\"' out=wide_freq.vot",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MIN_FREQ' '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAX_FREQ - MIN_FREQ > 10.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MIN_FREQ' '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Find sources around RA=5, Dec=5, within a search cone corresponding to 0.005 degrees, and apply a final filter to add a calculated 'COLOR' column.",
        "response": "stilts cone serviceurl=http://dc.g-vo.org/tap lon=5.0 lat=5.0 radius=0.005 ocmd='addcol COLOR \"MAG_A - MAG_B\"' out=gavo_with_color.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COLOR MAG_A - MAG_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the MAST CAOM service for observations within 0.2 degrees of the field center, filtering the results to keep only rows where the exposure time ('EXPTIME') is greater than 100 seconds.",
        "response": "stilts cone serviceurl=https://mast.stsci.edu/vo-tap/api/v0.1/caom lon=15.0 lat=25.0 radius=0.2 ocmd='select \"EXPTIME > 100.0\"' out=mast_long_exposure.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select EXPTIME > 100.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "I need to query the ESA Integral Science Archive TAP around RA 300, Dec 10 (radius 0.1 deg), and only keep columns where the value of column 'QUALITY_FLAG' is 0.",
        "response": "stilts cone serviceurl=https://isla.esac.esa.int/tap/tap lon=300.0 lat=10.0 radius=0.1 ocmd='select \"QUALITY_FLAG == 0\"' out=integral_clean.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select QUALITY_FLAG == 0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the ESO TAP_OBS service around RA 10, Dec 10, using 0.00001 degrees, and filter to keep rows where 'EXPTIME' > 3600 seconds.",
        "response": "stilts cone serviceurl=https://archive.eso.org/tap_obs lon=10.0 lat=10.0 radius=0.00001 ocmd='select \"EXPTIME > 3600\"' out=eso_long_exposures.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '3600'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select EXPTIME > 3600\n\nUsage: select <expr>\n    (Unused arguments: '>' '3600'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query IRSA TAP near Galactic L=90, B=0, with radius 1 degree, and add new column 'J_H_COLOR' calculated from magnitudes.",
        "response": "stilts cone serviceurl=https://irsa.ipac.caltech.edu/TAP lon=90.0 lat=0.0 radius=1.0 skysys=galactic ocmd='addcol J_H_COLOR \"J_MAG - H_MAG\"' out=irsa_color.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'H_MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol J_H_COLOR J_MAG - H_MAG\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'H_MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Query the KOA TAP Service near RA 200, Dec 20, using $0.5$ degrees, filtering to keep only rows where 'DATE_OBS' is after '2010-01-01'.",
        "response": "stilts cone serviceurl=https://koa.ipac.caltech.edu/TAP lon=200.0 lat=20.0 radius=0.5 ocmd='select \"isoToMjd(DATE_OBS) > 55197\"' out=koa_recent_obs.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '55197'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select isoToMjd(DATE_OBS) > 55197\n\nUsage: select <expr>\n    (Unused arguments: '>' '55197'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "cone-examples"
    },
    {
        "prompt": "Plot sources, excluding those where flux FLUX_G is less than 1.0, using the Plate Carr\u00e9e projection.",
        "response": "stilts plot2sky in=data.fits icmd='select \"FLUX_G >= 1.0\"' layer=mark lon=RA lat=DEC projection=car out=flux_filtered_car.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"FLUX_G >= 1.0\" (The name \"FLUX_G\" is unknown.)\n        (The name \"FLUX_G\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot sources where position angle (PA) is greater than 90 degrees, using open crosses.",
        "response": "stilts plot2sky in=rot_data.fits icmd='select \"PA > 90.0\"' layer=mark lon=RA lat=DEC shape=open_cross out=pa_filtered_sky.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"PA > 90.0\" (The name \"PA\" is unknown.)\n        (The name \"PA\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot sources where RA > 300 degrees, using a size proportional to FLUX_K.",
        "response": "stilts plot2sky in=data.fits icmd='select \"RA > 300.0\"' layer=size lon=RA lat=DEC size=FLUX_K out=high_ra_sized.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"RA > 300.0\" (The name \"RA\" is unknown.)\n        (The name \"RA\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (size 5, filled triangle up) for objects only in the southern hemisphere (DEC < 0).",
        "response": "stilts plot2sky in=all_sky.fits icmd='select \"DEC < 0\"' layer=mark lon=RA lat=DEC size=5 shape=filled_triangle_up out=southern_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"DEC < 0\" (The name \"DEC\" is unknown.)\n        (The name \"DEC\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot positions, applying a selection filter to only include rows where MAG_R > 20.",
        "response": "stilts plot2sky in=deep_cat.fits icmd='select \"MAG_R > 20\"' layer=mark lon=RA lat=DEC out=faint_marks_filtered.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"MAG_R > 20\" (The name \"MAG_R\" is unknown.)\n        (The name \"MAG_R\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot points in Galactic coordinates, filtering to include only those outside the Galactic plane (abs(B) > 10).",
        "response": "stilts plot2sky in=gal_cat.fits viewsys=galactic icmd='select \"abs(B) > 10.0\"' layer=mark lon=L lat=B out=off_plane_gal.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"abs(B) > 10.0\" (The name \"B\" is unknown.)\n        (The name \"B\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot two layers: one marks sources brighter than MAG=15 (red), the other marks fainter ones (blue).",
        "response": "stilts plot2sky in=data.fits layer_b=mark icmd_b='select MAG < 15' color_b=red layer_f=mark icmd_f='select MAG >= 15' color_f=blue out=mag_split_marks.png",
        "chat.jar": "fixed",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot position vectors (unit=arcsec), applying a filter to exclude vectors where PMRA is negative.",
        "response": "stilts plot2sky in=pm_cat.fits icmd='select \"PMRA >= 0\"' layer=skyvector lon=RA lat=DEC dlon=PMRA dlat=PMDEC unit=arcsec out=pos_pmra_vectors.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"PMRA >= 0\" (The name \"PMRA\" is unknown.)\n        (The name \"PMRA\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot error ellipses (skycorr, mas unit) derived from correlation, only for objects where MAG < 16.",
        "response": "stilts plot2sky in=gaia_err.fits icmd='select \"MAG < 16\"' layer=skycorr lon=RA lat=DEC lonerr=RA_ERR laterr=DEC_ERR corr=CORR unit=mas out=bright_corr_errors.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"MAG < 16\" (The name \"MAG\" is unknown.)\n        (The name \"MAG\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot a small 0.1 degree field where coordinates are in Supergalactic system, and filter input to only include rows where REDSHIFT > 0.5.",
        "response": "stilts plot2sky in=gal_cat.fits viewsys=supergalactic clon=30.0 clat=10.0 radius=0.1 icmd='select \"REDSHIFT > 0.5\"' layer=mark lon=SGLON lat=SGLAT out=sgl_filtered_zoom.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"REDSHIFT > 0.5\" (The name \"REDSHIFT\" is unknown.)\n        (The name \"REDSHIFT\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers (filled triangle up, size 4) but only include sources where $\\text{G-R}$ color is between -0.5 and 1.5.",
        "response": "stilts plot2sky in=color_cat.fits icmd='select \"G-R > -0.5 && G-R < 1.5\"' layer=mark lon=RA lat=DEC shape=filled_triangle_up size=4 out=color_range_filter.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"G-R > -0.5 && G-R < 1.5\" (The name \"G\" is unknown.)\n        (The name \"G\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot the nominal center of STC-S regions (central layer), filtering the input to only include regions with area greater than 0.1 sq deg.",
        "response": "stilts plot2sky in=regions.fits icmd='select \"Area > 0.1\"' layer=central area=S_REGION areatype=STC-S out=large_stcs_centers.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"Area > 0.1\" (The name \"Area\" is unknown.)\n        (The name \"Area\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers sized by distance (R) and initially filtered to include only objects where R < 100 parsecs.",
        "response": "stilts plot2sky in=local_stars.fits icmd='select \"R < 100\"' layer=size lon=RA lat=DEC size=R unit=parsec autoscale=true out=close_stars_sized.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"R < 100\" (The name \"R\" is unknown.)\n        (The name \"R\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot polygon outlines defined by STC-S strings, filtering to select only regions with Area > 1.0 sq deg before plotting.",
        "response": "stilts plot2sky in=footprints.fits icmd='select \"Area > 1.0\"' layer=area area=S_REGION areatype=STC-S polymode=outline out=large_footprints.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"Area > 1.0\" (The name \"Area\" is unknown.)\n        (The name \"Area\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Plot markers, filtering the input to use only data from a specific epoch (EPOCH=2015.5).",
        "response": "stilts plot2sky in=data.fits icmd='select \"EPOCH == 2015.5\"' layer=mark lon=RA lat=DEC out=filtered_epoch.png",
        "chat.jar": "fixed",
        "error": "Error: Table processing error\n    (Bad expression \"EPOCH == 2015.5\" (The name \"EPOCH\" is unknown.)\n        (The name \"EPOCH\" is unknown.))\n",
        "cmd": "plot2sky"
    },
    {
        "prompt": "Combine only the sources with magnitude brighter than 15 from `deep_survey.fits` with all sources from `shallow_survey.fits`.",
        "response": "stilts tcatn nin=2 in1=deep_survey.fits icmd1='select \"MAG < 15\"' in2=shallow_survey.fits out=mixed_depth.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "My second table has flux in erg/s/cm2/A and I need it in Jy before combining.",
        "response": "stilts tcatn nin=2 in1=t1_jy.fits in2=t2_erg.fits icmd2='addcol FLUX_JY \"ergscmaToJansky(FLUX_ERG, WAVE_ANGSTROM)\"' ocmd='keepcols \"FLUX_JY\"' out=all_jy.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'WAVE_ANGSTROM)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_JY ergscmaToJansky(FLUX_ERG, WAVE_ANGSTROM)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'WAVE_ANGSTROM)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two datasets and only keep rows where the final magnitude is between 18 and 19.",
        "response": "stilts tcatn nin=2 in1=d1.fits in2=d2.fits ocmd='select \"MAG>18 && MAG<19\"' out=mag_slice.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'MAG<19'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG>18 && MAG<19\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'MAG<19'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Join table A with a random sample of 100 rows from table B.",
        "response": "stilts tcatn nin=2 in1=table_A.fits in2=table_B.fits icmd2='random \"100\"' out=random_sample_join.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '100'\n\nCommand was: random \"100\"\n\nUsage: random\n    (Unused arguments: '100')\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine three tables (t1.fits, t2.fits, t3.fits). In t2, rename the 'ERR_FLUX' column to 'FLUX_ERROR' and convert it from Jy to mJy before joining.",
        "response": "stilts tcatn nin=3 in1=t1.fits in2=t2.fits icmd2='replacecol FLUX_ERROR \"ERR_FLUX * 1000\"' in3=t3.fits out=combined.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_ERROR ERR_FLUX * 1000\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '1000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine three tables from different years, but only keep sources brighter than 17th magnitude from all of them.",
        "response": "stilts tcatn nin=3 in1=2019.fits icmd1='select \"MAG < 17\"' in2=2020.fits icmd2='select \"MAG < 17\"' in3=2021.fits icmd3='select \"MAG < 17\"' out=bright_only.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '17'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 17\n\nUsage: select <expr>\n    (Unused arguments: '<' '17'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate a table containing positions (ra, dec) with a table containing fluxes (flux, flux_err). The output should only include rows where fluxes are measured (flux > 0).",
        "response": "stilts tcatn nin=2 in1=pos.fits in2=flux.fits icmd2='select \"FLUX > 0\"' out=clean_data.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate observations obs_1.fits and obs_2.fits. In obs_1.fits, select only rows where 'QUALITY' is greater than 5. In obs_2.fits, keep only columns ID, RA, DEC, and FLUX.",
        "response": "stilts tcatn nin=2 in1=obs_1.fits icmd1='select \"QUALITY > 5\"' in2=obs_2.fits icmd2='keepcols \"ID RA DEC FLUX\"' out=hetero_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select QUALITY > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate observations obs_1.fits and obs_2.fits. The final table should use a column calculated by converting proper motion from mas/yr to km/s using parallax (plx).",
        "response": "stilts tcatn nin=2 in1=obs_1.fits in2=obs_2.fits ocmd='addcol V_RA \"rvMasyrToKms(PM_RA, plx)\"; addcol V_DEC \"rvMasyrToKms(PM_DEC, plx)\"' out=velocity_concat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'plx)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol V_RA rvMasyrToKms(PM_RA, plx)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'plx)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine table1.fits and table2.fits, adding a boolean column named 'IS_FAINT' which is true if MAG > 20 in the final table.",
        "response": "stilts tcatn nin=2 in1=table1.fits in2=table2.fits ocmd='addcol IS_FAINT \"MAG > 20\"' out=with_flag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 20\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine three files: part_a.fits, part_b.fits, part_c.fits. Combine them, but first multiply the 'FLUX' column by 1e-6 in all three tables.",
        "response": "stilts tcatn nin=3 in1=part_a.fits icmd1='replacecol FLUX \"FLUX * 1e-6\"' in2=part_b.fits icmd2='replacecol FLUX \"FLUX * 1e-6\"' in3=part_c.fits icmd3='replacecol FLUX \"FLUX * 1e-6\"' out=flux_scaled.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1e-6'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX * 1e-6\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '1e-6'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables, then calculate statistics on a derived column: (MAG_B - MAG_R) / ERROR.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='addcol C_ERR \"(MAG_B - MAG_R) / ERROR\"' ocmd='keepcols \"C_ERR\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MAG_R)' '/' 'ERROR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol C_ERR (MAG_B - MAG_R) / ERROR\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_R)' '/' 'ERROR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine table1.fits and table2.fits, but discard all rows where the 'FLAG' column in the first table is non-zero.",
        "response": "stilts tcatn nin=2 in1=table1.fits icmd1='select \"FLAG == 0\"' in2=table2.fits out=flag_zero_concat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG == 0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine table A and table B, eliminating any rows where 'FLUX' in the combined result is less than zero.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits ocmd='select \"FLUX >= 0\"' out=positive_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Join table1.fits and table2.fits. For table1, select only rows where Vmag < 15. For table2, only keep the first 100 rows.",
        "response": "stilts tcatn nin=2 in1=table1.fits icmd1='select \"Vmag < 15\"' in2=table2.fits icmd2='head \"100\"' out=mixed_filter_concat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Vmag < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate data1.fits and data2.fits, then calculate the median absolute deviation (MAD) of the combined 'MAG' column.",
        "response": "stilts tcatn nin=2 in1=data1.fits in2=data2.fits ocmd='addcol MAG_ABS_DEV \"abs(MAG - median(MAG))\"' ocmd='keepcols \"MAG_ABS_DEV\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'median(MAG))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_ABS_DEV abs(MAG - median(MAG))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'median(MAG))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine three tables and keep a custom column derived from the combined ID and an added source identifier.",
        "response": "stilts tcatn nin=3 in1=a.fits in2=b.fits in3=c.fits seqcol=SourceNum ocmd='addcol UniqueID \"concat(ID, toString(SourceNum))\"' out=id_with_num.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'toString(SourceNum))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol UniqueID concat(ID, toString(SourceNum))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'toString(SourceNum))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two tables, sorting the final table by 'ID' and keeping the 'ID' column as the final table's primary column.",
        "response": "stilts tcatn nin=2 in1=a.fits in2=b.fits ocmd='sort \"ID\"; keepcols \"ID *\"' out=id_first_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols ID *\n\nUsage: keepcols <colid-list>\n    (Unused arguments: '*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine an ECSV file and a FITS file. Filter the FITS file to only include sources where 'RA' is greater than 300 degrees.",
        "response": "stilts tcatn nin=2 in1=e.ecsv ifmt1=ecsv in2=f.fits icmd2='select \"RA > 300\"' out=filtered_ecsv_fits.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '300'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 300\n\nUsage: select <expr>\n    (Unused arguments: '>' '300'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate table A and table B. After joining, filter out any rows where the magnitude difference (MAG_A - MAG_B) is greater than 0.5.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits fixcols=all suffix1=_A suffix2=_B ocmd='select \"abs(MAG_A - MAG_B) <= 0.5\"' out=diff_filtered.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: fixcols=all suffix1=_A suffix2=_B\n\nUsage: tcatn nin=<count> ifmtN=<in-format> inN=<tableN> icmdN=<cmds>\n             ocmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format> seqcol=<colname>\n             loccol=<colname> uloccol=<colname> countrows=true|false\n\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine a catalog and an error table. In the error table, convert the 'ERR_MAS' column from mas to degrees before concatenation.",
        "response": "stilts tcatn nin=2 in1=cat.fits in2=err.fits icmd2='replacecol ERR_DEG \"ERR_MAS / 3600000.0\"' out=mas_to_deg.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol ERR_DEG ERR_MAS / 3600000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine table A and table B. Table A has an integer quality column 'Q' and table B has a boolean quality column 'FLAG'. Convert B's boolean column to an integer (0/1) quality column 'Q' before combining.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits icmd2='replacecol Q \"(FLAG ? 1 : 0)\"' out=quality_aligned.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '1' ':' '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol Q (FLAG ? 1 : 0)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '1' ':' '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine tables, sorting the final output primarily by 'RA' ascending, then secondarily by 'DEC' descending.",
        "response": "stilts tcatn nin=2 in1=c1.fits in2=c2.fits ocmd='sort \"RA -down DEC\"' out=multi_sort.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-down' 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort RA -down DEC\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '-down' 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two tables, applying a velocity calculation to a column in the second table before joining, assuming distance 'dist_pc' is shared.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits icmd2='replacecol V_Z \"rvMasyrToKms(PM_Z, 1000/dist_pc)\"' out=vel_calc_join.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '1000/dist_pc)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol V_Z rvMasyrToKms(PM_Z, 1000/dist_pc)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '1000/dist_pc)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate multiple tables, ensuring the magnitude 'MAG' is replaced by NULL if it is less than 5 (i.e., too bright for the sensor).",
        "response": "stilts tcatn nin=3 in1=s1.fits in2=s2.fits in3=s3.fits ocmd='select \"MAG > 5 || NULL_MAG || replaceval MAG NULL MAG\"' out=filtered_bright.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5' '||' 'NULL_MAG' '||' 'replaceval' 'MAG' 'NULL' 'MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 5 || NULL_MAG || replaceval MAG NULL MAG\n\nUsage: select <expr>\n    (Unused arguments: '>' '5' '||' 'NULL_MAG' '||' 'replaceval' 'MAG' 'NULL' 'MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine tables, performing a sophisticated normalization on the magnitude: MAG_NORM = MAG - MJD*0.01 + 10.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='addcol MAG_NORM \"MAG - MJD*0.01 + 10\"' out=normalized_mag_output.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'MJD*0.01' '+' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_NORM MAG - MJD*0.01 + 10\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MJD*0.01' '+' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two tables, generating a statistical summary of the angular distance between RA1/DEC1 and RA2/DEC2 in the combined table.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='addcol SEP_DEG \"skyDistanceDegrees(RA1, DEC1, RA2, DEC2)\"' ocmd='keepcols \"SEP_DEG\"' omode=stats",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC1,' 'RA2,' 'DEC2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SEP_DEG skyDistanceDegrees(RA1, DEC1, RA2, DEC2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC1,' 'RA2,' 'DEC2)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables, but exclude rows from the resulting table where the 'ERROR' column is less than zero or null.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='select \"ERROR >= 0 && !NULL_ERROR\"' out=clean_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0' '&&' '!NULL_ERROR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ERROR >= 0 && !NULL_ERROR\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0' '&&' '!NULL_ERROR'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two tables, maintaining the metadata associated with the columns marked with the UCD 'target.name'.",
        "response": "stilts tcatn nin=2 in1=c1.fits icmd1='keepcols \"ucd$target_name *\"' in2=c2.fits icmd2='keepcols \"ucd$target_name *\"' out=target_name_join.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$target_name *\n\nUsage: keepcols <colid-list>\n    (Unused arguments: '*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two files, sorting the results first, and only keeping the rows where the absolute magnitude is brighter than -10.",
        "response": "stilts tcatn nin=2 in1=gals.fits in2=qso.fits ocmd='sort \"-down ABS_MAG\"' ocmd='select \"ABS_MAG < -10\"' out=bright_sorted_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '-10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ABS_MAG < -10\n\nUsage: select <expr>\n    (Unused arguments: '<' '-10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two tables and filter out rows where both 'FLAG_A' and 'FLAG_B' are true.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits ocmd='select \"!(FLAG_A && FLAG_B)\"' out=filtered_flags.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&&' 'FLAG_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !(FLAG_A && FLAG_B)\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'FLAG_B)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables, calculating the total angular distance in micro-arcseconds from coordinates RA, DEC and RA_2, DEC_2.",
        "response": "stilts tcatn nin=2 in1=t1.fits in2=t2.fits ocmd='addcol SEP_UAS \"skyDistanceDegrees(RA, DEC, RA_2, DEC_2) * 3600000000.0\"' out=sep_uas.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC,' 'RA_2,' 'DEC_2)' '*' '3600000000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SEP_UAS skyDistanceDegrees(RA, DEC, RA_2, DEC_2) * 3600000000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'RA_2,' 'DEC_2)' '*' '3600000000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two tables, adding a column that flags if the 'FLUX' value is greater than the mean flux of the entire combined dataset.",
        "response": "stilts tcatn nin=2 in1=a.fits in2=b.fits ocmd='addcol IS_HIGH_FLUX \"FLUX > mean(FLUX)\"' out=high_flux_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_HIGH_FLUX FLUX > mean(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge a simulated star field (:skysim:1000) with local data.fits. Only keep sources with magnitude G < 18 in the final output.",
        "response": "stilts tcatn nin=2 in1=data.fits in2=:skysim:1000 ocmd='select \"G < 18\"' out=sim_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate three tables. Table 2 must be filtered to keep only rows where the 'ERROR' column is positive (non-negative).",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits icmd2='select \"ERROR >= 0\"' in3=T3.fits out=positive_error_only.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ERROR >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine four files. For the first file (F1), select only rows where 'MAG' is less than 12. For the last file (F4), only keep the last 50 rows.",
        "response": "stilts tcatn nin=4 in1=F1.fits icmd1='select \"MAG < 12\"' in2=F2.fits in3=F3.fits in4=F4.fits icmd4='tail \"50\"' out=mixed_end_filtering.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 12\n\nUsage: select <expr>\n    (Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge T_GOOD and T_BAD. In T_BAD, replace all boolean 'TRUE' values in the 'FLAG' column with integer 1, and 'FALSE' with 0, before merging.",
        "response": "stilts tcatn nin=2 in1=T_GOOD.fits in2=T_BAD.fits icmd2='replacecol FLAG \"(FLAG ? 1 : 0)\"' out=boolean_to_int_merge.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '1' ':' '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLAG (FLAG ? 1 : 0)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '1' ':' '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine FITS file F1.fits with VOTable F2.vot, but ensure F1 is processed to select only rows where 'SNR' is greater than 10, while F2 uses only columns ID and FLUX.",
        "response": "stilts tcatn nin=2 in1=F1.fits icmd1='select \"SNR > 10\"' in2=F2.vot icmd2='keepcols \"ID FLUX\"' out=filtered_mixed.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select SNR > 10\n\nUsage: select <expr>\n    (Unused arguments: '>' '10'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables, applying a global filter to keep only rows where magnitude is less than 18, and outputting to FITS-plus format.",
        "response": "stilts tcatn nin=2 in1=T_BRIGHT.fits in2=T_FAINT.fits ocmd='select \"MAG < 18\"' ofmt=fits-plus out=bright_subset.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine an IPAC table and an ASCII table. The final output must be sorted by the concatenation of two string columns, ID and NAME.",
        "response": "stilts tcatn nin=2 in1=ipac.tbl ifmt1=ipac in2=ascii.txt ifmt2=ascii ocmd='addcol SORT_KEY \"concat(ID, NAME)\"' ocmd='sort \"SORT_KEY\"' out=sorted_ipac_ascii.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'NAME)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SORT_KEY concat(ID, NAME)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'NAME)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge two tables, T_GALS and T_QSOS. T_GALS requires conversion of 'FLUX_MILIJY' to Janskys before joining.",
        "response": "stilts tcatn nin=2 in1=T_GALS.fits icmd1='replacecol FLUX_JY \"FLUX_MILIJY / 1000.0\"' in2=T_QSOS.fits out=flux_normalized.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_JY FLUX_MILIJY / 1000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate tables T1, T2, T3. If the final combined magnitude 'MAG' is null, replace it with 99.9.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits in3=T3.fits ocmd='replacecol MAG \"NULL_MAG ? 99.9 : MAG\"' out=null_filled_mag.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '99.9' ':' 'MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG NULL_MAG ? 99.9 : MAG\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '99.9' ':' 'MAG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge two tables, adding a column to the result indicating if 'ID_A' equals 'ID_B' (assuming duplicate column renaming).",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits fixcols=all suffix1=_A suffix2=_B ocmd='addcol MATCHED \"equals(ID_A, ID_B)\"' out=matched_flagged.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: fixcols=all suffix1=_A suffix2=_B\n\nUsage: tcatn nin=<count> ifmtN=<in-format> inN=<tableN> icmdN=<cmds>\n             ocmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format> seqcol=<colname>\n             loccol=<colname> uloccol=<colname> countrows=true|false\n\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables, T_LEFT and T_RIGHT. For T_RIGHT, filter out rows where the 'ERROR' column is negative.",
        "response": "stilts tcatn nin=2 in1=T_LEFT.fits in2=T_RIGHT.fits icmd2='select \"ERROR >= 0\"' out=positive_error_only_concat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ERROR >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge a table containing positions with a table containing proper motions (PM_RA, PM_DEC). For the latter, calculate a total proper motion magnitude 'PM_TOT'.",
        "response": "stilts tcatn nin=2 in1=pos.fits in2=pm.fits icmd2='addcol PM_TOT \"hypot(PM_RA, PM_DEC)\"' out=pm_magnitude_combined.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PM_DEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOT hypot(PM_RA, PM_DEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PM_DEC)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate three tables, preserving only columns that appear in all three tables, defined by their names.",
        "response": "stilts tcatn nin=3 in1=C1.fits in2=C2.fits in3=C3.fits ocmd='keepcols \"intersect(C1.*, C2.*, C3.*)\"' out=common_cols_intersect.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'C2.*,' 'C3.*)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols intersect(C1.*, C2.*, C3.*)\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'C2.*,' 'C3.*)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine observations O1.fits and O2.fits. O1 requires an 'ASSERT' filter to ensure all rows have POS_ERR > 0.",
        "response": "stilts tcatn nin=2 in1=O1.fits icmd1='assert \"POS_ERR > 0\"' in2=O2.fits out=asserted_valid_errors.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert POS_ERR > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two tables, T_POS and T_FLUX. T_FLUX rows should only be included if 'FLAG_MEASURE' equals 1.",
        "response": "stilts tcatn nin=2 in1=T_POS.fits in2=T_FLUX.fits icmd2='select \"FLAG_MEASURE == 1\"' out=flagged_flux_combined.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '==' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG_MEASURE == 1\n\nUsage: select <expr>\n    (Unused arguments: '==' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate tables T1 and T2. T2 contains coordinates GLON, GLAT. Add a column 'GAL_RAD' calculating the distance from the galactic center (0,0) before joining.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='addcol GAL_RAD \"skyDistanceDegrees(GLON, GLAT, 0, 0)\"' out=galactic_distance_merged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'GLAT,' '0,' '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol GAL_RAD skyDistanceDegrees(GLON, GLAT, 0, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'GLAT,' '0,' '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables. Output column 'FLUX_MJD' is calculated as FLUX * MJD post-combination.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits ocmd='addcol FLUX_MJD \"FLUX * MJD\"' out=multiplied_column.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' 'MJD'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_MJD FLUX * MJD\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'MJD'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine three tables (A.fits, B.csv, C.vot). A and C use magnitude MAG; in B (CSV format), calculate MAG = 25 - 2.5 * log10(FLUX) before joining.",
        "response": "stilts tcatn nin=3 in1=A.fits in2=B.csv ifmt2=csv icmd2='addcol MAG \"25 - 2.5 * log10(FLUX)\"' in3=C.vot out=combined_mag_calc.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '2.5' '*' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG 25 - 2.5 * log10(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '2.5' '*' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate four catalog tiles (T1-T4.fits). In T3, filter out sources where 'FLAG_SATURATION' is set (FLAG & 2 != 0) before combination.",
        "response": "stilts tcatn nin=4 in1=T1.fits in2=T2.fits in3=T3.fits icmd3='select \"(FLAG & 2) == 0\"' in4=T4.fits out=unsaturated_tiles.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '&' '2)' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select (FLAG & 2) == 0\n\nUsage: select <expr>\n    (Unused arguments: '&' '2)' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine photometry data: Vis.fits, IR.fits, and UV.fits. In Vis.fits, normalize the FLUX column by dividing by 1e-12.",
        "response": "stilts tcatn nin=3 in1=Vis.fits icmd1='replacecol FLUX \"FLUX / 1e-12\"' in2=IR.fits in3=UV.fits out=normalized_phot.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '1e-12'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX / 1e-12\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1e-12'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine ObsCore metadata (obs.fits) and an external EPN-TAP planetary service result (epn.vot). Only keep rows in obs.fits if 'time_exp' > 100s.",
        "response": "stilts tcatn nin=2 in1=obs.fits icmd1='select \"time_exp > 100\"' in2=epn.vot out=filtered_obscore.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select time_exp > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge tables T1 and T2. T2 contains proper motion components (PM_X, PM_Y) in mas/yr. Calculate the total proper motion magnitude 'PM_TOT' before joining.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='addcol PM_TOT \"hypot(PM_X, PM_Y)\"' out=pm_magnitude_added.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PM_Y)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOT hypot(PM_X, PM_Y)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PM_Y)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables, applying the logarithmic scaling function `symlog(1, 0.5, X)` to column `X` in both before merging.",
        "response": "stilts tcatn nin=2 in1=D1.fits icmd1='replacecol X \"symlog(1, 0.5, X)\"' in2=D2.fits icmd2='replacecol X \"symlog(1, 0.5, X)\"' out=symlog_scaled.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '0.5,' 'X)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol X symlog(1, 0.5, X)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '0.5,' 'X)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge data sets A and B. After joining, remove any row where the magnitude difference (MAG_A - MAG_B) is exactly zero.",
        "response": "stilts tcatn nin=2 in1=A.fits fixcols=all suffix1=_A in2=B.fits fixcols=all suffix2=_B ocmd='select \"abs(MAG_A - MAG_B) != 0\"' out=nonzero_diff.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: fixcols=all suffix1=_A fixcols=all suffix2=_B\n\nUsage: tcatn nin=<count> ifmtN=<in-format> inN=<tableN> icmdN=<cmds>\n             ocmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format> seqcol=<colname>\n             loccol=<colname> uloccol=<colname> countrows=true|false\n\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge three tables, then sort the output by the concatenation of 'FIELD_ID' and 'SOURCE_NUM'.",
        "response": "stilts tcatn nin=3 in1=F1.fits in2=F2.fits in3=F3.fits ocmd='addcol SORT_KEY \"concat(FIELD_ID, toString(SOURCE_NUM))\"' ocmd='sort \"SORT_KEY\"' out=sorted_composite_key.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'toString(SOURCE_NUM))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SORT_KEY concat(FIELD_ID, toString(SOURCE_NUM))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'toString(SOURCE_NUM))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge T1.fits and T2.fits. T1 has magnitude in Vega; T2 has magnitude in AB. Convert T1's 'MAG' to AB magnitude using the constant 2.5 log10(F_nu_AB/F_nu_Vega) = -0.04.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='replacecol MAG \"MAG + VEGA_AB_g\"' in2=T2.fits out=ab_vega_aligned.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_g'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG MAG + VEGA_AB_g\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' 'VEGA_AB_g'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine three tables. T2 has an extra header parameter 'PROC_VERSION'. Include this parameter as a scalar column 'Version' in the final output.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits icmd2='addcol Version \"param$PROC_VERSION\"' in3=T3.fits ocmd='keepcols \"Version *\"' out=with_version_col.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Version *\n\nUsage: keepcols <colid-list>\n    (Unused arguments: '*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge CDF data and FITS data. In the CDF input, select the HEALPix pixel index column and convert it from HEALPix Ring scheme (level 5) to Nested scheme.",
        "response": "stilts tcatn nin=2 in1=cdf.cdf ifmt1=cdf icmd1='addcol HPX_NEST \"healpixRingToNest(5, PIXEL_INDEX)\"' in2=fits.fits out=hpx_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PIXEL_INDEX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HPX_NEST healpixRingToNest(5, PIXEL_INDEX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PIXEL_INDEX)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate T1 and T2. T1 contains proper motions (PMRA, PMDEC) and parallax (PLX). Calculate the tangential velocity 'VTAN' (in km/s) in T1 before joining.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='addcol VTAN \"hypot(rvMasyrToKms(PMRA, PLX), rvMasyrToKms(PMDEC, PLX))\"' in2=T2.fits out=with_vtan.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'PLX),' 'rvMasyrToKms(PMDEC,' 'PLX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VTAN hypot(rvMasyrToKms(PMRA, PLX), rvMasyrToKms(PMDEC, PLX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PLX),' 'rvMasyrToKms(PMDEC,' 'PLX))'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine tables T1 and T2. T2 contains J2000 coordinates (RA, DEC) in radians. Convert them to degrees in T2 and keep only the degree columns before joining T1.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='replacecol RA_DEG \"radiansToDegrees(RA)\"; replacecol DEC_DEG \"radiansToDegrees(DEC)\"; keepcols \"RA_DEG DEC_DEG\"' out=rad_to_deg_prejoin.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'DEC_DEG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols RA_DEG DEC_DEG\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'DEC_DEG'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge data files F1 and F2. F2 contains magnitude errors (MAG_ERR) in percent. Convert these to linear magnitude errors before combining.",
        "response": "stilts tcatn nin=2 in1=F1.fits in2=F2.fits icmd2='replacecol MAG_ERR \"MAG_ERR / 100.0\"' out=linear_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_ERR MAG_ERR / 100.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '100.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two photometric tables, A and B. In the combined table, calculate the K-correction K(r) for redshift Z, using the g-r color value.",
        "response": "stilts tcatn nin=2 in1=A.fits in2=B.fits ocmd='addcol KR_CORR \"kCorr(KCF_r, Z, KCC_gr, gmag-rmag)\"' out=kcorr_calculated.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'Z,' 'KCC_gr,' 'gmag-rmag)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KR_CORR kCorr(KCF_r, Z, KCC_gr, gmag-rmag)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Z,' 'KCC_gr,' 'gmag-rmag)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate data tables. In the second table, D2, drop all string columns except for 'NAME'.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits icmd2='keepcols \"NAME\"; keepcols \"-exclude NAME *string*\"' out=string_subset_merge.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'NAME' '*string*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols -exclude NAME *string*\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'NAME' '*string*'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine files A and B. In A, there are columns 'Luminosity' and 'Distance_Mpc'. Calculate absolute magnitude 'ABS_MAG' before combining.",
        "response": "stilts tcatn nin=2 in1=A.fits icmd1='addcol ABS_MAG \"-2.5*log10(Luminosity) - 5*(log10(Distance_Mpc*1e6)-1)\"' in2=B.fits out=abs_mag_combined.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' '5*(log10(Distance_Mpc*1e6)-1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ABS_MAG -2.5*log10(Luminosity) - 5*(log10(Distance_Mpc*1e6)-1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '5*(log10(Distance_Mpc*1e6)-1)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge two tables, sorting the resulting rows first by 'RA' ascending, then by 'DEC' descending.",
        "response": "stilts tcatn nin=2 in1=C1.fits in2=C2.fits ocmd='sort \"RA -down DEC\"' out=multi_key_sorted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-down' 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort RA -down DEC\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '-down' 'DEC'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables, keeping only rows from the first table where 'SNR' > 5 AND 'QUALITY' is true.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='select \"SNR > 5 && QUALITY\"' in2=T2.fits out=high_quality_snr.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '5' '&&' 'QUALITY'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select SNR > 5 && QUALITY\n\nUsage: select <expr>\n    (Unused arguments: '>' '5' '&&' 'QUALITY'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables, removing all rows in the combined output where 'FLUX' is infinite.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits ocmd='select \"FLUX != Infinity\"' out=no_infinite_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '!=' 'Infinity'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX != Infinity\n\nUsage: select <expr>\n    (Unused arguments: '!=' 'Infinity'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two tables, T_MAIN and T_AUX. T_AUX rows should only be included if the proper motion error (PM_ERR) is less than 0.1 mas/yr.",
        "response": "stilts tcatn nin=2 in1=T_MAIN.fits in2=T_AUX.fits icmd2='select \"PM_ERR < 0.1\"' out=low_pm_error.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PM_ERR < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge two tables, T1 and T2. T2 contains a column 'ARRAY_VALUES'. Explode it into scalar columns, keeping only the first three elements.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='explodecols \"ARRAY_VALUES\"; keepcols \"* ARRAY_VALUES_0 ARRAY_VALUES_1 ARRAY_VALUES_2\"' out=partial_explode.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'ARRAY_VALUES_0' 'ARRAY_VALUES_1' 'ARRAY_VALUES_2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  keepcols * ARRAY_VALUES_0 ARRAY_VALUES_1 ARRAY_VALUES_2\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ARRAY_VALUES_0' 'ARRAY_VALUES_1' 'ARRAY_VALUES_2'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate tables, dropping all rows in the combined result where the RA coordinate falls outside the range [0, 360).",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits ocmd='select \"RA >= 0 && RA < 360\"' out=clean_ra_range.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>=' '0' '&&' 'RA' '<' '360'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA >= 0 && RA < 360\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0' '&&' 'RA' '<' '360'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge FITS and Feather files. Feather file needs error columns 'e_ra' and 'e_dec' converted from mas to arcseconds.",
        "response": "stilts tcatn nin=2 in1=fits.fits in2=feather.fea ifmt2=feather icmd2='replacecol e_ra \"e_ra / 1000.0\"; replacecol e_dec \"e_dec / 1000.0\"' out=feather_corrected.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol e_ra e_ra / 1000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge catalogs, adding a column 'Z_HELIO' calculated using the K-correction formula: `Z_HELIO = Z + Z_OFFSET` (where Z_OFFSET is a table parameter).",
        "response": "stilts tcatn nin=2 in1=C1.fits in2=C2.fits ocmd='addcol Z_HELIO \"Z + param$Z_OFFSET\"' out=offset_redshift.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '+' 'param$Z_OFFSET'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol Z_HELIO Z + param$Z_OFFSET\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'param$Z_OFFSET'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine three files. T2 contains a boolean column 'PASS_FLAG'. Replace it with an integer column 'QUALITY' (1 if true, 0 if false) before joining.",
        "response": "stilts tcatn nin=3 in1=T1.fits in2=T2.fits icmd2='replacecol QUALITY \"(PASS_FLAG ? 1 : 0)\"' in3=T3.fits out=bool_to_int.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '1' ':' '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol QUALITY (PASS_FLAG ? 1 : 0)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '1' ':' '0)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge three tables. In the final output, keep only the columns shared by ALL three original input tables.",
        "response": "stilts tcatn nin=3 in1=A.fits in2=B.fits in3=C.fits ocmd='keepcols \"intersect(A.*, B.*, C.*)\"' out=intersection_cols.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: 'B.*,' 'C.*)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols intersect(A.*, B.*, C.*)\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'B.*,' 'C.*)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate T1 and T2. T2 contains ICRS coordinates, convert them to Galactic coordinates (GLON, GLAT) and keep only GLON, GLAT before merge.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits icmd2='addskycoords \"icrs galactic RA DEC GLON GLAT\"; keepcols \"GLON GLAT\"' out=to_galactic_subset.fits",
        "chat.jar": "failed",
        "error": "Error: Not enough arguments supplied\n\nCommand was: addskycoords \"icrs galactic RA DEC GLON GLAT\"\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (Not enough arguments supplied)\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge photometry tables, ensuring that the combined result contains columns 'MAG_B' and 'MAG_V' in Vega units, converting if necessary.",
        "response": "stilts tcatn nin=2 in1=T1_AB.fits icmd1='replacecol MAG_B \"MAG_B - JOHNSON_AB_B\"' in2=T2_Vega.fits out=vega_unified.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '-' 'JOHNSON_AB_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_B MAG_B - JOHNSON_AB_B\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' 'JOHNSON_AB_B'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate T1 and T2. After joining, add a column that flags if the 'FLUX' is below the global 5th percentile of the combined flux distribution.",
        "response": "stilts tcatn nin=2 in1=T1.fits in2=T2.fits ocmd='addcol IS_LOW_FLUX \"FLUX < quantile(FLUX, 0.05)\"' out=quantile_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<' 'quantile(FLUX,' '0.05)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_LOW_FLUX FLUX < quantile(FLUX, 0.05)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' 'quantile(FLUX,' '0.05)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine tables, ensuring that any missing time values (MJD) are replaced by the constant `55000.0`.",
        "response": "stilts tcatn nin=2 in1=D1.fits in2=D2.fits ocmd='replacecol MJD \"NULL_MJD ? 55000.0 : MJD\"' out=mjd_defaulted.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '?' '55000.0' ':' 'MJD'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MJD NULL_MJD ? 55000.0 : MJD\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '55000.0' ':' 'MJD'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge survey data. In the second survey (S2), select rows corresponding to groups of objects (GroupSize > 1) and keep only one representative per group.",
        "response": "stilts tcatn nin=2 in1=S1.fits in2=S2.fits icmd2='select \"GroupSize > 1\"; uniq \"GroupID\"' out=group_representatives.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GroupSize > 1\n\nUsage: select <expr>\n    (Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two tables, adding a column 'PAR_VOL' calculated as `parallax * parallax * parallax` in the final output.",
        "response": "stilts tcatn nin=2 in1=C1.fits in2=C2.fits ocmd='addcol PAR_VOL \"pow(parallax, 3)\"' out=parallax_volume.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PAR_VOL pow(parallax, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge two tables. T1 has 'Flux_uJy'; convert this to Janskys in T1 before concatenating with T2.",
        "response": "stilts tcatn nin=2 in1=T1.fits icmd1='replacecol FLUX_JY \"Flux_uJy * 1e-6\"' in2=T2.fits out=flux_unit_aligned.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '*' '1e-6'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_JY Flux_uJy * 1e-6\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '1e-6'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge observations from OBS1 and OBS2. Filter OBS2 to include only rows where 'TIME' is between MJD 59000 and MJD 60000.",
        "response": "stilts tcatn nin=2 in1=OBS1.fits in2=OBS2.fits icmd2='select \"TIME > 59000 && TIME < 60000\"' out=time_filtered_concat.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '59000' '&&' 'TIME' '<' '60000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TIME > 59000 && TIME < 60000\n\nUsage: select <expr>\n    (Unused arguments: '>' '59000' '&&' 'TIME' '<' '60000'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables. After concatenation, add a boolean column 'IS_FAINT' which is true if the magnitude 'MAG' is greater than 25.",
        "response": "stilts tcatn nin=2 in1=data1.fits in2=data2.fits ocmd='addcol IS_FAINT \"MAG > 25\"' out=faint_flagged.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' '25'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 25\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '25'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Combine two tables, keeping only the rows where the total flux, 'FLUX_TOT', is greater than the average flux of the combined set.",
        "response": "stilts tcatn nin=2 in1=f1.fits in2=f2.fits ocmd='select \"FLUX_TOT > mean(FLUX_TOT)\"' out=above_average_flux.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '>' 'mean(FLUX_TOT)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX_TOT > mean(FLUX_TOT)\n\nUsage: select <expr>\n    (Unused arguments: '>' 'mean(FLUX_TOT)'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Merge catalog.fits and errors.fits. The errors table has a 'SIGMA' column; convert it from mas to arcseconds before joining.",
        "response": "stilts tcatn nin=2 in1=catalog.fits in2=errors.fits icmd2='replacecol SIGMA_ARCSEC \"SIGMA_MAS / 1000.0\"' out=mas_to_arcsec_merge.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol SIGMA_ARCSEC SIGMA_MAS / 1000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    },
    {
        "prompt": "Concatenate two tables, but filter out all rows where 'Z_REDSHIFT' is greater than 5.0.",
        "response": "stilts tcatn nin=2 in1=high_z.fits in2=low_z.fits ocmd='select \"Z_REDSHIFT <= 5.0\"' out=z_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error: Unused arguments: '<=' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z_REDSHIFT <= 5.0\n\nUsage: select <expr>\n    (Unused arguments: '<=' '5.0'\n(Hint: arguments containing spaces must be quoted))\n",
        "cmd": "tcatn"
    }
]