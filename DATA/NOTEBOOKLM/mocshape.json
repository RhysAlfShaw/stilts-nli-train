[
    {
        "prompt": "Create a MOC from the point positions in `my_catalog.fits`. The coordinate columns are RA_DEG and DEC_DEG.",
        "response": "stilts mocshape in=my_catalog.fits shape=point coords='array(RA_DEG, DEC_DEG)' out=point_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I have a table of instrument pointings with a radius column in degrees. How can I generate the combined coverage MOC?",
        "response": "stilts mocshape in=pointings.vot shape=circle coords='array(RA, DEC, RADIUS_DEG)' out=pointing_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from an ObsCore table using the `s_region` column. Save the output in JSON format.",
        "response": "stilts mocshape in=obscore_results.fits shape=stc-s coords=s_region mocfmt=json out=obscore_footprint.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My table has four corner coordinates for each entry: RA1, DEC1, RA2, DEC2, RA3, DEC3, RA4, DEC4. How do I make a MOC from these polygons?",
        "response": "stilts mocshape in=detector_footprints.fits shape=polygon coords='array(RA1,DEC1,RA2,DEC2,RA3,DEC3,RA4,DEC4)' out=detector_mosaic.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I have a text file where each line is an ASCII MOC string. How can I combine them all into a single FITS MOC?",
        "response": "stilts mocshape in=moc_list.txt ifmt=ascii shape=moc-ascii coords='$1' mocfmt=fits out=combined_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a high-resolution MOC (order 14) for all sources brighter than G=15 in `gaia_dr3.fits`.",
        "response": "stilts mocshape in=gaia_dr3.fits icmd='select phot_g_mean_mag < 15' shape=point coords='array(ra, dec)' order=14 out=bright_gaia_footprint.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select phot_g_mean_mag < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "What's the command to generate a MOC from UNIQ values in the `HPX_PIXEL` column?",
        "response": "stilts mocshape in=healpix_list.fits shape=uniq coords=HPX_PIXEL out=uniq_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a summary of the MOC coverage for my catalog `sources.csv`, without creating a MOC file.",
        "response": "stilts mocshape in=sources.csv ifmt=csv shape=point coords='array(RA,DEC)' mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a low-resolution MOC (order 4) for a random sample of 10000 stars from a simulation.",
        "response": "stilts mocshape in=:skysim:10000 shape=point coords='array(ra, dec)' order=4 out=sim_sample_lowres.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My survey data is in galactic coordinates (`glon`, `glat`). How do I create an ICRS MOC?",
        "response": "stilts mocshape in=survey_galactic.fits icmd='addskycoords galactic icrs glon glat ra_icrs dec_icrs' shape=point coords='array(ra_icrs, dec_icrs)' out=survey_icrs.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "How is `mocshape` different from `pixfoot`?",
        "response": "`mocshape` is more general than `pixfoot`. While `pixfoot` generates MOCs from points or circles by specifying `ra`, `dec`, and an optional `radius`, `mocshape` uses a `coords` expression and a `shape` parameter that can handle points, circles, polygons, STC-S strings, and even other MOCs.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC for circles where the radius in degrees is given by `sqrt(AREA_SQDEG/PI)`.",
        "response": "stilts mocshape in=source_areas.fits shape=circle coords='array(RA, DEC, sqrt(AREA_SQDEG/PI))' out=areas_as_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an ASCII MOC at order 9 for all objects classified as 'QSO'.",
        "response": "stilts mocshape in=classifications.fits icmd='select OBJ_TYPE==\"QSO\"' shape=point coords='array(RA,DEC)' order=9 mocfmt=ascii out=qso_coverage.moc.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need to combine the `s_region` from two different ObsCore tables, `obs1.fits` and `obs2.fits`.",
        "response": "stilts tcat in=obs1.fits in=obs2.fits | stilts mocshape in=- shape=stc-s coords=s_region out=combined_obscore.moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n"
    },
    {
        "prompt": "Create a MOC from a piped input stream of ASCII MOCs.",
        "response": "cat my_mocs.txt | stilts mocshape in=- ifmt=ascii shape=moc-ascii coords='$1' mocfmt=fits out=piped_moc.fits",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "My table has polygon vertices in a single space-separated string column named 'VERTICES'. How do I use it?",
        "response": "stilts mocshape in=polygon_strings.fits shape=polygon coords='parseDoubles(VERTICES)' out=string_polygons.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from points, but only for the northern hemisphere.",
        "response": "stilts mocshape in=all_sky.fits icmd='select DEC >= 0' shape=point coords='array(RA, DEC)' out=north_sky.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "What does `mocfmt=raw` do?",
        "response": "The `mocfmt=raw` option outputs the MOC as a simple binary stream of 64-bit integers representing the UNIQ values of the HEALPix cells. This is a compact but non-standard format.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC for all objects in my table that are inside the 2MASS footprint.",
        "response": "stilts mocshape in=my_objects.fits icmd='select inMoc(\"II/246/out\", RA, DEC)' shape=point coords='array(RA, DEC)' out=in_2mass_footprint.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',' 'RA,' 'DEC)'\n\nCommand was: select inMoc(\"II/246/out\", RA, DEC)\n\nUsage: select <expr>\n    (Unused arguments: ',' 'RA,' 'DEC)')\n"
    },
    {
        "prompt": "My polygon vertices are in separate columns `v1x,v1y`, `v2x,v2y`, `v3x,v3y`. How do I make the MOC?",
        "response": "stilts mocshape in=vertices.fits shape=polygon coords='array(v1x,v1y, v2x,v2y, v3x,v3y)' out=triangle_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a JSON MOC from a list of circles with 10 arcsecond radii.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA,DEC,10.0/3600.0)' mocfmt=json out=target_circles.moc.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I want to see the sky fraction covered by my `s_region` column.",
        "response": "stilts mocshape in=my_table.fits shape=stc-s coords=s_region mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a very low-resolution MOC (order 2) from a list of polygons.",
        "response": "stilts mocshape in=polygons.fits shape=polygon coords='parseDoubles(VERTICES)' order=2 out=lowres_polygons.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My input table is an ECSV file. Generate a FITS MOC from it.",
        "response": "stilts mocshape in=data.ecsv ifmt=ecsv shape=point coords='array(ra,dec)' mocfmt=fits out=ecsv_source.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "How do I specify a very high resolution, like order 18?",
        "response": "stilts mocshape in=small_patch.fits shape=point coords='array(RA,DEC)' order=18 out=hires_patch.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Can `mocshape` handle non-ICRS coordinates in STC-S strings?",
        "response": "The documentation notes that for STC-S, `<frame>`, `<refpos>` and `<flavor>` metadata are ignored. This implies that all coordinates are treated as ICRS degrees, so you may need to preprocess them into ICRS first.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC from UNIQ values, but only for those at HEALPix order 8.",
        "response": "stilts mocshape in=uniqs.fits icmd='select uniqToOrder(UNIQ_COL)==8' shape=uniq coords=UNIQ_COL order=8 out=order8_uniqs.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I want to generate the footprint of every 50th instrument pointing.",
        "response": "stilts mocshape in=pointings.fits icmd='every 50' shape=circle coords='array(RA,DEC,RADIUS)' out=sparse_pointings.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Which `mocimpl` option should I use for best performance?",
        "response": "The default `mocimpl=auto` chooses the implementation based on the MOC order. The documentation suggests that performance characteristics may differ, and it may be worthwhile to experiment if you are working with very large tables.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate a MOC from STC-S strings, but only for polygons with more than 4 vertices.",
        "response": "stilts mocshape in=obscore.vot shape=stc-s coords=s_region icmd='select size(parseDoubles(s_region)) > 8' out=many_vertex_polygons.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '8'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select size(parseDoubles(s_region)) > 8\n\nUsage: select <expr>\n    (Unused arguments: '>' '8'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "My radius column is in arcseconds. How do I make circles?",
        "response": "stilts mocshape in=cat.fits shape=circle coords='array(RA,DEC,RADIUS_ARCSEC/3600.0)' out=arcsec_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC from a list of MOCs stored in a FITS table.",
        "response": "stilts mocshape in=moc_table.fits shape=moc-ascii coords=MOC_ASCII_COL out=combined_from_table.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a `cds_json` format MOC. What is that?",
        "response": "The `cds_json` format is a specific JSON serialization used by some CDS services like Aladin Lite. You can generate it like this: `stilts mocshape in=cat.fits shape=point coords='array(RA,DEC)' mocfmt=cds_json out=aladin_lite.json`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "My table has FK4 coordinates. Can I generate a MOC directly?",
        "response": "No, MOCs are defined in ICRS. You must first convert the coordinates using a filter: `stilts mocshape in=fk4.fits icmd='addskycoords fk4 fk5 RA_FK4 DEC_FK4 RA_ICRS DEC_ICRS' shape=point coords='array(RA_ICRS, DEC_ICRS)' out=fk4_converted.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "I need to get the MOC for the first 100 entries of my `s_region` column.",
        "response": "stilts mocshape in=obscore.fits icmd='head 100' shape=stc-s coords=s_region out=first_100_regions.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create the MOC for a list of HEALPix pixels given by order and index columns.",
        "response": "stilts mocshape in=pixels.fits shape=uniq coords='mocUniq(ORDER_COL, INDEX_COL)' out=pixels.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate the MOC for all sources where the `QUALITY` flag is not 'bad'.",
        "response": "stilts mocshape in=data.fits icmd='select QUALITY != \"bad\"' shape=point coords='array(RA,DEC)' out=good_quality.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!=' 'bad'\n\nCommand was: select QUALITY != \"bad\"\n\nUsage: select <expr>\n    (Unused arguments: '!=' 'bad')\n"
    },
    {
        "prompt": "My polygon vertices are in an array-valued column `VERT_ARRAY`. How do I use it?",
        "response": "stilts mocshape in=polygons.fits shape=polygon coords=VERT_ARRAY out=polygon_arrays.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a FITS MOC from a list of circles with 1 arcminute radii.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA,DEC,1.0/60.0)' mocfmt=fits out=arcmin_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "What does an order of 29 mean?",
        "response": "An order of 29 is the highest resolution for a MOC, corresponding to an extremely fine grid of pixels on the sky. It is suitable only for very small regions. Example: `stilts mocshape in=small.fits order=29 ...`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate a MOC from the positions in a Parquet file.",
        "response": "stilts mocshape in=data.parquet shape=point coords='array(ra,dec)' out=parquet_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "How do I make a MOC from circles where the radius depends on magnitude, e.g., `5.0/phot_g_mean_mag`?",
        "response": "stilts mocshape in=gaia.fits shape=circle coords='array(ra,dec, 5.0/phot_g_mean_mag)' out=mag_dependent_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Combine the footprints of `survey_a.fits` (points) and `survey_b.fits` (STC-S polygons).",
        "response": "stilts tcatn nin=2 in1=survey_a.fits icmd1='addcol region array(RA,DEC)' in2=survey_b.fits icmd2='addcol region s_region' | stilts mocshape in=- shape=stc-s coords=region out=combined_surveys.moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n"
    },
    {
        "prompt": "Can `mocshape` handle STC-S UNIONs?",
        "response": "Yes, the documentation indicates that `mocshape` with `shape=stc-s` can handle UNIONs of all shape types.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate an order 0 MOC. What would that look like?",
        "response": "An order 0 MOC represents coverage using the 12 base HEALPix pixels. It is the coarsest possible MOC. `stilts mocshape in=mycat.fits shape=point coords='array(RA,DEC)' order=0 out=order0.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC from a `colfits` file.",
        "response": "stilts mocshape in=data.colfits ifmt=colfits shape=point coords='array(ra,dec)' out=colfits_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter ifmt: Unknown format colfits\n    (No table handler available for colfits)\nUsage: ifmt=<in-format>\n\n"
    },
    {
        "prompt": "My input has STC-S strings, but some are invalid. Will `mocshape` fail?",
        "response": "It will likely produce warnings for the invalid rows and skip them, but continue processing the valid ones. You should check the output on standard error for any messages.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate a MOC from all sources except those in the Small Magellanic Cloud.",
        "response": "stilts mocshape in=allsky.fits icmd='select skyDistanceDegrees(RA,DEC,13.18,-72.82) > 5' shape=point coords='array(RA,DEC)' out=no_smc.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,13.18,-72.82) > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I have a table of MOCs. I want to create a new column which is the sky fraction of each, and then make a combined MOC of only the large ones.",
        "response": "stilts tpipe in=mocs.fits cmd='addcol sky_frac mocSkyProportion($1)' cmd='select sky_frac > 0.01' | stilts mocshape in=- shape=moc-ascii coords='$1' out=large_mocs.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\nError: Unused arguments: '>' '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select sky_frac > 0.01\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.01'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Can `mocshape` read a gzipped CSV file?",
        "response": "Yes, STILTS commands automatically decompress gzipped inputs. `stilts mocshape in=data.csv.gz ifmt=csv shape=point coords='array(ra,dec)' out=data.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate the MOC of all pointings from a log file that happened in 2023.",
        "response": "stilts mocshape in=log.fits icmd='select startsWith(OBS_DATE, \"2023\")' shape=circle coords='array(RA,DEC,FOV_RADIUS)' out=log_2023.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '2023' ')'\n\nCommand was: select startsWith(OBS_DATE, \"2023\")\n\nUsage: select <expr>\n    (Unused arguments: '2023' ')')\n"
    },
    {
        "prompt": "How do I handle polygons with holes in `mocshape`?",
        "response": "The documentation notes that for STC-S, POLYGON winding direction is ignored, and for TFCat, holes are not displayed correctly. This suggests that `mocshape` may not handle polygons with holes correctly and might fill them in.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC from the positions in every FITS table within `my_archive.fits`.",
        "response": "stilts tcat in=my_archive.fits multi=true | stilts mocshape in=- shape=point coords='array(RA,DEC)' out=archive_footprint.moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\nError: No file, URL or command \"my_archive.fits\"\n"
    },
    {
        "prompt": "Generate a MOC for circles whose radius is `0.1 * log10(FLUX)`.",
        "response": "stilts mocshape in=flux_cat.fits shape=circle coords='array(RA,DEC,0.1*log10(FLUX))' out=flux_scaled_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Can I use `mocshape` to find regions with NO coverage?",
        "response": "Not directly. `mocshape` creates a MOC of the covered regions. You would need to use another tool or a script that can perform a 'NOT' operation on the generated MOC against an all-sky MOC.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "My table has two radius columns, `R1` and `R2`. I need to use the larger of the two for the MOC.",
        "response": "stilts mocshape in=radii.fits shape=circle coords='array(RA,DEC,max(R1,R2))' out=max_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for all sources with a parallax greater than 100 mas.",
        "response": "stilts mocshape in=gaia.fits icmd='select PARALLAX > 100' shape=point coords='array(ra,dec)' out=nearby_stars.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PARALLAX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "What does a negative order mean for `mocshape`?",
        "response": "The `order` parameter must be a non-negative integer between 0 and 29. A negative value is not permitted and will result in an error.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC from a table where the coordinates are in the FK4 system.",
        "response": "stilts mocshape in=fk4_cat.fits icmd='addskycoords fk4 fk5 RA_FK4 DEC_FK4 RA_J2000 DEC_J2000' shape=point coords='array(RA_J2000, DEC_J2000)' out=fk4_converted_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need the footprint for sources where the flux error is less than 5% of the flux.",
        "response": "stilts mocshape in=fluxes.fits icmd='select FLUX_ERR < (0.05 * FLUX)' shape=point coords='array(RA,DEC)' out=low_relative_error.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '(0.05' '*' 'FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX_ERR < (0.05 * FLUX)\n\nUsage: select <expr>\n    (Unused arguments: '<' '(0.05' '*' 'FLUX)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "My radius column `DIAM_ARCSEC` is a diameter in arcseconds. How do I use it?",
        "response": "stilts mocshape in=diameters.fits shape=circle coords='array(RA,DEC,DIAM_ARCSEC/2.0/3600.0)' out=diameters_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC of all sources from a simulation with galactic latitude |b|>20.",
        "response": "stilts mocshape in=:skysim:1e6 icmd='addskycoords icrs galactic ra dec l b' icmd='select abs(b)>20' shape=point coords='array(ra,dec)' out=high_latitude.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate the MOC of all stars of spectral type 'M'.",
        "response": "stilts mocshape in=spectral_types.fits icmd='select startsWith(SP_TYPE, \"M\")' shape=point coords='array(RA,DEC)' out=m_stars.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'M' ')'\n\nCommand was: select startsWith(SP_TYPE, \"M\")\n\nUsage: select <expr>\n    (Unused arguments: 'M' ')')\n"
    },
    {
        "prompt": "I need the footprint for sources that are not saturated (`SATURATED==false`).",
        "response": "stilts mocshape in=photometry.fits icmd='select !SATURATED' shape=point coords='array(RA,DEC)' out=unsaturated.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Can `mocshape` handle tables with millions of rows?",
        "response": "Yes, STILTS commands are generally designed to handle large tables, often by streaming data to keep memory usage low.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate a MOC for all sources that are within 5 degrees of the galactic center.",
        "response": "stilts mocshape in=allsky.fits icmd='addskycoords icrs galactic RA DEC L B' icmd='select skyDistance(L,B,0,0) < 5' shape=point coords='array(RA,DEC)' out=galactic_center.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistance(L,B,0,0) < 5\n\nUsage: select <expr>\n    (Unused arguments: '<' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "What does a negative radius in a `shape=circle` coordinate mean?",
        "response": "A negative radius is physically meaningless for a circle. `mocshape` will likely ignore rows where the radius expression evaluates to a negative number, so they will not contribute to the final MOC.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC for polygons defined in an array column, but only if the polygon has exactly 4 vertices.",
        "response": "stilts mocshape in=polygons.fits icmd='select size(VERTICES)==8' shape=polygon coords=VERTICES out=quadrilaterals.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I want the MOC for all sources in `my_data.fits` that are NOT near the Andromeda galaxy (within 1 degree).",
        "response": "stilts mocshape in=my_data.fits icmd='select skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1' shape=point coords='array(RA,DEC)' out=not_andromeda.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1\n\nUsage: select <expr>\n    (Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a `cds_fits` format MOC from my `s_region` column.",
        "response": "stilts mocshape in=obscore.fits shape=stc-s coords=s_region mocfmt=cds_fits out=obscore_cds.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "The radius of each source is its `PSF_WIDTH` in arcseconds divided by 2. Generate the footprint.",
        "response": "stilts mocshape in=psf_data.fits shape=circle coords='array(RA,DEC,PSF_WIDTH/2.0/3600.0)' out=psf_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC from all sources that are NOT within the SDSS footprint.",
        "response": "stilts mocshape in=my_sources.fits icmd='select !inMoc(\"V/139/sdss9\", RA, DEC)' shape=point coords='array(RA,DEC)' out=not_in_sdss.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',' 'RA,' 'DEC)'\n\nCommand was: select !inMoc(\"V/139/sdss9\", RA, DEC)\n\nUsage: select <expr>\n    (Unused arguments: ',' 'RA,' 'DEC)')\n"
    },
    {
        "prompt": "My radius is `R_PIX` pixels, and my plate scale is `SCALE_AS` arcsec/pixel. How do I make the MOC?",
        "response": "stilts mocshape in=plate_data.fits shape=circle coords='array(RA,DEC, R_PIX * SCALE_AS / 3600.0)' out=plate_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC at order 12 from every 5th row of my catalog.",
        "response": "stilts mocshape in=mycat.fits icmd='every 5' order=12 shape=point coords='array(RA,DEC)' out=mycat_every5_o12.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "What does a zero radius mean for `shape=circle`?",
        "response": "A radius of zero means each position is treated as a single point on the sky. The MOC will cover the smallest HEALPix pixel at the given order that contains each point.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate an ASCII MOC for objects where the year of observation (`OBS_YEAR`) is 2023.",
        "response": "stilts mocshape in=obs_log.fits icmd='select OBS_YEAR==2023' shape=point coords='array(RA,DEC)' mocfmt=ascii out=obs_2023.moc.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My `csv` file has columns ra_sex and dec_sex. Make me a MOC.",
        "response": "stilts mocshape in=data.csv ifmt=csv shape=point coords='array(hmsToDegrees(ra_sex),dmsToDegrees(dec_sex))' out=data_sex.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for all sources with `parallax_error < 0.1`.",
        "response": "stilts mocshape in=gaia.fits icmd='select parallax_error < 0.1' shape=point coords='array(ra,dec)' out=low_parallax_error.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select parallax_error < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "What does a MOC look like in ASCII format?",
        "response": "An ASCII MOC is a space-separated list of HEALPix orders and pixel indices, like '4/1 2 3 5/10-15 ...'. You can generate one with `mocfmt=ascii`.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC from `data.fits`, but only for rows where `ID` matches a regex `^GAL-`.",
        "response": "stilts mocshape in=data.fits icmd='select matches(ID, \"^GAL-\")' shape=point coords='array(RA,DEC)' out=gal_ids.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '^GAL-' ')'\n\nCommand was: select matches(ID, \"^GAL-\")\n\nUsage: select <expr>\n    (Unused arguments: '^GAL-' ')')\n"
    },
    {
        "prompt": "My radius column `R_KPC` is in kiloparsecs and I have distance `D_MPC`. Create MOC.",
        "response": "stilts mocshape in=physical.fits shape=circle coords='array(RA,DEC,atan(R_KPC*1e-3/D_MPC)*180/PI)' out=physical_to_angular.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from `data.fits`, but only keep sources that are in the VizieR 2MASS footprint.",
        "response": "stilts mocshape in=my_sources.fits icmd='select inMoc(\"II/246/out\", RA, DEC)' shape=point coords='array(RA,DEC)' out=in_2mass.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',' 'RA,' 'DEC)'\n\nCommand was: select inMoc(\"II/246/out\", RA, DEC)\n\nUsage: select <expr>\n    (Unused arguments: ',' 'RA,' 'DEC)')\n"
    },
    {
        "prompt": "My table has two radius columns, `R_MAJ` and `R_MIN`, and a position angle `PA`. How can I make a MOC?",
        "response": "You can use the STC-S shape type. First, create the STC-S string: `icmd='addcol stc_s \"Ellipse ICRS \"+RA+\" \"+DEC+\" \"+R_MAJ+\" \"+R_MIN+\" \"+PA'` then use that column: `stilts mocshape in=... shape=stc-s coords=stc_s ...`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC for all sources that are not flagged (`FLAG_COL == 0`).",
        "response": "stilts mocshape in=flags.fits icmd='select FLAG_COL==0' shape=point coords='array(RA,DEC)' out=unflagged.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I have an ASCII table with a header I need to skip. How to use `mocshape`?",
        "response": "You can use the `tail` filter. If your header is 5 lines long, use `icmd='tail ($nrow - 5)'`. For example: `stilts mocshape in=data.txt ifmt=ascii icmd='tail ($nrow-5)' shape=point coords='array($1,$2)' out=footprint.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "My RA column contains null values. Will `mocshape` work?",
        "response": "`mocshape` will ignore rows where the coordinate expressions evaluate to a null value and only process the valid rows.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a JSON MOC for the region of the Andromeda galaxy from a simulated catalog.",
        "response": "stilts mocshape in=:skysim:1e4 icmd='select skyDistanceDegrees(ra,dec,10.68,41.27)<2' shape=point coords='array(ra,dec)' mocfmt=json out=m31.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My table has circle centers, but all circles have a radius of 0.1 deg. How can I specify that?",
        "response": "stilts mocshape in=centers.fits shape=circle coords='array(RA,DEC,0.1)' out=fixed_radius_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from all sources that have a valid proper motion measurement.",
        "response": "stilts mocshape in=pm.fits icmd='select !NULL_PMRA && !NULL_PMDEC' shape=point coords='array(RA,DEC)' out=pm_coverage.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_PMRA && !NULL_PMDEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I have an ASCII file with three columns: ID, RA, Dec. How do I make a footprint?",
        "response": "stilts mocshape in=id_ra_dec.txt ifmt=ascii shape=point coords='array($2, $3)' out=id_ra_dec.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My radius column is in radians. How to use it for circles?",
        "response": "stilts mocshape in=rad_radius.fits shape=circle coords='array(RA,DEC,radiansToDegrees(RADIUS_RAD))' out=rad_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a FITS MOC from a 10 million star simulation at order 9.",
        "response": "stilts mocshape in=:skysim:1e7 shape=point coords='array(ra,dec)' order=9 out=sim_10M_o9.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Can you generate the MOC for my data and save it as a JSON file named `celestial_tapestry.moc.json`?",
        "response": "stilts mocshape in=my_data.fits mocfmt=json shape=point coords='array(RA,DEC)' out=celestial_tapestry.moc.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for objects where the `OBS_TYPE` column is 'SPECTROSCOPY'.",
        "response": "stilts mocshape in=obs_log.fits icmd='select OBS_TYPE==\"SPECTROSCOPY\"' shape=point coords='array(RA,DEC)' out=spectroscopy_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC from `data.fits`, but only for rows where `ID` matches a regex `^GAL-`.",
        "response": "stilts mocshape in=data.fits icmd='select matches(ID, \"^GAL-\")' shape=point coords='array(RA,DEC)' out=gal_ids.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '^GAL-' ')'\n\nCommand was: select matches(ID, \"^GAL-\")\n\nUsage: select <expr>\n    (Unused arguments: '^GAL-' ')')\n"
    },
    {
        "prompt": "Can `mocshape` output anything other than a MOC?",
        "response": "No, the primary purpose of `mocshape` is to generate a Multi-Order Coverage map (MOC). It outputs this MOC in one of several formats controlled by `mocfmt`.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC for all sources in `mycat.fits` that are near (within 0.1 deg) the celestial equator.",
        "response": "stilts mocshape in=mycat.fits icmd='select abs(DEC) < 0.1' shape=point coords='array(RA,DEC)' out=equator_sources.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC for sources with a measurement epoch after 2015.0.",
        "response": "stilts mocshape in=epochs.fits icmd='select EPOCH > 2015.0' shape=point coords='array(RA,DEC)' out=post_2015.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '2015.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select EPOCH > 2015.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '2015.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "My radius column `R_KPC` is in kiloparsecs and I have distance `D_MPC`. Create a MOC of circles.",
        "response": "stilts mocshape in=physical.fits shape=circle coords='array(RA,DEC,atan(R_KPC*1e-3/D_MPC)*180/PI)' out=physical_to_angular.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "What's the command to make a MOC from the `RA_GAL` and `DEC_GAL` columns?",
        "response": "stilts mocshape in=galactic_cat.fits icmd='addskycoords galactic icrs RA_GAL DEC_GAL RA_ICRS DEC_ICRS' shape=point coords='array(RA_ICRS,DEC_ICRS)' out=galactic_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My table has two sets of corners for a bowtie shape. Can I represent this with `mocshape`?",
        "response": "Yes, for `shape=polygon`, a `NaN, NaN` pair in the coordinate array delimits distinct polygons for a single row. So you can use an expression like `coords='array(RA1,D1,RA2,D2,RA3,D3, NaN,NaN, RA4,D4,RA5,D5,RA6,D6)'`.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC from all sources that have a non-zero `IS_VARIABLE` flag.",
        "response": "stilts mocshape in=variables.fits icmd='select IS_VARIABLE != 0' shape=point coords='array(RA,DEC)' out=variable_sources.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select IS_VARIABLE != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "My radius column `DIAM_ARCSEC` is a diameter in arcseconds. How do I use it with `shape=circle`?",
        "response": "stilts mocshape in=diameters.fits shape=circle coords='array(RA,DEC,DIAM_ARCSEC / 2.0 / 3600.0)' out=diameters_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate the MOC of all stars of spectral type 'G' from my catalog.",
        "response": "stilts mocshape in=spectral_types.fits icmd='select startsWith(SP_TYPE, \"G\")' shape=point coords='array(RA,DEC)' out=g_stars.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'G' ')'\n\nCommand was: select startsWith(SP_TYPE, \"G\")\n\nUsage: select <expr>\n    (Unused arguments: 'G' ')')\n"
    },
    {
        "prompt": "Create a MOC for all positions in `cat_a.fits` and `cat_b.csv` combined.",
        "response": "stilts tcatn nin=2 in1=cat_a.fits icmd1='keepcols \"RA DEC\"' in2=cat_b.csv ifmt2=csv icmd2='keepcols \"RA DEC\"' | stilts mocshape in=- shape=point coords='array(RA,DEC)' out=combined_ab.moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n"
    },
    {
        "prompt": "Generate a MOC for sources with a given radius, but exclude sources near the galactic center.",
        "response": "stilts mocshape in=sources.fits icmd='addskycoords icrs galactic RA DEC L B' icmd='select skyDistance(L,B,0,0) > 10' shape=circle coords='array(RA,DEC,0.1)' out=no_gc_sources.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistance(L,B,0,0) > 10\n\nUsage: select <expr>\n    (Unused arguments: '>' '10'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I need the MOC of a list of UNIQ values at order 10.",
        "response": "stilts mocshape in=uniqs.fits shape=uniq coords=UNIQ_COL order=10 out=uniq_moc_o10.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC for all sources in `mycat.fits` with a radius of 0.",
        "response": "This is equivalent to `shape=point`. `stilts mocshape in=mycat.fits shape=point coords='array(RA,DEC)' out=points_only.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate a MOC from a table with a fixed 1 milliparcsecond radius per point.",
        "response": "stilts mocshape in=hires_points.fits shape=circle coords='array(RA,DEC,1.0/3600000.0)' out=mas_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create the footprint of all sources with a parallax measurement (`PARALLAX` is not null).",
        "response": "stilts mocshape in=gaia_sample.fits icmd='select !NULL_PARALLAX' shape=point coords='array(ra,dec)' out=parallax_sources_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My input table has a column 'footprint' with ASCII MOC strings. How can I combine them all into one MOC?",
        "response": "You can use `mocshape` for that: `stilts mocshape in=mocs_table.fits shape=moc-ascii coords=footprint out=combined.moc.fits`.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate a MOC at the maximum supported resolution, order 29.",
        "response": "stilts mocshape in=small_area.fits order=29 shape=point coords='array(ra,dec)' out=max_resolution.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I have RA and DEC in separate files. Can I make a footprint?",
        "response": "First you need to join them into a single table: `stilts tjoin nin=2 in1=ra_list.txt ifmt1=ascii in2=dec_list.txt ifmt2=ascii | stilts mocshape in=- ifmt=ascii shape=point coords='array($1, $2)' out=ra_dec_footprint.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a JSON MOC for the galactic plane (|b| < 5 degrees).",
        "response": "stilts mocshape in=:skysim:1e6 icmd='addskycoords icrs galactic ra dec l b' icmd='select abs(b) < 5' shape=point coords='array(ra, dec)' mocfmt=json out=galactic_plane.moc.json",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(b) < 5\n\nUsage: select <expr>\n    (Unused arguments: '<' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC for all sources where the error in position is below a certain threshold.",
        "response": "stilts mocshape in=errors.fits icmd='select hypot(RA_ERR,DEC_ERR) < 0.5' shape=point coords='array(RA,DEC)' out=low_total_err.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(RA_ERR,DEC_ERR) < 0.5\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a MOC for all data points that have an associated spectrum (`HAS_SPECTRUM` column is true).",
        "response": "stilts mocshape in=data_products.fits icmd='select HAS_SPECTRUM' shape=point coords='array(RA,DEC)' out=spectral_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from a file `events.fits`, but only use rows with an even index number.",
        "response": "stilts mocshape in=events.fits icmd='select $0 % 2 == 0' shape=point coords='array(RA,DEC)' out=even_rows_footprint.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate the footprint for objects where the magnitude is between 15 and 16.",
        "response": "stilts mocshape in=magnitudes.fits icmd='select MAG > 15 && MAG < 16' shape=point coords='array(RA,DEC)' out=mag_slice_coverage.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '15' '&&' 'MAG' '<' '16'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 15 && MAG < 16\n\nUsage: select <expr>\n    (Unused arguments: '>' '15' '&&' 'MAG' '<' '16'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "My radius column `R_MAS` is in milliarcseconds. How do I use it for circles?",
        "response": "stilts mocshape in=mas_radius.fits shape=circle coords='array(RA,DEC,R_MAS / 3600000.0)' out=mas_radius_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate the MOC of all sources in a given RA range, e.g., 200 < RA < 210.",
        "response": "stilts mocshape in=survey.fits icmd='select RA > 200 && RA < 210' shape=point coords='array(RA,DEC)' out=ra_slice.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '200' '&&' 'RA' '<' '210'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 200 && RA < 210\n\nUsage: select <expr>\n    (Unused arguments: '>' '200' '&&' 'RA' '<' '210'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I need the footprint for sources with a color `g-r` less than 0.1.",
        "response": "stilts mocshape in=colors.fits icmd='select g-r < 0.1' shape=point coords='array(RA,DEC)' out=blue_sources_coverage.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select g-r < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "My table has FK4 coords and a radius in arcmin. How to make a J2000 MOC?",
        "response": "stilts mocshape in=fk4_data.fits icmd='addskycoords fk4 fk5 RA_FK4 DEC_FK4 RA_J2000 DEC_J2000' shape=circle coords='array(RA_J2000,DEC_J2000,RADIUS_ARCMIN/60.0)' out=fk4_to_fk5_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create the footprint for all sources except those where the `MASK` column is non-zero.",
        "response": "stilts mocshape in=masked_data.fits icmd='select MASK==0' shape=point coords='array(RA,DEC)' out=unmasked_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for all sources that are present in both `cat_A.fits` and `cat_B.fits`.",
        "response": "stilts tmatch2 in1=cat_A.fits in2=cat_B.fits matcher=sky params=1 values1='RA DEC' values2='RA DEC' | stilts mocshape in=- shape=point coords='array(RA_1,DEC_1)' out=common_AB.moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n"
    },
    {
        "prompt": "Generate the footprint for all sources except those where `QUALITY` is 'bad'.",
        "response": "stilts mocshape in=quality.fits icmd='select QUALITY != \"bad\"' shape=point coords='array(RA,DEC)' out=good_quality.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!=' 'bad'\n\nCommand was: select QUALITY != \"bad\"\n\nUsage: select <expr>\n    (Unused arguments: '!=' 'bad')\n"
    },
    {
        "prompt": "My RA column contains NaN values. What will happen?",
        "response": "`mocshape` ignores rows where the coordinate expressions result in a NaN or null value, so those rows will not contribute to the MOC.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a `cds_ascii` format MOC from `s_region`.",
        "response": "stilts mocshape in=obscore.fits shape=stc-s coords=s_region mocfmt=cds_ascii out=obscore.moc.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Can `mocshape` read a bzipped FITS file?",
        "response": "Yes, `mocshape` can read files compressed with bzip2, gzip, or Unix compress automatically.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate a MOC for pointings where the `OBSERVER` name is 'Hubble'.",
        "response": "stilts mocshape in=obs_log.fits icmd='select OBSERVER==\"Hubble\"' shape=circle coords='array(RA,DEC,FOV)' out=hubble_pointings.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My `csv` file has columns ra_hms and dec_dms. Make me a MOC.",
        "response": "stilts mocshape in=data.csv ifmt=csv shape=point coords='array(hmsToDegrees(ra_hms),dmsToDegrees(dec_dms))' out=data_sexagesimal.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC from the positions in `my_data.fits`, but give me an error if any of the coordinates are null.",
        "response": "stilts mocshape in=my_data.fits icmd='assert !NULL_RA && !NULL_DEC' shape=point coords='array(RA,DEC)' out=asserted_coords.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert !NULL_RA && !NULL_DEC\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC at order 11 covering all sources that are more than 10 degrees from the North Ecliptic Pole.",
        "response": "stilts mocshape in=all_sky.fits icmd='addskycoords icrs ecliptic RA DEC ELON ELAT' icmd='select skyDistance(ELON,ELAT,270,90) > 10' shape=point coords='array(RA,DEC)' out=far_from_nep.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistance(ELON,ELAT,270,90) > 10\n\nUsage: select <expr>\n    (Unused arguments: '>' '10'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I need the footprint for a 1 pixel radius from my camera, where the plate scale is 0.5 arcsec/pixel.",
        "response": "stilts mocshape in=detections.fits shape=circle coords='array(RA,DEC, 1.0 * 0.5 / 3600.0)' out=single_pixel_regions.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC from the rows where the `MAG_ERROR` is at its minimum value for the whole table.",
        "response": "stilts mocshape in=photometry.fits icmd='select MAG_ERROR==minimum(MAG_ERROR)' shape=point coords='array(RA,DEC)' out=best_photometry.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Can you generate a MOC for my data and save it as a JSON file named `celestial_tapestry.moc.json`?",
        "response": "stilts mocshape in=my_data.fits mocfmt=json shape=point coords='array(RA,DEC)' out=celestial_tapestry.moc.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My radius is given by column `R_UAS` in microarcseconds. How do I use it for circles?",
        "response": "stilts mocshape in=uas_radii.fits shape=circle coords='array(RA,DEC,R_UAS/3600000000.0)' out=uas_radii_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC from a table with a fixed 0.5 arcsec radius, at order 15.",
        "response": "stilts mocshape in=points.fits shape=circle coords='array(RA,DEC,0.5/3600.0)' order=15 out=hires_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need the footprint for sources that are not saturated (`SATURATED` column is false).",
        "response": "stilts mocshape in=photometry.fits icmd='select !SATURATED' shape=point coords='array(RA,DEC)' out=unsaturated.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "What's the command to get a JSON MOC from a simulation of exactly 1 star?",
        "response": "stilts mocshape in=:skysim:1 shape=point coords='array(ra,dec)' mocfmt=json out=single_star.moc.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC at order 10 covering all sources that are more than 170 degrees away from the galactic center.",
        "response": "stilts mocshape in=all_sky.fits icmd='addskycoords icrs galactic RA DEC L B' icmd='select skyDistance(L,B,0,0) > 170' shape=point coords='array(RA,DEC)' out=far_field.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '170'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistance(L,B,0,0) > 170\n\nUsage: select <expr>\n    (Unused arguments: '>' '170'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a MOC from the rows where the `MAG_ERROR` is less than 0.05.",
        "response": "stilts mocshape in=photometry.fits icmd='select MAG_ERR < 0.05' shape=point coords='array(RA,DEC)' out=low_error_phot.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR < 0.05\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.05'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC for circles whose radius is determined by a lookup table based on the `TYPE` column.",
        "response": "stilts mocshape in=objects.fits shape=circle coords='array(RA,DEC,(TYPE==1 ? 0.1 : (TYPE==2 ? 0.2 : 0.05)))' out=type_dependent_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC from a sample of rows where the row index is a prime number (up to a limit).",
        "response": "stilts mocshape in=huge_catalog.fits icmd='select isPrime($0)' shape=point coords='array(RA,DEC)' out=prime_rows.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My coordinate columns are simply named `c1` and `c2`. How do I generate a MOC?",
        "response": "stilts mocshape in=generic_coords.fits shape=point coords='array(c1, c2)' out=generic_coords_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I have ecliptic coordinates in radians. How do I make the MOC?",
        "response": "stilts mocshape in=ecliptic_rad.fits icmd='addskycoords ecliptic icrs radiansToDegrees(ELON_RAD) radiansToDegrees(ELAT_RAD) RA_ICRS DEC_ICRS' shape=point coords='array(RA_ICRS,DEC_ICRS)' out=ecliptic_rad_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC for circles whose radius is `abs(MAGNITUDE)/100` degrees.",
        "response": "stilts mocshape in=magnitudes.fits shape=circle coords='array(RA,DEC,abs(MAGNITUDE)/100.0)' out=mag_scaled_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Can `mocshape` read a file from a URL?",
        "response": "Yes, the `in` parameter can accept a URL. For example: `stilts mocshape in=http://example.com/cat.fits ...`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate a MOC for sources with a `CONFIDENCE_LEVEL` of 95% or higher.",
        "response": "stilts mocshape in=confident_detections.fits icmd='select CONFIDENCE_LEVEL >= 0.95' shape=point coords='array(RA,DEC)' out=confident_coverage.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '0.95'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select CONFIDENCE_LEVEL >= 0.95\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0.95'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I need the footprint for the second HDU of my FITS file `multi_data.fits`.",
        "response": "stilts mocshape in=multi_data.fits#2 shape=point coords='array(RA,DEC)' out=hdu2_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC at order 11 from the combined positions of `a.csv`, `b.csv`, and `c.csv`.",
        "response": "stilts tcat ifmt=csv in=a.csv in=b.csv in=c.csv | stilts mocshape in=- order=11 shape=point coords='array($1,$2)' out=abc_combined.moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n"
    },
    {
        "prompt": "Generate a MOC for objects where `COLOR_INDEX` is between 0.5 and 1.0.",
        "response": "stilts mocshape in=colors.fits icmd='select COLOR_INDEX > 0.5 && COLOR_INDEX < 1.0' shape=point coords='array(RA,DEC)' out=color_selected.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.5' '&&' 'COLOR_INDEX' '<' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select COLOR_INDEX > 0.5 && COLOR_INDEX < 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5' '&&' 'COLOR_INDEX' '<' '1.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "My `csv` file has headerless columns. How do I reference them to make a MOC?",
        "response": "You can reference them by index, starting with `$1`. For example: `stilts mocshape in=data.csv ifmt=csv icmd='select $3>0' shape=point coords='array($1,$2)' out=data.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC from the central 50% of the rows in my catalog.",
        "response": "stilts mocshape in=mycat.fits icmd='select $0 > ($nrow*0.25) && $0 < ($nrow*0.75)' shape=point coords='array(RA,DEC)' out=central_50pct.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '($nrow*0.25)' '&&' '$0' '<' '($nrow*0.75)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 > ($nrow*0.25) && $0 < ($nrow*0.75)\n\nUsage: select <expr>\n    (Unused arguments: '>' '($nrow*0.25)' '&&' '$0' '<' '($nrow*0.75)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate the footprint for all sources in the file `candidates.fits` at order 11.",
        "response": "stilts mocshape in=candidates.fits order=11 shape=point coords='array(RA,DEC)' out=candidates_o11.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC from a `cdf` file.",
        "response": "stilts mocshape in=data.cdf ifmt=cdf shape=point coords='array(RA,DEC)' out=cdf_coverage.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for all sources with a non-blank name.",
        "response": "stilts mocshape in=names.fits icmd='select !NULL_NAME' shape=point coords='array(RA,DEC)' out=named_objects_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a MOC with a fixed radius of 0.001 degrees for all points.",
        "response": "stilts mocshape in=points.fits shape=circle coords='array(RA,DEC,0.001)' out=small_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an ASCII MOC for the southern galactic hemisphere from a simulation.",
        "response": "stilts mocshape in=:skysim:1e5 icmd='addskycoords icrs galactic ra dec l b' icmd='select b < 0' shape=point coords='array(ra,dec)' mocfmt=ascii out=south_galactic_sim.txt",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select b < 0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "What are the output format options for `mocfmt`?",
        "response": "The `mocfmt` parameter supports `ascii`, `fits`, `json`, `raw`, `summary`, `cds_ascii`, `cds_json`, and `cds_fits` formats.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate a MOC from every 5th row of my input table `observations.vot`.",
        "response": "stilts mocshape in=observations.vot icmd='every 5' shape=point coords='array(RA,DEC)' out=obs_every_5.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC from a file where the RA column needs to be fixed with `ra = ra % 360`.",
        "response": "stilts mocshape in=wrapped_ra.fits icmd='replacecol ra \"ra % 360\"' shape=point coords='array(ra,dec)' out=unwrapped_ra.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I have a catalog of globular clusters. Generate a MOC with a 0.5 degree radius around each.",
        "response": "stilts mocshape in=globulars.fits shape=circle coords='array(RA,DEC,0.5)' out=globular_regions.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a FITS MOC at order 6 from a simulated dataset.",
        "response": "stilts mocshape in=:skysim:100000 shape=point coords='array(ra,dec)' order=6 out=sim_o6.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC of all sources within 10 degrees of the north celestial pole.",
        "response": "stilts mocshape in=allsky.fits icmd='select DEC > 80' shape=point coords='array(RA,DEC)' out=ncp_region.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '80'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 80\n\nUsage: select <expr>\n    (Unused arguments: '>' '80'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "My table has `RA_HRS` and `DEC_DMS`. How do I generate a footprint?",
        "response": "stilts mocshape in=mixed_sex.fits shape=point coords='array(hoursToDegrees(RA_HRS),dmsToDegrees(DEC_DMS))' out=mixed_sex_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "What does a MOC generated by `mocshape` represent?",
        "response": "It represents the union of the coverage on the sky of all the shapes (points, circles, polygons, etc.) from your input table, described as a list of HEALPix pixels of different sizes.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create an ASCII MOC at order 10 from a random 1% of my catalog.",
        "response": "stilts mocshape in=mycat.fits icmd='random 0.01' order=10 mocfmt=ascii shape=point coords='array(RA,DEC)' out=random_1pct.txt",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.01\n\nUsage: random\n    (Unused arguments: '0.01'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "My table has two radius columns, `R_MAJ` and `R_MIN`, and a position angle `PA`. Can I make an STC-S MOC?",
        "response": "Yes, by constructing the STC-S string first: `stilts mocshape in=ellipses.fits icmd='addcol stcs \"Ellipse ICRS \"+RA+\" \"+DEC+\" \"+R_MAJ+\" \"+R_MIN+\" \"+PA' shape=stc-s coords=stcs out=ellipses.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate a FITS MOC from a 10 million star simulation at order 9.",
        "response": "stilts mocshape in=:skysim:1e7 shape=point coords='array(ra,dec)' order=9 mocfmt=json out=sim_10M_o9.moc.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Can `mocshape` generate a footprint from image files?",
        "response": "No, `mocshape` requires a tabular input with columns specifying sky shapes. It cannot directly process image files like FITS images.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "My table has two sets of corners for a bowtie shape. How can I represent this?",
        "response": "For `shape=polygon`, a `NaN, NaN` pair in the coordinate array delimits distinct polygons for a single row. So you can use an expression like `coords='array(RA1,D1,RA2,D2,RA3,D3, NaN,NaN, RA4,D4,RA5,D5,RA6,D6)'`.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a `cds_ascii` format MOC from `s_region`.",
        "response": "stilts mocshape in=obscore.fits shape=stc-s coords=s_region mocfmt=cds_ascii out=obscore.moc.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My table has FK4 coordinates. Can I generate a MOC directly?",
        "response": "No, MOCs are defined in ICRS. You must first convert the coordinates using a filter: `stilts mocshape in=fk4.fits icmd='addskycoords fk4 fk5 RA_FK4 DEC_FK4 RA_ICRS DEC_ICRS' shape=point coords='array(RA_ICRS, DEC_ICRS)' out=fk4_converted.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "I need to get the MOC for the first 100 entries of my `s_region` column.",
        "response": "stilts mocshape in=obscore.fits icmd='head 100' shape=stc-s coords=s_region out=first_100_regions.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create the MOC for a list of HEALPix pixels given by order and index columns.",
        "response": "stilts mocshape in=pixels.fits shape=uniq coords='mocUniq(ORDER_COL, INDEX_COL)' out=pixels.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate the MOC for all sources where the `QUALITY` flag is not 'bad'.",
        "response": "stilts mocshape in=data.fits icmd='select QUALITY != \"bad\"' shape=point coords='array(RA,DEC)' out=good_quality.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!=' 'bad'\n\nCommand was: select QUALITY != \"bad\"\n\nUsage: select <expr>\n    (Unused arguments: '!=' 'bad')\n"
    },
    {
        "prompt": "My polygon vertices are in an array-valued column `VERT_ARRAY`. How do I use it?",
        "response": "stilts mocshape in=polygons.fits shape=polygon coords=VERT_ARRAY out=polygon_arrays.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a FITS MOC from a list of circles with 1 arcminute radii.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA,DEC,1.0/60.0)' mocfmt=fits out=arcmin_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "What does an order of 29 mean?",
        "response": "An order of 29 is the highest resolution for a MOC, corresponding to an extremely fine grid of pixels on the sky. It is suitable only for very small regions. Example: `stilts mocshape in=small.fits order=29 ...`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate a MOC from the positions in a Parquet file.",
        "response": "stilts mocshape in=data.parquet shape=point coords='array(ra,dec)' out=parquet_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "How do I make a MOC from circles where the radius depends on magnitude, e.g., `5.0/phot_g_mean_mag`?",
        "response": "stilts mocshape in=gaia.fits shape=circle coords='array(ra,dec, 5.0/phot_g_mean_mag)' out=mag_dependent_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Combine the footprints of `survey_a.fits` (points) and `survey_b.fits` (STC-S polygons).",
        "response": "stilts tcatn nin=2 in1=survey_a.fits icmd1='addcol region array(RA,DEC)' in2=survey_b.fits icmd2='addcol region s_region' | stilts mocshape in=- shape=stc-s coords=region out=combined_surveys.moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n"
    },
    {
        "prompt": "Can `mocshape` handle STC-S UNIONs?",
        "response": "Yes, the documentation indicates that `mocshape` with `shape=stc-s` can handle UNIONs of all shape types.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate an order 0 MOC. What would that look like?",
        "response": "An order 0 MOC represents coverage using the 12 base HEALPix pixels. It is the coarsest possible MOC. `stilts mocshape in=mycat.fits shape=point coords='array(RA,DEC)' order=0 out=order0.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC from a `colfits` file.",
        "response": "stilts mocshape in=data.colfits ifmt=colfits shape=point coords='array(ra,dec)' out=colfits_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter ifmt: Unknown format colfits\n    (No table handler available for colfits)\nUsage: ifmt=<in-format>\n\n"
    },
    {
        "prompt": "My input has STC-S strings, but some are invalid. Will `mocshape` fail?",
        "response": "It will likely produce warnings for the invalid rows and skip them, but continue processing the valid ones. You should check the output on standard error for any messages.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate a MOC for all sources except those in the Small Magellanic Cloud.",
        "response": "stilts mocshape in=allsky.fits icmd='select skyDistanceDegrees(RA,DEC,13.18,-72.82) > 5' shape=point coords='array(RA,DEC)' out=no_smc.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,13.18,-72.82) > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I have a table of MOCs. I want to create a new column which is the sky fraction of each, and then make a combined MOC of only the large ones.",
        "response": "stilts tpipe in=mocs.fits cmd='addcol sky_frac mocSkyProportion($1)' cmd='select sky_frac > 0.01' | stilts mocshape in=- shape=moc-ascii coords='$1' out=large_mocs.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\nError: Unused arguments: '>' '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select sky_frac > 0.01\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.01'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Can `mocshape` read a gzipped CSV file?",
        "response": "Yes, STILTS commands automatically decompress gzipped inputs. `stilts mocshape in=data.csv.gz ifmt=csv shape=point coords='array(ra,dec)' out=data.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate the MOC of all pointings from a log file that happened in 2023.",
        "response": "stilts mocshape in=log.fits icmd='select startsWith(OBS_DATE, \"2023\")' shape=circle coords='array(RA,DEC,FOV_RADIUS)' out=log_2023.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '2023' ')'\n\nCommand was: select startsWith(OBS_DATE, \"2023\")\n\nUsage: select <expr>\n    (Unused arguments: '2023' ')')\n"
    },
    {
        "prompt": "How do I handle polygons with holes in `mocshape`?",
        "response": "The documentation notes that for STC-S, POLYGON winding direction is ignored, and for TFCat, holes are not displayed correctly. This suggests that `mocshape` may not handle polygons with holes correctly and might fill them in.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC from the positions in every FITS table within `my_archive.fits`.",
        "response": "stilts tcat in=my_archive.fits multi=true | stilts mocshape in=- shape=point coords='array(RA,DEC)' out=archive_footprint.moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\nError: No file, URL or command \"my_archive.fits\"\n"
    },
    {
        "prompt": "Generate a MOC for circles whose radius is `0.1 * log10(FLUX)`.",
        "response": "stilts mocshape in=flux_cat.fits shape=circle coords='array(RA,DEC,0.1*log10(FLUX))' out=flux_scaled_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Can I use `mocshape` to find regions with NO coverage?",
        "response": "Not directly. `mocshape` creates a MOC of the covered regions. You would need to use another tool or a script that can perform a 'NOT' operation on the generated MOC against an all-sky MOC.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "My table has two radius columns, `R1` and `R2`. I need to use the larger of the two for the MOC.",
        "response": "stilts mocshape in=radii.fits shape=circle coords='array(RA,DEC,max(R1,R2))' out=max_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for all sources with a parallax greater than 100 mas.",
        "response": "stilts mocshape in=gaia.fits icmd='select PARALLAX > 100' shape=point coords='array(ra,dec)' out=nearby_stars.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PARALLAX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "What does a negative radius in a `shape=circle` coordinate mean?",
        "response": "A negative radius is physically meaningless for a circle. `mocshape` will likely ignore rows where the radius expression evaluates to a negative number, so they will not contribute to the final MOC.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC for polygons defined in an array column, but only if the polygon has exactly 4 vertices.",
        "response": "stilts mocshape in=polygons.fits icmd='select size(VERTICES)==8' shape=polygon coords=VERTICES out=quadrilaterals.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I want the MOC for all sources in `my_data.fits` that are NOT near the Andromeda galaxy (within 1 degree).",
        "response": "stilts mocshape in=my_data.fits icmd='select skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1' shape=point coords='array(RA,DEC)' out=not_andromeda.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA,DEC,10.6847,41.2690) > 1\n\nUsage: select <expr>\n    (Unused arguments: '>' '1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a `cds_fits` format MOC from my `s_region` column.",
        "response": "stilts mocshape in=obscore.fits shape=stc-s coords=s_region mocfmt=cds_fits out=obscore_cds.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "The radius of each source is its `PSF_WIDTH` in arcseconds divided by 2. Generate the footprint.",
        "response": "stilts mocshape in=psf_data.fits shape=circle coords='array(RA,DEC,PSF_WIDTH/2.0/3600.0)' out=psf_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC from all sources that are NOT within the SDSS footprint.",
        "response": "stilts mocshape in=my_sources.fits icmd='select !inMoc(\"V/139/sdss9\", RA, DEC)' shape=point coords='array(RA,DEC)' out=not_in_sdss.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',' 'RA,' 'DEC)'\n\nCommand was: select !inMoc(\"V/139/sdss9\", RA, DEC)\n\nUsage: select <expr>\n    (Unused arguments: ',' 'RA,' 'DEC)')\n"
    },
    {
        "prompt": "My radius is `R_PIX` pixels, and my plate scale is `SCALE_AS` arcsec/pixel. How do I make the MOC?",
        "response": "stilts mocshape in=plate_data.fits shape=circle coords='array(RA,DEC, R_PIX * SCALE_AS / 3600.0)' out=plate_footprint.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC at order 12 from every 5th row of my catalog.",
        "response": "stilts mocshape in=mycat.fits icmd='every 5' order=12 shape=point coords='array(RA,DEC)' out=mycat_every5_o12.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "What does a zero radius mean for `shape=circle`?",
        "response": "A radius of zero means each position is treated as a single point on the sky. The MOC will cover the smallest HEALPix pixel at the given order that contains each point.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Generate an ASCII MOC for objects where the year of observation (`OBS_YEAR`) is 2023.",
        "response": "stilts mocshape in=obs_log.fits icmd='select OBS_YEAR==2023' shape=point coords='array(RA,DEC)' mocfmt=ascii out=obs_2023.moc.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My `csv` file has columns ra_sex and dec_sex. Make me a MOC.",
        "response": "stilts mocshape in=data.csv ifmt=csv shape=point coords='array(hmsToDegrees(ra_sex),dmsToDegrees(dec_sex))' out=data_sex.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for all sources with `parallax_error < 0.1`.",
        "response": "stilts mocshape in=gaia.fits icmd='select parallax_error < 0.1' shape=point coords='array(ra,dec)' out=low_parallax_error.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select parallax_error < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "What does a MOC look like in ASCII format?",
        "response": "An ASCII MOC is a space-separated list of HEALPix orders and pixel indices, like '4/1 2 3 5/10-15 ...'. You can generate one with `mocfmt=ascii`.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC from `data.fits`, but only for rows where `ID` matches a regex `^GAL-`.",
        "response": "stilts mocshape in=data.fits icmd='select matches(ID, \"^GAL-\")' shape=point coords='array(RA,DEC)' out=gal_ids.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '^GAL-' ')'\n\nCommand was: select matches(ID, \"^GAL-\")\n\nUsage: select <expr>\n    (Unused arguments: '^GAL-' ')')\n"
    },
    {
        "prompt": "My radius column `R_KPC` is in kiloparsecs and I have distance `D_MPC`. Create MOC.",
        "response": "stilts mocshape in=physical.fits shape=circle coords='array(RA,DEC,atan(R_KPC*1e-3/D_MPC)*180/PI)' out=physical_to_angular.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from `data.fits`, but only keep sources that are in the VizieR 2MASS footprint.",
        "response": "stilts mocshape in=my_sources.fits icmd='select inMoc(\"II/246/out\", RA, DEC)' shape=point coords='array(RA,DEC)' out=in_2mass.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',' 'RA,' 'DEC)'\n\nCommand was: select inMoc(\"II/246/out\", RA, DEC)\n\nUsage: select <expr>\n    (Unused arguments: ',' 'RA,' 'DEC)')\n"
    },
    {
        "prompt": "My table has two radius columns, `R_MAJ` and `R_MIN`, and a position angle `PA`. How can I make a MOC?",
        "response": "You can use the STC-S shape type. First, create the STC-S string: `icmd='addcol stc_s \"Ellipse ICRS \"+RA+\" \"+DEC+\" \"+R_MAJ+\" \"+R_MIN+\" \"+PA'` then use that column: `stilts mocshape in=... shape=stc-s coords=stc_s ...`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a MOC from all sources that are not flagged (`FLAG_COL == 0`).",
        "response": "stilts mocshape in=flags.fits icmd='select FLAG_COL==0' shape=point coords='array(RA,DEC)' out=unflagged.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I have an ASCII table with a header I need to skip. How to use `mocshape`?",
        "response": "You can use the `tail` filter. If your header is 5 lines long, use `icmd='tail ($nrow - 5)'`. For example: `stilts mocshape in=data.txt ifmt=ascii icmd='tail ($nrow-5)' shape=point coords='array($1,$2)' out=footprint.moc.fits`",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "My RA column contains null values. Will `mocshape` work?",
        "response": "`mocshape` will ignore rows where the coordinate expressions evaluate to a null value and only process the valid rows.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a JSON MOC for the region of the Andromeda galaxy from a simulated catalog.",
        "response": "stilts mocshape in=:skysim:1e4 icmd='select skyDistanceDegrees(ra,dec,10.68,41.27)<2' shape=point coords='array(ra,dec)' mocfmt=json out=m31.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My table has circle centers, but all circles have a radius of 0.1 deg. How can I specify that?",
        "response": "stilts mocshape in=centers.fits shape=circle coords='array(RA,DEC,0.1)' out=fixed_radius_circles.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from all sources that have a valid proper motion measurement.",
        "response": "stilts mocshape in=pm.fits icmd='select !NULL_PMRA && !NULL_PMDEC' shape=point coords='array(RA,DEC)' out=pm_coverage.moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_PMRA && !NULL_PMDEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I have an ASCII file with three columns: ID, RA, Dec. How do I make a footprint?",
        "response": "stilts mocshape in=id_ra_dec.txt ifmt=ascii shape=point coords='array($2, $3)' out=id_ra_dec.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "My radius column is in radians. How to use it for circles?",
        "response": "stilts mocshape in=rad_radius.fits shape=circle coords='array(RA,DEC,radiansToDegrees(RADIUS_RAD))' out=rad_radius.moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a FITS MOC from a 10 million star simulation at order 9.",
        "response": "stilts mocshape in=:skysim:1e7 shape=point coords='array(ra,dec)' order=9 mocfmt=json out=sim_10M_o9.moc.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Can `mocshape` generate a footprint from image files?",
        "response": "No, `mocshape` requires a tabular input with columns specifying sky shapes. It cannot directly process image files like FITS images.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "My table has two sets of corners for a bowtie shape. How can I represent this?",
        "response": "For `shape=polygon`, a `NaN, NaN` pair in the coordinate array delimits distinct polygons for a single row. So you can use an expression like `coords='array(RA1,D1,RA2,D2,RA3,D3, NaN,NaN, RA4,D4,RA5,D5,RA6,D6)'`.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create a `cds_ascii` format MOC from `s_region`.",
        "response": "stilts mocshape in=obscore.fits shape=stc-s coords=s_region mocfmt=cds_ascii out=obscore.moc.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC from the RA and DEC columns in my_catalog.fits, using the default resolution and output format.",
        "response": "stilts mocshape in=my_catalog.fits shape=point coords='array(RA, DEC)' out=catalog_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a summary report showing the sky coverage proportion of sources in objects.csv (columns RA, DEC), setting the input format explicitly.",
        "response": "stilts mocshape in=objects.csv ifmt=csv shape=point coords='array(RA, DEC)' mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a high-resolution MOC (order 15) for all sources in deep_field.fits brighter than magnitude 20.",
        "response": "stilts mocshape in=deep_field.fits icmd='select MAG < 20' shape=point coords='array(RA, DEC)' order=15 out=bright_coverage_o15.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 20\n\nUsage: select <expr>\n    (Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC showing 0.05 degree radius circles around the positions given in targets.vot, saving the output in JSON format.",
        "response": "stilts mocshape in=targets.vot shape=circle coords='array(RA, DEC, 0.05)' mocfmt=json out=target_circles.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a low-resolution MOC (order 4) from a table containing polygon vertex arrays in a column named 'VERTICES'.",
        "response": "stilts mocshape in=footprints.fits shape=polygon coords='VERTICES' order=4 out=low_res_polygons.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I have a collection of HEALPix UNIQ identifiers in hpx_cells.txt. Combine them into a single MOC file.",
        "response": "stilts mocshape in=hpx_cells.txt ifmt=ascii shape=uniq coords='$1' out=combined_uniq.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from an ObsCore table using the s_region column, ensuring the output is written in the CDS ASCII MOC format.",
        "response": "stilts mocshape in=obscore_results.fits shape=stc-s coords=s_region mocfmt=cds_ascii out=obscore_cds.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter my catalog to keep only sources in the northern hemisphere (DEC > 0) and generate a MOC at order 10.",
        "response": "stilts mocshape in=full_sky.fits icmd='select DEC > 0' shape=point coords='array(RA, DEC)' order=10 out=north_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Map a set of points into a MOC where the radius is calculated based on the square root of the 'AREA' column in square degrees divided by PI.",
        "response": "stilts mocshape in=areas.vot shape=circle coords='array(RA, DEC, sqrt(AREA/PI))' out=derived_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Calculate the coverage for a specific 10 arcsecond radius cone search, outputting the raw UNIQ binary stream.",
        "response": "stilts mocshape in=cones.csv ifmt=csv shape=circle coords='array(RA, DEC, 10.0 / 3600.0)' mocfmt=raw out=cone_footprint.raw",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for sources within 1 arcminute of Galactic coordinates L=10, B=5, requiring conversion to ICRS before processing.",
        "response": "stilts mocshape in=gal_cat.fits icmd='addskycoords galactic icrs GLON GLAT RA_ICRS DEC_ICRS' shape=circle coords='array(RA_ICRS, DEC_ICRS, 1.0 / 60.0)' out=galactic_moc_converted.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from an ASCII column containing polygon strings, setting the output resolution to order 8.",
        "response": "stilts mocshape in=poly_strings.txt ifmt=ascii shape=polygon coords='$1' order=8 out=string_polys_o8.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a MOC from a simulation table that is pipe-fed from a generator scheme, using a very low resolution (order 2).",
        "response": "stilts mocshape in=:skysim:100000 | stilts mocshape in=- shape=point coords='array(ra, dec)' order=2 out=sim_low_res.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\nError: Bad value for parameter coords: null value not allowed\nUsage: coords=<expr>\n\n"
    },
    {
        "prompt": "Generate a high-resolution JSON MOC (order 16) for rows where the object type is 'QSO'.",
        "response": "stilts mocshape in=class_cat.fits icmd='select equals(OBJ_TYPE, \"QSO\")' shape=point coords='array(RA, DEC)' order=16 mocfmt=json out=qso_o16.json",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'QSO' ')'\n\nCommand was: select equals(OBJ_TYPE, \"QSO\")\n\nUsage: select <expr>\n    (Unused arguments: 'QSO' ')')\n"
    },
    {
        "prompt": "I have columns RA and DEC in hours/degrees. Convert them to degrees before creating a point MOC.",
        "response": "stilts mocshape in=hms_data.fits icmd='replacecol RA hmsToDegrees(RA); replacecol DEC dmsToDegrees(DEC)' shape=point coords='array(RA, DEC)' out=hms_converted_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a summary report showing the tile count for a MOC generated from sources in a Parquet file.",
        "response": "stilts mocshape in=data.parquet shape=point coords='array(RA, DEC)' mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC using a very fine resolution (order 20) for 1 arcsecond circles around my faint radio sources.",
        "response": "stilts mocshape in=radio_sources.vot shape=circle coords='array(RA, DEC, 1.0 / 3600.0)' order=20 out=radio_circles_o20.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Combine multiple input FITS tables and then generate a single MOC from all the positions in the concatenated result.",
        "response": "stilts tcat in=cat1.fits in=cat2.fits in=cat3.fits | stilts mocshape in=- shape=point coords='array(RA, DEC)' out=stacked_cat_moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n"
    },
    {
        "prompt": "Create a MOC at order 9 from polygon data, ensuring the polygon coordinate columns are correctly interpreted as an array.",
        "response": "stilts mocshape in=survey_areas.fits shape=polygon coords='array(V1_RA, V1_DEC, V2_RA, V2_DEC, V3_RA, V3_DEC, V4_RA, V4_DEC)' order=9 out=survey_o9.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from only the first 100 rows of an extremely large catalogue, checking memory usage during generation.",
        "response": "stilts mocshape -memory in=massive.fits icmd='head 100' shape=point coords='array(RA, DEC)' out=head_100_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in=massive.fits\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a raw binary MOC stream for the footprint defined by a 1 degree radius circle centered at RA 180, DEC 0.",
        "response": "stilts mocshape in=:loop:1 end=1 shape=circle coords='array(180, 0, 1.0)' mocfmt=raw out=one_deg_raw.bin",
        "chat.jar": "failed",
        "error": "\nUnused arguments: end=1\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create an order 13 MOC for all sources where 'FLUX' is non-null.",
        "response": "stilts mocshape in=flux_data.fits icmd='select !NULL_FLUX' shape=point coords='array(RA, DEC)' order=13 out=non_null_flux_o13.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an ASCII MOC (order 7) for sources in the Equatorial region (DEC between -10 and +10).",
        "response": "stilts mocshape in=sky_data.fits icmd='select DEC >= -10 && DEC <= 10' shape=point coords='array(RA, DEC)' order=7 mocfmt=ascii out=eq_belt_o7.txt",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '-10' '&&' 'DEC' '<=' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC >= -10 && DEC <= 10\n\nUsage: select <expr>\n    (Unused arguments: '>=' '-10' '&&' 'DEC' '<=' '10'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a JSON MOC showing the coverage of 5 arcsecond circles around all objects with NAME starting with 'NGC'.",
        "response": "stilts mocshape in=galaxy_cat.vot icmd='select startsWith(NAME, \"NGC\")' shape=circle coords='array(RA, DEC, 5.0 / 3600.0)' mocfmt=json out=ngc_circles.json",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'NGC' ')'\n\nCommand was: select startsWith(NAME, \"NGC\")\n\nUsage: select <expr>\n    (Unused arguments: 'NGC' ')')\n"
    },
    {
        "prompt": "Generate an order 11 MOC, forcing the use of the 'cds' implementation for map construction.",
        "response": "stilts mocshape in=input_data.fits shape=point coords='array(RA, DEC)' order=11 mocimpl=cds out=cds_impl_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a point MOC, discarding the output file but reporting the final row count (i.e., the number of HEALPix cells).",
        "response": "stilts mocshape in=data.fits shape=point coords='array(RA, DEC)' omode=count",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=count\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a circle MOC using a radius defined by 300 mas (milli-arcseconds).",
        "response": "stilts mocshape in=stars.fits shape=circle coords='array(RA, DEC, 300.0 / 3600000.0)' out=mas_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Map observation coverage defined by STC-S strings in an ECSV file, setting the output to CDS JSON format.",
        "response": "stilts mocshape in=obs.ecsv ifmt=ecsv shape=stc-s coords=REGION_STRING mocfmt=cds_json out=obs_footprint.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC (order 14) from UNIQ identifiers, applying a pre-filter to select only the top 100 rows based on a score column.",
        "response": "stilts mocshape in=scored_uniq.fits icmd='sort -down SCORE; head 100' shape=uniq coords=HPX_ID order=14 out=top_100_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a point MOC where the coordinates are normalized Galactic Longitude and Latitude (0 to 360).",
        "response": "stilts mocshape in=norm_gal.fits icmd='addskycoords galactic icrs GLON GLAT RA_ICRS DEC_ICRS' shape=point coords='array(RA_ICRS, DEC_ICRS)' out=norm_gal_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from a local FITS file and output the map as a standard ASCII text file to standard output.",
        "response": "stilts mocshape in=local_data.fits shape=point coords='array(RA, DEC)' mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a polygon MOC where vertices are extracted from a JSON array column named 'VERTICES_JSON'.",
        "response": "stilts mocshape in=json_polys.fits shape=polygon coords='jsonToDoubles(VERTICES_JSON)' out=json_polygon_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 5 MOC containing 1 degree radius circles, but only use rows 1000 through 2000 from the input table.",
        "response": "stilts mocshape in=input.fits icmd='rowrange 1000 2000' shape=circle coords='array(RA, DEC, 1.0)' order=5 out=sample_rows_o5.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a JSON MOC (order 11) for objects observed after MJD 56000.",
        "response": "stilts mocshape in=obs_log.fits icmd='select MJD > 56000' shape=point coords='array(RA, DEC)' order=11 mocfmt=json out=recent_obs_o11.json",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '56000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MJD > 56000\n\nUsage: select <expr>\n    (Unused arguments: '>' '56000'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Map circles where the radius is a fixed 10 arcseconds, and the positions are derived from Ecliptic Lon/Lat coordinates.",
        "response": "stilts mocshape in=ecl_data.fits icmd='addskycoords ecliptic icrs ELON ELAT RA_ICRS DEC_ICRS' shape=circle coords='array(RA_ICRS, DEC_ICRS, 10.0 / 3600.0)' out=ecl_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC strictly using the 'bits' implementation for optimal memory usage, if available.",
        "response": "stilts mocshape in=tiny_data.fits shape=point coords='array(RA, DEC)' mocimpl=bits out=bits_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 6 MOC for all distinct HEALPix UNIQ values present in a table.",
        "response": "stilts mocshape in=hpx_pixels.fits shape=uniq coords=HPX_PIXEL order=6 out=distinct_hpx.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Output the sky coverage summary for a polygon MOC, rounding the result to three decimal places.",
        "response": "stilts mocshape in=areas.vot shape=polygon coords='VERTICES' mocfmt=summary | stilts tpipe in=- ocmd='replacecol COVERAGE formatDecimal(COVERAGE,3)' out=-",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: tpipe: not found\n"
    },
    {
        "prompt": "Generate a MOC at the maximum standard resolution (order 29) for a single point source.",
        "response": "stilts mocshape in=:loop:1 end=1 shape=point coords='array(0, 0)' order=29 out=max_res_point.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: end=1\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a point MOC, but drop the column containing the position angle in the output table metadata before writing the file.",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' out=no_pa_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from a list of ASCII MOC strings, ensuring the output is written in the CDS FITS MOC format.",
        "response": "stilts mocshape in=ascii_mocs.txt ifmt=ascii shape=moc-ascii coords='$1' mocfmt=cds_fits out=mocs_cds_fits.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an order 12 MOC from circle regions where the radius is determined by $RADIUS \times 0.5$.",
        "response": "stilts mocshape in=radii.fits shape=circle coords='array(RA, DEC, RADIUS * 0.5)' order=12 out=scaled_radii_o12.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a polygon MOC (order 7) where the vertices are calculated using trigonometric functions based on position and size parameters.",
        "response": "stilts mocshape in=params.fits shape=polygon coords='array(RA+cosDeg(PA)*RAD, DEC+sinDeg(PA)*RAD, RA-sinDeg(PA)*RAD, DEC+cosDeg(PA)*RAD, ...)' order=7 out=trig_poly_o7.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter out the bottom 100 rows of an input table before generating a point MOC.",
        "response": "stilts mocshape in=full_cat.fits icmd='tail -100' shape=point coords='array(RA, DEC)' out=top_n_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Row count -100 not numeric\n\nCommand was: tail -100\n\nUsage: tail <nrows>\n    (Row count -100 not numeric)\n"
    },
    {
        "prompt": "Map coverage from STC-S strings, outputting the result using standard JSON format (order 10).",
        "response": "stilts mocshape in=stc_data.vot shape=stc-s coords=STC_REGION order=10 mocfmt=json out=stc_o10.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a point MOC and apply a filter to rename the output table name to 'FINAL_MOC'.",
        "response": "stilts mocshape in=input_data.fits shape=point coords='array(RA, DEC)' icmd='tablename FINAL_MOC' out=renamed_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from an ASCII file containing coordinate pairs, where RA and DEC columns are unnamed (use column indices $1, $2).",
        "response": "stilts mocshape in=raw_coords.txt ifmt=ascii shape=point coords='array($1, $2)' out=raw_coord_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a point MOC (order 18) for sources where the error in RA (PMRA_ERR) is less than 0.1 mas/yr.",
        "response": "stilts mocshape in=gaia_like.fits icmd='select PMRA_ERR < 0.1' shape=point coords='array(RA, DEC)' order=18 out=low_error_o18.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA_ERR < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the coverage of many small 1 micro-arcsecond ($\\mu$as) circles around targets, storing the MOC as raw binary.",
        "response": "stilts mocshape in=precise.fits shape=circle coords='array(RA, DEC, 1.0 / 3600000000.0)' mocfmt=raw out=uas_raw_moc.bin",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an order 7 MOC for circles where the radius is $0.001 \times \text{MAGNITUDE}$ degrees.",
        "response": "stilts mocshape in=variable_rad.fits shape=circle coords='array(RA, DEC, 0.001 * MAGNITUDE)' order=7 out=mag_scaled_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Combine MOCs from two different ObsCore tables directly using a pipe and STC-S input.",
        "response": "stilts tcat in=obs1.fits in=obs2.fits | stilts mocshape in=- shape=stc-s coords=s_region out=two_obscore_union.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n"
    },
    {
        "prompt": "Create a point MOC for random positions generated via a scheme, limiting the rows to 50,000.",
        "response": "stilts mocshape in=:skysim:50000 shape=point coords='array(ra, dec)' out=random_points_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC where the underlying mechanism is forced to the 'lists' implementation (experimental).",
        "response": "stilts mocshape in=sparse_cat.fits shape=point coords='array(RA, DEC)' mocimpl=lists out=lists_impl_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 12 MOC from polygons, ensuring the file is compressed and saved as FITS.",
        "response": "stilts mocshape in=poly_data.vot shape=polygon coords=VERTICES compress=true order=12 out=compressed_poly.fits.gz",
        "chat.jar": "failed",
        "error": "\nUnused arguments: compress=true\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "I need a summary report of coverage for all sources with velocity (Z) greater than 0.1, calculated at order 9.",
        "response": "stilts mocshape in=velocity.fits icmd='select Z > 0.1' shape=point coords='array(RA, DEC)' order=9 mocfmt=summary out=-",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 0.1\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC (order 13) for points, then output the column metadata only (omode=meta).",
        "response": "stilts mocshape in=meta_test.fits shape=point coords='array(RA, DEC)' order=13 omode=meta",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=meta\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a circle MOC with a radius of $60 / 3600$ degrees (1 arcminute).",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 60.0 / 3600.0)' out=one_arcmin_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a polygon MOC for a table where vertices are defined by 8 columns (X1, Y1, X2, Y2, X3, Y3, X4, Y4).",
        "response": "stilts mocshape in=corners.fits shape=polygon coords='array(X1, Y1, X2, Y2, X3, Y3, X4, Y4)' out=quad_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a point MOC (order 14) and pipe the result to a checksum calculation.",
        "response": "stilts mocshape in=checksum_test.fits shape=point coords='array(RA, DEC)' order=14 omode=checksum",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=checksum\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter input data to remove rows with null RA values before generating a circle MOC (radius 0.01 deg).",
        "response": "stilts mocshape in=dirty_data.fits icmd='select !NULL_RA' shape=circle coords='array(RA, DEC, 0.01)' out=clean_circle_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC at order 3 for sources in the southern Galactic hemisphere (B < 0).",
        "response": "stilts mocshape in=survey.fits icmd='addskycoords icrs galactic RA DEC GLON GLAT; select GLAT < 0' shape=point coords='array(RA, DEC)' order=3 out=south_gal_o3.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  select GLAT < 0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create an order 17 MOC from UNIQ IDs, forcing the output format to standard FITS.",
        "response": "stilts mocshape in=hpx_data.fits shape=uniq coords=HPX_ID order=17 mocfmt=fits out=hpx_o17.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a raw binary MOC stream (order 10) for positions specified in an ECSV file.",
        "response": "stilts mocshape in=coords.ecsv ifmt=ecsv shape=point coords='array(RA, DEC)' order=10 mocfmt=raw out=ecsv_moc_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a MOC from polygonal footprints defined in STC-S, and I want the resulting polygon vertices converted to Galactic coordinates in the output table (requires intermediate step).",
        "response": "stilts mocshape in=stcs_in.fits shape=stc-s coords=s_region | stilts tpipe in=- ocmd='addskycoords icrs galactic RA DEC GLON GLAT' out=stcs_gal_coords.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: tpipe: not found\n"
    },
    {
        "prompt": "Generate a MOC from a list of ASCII MOC strings, ensuring the MOC implementation uses 'auto' selection (default).",
        "response": "stilts mocshape in=moc_strings.txt ifmt=ascii shape=moc-ascii coords='$1' mocimpl=auto out=auto_moc_impl.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a circle MOC where the radius is exactly $\frac{100 \text{ mas}}{3}$ for a high-precision catalog.",
        "response": "stilts mocshape in=high_prec_cat.fits shape=circle coords='array(RA, DEC, (100.0 / 3.0) / 3600000.0)' out=prec_circles_expr.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an order 14 JSON MOC for the top 5% of sources based on 'LUMINOSITY'.",
        "response": "stilts mocshape in=luminosity.fits icmd='random 0.05' shape=point coords='array(RA, DEC)' order=14 mocfmt=json out=top_5_percent.json",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.05\n\nUsage: random\n    (Unused arguments: '0.05'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a point MOC for targets within a narrow band of Declination (e.g., 0.1 degrees wide centered at DEC=30).",
        "response": "stilts mocshape in=narrow_band.fits icmd='select abs(DEC - 30.0) < 0.05' shape=point coords='array(RA, DEC)' out=narrow_band_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' '30.0)' '<' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC - 30.0) < 0.05\n\nUsage: select <expr>\n    (Unused arguments: '-' '30.0)' '<' '0.05'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a polygon MOC (order 10) from coordinates supplied as a space-separated string column named 'VERT_LIST', using parseDoubles.",
        "response": "stilts mocshape in=vertex_list.fits shape=polygon coords='parseDoubles(VERT_LIST)' order=10 out=parsed_poly_o10.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a circle MOC (radius 0.001 deg) and explicitly force the output to be placed in the current working directory.",
        "response": "stilts mocshape in=input.fits shape=circle coords='array(RA, DEC, 0.001)' out=./output_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I have multiple FITS extensions, each containing point data. Concatenate them and generate a single MOC (order 8).",
        "response": "stilts tcat in=multi_ext.fits multi=true | stilts mocshape in=- shape=point coords='array(RA, DEC)' order=8 out=multi_ext_moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\nError: No file, URL or command \"multi_ext.fits\"\n"
    },
    {
        "prompt": "Generate a point MOC and sort the resulting HEALPix cells by the numerical index before final output.",
        "response": "stilts mocshape in=sort_test.fits shape=point coords='array(RA, DEC)' ocmd='sort PIXEL_INDEX' out=sorted_hpx_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=sort PIXEL_INDEX\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a polygon MOC and instruct STILTS to use disk storage instead of memory during processing (mocimpl=auto).",
        "response": "stilts mocshape -disk in=huge_polys.fits shape=polygon coords=VERTICES out=disk_poly_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in=huge_polys.fits\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "I need a MOC at order 16 for objects where the identifier column 'OBJ_ID' is an even number.",
        "response": "stilts mocshape in=ids.fits icmd='select OBJ_ID % 2 == 0' shape=point coords='array(RA, DEC)' order=16 out=even_id_o16.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select OBJ_ID % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC from ASCII MOC strings, ensuring the output uses VOTable BINARY2 format.",
        "response": "stilts mocshape in=mocs.txt ifmt=ascii shape=moc-ascii coords='$1' mocfmt=cds_fits out=binary2_moc.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a circle MOC where the radius is calculated using $\text{hypot}(0.01, 0.01)$ degrees.",
        "response": "stilts mocshape in=coords.fits shape=circle coords='array(RA, DEC, hypot(0.01, 0.01))' out=hypot_radius_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a summary report for a dense catalog, calculating the MOC coverage at order 17.",
        "response": "stilts mocshape in=dense_cat.fits shape=point coords='array(RA, DEC)' order=17 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 5 MOC from polygons, ensuring the output uses standard JSON format.",
        "response": "stilts mocshape in=simple_polys.fits shape=polygon coords=VERTICES order=5 mocfmt=json out=simple_poly_o5.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a point MOC where the input coordinates are in radians, and convert them to degrees in the coords expression.",
        "response": "stilts mocshape in=rad_input.fits shape=point coords='array(radiansToDegrees(RA_RAD), radiansToDegrees(DEC_RAD))' out=rad_converted_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 13 MOC for a list of targets and display the result directly in TOPCAT.",
        "response": "stilts mocshape in=targets.fits shape=point coords='array(RA, DEC)' order=13 omode=topcat",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=topcat\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter the input table to only keep rows where 'FLAG' is true, and then generate a point MOC.",
        "response": "stilts mocshape in=flagged.fits icmd='select FLAG' shape=point coords='array(RA, DEC)' out=flag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC (order 10) from UNIQ IDs, and then apply a post-filter to discard any columns beyond the second one (if present).",
        "response": "stilts mocshape in=hpx.fits shape=uniq coords=HPX_ID order=10 ocmd='keepcols $1 $2' out=minimal_hpx.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=keepcols $1 $2\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a JSON MOC for objects within a 3 arcminute radius, forcing the use of the 'cds' implementation.",
        "response": "stilts mocshape in=circles.fits shape=circle coords='array(RA, DEC, 3.0 / 60.0)' mocimpl=cds mocfmt=json out=cds_json_3am.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a point MOC and apply verbose logging during processing.",
        "response": "stilts mocshape -verbose in=log_test.fits shape=point coords='array(RA, DEC)' out=verbose_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in=log_test.fits\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create an order 6 MOC where the input positions are provided in separate columns RA_H, RA_M, RA_S for hours and similar DEC columns.",
        "response": "stilts mocshape in=sex_in.fits shape=point coords='array(hmsToDegrees(RA_H, RA_M, RA_S), dmsToDegrees(DEC_D, DEC_M, DEC_S))' order=6 out=sex_coords_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Map coverage from STC-S strings, outputting the raw binary stream.",
        "response": "stilts mocshape in=stc.fits shape=stc-s coords=REGION mocfmt=raw out=stc_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for all sources that have non-zero proper motion (PMRA != 0 || PMDEC != 0).",
        "response": "stilts mocshape in=pm_data.fits icmd='select PMRA != 0 || PMDEC != 0' shape=point coords='array(RA, DEC)' out=pm_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!=' '0' '||' 'PMDEC' '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA != 0 || PMDEC != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0' '||' 'PMDEC' '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create an order 19 MOC using circles with radius $1 \\mu \text{as}$.",
        "response": "stilts mocshape in=precise_targets.fits shape=circle coords='array(RA, DEC, 1.0 / 3600000000.0)' order=19 out=micro_arcsec_o19.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from a table created by a simple loop, positioning a 0.5 degree circle at (0, 0).",
        "response": "stilts mocshape in=:loop:1 end=1 shape=circle coords='array(0, 0, 0.5)' out=origin_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: end=1\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a point MOC and discard the output completely, checking only for run success.",
        "response": "stilts mocshape in=test.fits shape=point coords='array(RA, DEC)' omode=discard",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=discard\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a JSON MOC for polygon data and compress the output file.",
        "response": "stilts mocshape in=polygons.fits shape=polygon coords=VERTICES compress=true mocfmt=json out=compressed_poly.json.gz",
        "chat.jar": "failed",
        "error": "\nUnused arguments: compress=true\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate an order 10 MOC for all distinct galaxy identifiers present in the input catalog.",
        "response": "stilts mocshape in=galaxies.fits icmd='uniq GALAXY_ID; addcol RA 0.0; addcol DEC 0.0' shape=point coords='array(RA, DEC)' order=10 out=distinct_gal_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Map coverage from STC-S strings, forcing the output version to VOTable BINARY2.",
        "response": "stilts mocshape in=stcs.vot shape=stc-s coords=S_REGION mocfmt=cds_fits out=stcs_binary2.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a circle MOC where the radius is given by column 'R_ERR' divided by 10 (units assumed degrees).",
        "response": "stilts mocshape in=err_data.fits shape=circle coords='array(RA, DEC, R_ERR / 10.0)' out=scaled_err_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a simple MOC (order 5) and want to inspect its final structure metadata (omode=meta).",
        "response": "stilts mocshape in=simple_cat.fits shape=point coords='array(RA, DEC)' order=5 omode=meta",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=meta\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate an order 12 MOC, then add a final column 'PIXEL_SIZE' calculated using $\text{healpixSqdeg}(\text{order})$ in the output table metadata.",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' order=12 ocmd='addcol PIXEL_SIZE healpixSqdeg(12)' out=with_pixel_size.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=addcol PIXEL_SIZE healpixSqdeg(12)\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a raw binary MOC (order 15) for sources that are in the input table but fail an external check (FLAG_BAD is true).",
        "response": "stilts mocshape in=checks.fits icmd='select FLAG_BAD' shape=point coords='array(RA, DEC)' order=15 mocfmt=raw out=bad_flags_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from a VOTable that references multiple HEALPix UNIQ tables externally.",
        "response": "stilts mocshape in=multi_hpx.vot multi=true shape=uniq coords=HPX_ID out=multi_hpx_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: multi=true\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter the input table to only process rows where magnitude is exactly 17.5 before generating a point MOC.",
        "response": "stilts mocshape in=mag_points.fits icmd='select MAG == 17.5' shape=point coords='array(RA, DEC)' out=exact_mag_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '==' '17.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG == 17.5\n\nUsage: select <expr>\n    (Unused arguments: '==' '17.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate an order 9 MOC for circles with a variable radius given by the expression $1 / \text{DISTANCE}$ degrees.",
        "response": "stilts mocshape in=distance_data.fits shape=circle coords='array(RA, DEC, 1.0 / DISTANCE)' order=9 out=inv_distance_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a summary report (order 10) where positions are generated from a simulated attractor scheme, demonstrating input schemes.",
        "response": "stilts mocshape in=:attractor:10000,clifford shape=point coords='array(x, y)' order=10 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC using the implicit coordinate column indices $1 and $2 for RA and DEC, assuming FITS input.",
        "response": "stilts mocshape in=index_data.fits shape=point coords='array($1, $2)' out=index_coords_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a circle MOC (radius $0.005$ degrees) that is written to standard output as a standard ASCII MOC string.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 0.005)' mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 11 MOC for all objects observed in 2020 (DATE_OBS between MJD 58849 and MJD 59214).",
        "response": "stilts mocshape in=obs_dates.fits icmd='select MJD >= 58849 && MJD <= 59214' shape=point coords='array(RA, DEC)' order=11 out=2020_obs_o11.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '58849' '&&' 'MJD' '<=' '59214'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MJD >= 58849 && MJD <= 59214\n\nUsage: select <expr>\n    (Unused arguments: '>=' '58849' '&&' 'MJD' '<=' '59214'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a polygon MOC and subsequently apply an unrelated output filter to add a constant column 'SOURCE'='Survey A'.",
        "response": "stilts mocshape in=poly.fits shape=polygon coords=VERTICES ocmd='addcol SOURCE \"Survey A\"' out=poly_with_col.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=addcol SOURCE \"Survey A\"\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a MOC from ObsCore data (STC-S) and ensure the map is constructed using the slower but potentially safer 'lists' implementation.",
        "response": "stilts mocshape in=obscore_slow.vot shape=stc-s coords=s_region mocimpl=lists out=obscore_lists_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an order 14 MOC where the radius is dynamically calculated for each row as $0.001 / \text{ERROR_FACTOR}$.",
        "response": "stilts mocshape in=dyn_error.fits shape=circle coords='array(RA, DEC, 0.001 / ERROR_FACTOR)' order=14 out=dynamic_rad_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter the input to only retain objects of class 'Star' and then create an order 15 point MOC.",
        "response": "stilts mocshape in=classified.fits icmd='select equals(CLASS, \"Star\")' shape=point coords='array(RA, DEC)' order=15 out=star_moc_o15.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Star' ')'\n\nCommand was: select equals(CLASS, \"Star\")\n\nUsage: select <expr>\n    (Unused arguments: 'Star' ')')\n"
    },
    {
        "prompt": "Generate a MOC from ASCII MOC strings (order 9), and save the result as a simple CSV table containing the UNIQ indices and coverage information (requires separate command).",
        "response": "stilts mocshape in=mocs.txt ifmt=ascii shape=moc-ascii coords='$1' order=9 | stilts tpipe in=- ocmd='addcol CoverageArea healpixSqdeg(mocUniqToOrder(PIXEL_INDEX))' out=moc_cells.csv",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: tpipe: not found\n"
    },
    {
        "prompt": "Create a point MOC and ensure the output filename ends with .fits.gz to enable compression.",
        "response": "stilts mocshape in=comp_test.fits shape=point coords='array(RA, DEC)' out=output_moc.fits.gz",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an order 2 MOC (very coarse resolution) from a catalog of positions.",
        "response": "stilts mocshape in=coarse_cat.fits shape=point coords='array(RA, DEC)' order=2 out=coarse_moc_o2.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Map coverage from STC-S strings, running validation checks in the input stream (icmd='check').",
        "response": "stilts mocshape in=stc_data.vot icmd='check' shape=stc-s coords=STC_REGION out=checked_stc_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a circle MOC using a very large radius of 20 degrees, primarily covering the entire hemisphere.",
        "response": "stilts mocshape in=hemisphere.fits shape=circle coords='array(RA, DEC, 20.0)' out=wide_hemisphere.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a polygon MOC (order 11) and output in the CDS JSON format.",
        "response": "stilts mocshape in=poly_in.fits shape=polygon coords=VERTICES order=11 mocfmt=cds_json out=poly_cds_o11.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 10 MOC for sources within 5 arcseconds and include a checksum of the output file in the log.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 5.0 / 3600.0)' order=10 omode=checksum",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=checksum\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter the input catalog to include only rows with positive distance modulus, then generate a point MOC.",
        "response": "stilts mocshape in=dist_mod.fits icmd='select DM > 0' shape=point coords='array(RA, DEC)' out=positive_dm_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DM > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC (order 13) using the coordinates RA, DEC which are implicitly the first two floating point columns found.",
        "response": "stilts mocshape in=implicit_coords.fits shape=point coords='array(RA, DEC)' order=13 out=implicit_coords_o13.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a point MOC, but I want to use the high-parallelism 'parallel' runner during the internal processing steps (where applicable).",
        "response": "stilts mocshape -verbose in=parallel_test.fits runner=parallel shape=point coords='array(RA, DEC)' out=parallel_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in=parallel_test.fits runner=parallel\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a circle MOC where the radius is calculated as the separation distance between two fixed points in the table.",
        "response": "stilts mocshape in=pairs.fits shape=circle coords='array(RA1, DEC1, skyDistanceDegrees(RA1, DEC1, RA2, DEC2))' out=dist_as_radius.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from only rows 1 to 1000, setting the input format to VOTable and output to ASCII.",
        "response": "stilts mocshape in=input.vot icmd='head 1000' shape=point coords='array(RA, DEC)' mocfmt=ascii out=small_sample.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an order 16 MOC for stars found within 0.0001 degrees of the North Galactic Pole (L=0, B=90).",
        "response": "stilts mocshape in=ngp_sources.fits icmd='addskycoords galactic icrs GLON GLAT RA_ICRS DEC_ICRS; select skyDistanceDegrees(RA_ICRS, DEC_ICRS, 192.859, 27.128) < 0.0001' shape=point coords='array(RA_ICRS, DEC_ICRS)' order=16 out=ngp_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC_ICRS,' '192.859,' '27.128)' '<' '0.0001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  select skyDistanceDegrees(RA_ICRS, DEC_ICRS, 192.859, 27.128) < 0.0001\n\nUsage: select <expr>\n    (Unused arguments: 'DEC_ICRS,' '192.859,' '27.128)' '<' '0.0001'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a MOC (order 14) from UNIQ identifiers, running a pipeline to exclude all but the necessary column first.",
        "response": "stilts mocshape in=data.fits icmd='keepcols UNIQ_VAL' shape=uniq coords=UNIQ_VAL order=14 out=filtered_uniq.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an order 7 MOC for polygons, outputting the result using the verbose standard FITS format.",
        "response": "stilts mocshape in=polygons.fits shape=polygon coords=VERTICES order=7 mocfmt=fits out=poly_o7_fits.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a point MOC where the coordinates come from a table generated using the loop scheme.",
        "response": "stilts tloop x 1 100 | stilts tpipe in=- ocmd='addcol RA x; addcol DEC 0' | stilts mocshape in=- shape=point coords='array(RA, DEC)' out=loop_points_moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: tpipe: not found\n/bin/sh: 1: mocshape: not found\n"
    },
    {
        "prompt": "Map coverage from STC-S strings, generating a summary report showing maximum resolution (order 29).",
        "response": "stilts mocshape in=stc.fits shape=stc-s coords=REGION order=29 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC (order 15) and apply a filter to keep only rows with pixel index greater than $5 \times 10^{10}$ (requires post-processing).",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' order=15 ocmd='select PIXEL_INDEX > 50000000000L' out=high_idx_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=select PIXEL_INDEX > 50000000000L\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create an order 8 MOC for circles with radius 5 arcseconds, writing the output to standard output as JSON.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 5.0 / 3600.0)' order=8 mocfmt=json out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a raw binary MOC stream (order 12) for all rows in the input table, reading the input as a stream.",
        "response": "stilts mocshape in=stream_in.fits istream=true shape=point coords='array(RA, DEC)' order=12 mocfmt=raw out=streamed_moc_raw.bin",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"stream_in.fits\"\n"
    },
    {
        "prompt": "Create an order 13 MOC for sources with a magnitude difference (B-R) greater than 2.0.",
        "response": "stilts mocshape in=color_cat.fits icmd='select BMAG - RMAG > 2.0' shape=point coords='array(RA, DEC)' order=13 out=red_source_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'RMAG' '>' '2.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select BMAG - RMAG > 2.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'RMAG' '>' '2.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a polygon MOC and force the processing to sequential execution, ignoring parallelization options.",
        "response": "stilts mocshape runner=sequential in=polys.fits shape=polygon coords=VERTICES out=sequential_poly_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: runner=sequential\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "I need a MOC at order 16 for objects where the identifier column 'ID' is exactly 'M101'.",
        "response": "stilts mocshape in=targets.fits icmd='select equals(ID, \"M101\")' shape=point coords='array(RA, DEC)' order=16 out=m101_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'M101' ')'\n\nCommand was: select equals(ID, \"M101\")\n\nUsage: select <expr>\n    (Unused arguments: 'M101' ')')\n"
    },
    {
        "prompt": "Create a circle MOC where the radius is calculated as $10$ mas $\times \text{sqrt}(\text{S/N})$ ratio.",
        "response": "stilts mocshape in=snr.fits shape=circle coords='array(RA, DEC, (10.0 * sqrt(SN_RATIO)) / 3600000.0)' out=snr_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from an ECSV file (order 8), ensuring the output uses the CDS FITS MOC format.",
        "response": "stilts mocshape in=input.ecsv ifmt=ecsv shape=point coords='array(RA, DEC)' order=8 mocfmt=cds_fits out=ecsv_cds_fits.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter the input table to select a random 10% sample before generating an order 12 MOC.",
        "response": "stilts mocshape in=full_cat.fits icmd='random 0.1' shape=point coords='array(RA, DEC)' order=12 out=random_sample_o12.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.1\n\nUsage: random\n    (Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create an order 17 MOC from UNIQ IDs, and then apply a filter to remove any rows where the coverage is less than $10^{-6}$ square degrees (requires calculating area).",
        "response": "stilts mocshape in=hpx_data.fits shape=uniq coords=HPX_ID order=17 ocmd='select healpixSqdeg(mocUniqToOrder(HPX_ID)) > 1e-6' out=filtered_area_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=select healpixSqdeg(mocUniqToOrder(HPX_ID)) > 1e-6\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a point MOC and sort the result by declination (DEC) coordinate before outputting.",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' ocmd='sort DEC' out=dec_sorted_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=sort DEC\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create an order 5 MOC using polygon data, extracting the coordinate string from column $3, assuming ASCII input.",
        "response": "stilts mocshape in=data.txt ifmt=ascii shape=polygon coords='$3' order=5 out=col3_poly_o5.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Map coverage from STC-S strings and output the column metadata only (omode=meta).",
        "response": "stilts mocshape in=stc_in.fits shape=stc-s coords=REGION omode=meta",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=meta\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a MOC (order 14) where the radius is determined by the linear extrapolation of parallax error to 100 pc.",
        "response": "stilts mocshape in=plx.fits shape=circle coords='array(RA, DEC, parallax_error * 100.0 / parallax)' order=14 out=plx_err_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter the input table to only include rows where the separation between two coordinate pairs is greater than 10 arcseconds, before generating a point MOC.",
        "response": "stilts mocshape in=pairs.fits icmd='select skyDistanceDegrees(RA1, DEC1, RA2, DEC2) * 3600.0 > 10.0' shape=point coords='array(RA1, DEC1)' out=distant_pairs_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC1,' 'RA2,' 'DEC2)' '*' '3600.0' '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA1, DEC1, RA2, DEC2) * 3600.0 > 10.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC1,' 'RA2,' 'DEC2)' '*' '3600.0' '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create an order 22 MOC using point data for extremely high resolution coverage.",
        "response": "stilts mocshape in=hires_cat.fits shape=point coords='array(RA, DEC)' order=22 out=hires_moc_o22.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a JSON MOC for the footprint of all objects whose redshift (Z) is less than 0.01.",
        "response": "stilts mocshape in=z_data.fits icmd='select Z < 0.01' shape=point coords='array(RA, DEC)' order=10 mocfmt=json out=low_z_moc.json",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z < 0.01\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.01'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a polygon MOC (order 12) from vertices stored in a column named 'VEC_ARRAY', assuming the vector format [X1, Y1, X2, Y2, ...].",
        "response": "stilts mocshape in=vector_poly.fits shape=polygon coords='VEC_ARRAY' order=12 out=vector_poly_o12.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from UNIQ IDs, and then apply a filter to calculate the longitude and latitude of the cell center for each row.",
        "response": "stilts mocshape in=hpx_in.fits shape=uniq coords=HPX_ID ocmd='addcol LON healpixNestLon(mocUniqToOrder(HPX_ID), mocUniqToIndex(HPX_ID)); addcol LAT healpixNestLat(mocUniqToOrder(HPX_ID), mocUniqToIndex(HPX_ID))' out=hpx_centers.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=addcol LON healpixNestLon(mocUniqToOrder(HPX_ID), mocUniqToIndex(HPX_ID)); addcol LAT healpixNestLat(mocUniqToOrder(HPX_ID), mocUniqToIndex(HPX_ID))\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a circle MOC where the radius is a maximum of 0.0001 degrees, ensuring the output uses VOTable FITS serialization (CDS FITS).",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 0.0001)' mocfmt=cds_fits out=votable_fits_moc.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a point MOC and calculate a checksum, using the classic sequential runner.",
        "response": "stilts mocshape runner=classic in=test.fits shape=point coords='array(RA, DEC)' omode=checksum",
        "chat.jar": "failed",
        "error": "\nUnused arguments: runner=classic omode=checksum\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "I need a summary report of coverage for objects found within 15 arcminutes, calculated at order 11.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 15.0 / 60.0)' order=11 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an order 6 MOC for sources that fall within the Galactic Anti-Center region (L=180 +/- 10, B=0 +/- 5).",
        "response": "stilts mocshape in=survey.fits icmd='addskycoords icrs galactic RA DEC GLON GLAT; select GLON > 170 && GLON < 190 && GLAT > -5 && GLAT < 5' shape=point coords='array(RA, DEC)' order=6 out=gac_region_o6.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '170' '&&' 'GLON' '<' '190' '&&' 'GLAT' '>' '-5' '&&' 'GLAT' '<' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  select GLON > 170 && GLON < 190 && GLAT > -5 && GLAT < 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '170' '&&' 'GLON' '<' '190' '&&' 'GLAT' '>' '-5' '&&' 'GLAT' '<' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create an order 14 MOC from polygons, applying a pre-filter to keep only polygons with an area greater than 1 square degree (assuming an 'AREA' column exists).",
        "response": "stilts mocshape in=areas.fits icmd='select AREA > 1.0' shape=polygon coords=VERTICES order=14 out=large_poly_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select AREA > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a raw binary MOC stream (order 9) from positions derived using astrometric propagation functions on epoch data.",
        "response": "stilts mocshape in=epoch_data.fits icmd='addcol RA_PROP epochProp(10.0, array(RA, DEC, PLX, PMRA, PMDEC, RV))' icmd='addcol DEC_PROP epochProp(10.0, array(RA, DEC, PLX, PMRA, PMDEC, RV))[1]' shape=point coords='array(RA_PROP, DEC_PROP)' order=9 mocfmt=raw out=propagated_raw.bin",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PLX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_PROP epochProp(10.0, array(RA, DEC, PLX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PLX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a point MOC and add a new column to the resulting table indicating the HEALPix order used.",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' order=10 ocmd='addcol HPX_ORDER 10' out=with_order_col.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=addcol HPX_ORDER 10\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter the input catalog to remove rows where magnitude is exactly null, then generate an order 11 circle MOC (radius 0.02 deg).",
        "response": "stilts mocshape in=faint_cat.fits icmd='select !NULL_MAG' shape=circle coords='array(RA, DEC, 0.02)' order=11 out=not_null_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an order 17 MOC from all rows, ensuring the map builder uses temporary disk storage.",
        "response": "stilts mocshape -disk in=large_cat.fits shape=point coords='array(RA, DEC)' order=17 out=disk_cache_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in=large_cat.fits\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "I need a MOC for sources where the error radius is fixed at 20 mas, outputting the CDS FITS format.",
        "response": "stilts mocshape in=high_err.fits shape=circle coords='array(RA, DEC, 20.0 / 3600000.0)' mocfmt=cds_fits out=mas_cds_fits.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a point MOC and apply a post-filter to only keep the final 100 generated HEALPix cells in the output table.",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' ocmd='tail 100' out=tail_100_hpx.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=tail 100\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a MOC (order 13) for points, then output statistics of the resulting PIXEL_INDEX column.",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' order=13 omode=stats",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=stats\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter the input to include only galaxies (TYPE=0), and create an order 12 MOC for 0.01 degree circles around them.",
        "response": "stilts mocshape in=types.fits icmd='select TYPE == 0' shape=circle coords='array(RA, DEC, 0.01)' order=12 out=galaxy_circles_o12.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TYPE == 0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate an ASCII MOC (order 7) for positions contained in a compressed Parquet file.",
        "response": "stilts mocshape in=data.parquet.gz shape=point coords='array(RA, DEC)' order=7 mocfmt=ascii out=parquet_ascii_o7.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a polygon MOC (order 10) where polygon vertices are determined by reading in a CSV table containing coordinates for each corner.",
        "response": "stilts tpipe in=vertices.csv ifmt=csv ocmd='addcol VRTX array(X1, Y1, X2, Y2, X3, Y3)' | stilts mocshape in=- shape=polygon coords=VRTX order=10 out=csv_poly_moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n\nUnused arguments: ocmd=addcol VRTX array(X1, Y1, X2, Y2, X3, Y3)\n\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n"
    },
    {
        "prompt": "Create a point MOC and include a column conversion filter (addskycoords) before processing the input coordinates.",
        "response": "stilts mocshape in=fk4.fits icmd='addskycoords fk4 icrs RA_B1950 DEC_B1950 RA_J2000 DEC_J2000' shape=point coords='array(RA_J2000, DEC_J2000)' out=fk4_converted_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a JSON MOC for objects where the error ellipse semi-major axis (A_WORLD) is greater than 10 arcseconds.",
        "response": "stilts mocshape in=ellipses.fits icmd='select A_WORLD > 10.0' shape=point coords='array(RA, DEC)' out=large_ellipse_moc.json",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select A_WORLD > 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create an order 21 MOC for targets that are within 5 mas/yr in proper motion space (requires filtering prior to positional generation).",
        "response": "stilts mocshape in=pm.fits icmd='select hypot(PMRA, PMDEC) < 5.0' shape=point coords='array(RA, DEC)' order=21 out=pm_filtered_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC)' '<' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) < 5.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '<' '5.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate an order 15 MOC from polygons and explicitly request the 'bits' implementation.",
        "response": "stilts mocshape in=test.fits shape=polygon coords=VERTICES order=15 mocimpl=bits out=bits_poly_o15.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a circle MOC using $0.000001$ degrees as the fixed radius.",
        "response": "stilts mocshape in=input.fits shape=circle coords='array(RA, DEC, 0.000001)' out=tiny_circles_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter out the first 500 rows and generate a point MOC for the remainder of the table (order 10).",
        "response": "stilts mocshape in=input.fits icmd='rowrange 501 -1' shape=point coords='array(RA, DEC)' order=10 out=skip_first_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Arg \"iStr\" not <int> or +<int>\n\nCommand was: rowrange 501 -1\n\nUsage: rowrange <first> <last>|+<count>\n    (Arg \"iStr\" not <int> or +<int>)\n"
    },
    {
        "prompt": "Generate a MOC (order 13) for all unique identifier strings in the input catalogue (requires coordinate assignment).",
        "response": "stilts mocshape in=unique_ids.fits icmd='uniq ID_STRING; addcol RA 0.0; addcol DEC 0.0' shape=point coords='array(RA, DEC)' order=13 out=unique_id_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 8 MOC for sources where the magnitude 'R' is within the range 14 to 16.",
        "response": "stilts mocshape in=mag_range.fits icmd='select R_MAG >= 14.0 && R_MAG <= 16.0' shape=point coords='array(RA, DEC)' order=8 out=mag_filtered_o8.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '14.0' '&&' 'R_MAG' '<=' '16.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select R_MAG >= 14.0 && R_MAG <= 16.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '14.0' '&&' 'R_MAG' '<=' '16.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Map coverage from STC-S strings, running an assertion filter to check if all regions are non-null before processing.",
        "response": "stilts mocshape in=stc.vot icmd='assert !NULL_S_REGION' shape=stc-s coords=S_REGION out=asserted_stc_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a point MOC from a simulated chaotic attractor table, demonstrating use of the attractor scheme.",
        "response": "stilts mocshape in=:attractor:10000,henon shape=point coords='array(x, y)' out=henon_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a circle MOC using a very specific radius expression: $1 / (\text{PI} \times 100)$ degrees.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 1.0 / (PI * 100.0))' out=pi_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter a catalog by proper motion (PM > 10 mas/yr) and generate a raw binary MOC stream (order 18).",
        "response": "stilts mocshape in=pm.fits icmd='select hypot(PMRA, PMDEC) > 10.0' shape=point coords='array(RA, DEC)' order=18 mocfmt=raw out=high_pm_raw.bin",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 10.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create an order 5 MOC for a full-sky catalog, ensuring the output uses CDS ASCII format.",
        "response": "stilts mocshape in=all_sky.fits shape=point coords='array(RA, DEC)' order=5 mocfmt=cds_ascii out=all_sky_cds_o5.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a point MOC, then add a final column 'SOURCE_TYPE' = 'POS' before saving.",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' ocmd='addcol SOURCE_TYPE \"POS\"' out=with_source_type.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=addcol SOURCE_TYPE \"POS\"\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create an order 13 MOC for targets that are within $1$ arcsecond of Ecliptic coordinates Lon=0, Lat=0.",
        "response": "stilts mocshape in=ecl_targets.fits icmd='addskycoords ecliptic icrs ELON ELAT RA_ICRS DEC_ICRS; select skyDistanceDegrees(RA_ICRS, DEC_ICRS, 266.0, -11.0) * 3600.0 < 1.0' shape=point coords='array(RA_ICRS, DEC_ICRS)' order=13 out=ecl_origin_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC_ICRS,' '266.0,' '-11.0)' '*' '3600.0' '<' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  select skyDistanceDegrees(RA_ICRS, DEC_ICRS, 266.0, -11.0) * 3600.0 < 1.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC_ICRS,' '266.0,' '-11.0)' '*' '3600.0' '<' '1.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I need a polygon MOC where the input vertices are in two separate columns (X_VEC, Y_VEC) holding array coordinates.",
        "response": "stilts mocshape in=arrays.fits shape=polygon coords='interleave(X_VEC, Y_VEC)' out=interleaved_poly.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from UNIQ IDs and then compute the total row count (tile count) using the parallel runner.",
        "response": "stilts mocshape runner=parallel in=hpx_ids.fits shape=uniq coords=HPX_ID omode=count",
        "chat.jar": "failed",
        "error": "\nUnused arguments: runner=parallel omode=count\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter a table to exclude rows where the flux is negative before creating an order 10 MOC.",
        "response": "stilts mocshape in=flux_data.fits icmd='select FLUX > 0' shape=point coords='array(RA, DEC)' order=10 out=positive_flux_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a circle MOC where the radius varies by $1 / \text{SQUARE}(\text{MAGNITUDE})$.",
        "response": "stilts mocshape in=mags.fits shape=circle coords='array(RA, DEC, 1.0 / square(MAGNITUDE))' out=inv_sq_mag_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from a multi-extension FITS file, combining all extensions, setting the resolution to order 11.",
        "response": "stilts tcat in=multi_fits.fits multi=true | stilts mocshape in=- shape=point coords='array(RA, DEC)' order=11 out=multi_fits_o11.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\nError: No file, URL or command \"multi_fits.fits\"\n"
    },
    {
        "prompt": "Generate a MOC at the coarsest possible resolution (order 0) from the points in all_sky_cat.fits.",
        "response": "stilts mocshape in=all_sky_cat.fits shape=point coords='array(RA, DEC)' order=0 out=coarsest_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a point MOC for sources where the J-band magnitude is not null, outputting the exact count of resulting HEALPix cells.",
        "response": "stilts mocshape in=phot_cat.fits icmd='select !NULL_J_MAG' shape=point coords='array(RA, DEC)' omode=count",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=count\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate an MOC for circles centered at Galactic L=300, B=-5, with a fixed radius of 0.0001 radians.",
        "response": "stilts mocshape in=gal_sources.fits icmd='addskycoords galactic icrs GLON GLAT RA DEC' shape=circle coords='array(RA, DEC, radiansToDegrees(0.0001))' out=gal_rad_circles.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Map polygon coverage defined by the S_REGION column, retaining only regions larger than 0.1 square degrees, at order 12.",
        "response": "stilts mocshape in=obs_footprints.fits icmd='select mocSkyProportion(S_REGION) * 41252.96 > 0.1' shape=stc-s coords=S_REGION order=12 out=large_regions_o12.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '41252.96' '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select mocSkyProportion(S_REGION) * 41252.96 > 0.1\n\nUsage: select <expr>\n    (Unused arguments: '*' '41252.96' '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a raw binary MOC stream (order 15) for sources that have a measured proper motion (PMRA) greater than 10 mas/year.",
        "response": "stilts mocshape in=pm_cat.fits icmd='select PMRA > 10.0 / 3600000.0 * 3600.0' shape=point coords='array(RA, DEC)' order=15 mocfmt=raw out=high_pm_raw.bin",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '10.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 10.0 / 3600000.0 * 3600.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC from the positions in positions.csv, using the constant PI/1000 degrees as the radius for all sources.",
        "response": "stilts mocshape in=positions.csv ifmt=csv shape=circle coords='array(RA, DEC, PI / 1000.0)' out=pi_radius_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an ASCII MOC (order 18) for extremely high-resolution coverage of transient alerts.",
        "response": "stilts mocshape in=alerts.fits shape=point coords='array(RA, DEC)' order=18 mocfmt=ascii out=hires_alerts.txt",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter a catalog to select objects observed after 2018.0 (MJD 58119), convert RA/Dec from radians, and generate an order 11 MOC.",
        "response": "stilts mocshape in=rad_obs.fits icmd='select mjdToDecYear(MJD) > 2018.0' shape=point coords='array(radiansToDegrees(RA_RAD), radiansToDegrees(DEC_RAD))' order=11 out=recent_obs_o11.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '2018.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select mjdToDecYear(MJD) > 2018.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '2018.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a MOC for sources within a search radius of 50 arcseconds, outputting only the metadata structure.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 50.0 / 3600.0)' omode=meta",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=meta\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a polygon MOC (order 6) where vertices are given by an array expression, and then discard the output table.",
        "response": "stilts mocshape in=poly_def.fits shape=polygon coords='array(V1_X, V1_Y, V2_X, V2_Y, V3_X, V3_Y)' order=6 omode=discard",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=discard\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "I have coordinates in hours, minutes, seconds (RA_HMS, DEC_DMS). Convert them to degrees and create a point MOC.",
        "response": "stilts mocshape in=hms_cat.fits icmd='replacecol RA hmsToDegrees(RA_HMS); replacecol DEC dmsToDegrees(DEC_DMS)' shape=point coords='array(RA, DEC)' out=hms_to_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for sources around 14h 30m 00s, -60d 00m 00s, using a tiny search radius of 10 micro-arcseconds (\u00b5as).",
        "response": "stilts mocshape in=:skysim:1 shape=circle coords='array(217.5, -60.0, 10.0 / 3600000000.0)' out=tiny_uas_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 13 MOC for objects within a radius equal to the square root of a flux column ('FLUX').",
        "response": "stilts mocshape in=flux_data.fits shape=circle coords='array(RA, DEC, sqrt(FLUX))' order=13 out=sqrt_flux_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I have a HEALPix map table. Generate an MOC that precisely represents the coverage of all UNIQ pixels in the table, at order 10.",
        "response": "stilts mocshape in=hpx_cells.fits shape=uniq coords=UNIQ_ID order=10 out=uniq_reconstructed.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial separation between (RA, DEC) and (REF_RA, REF_DEC) is less than 0.001 degrees, then create a point MOC.",
        "response": "stilts mocshape in=pairs.fits icmd='select skyDistanceDegrees(RA, DEC, REF_RA, REF_DEC) < 0.001' shape=point coords='array(RA, DEC)' out=close_pairs_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'REF_RA,' 'REF_DEC)' '<' '0.001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, REF_RA, REF_DEC) < 0.001\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' 'REF_RA,' 'REF_DEC)' '<' '0.001'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC for positions projected forward 5 years based on proper motion, assuming data is from J2000 epoch.",
        "response": "stilts mocshape in=astrometry.fits icmd='replacecol RA epochProp(5.0, array(RA, DEC, 1000/PLX, PMRA, PMDEC, RV)); replacecol DEC epochProp(5.0, array(RA, DEC, 1000/PLX, PMRA, PMDEC, RV))[1]' shape=point coords='array(RA, DEC)' out=prop_5yr.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' '1000/PLX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA epochProp(5.0, array(RA, DEC, 1000/PLX, PMRA, PMDEC, RV))\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' '1000/PLX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a JSON MOC (order 14) for 2 arcminute radius circles, forcing the output to a compressed format.",
        "response": "stilts mocshape in=targets.vot shape=circle coords='array(RA, DEC, 2.0 / 60.0)' order=14 mocfmt=json compress=true out=compressed_circles.json.gz",
        "chat.jar": "failed",
        "error": "\nUnused arguments: compress=true\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a polygon MOC from a table with STC-S regions, discarding any input rows where the region string is null.",
        "response": "stilts mocshape in=stc_data.fits icmd='select !NULL_S_REGION' shape=stc-s coords=S_REGION out=clean_stc_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an MOC for objects around Ecliptic Lon 150, Lat 10, with a radius of 60 arcseconds, converting the coordinates internally.",
        "response": "stilts mocshape in=ecl_targets.fits icmd='addskycoords ecliptic icrs ELON ELAT RA_ICRS DEC_ICRS' shape=circle coords='array(RA_ICRS, DEC_ICRS, 60.0 / 3600.0)' out=ecl_60as_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC (order 16) and then perform a checksum on the result without saving the MOC data.",
        "response": "stilts mocshape in=hires_cat.fits shape=point coords='array(RA, DEC)' order=16 omode=checksum",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=checksum\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate an MOC where the radius is defined by the square root of the 'ERROR' column value in arcseconds, converted to degrees.",
        "response": "stilts mocshape in=error_sources.fits shape=circle coords='array(RA, DEC, sqrt(ERROR) / 3600.0)' out=sqrt_error_as_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 25 MOC for extremely deep coverage around M42, using a simulated point scheme input.",
        "response": "stilts mocshape in=:skysim:100000 shape=point coords='array(ra, dec)' icmd='select skyDistanceDegrees(ra, dec, 83.82, -5.39) < 0.1' order=25 out=deep_m42_o25.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'dec,' '83.82,' '-5.39)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(ra, dec, 83.82, -5.39) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: 'dec,' '83.82,' '-5.39)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine multiple FITS tables via concatenation and pipe the result directly into mocshape to generate a union MOC (order 10).",
        "response": "stilts tcat in=c1.fits in=c2.fits in=c3.fits | stilts mocshape in=- shape=point coords='array(RA, DEC)' order=10 out=tcat_moc_union.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n"
    },
    {
        "prompt": "Filter rows to keep only sources with positive magnitudes before generating a circle MOC (radius 0.01 deg) and writing in CDS ASCII format.",
        "response": "stilts mocshape in=faint_cat.fits icmd='select MAG > 0' shape=circle coords='array(RA, DEC, 0.01)' mocfmt=cds_ascii out=filtered_cds.txt",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I need a point MOC for targets around Galactic L=0, B=0, derived from Cartesian components (X, Y, Z) assuming distances in parsecs.",
        "response": "stilts mocshape in=cartesian.fits icmd='addskycoords icrs galactic xyzToLon(X,Y,Z) xyzToLat(X,Y,Z) GLON GLAT; addcol RA_ICRS 0.0; addcol DEC_ICRS 0.0' shape=point coords='array(RA_ICRS, DEC_ICRS)' out=cartesian_gal_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 10 MOC for objects whose proper motion vector length (hypot(PMRA, PMDEC)) exceeds 50 mas/year.",
        "response": "stilts mocshape in=pm_cat.fits icmd='select hypot(PMRA, PMDEC) > 50.0 / 3600000.0 * 3600.0' shape=point coords='array(RA, DEC)' order=10 out=high_pm_o10.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '50.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 50.0 / 3600000.0 * 3600.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '50.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC at a very coarse level (order 1) from circle regions with a fixed 10 degree radius.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 10.0)' order=1 out=coarse_10deg_o1.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from polygon string data, enforcing an output order 15 using the CDS JSON format.",
        "response": "stilts mocshape in=footprints.fits shape=polygon coords='VERTICES_STRING' order=15 mocfmt=cds_json out=polygons_cds_json.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter input data to only keep rows where the object ID string contains 'SDSS', before generating a point MOC.",
        "response": "stilts mocshape in=id_cat.fits icmd='select contains(ID_STRING, \"SDSS\")' shape=point coords='array(RA, DEC)' out=sdss_filtered_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'SDSS' ')'\n\nCommand was: select contains(ID_STRING, \"SDSS\")\n\nUsage: select <expr>\n    (Unused arguments: 'SDSS' ')')\n"
    },
    {
        "prompt": "Generate a point MOC (order 17) and apply an output command to rename the resulting column 'PIXEL_INDEX' to 'HPX_ID'.",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' order=17 ocmd='colmeta -name HPX_ID PIXEL_INDEX' out=renamed_hpx_id.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=colmeta -name HPX_ID PIXEL_INDEX\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create an MOC for circles where the radius is equivalent to 5 arcminutes plus 10 arcseconds, converted to degrees.",
        "response": "stilts mocshape in=data.fits shape=circle coords='array(RA, DEC, (5.0 / 60.0) + (10.0 / 3600.0))' out=complex_radius.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a summary report detailing the covered sky fraction derived from UNIQ identifiers, running at maximum standard resolution (order 29).",
        "response": "stilts mocshape in=deep_cells.fits shape=uniq coords=UNIQ_ID order=29 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a point MOC for data where the magnitude error (MAG_ERR) is less than 0.05, and output in ECSV format.",
        "response": "stilts mocshape in=high_quality.fits icmd='select MAG_ERR < 0.05' shape=point coords='array(RA, DEC)' ofmt=ecsv out=hq_moc.ecsv",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR < 0.05\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.05'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a MOC using the implicit default coordinate columns (e.g. $1, $2) and manually set the order to 7.",
        "response": "stilts mocshape in=raw_data.fits shape=point coords='array($1, $2)' order=7 out=indexed_coords_o7.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Map coverage from an ObsCore table using STC-S strings, filtering to keep only non-null RA/DEC coordinates from the core table columns (if available).",
        "response": "stilts mocshape in=obscore.fits icmd='select !NULL_RA' shape=stc-s coords=s_region out=stc_filtered.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for sources within a fixed radius defined as 1 degree divided by the constant PI.",
        "response": "stilts mocshape in=sources.fits shape=circle coords='array(RA, DEC, 1.0 / PI)' out=pi_divided_radius.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 19 JSON MOC, filtering the input to only the first 50 rows, demonstrating high resolution on a subset.",
        "response": "stilts mocshape in=full_cat.fits icmd='head 50' shape=point coords='array(RA, DEC)' order=19 mocfmt=json out=head50_o19.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Use a script file (filter.txt) to define the filtering commands before creating a polygon MOC (order 12).",
        "response": "stilts mocshape in=input.fits icmd=@filter.txt shape=polygon coords=VERTICES out=scripted_poly.fits",
        "chat.jar": "failed",
        "error": "Error: filter.txt (No such file or directory)\n"
    },
    {
        "prompt": "Generate an order 8 MOC and then view the result directly in a GUI window.",
        "response": "stilts mocshape in=view_test.fits shape=point coords='array(RA, DEC)' order=8 omode=gui",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=gui\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a circle MOC where the radius is equivalent to 10 mas/yr proper motion converted to angle/year at 1 kpc (parsec).",
        "response": "stilts mocshape in=pm_data.fits shape=circle coords='array(RA, DEC, (10.0 / 3600000.0) * 1000.0 / 206265.0)' out=pm_derived_rad.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a raw binary MOC stream (order 20) for coordinates read from a pipe-fed CSV stream.",
        "response": "cat stream_data.csv | stilts mocshape in=- ifmt=csv shape=point coords='array(RA, DEC)' order=20 mocfmt=raw out=piped_moc_o20.bin",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Create an order 14 MOC, filtering on a calculated color (B-V > 1.0), and output in CDS FITS format.",
        "response": "stilts mocshape in=color_cat.fits icmd='select B_MAG - V_MAG > 1.0' shape=point coords='array(RA, DEC)' order=14 mocfmt=cds_fits out=red_sources_cds.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'V_MAG' '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select B_MAG - V_MAG > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'V_MAG' '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter input data to only keep rows where declination is positive, and generate a MOC at order 9, writing to standard output in ASCII.",
        "response": "stilts mocshape in=sky_cat.fits icmd='select DEC > 0' shape=point coords='array(RA, DEC)' order=9 mocfmt=ascii out=-",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DEC > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC for positions derived from Ecliptic Lon/Lat and project them to the North Ecliptic Pole (NEP) region.",
        "response": "stilts mocshape in=ecl_pole.fits icmd='addskycoords ecliptic icrs ELON ELAT RA_ICRS DEC_ICRS; select skyDistanceDegrees(RA_ICRS, DEC_ICRS, 270.0, 66.56) < 1.0' shape=point coords='array(RA_ICRS, DEC_ICRS)' out=nep_region_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC_ICRS,' '270.0,' '66.56)' '<' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  select skyDistanceDegrees(RA_ICRS, DEC_ICRS, 270.0, 66.56) < 1.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC_ICRS,' '270.0,' '66.56)' '<' '1.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a low-resolution JSON MOC (order 3) for 5 arcminute circles around targets.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 5.0 / 60.0)' order=3 mocfmt=json out=coarse_circles_o3.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Map coverage for a huge catalog by sampling every 100th row before generating an order 10 MOC.",
        "response": "stilts mocshape in=huge_cat.fits icmd='every 100' shape=point coords='array(RA, DEC)' order=10 out=sampled_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an MOC for objects within a radius equal to $20 \times 10^{-6}$ degrees.",
        "response": "stilts mocshape in=sources.fits shape=circle coords='array(RA, DEC, 20.0e-6)' out=20e6_deg_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a polygon MOC where the vertices are calculated using a custom expression involving trigonometry and the original RA/Dec.",
        "response": "stilts mocshape in=rect.fits shape=polygon coords='array(RA+R, DEC-R, RA-R, DEC-R, RA-R, DEC+R, RA+R, DEC+R)' out=calculated_rects.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC at order 1, filtering the input to keep only rows where the 'FLAG' column is false.",
        "response": "stilts mocshape in=flagged.fits icmd='select !FLAG' shape=point coords='array(RA, DEC)' order=1 out=unflagged_o1.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 22 MOC (extremely high resolution) and force the output to be written using VOTable BINARY2 format.",
        "response": "stilts mocshape in=ultra_deep.fits shape=point coords='array(RA, DEC)' order=22 mocfmt=cds_fits out=ultra_deep_binary2.vot",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter catalog to only include rows where magnitude (G_MAG) is within 15 to 18, then generate a point MOC.",
        "response": "stilts mocshape in=mag_range_cat.fits icmd='select G_MAG >= 15.0 && G_MAG <= 18.0' shape=point coords='array(RA, DEC)' out=mag_filtered_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '15.0' '&&' 'G_MAG' '<=' '18.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G_MAG >= 15.0 && G_MAG <= 18.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '15.0' '&&' 'G_MAG' '<=' '18.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC for circles with radii derived from proper motion dispersion (PM_ERR) assuming it directly maps to degrees.",
        "response": "stilts mocshape in=pm_errors.fits shape=circle coords='array(RA, DEC, PM_ERR)' out=pm_error_rad.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 17 MOC from UNIQ identifiers and immediately display a summary of coverage.",
        "response": "stilts mocshape in=hpx_list.fits shape=uniq coords=HPX_ID order=17 mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a polygon MOC for a complex structure described by a multi-part STC-S column.",
        "response": "stilts mocshape in=complex_stcs.fits shape=stc-s coords=FULL_REGION out=complex_footprint.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a point MOC for objects with proper motion greater than 100 mas/yr, converting mas/yr velocity to angle/year distance at 1 kpc (parsec).",
        "response": "stilts mocshape in=high_vel.fits icmd='select hypot(PMRA, PMDEC) > 100.0 / 3600000.0 * 3600.0' shape=circle coords='array(RA, DEC, hypot(PMRA, PMDEC) / 3600000.0 * 1000.0 / 206265.0)' out=high_vel_angle.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '100.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 100.0 / 3600000.0 * 3600.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '100.0' '/' '3600000.0' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create an order 5 MOC and enforce sequential processing (`mocimpl=lists`) for memory management, saving as FITS.",
        "response": "stilts mocshape in=memory_hog.fits shape=point coords='array(RA, DEC)' order=5 mocimpl=lists out=sequential_moc_o5.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for positions derived from Galactic Longitude (L) and Latitude (B), converting to ICRS before MOC creation.",
        "response": "stilts mocshape in=galactic_cat.fits icmd='addskycoords galactic icrs GLON GLAT RA_ICRS DEC_ICRS' shape=point coords='array(RA_ICRS, DEC_ICRS)' out=converted_galactic_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a point MOC for all sources and rename the output table 'MOC_RESULTS'.",
        "response": "stilts mocshape in=data.fits shape=point coords='array(RA, DEC)' ocmd='tablename MOC_RESULTS' out=named_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=tablename MOC_RESULTS\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a MOC for objects within a radius of 60 arcseconds, forcing the output to HTML format (for metadata inspection).",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 60.0 / 3600.0)' mocfmt=html out=radius_html_meta.html",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter mocfmt: Unknown value \"html\" - must be one of ascii, fits, json, raw, summary, cds_ascii, cds_json, cds_fits\nUsage: mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n\n"
    },
    {
        "prompt": "Filter out duplicate rows based on RA/DEC values before creating a point MOC (order 13).",
        "response": "stilts mocshape in=raw.fits icmd='uniq \"RA DEC\"' shape=point coords='array(RA, DEC)' order=13 out=unique_points_o13.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an MOC for large circles (5 degrees radius) around sources, outputting at maximum standard order 29.",
        "response": "stilts mocshape in=wide_fields.fits shape=circle coords='array(RA, DEC, 5.0)' order=29 out=max_res_wide_fields.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for points, but filter out all rows where RA is null.",
        "response": "stilts mocshape in=dirty.fits icmd='select !NULL_RA' shape=point coords='array(RA, DEC)' out=no_null_ra.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 18 MOC for all unique celestial identifiers (ID) in the input table.",
        "response": "stilts mocshape in=id_list.fits icmd='uniq ID' shape=point coords='array(RA, DEC)' order=18 out=unique_ids_o18.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a polygon MOC where the input vertices array has a varying length per row.",
        "response": "stilts mocshape in=variable_poly.fits shape=polygon coords='VERTICES_ARRAY' out=variable_polygon_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for positions converted from J2000 to Galactic coordinates, then mask the input to exclude the Galactic plane (|B| < 5 deg).",
        "response": "stilts mocshape in=survey.fits icmd='addskycoords icrs galactic RA DEC GLON GLAT; select abs(GLAT) > 5' shape=point coords='array(RA, DEC)' out=off_plane_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  select abs(GLAT) > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create an order 9 MOC for circles whose radius is given by the expression $1 / (\text{DISTANCE_MODULUS} + 1)$.",
        "response": "stilts mocshape in=modulus.fits shape=circle coords='array(RA, DEC, 1.0 / (DM + 1.0))' order=9 out=modulus_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from UNIQ IDs, and then sort the resulting output table by the PIXEL_INDEX column before saving.",
        "response": "stilts mocshape in=hpx_in.fits shape=uniq coords=UNIQ_ID ocmd='sort PIXEL_INDEX' out=sorted_uniq_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=sort PIXEL_INDEX\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter an input table to select a random 1% of the data rows before generating a point MOC.",
        "response": "stilts mocshape in=large_file.fits icmd='random 0.01' shape=point coords='array(RA, DEC)' out=one_percent_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.01\n\nUsage: random\n    (Unused arguments: '0.01'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a MOC for all points and use an output filter to add a calculated column representing the area of a HEALPix cell at that MOC's order.",
        "response": "stilts mocshape in=input_data.fits shape=point coords='array(RA, DEC)' order=10 ocmd='addcol CELL_AREA healpixSqdeg(10)' out=moc_with_area.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=addcol CELL_AREA healpixSqdeg(10)\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a MOC for sources within a fixed radius calculated as $30 / (3600 \times 10)$ degrees.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 30.0 / 36000.0)' out=tiny_fraction_arcsec.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 2 MOC and use the minimal metadata output mode (`omode=meta`).",
        "response": "stilts mocshape in=coarse.fits shape=point coords='array(RA, DEC)' order=2 omode=meta",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=meta\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a MOC using the coordinates defined by the explicit result of the expression: `skyDistanceDegrees(RA, DEC, RA+1, DEC+1)`. (Note: RA/DEC must be supplied, expression used only as demonstration of capability.)",
        "response": "stilts mocshape in=shift_cat.fits shape=point coords='array(RA, DEC)' out=shifted_coords_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for 1 arcminute circles and save the output as a compressed FITS file named `footprint.fits.gz`.",
        "response": "stilts mocshape in=input.fits shape=circle coords='array(RA, DEC, 1.0 / 60.0)' compress=true out=footprint.fits.gz",
        "chat.jar": "failed",
        "error": "\nUnused arguments: compress=true\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Combine two different files using tcatn first, then pipe the concatenated result to mocshape to generate a union MOC (order 10).",
        "response": "stilts tcatn nin=2 in1=c1.fits in2=c2.fits | stilts mocshape in=- shape=point coords='array(RA, DEC)' order=10 out=tcatn_union_o10.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n"
    },
    {
        "prompt": "Create an order 14 MOC and filter the output to discard all rows where the pixel index is even.",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' order=14 ocmd='select PIXEL_INDEX % 2 != 0' out=odd_pixels.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=select PIXEL_INDEX % 2 != 0\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter input data to only include objects where the redshift (Z) is less than 0.5, and generate an order 11 point MOC.",
        "response": "stilts mocshape in=redshifts.fits icmd='select Z < 0.5' shape=point coords='array(RA, DEC)' order=11 out=low_z_moc_o11.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z < 0.5\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a MOC for positions converted from J2000 to Galactic coordinates, then mask the input to exclude the Galactic plane (|B| < 5 deg).",
        "response": "stilts mocshape in=survey.fits icmd='addskycoords icrs galactic RA DEC GLON GLAT; select abs(GLAT) > 5' shape=point coords='array(RA, DEC)' out=off_plane_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  select abs(GLAT) > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I need a summary of coverage for points where the magnitude is brighter than 12, calculated at order 15.",
        "response": "stilts mocshape in=bright_stars.fits icmd='select MAG < 12.0' shape=point coords='array(RA, DEC)' order=15 mocfmt=summary out=-",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '12.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 12.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '12.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create an MOC for objects within a fixed radius of 100 arcseconds, and view the output immediately in TOPCAT.",
        "response": "stilts mocshape in=data.fits shape=circle coords='array(RA, DEC, 100.0 / 3600.0)' omode=topcat",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=topcat\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter an input table to exclude the last 10 rows before generating a JSON MOC (order 7).",
        "response": "stilts mocshape in=full_table.fits icmd='head -10' shape=point coords='array(RA, DEC)' order=7 mocfmt=json out=trimmed_o7.json",
        "chat.jar": "failed",
        "error": "Error: Row count -10 not numeric\n\nCommand was: head -10\n\nUsage: head <nrows>\n    (Row count -10 not numeric)\n"
    },
    {
        "prompt": "Generate a MOC from STC-S strings, outputting the result using the raw binary format (order 16).",
        "response": "stilts mocshape in=stc_footprints.fits shape=stc-s coords=S_REGION order=16 mocfmt=raw out=stc_raw_o16.bin",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 28 MOC for ultra-fine mapping around a single simulated point (0, 0).",
        "response": "stilts mocshape in=:loop:1 end=1 shape=point coords='array(0, 0)' order=28 out=ultra_fine_o28.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: end=1\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "I have coordinates in hours and minutes only (RA_H, RA_M, DEC_D, DEC_M). Convert them to degrees for a point MOC.",
        "response": "stilts mocshape in=partial_sex.fits icmd='addcol RA_DEG hmsToDegrees(RA_H, RA_M, 0); addcol DEC_DEG dmsToDegrees(DEC_D, DEC_M, 0)' shape=point coords='array(RA_DEG, DEC_DEG)' out=partial_sex_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'RA_M,' '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DEG hmsToDegrees(RA_H, RA_M, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA_M,' '0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate an MOC where the circle radius is equal to the angular separation (skyDistanceDegrees) between their ICRS position and their Galactic position, at order 10.",
        "response": "stilts mocshape in=pos_diff.fits icmd='addskycoords icrs galactic RA DEC GLON GLAT' shape=circle coords='array(RA, DEC, skyDistanceDegrees(RA, DEC, GLON, GLAT))' order=10 out=coord_diff_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 19 MOC and ensure the output is suitable for web display (HTML).",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' order=19 mocfmt=html out=moc_html_output.html",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter mocfmt: Unknown value \"html\" - must be one of ascii, fits, json, raw, summary, cds_ascii, cds_json, cds_fits\nUsage: mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n\n"
    },
    {
        "prompt": "Filter input table to keep only sources where the primary ID string starts with 'GDR', then generate a point MOC.",
        "response": "stilts mocshape in=gdr_sources.fits icmd='select startsWith(ID, \"GDR\")' shape=point coords='array(RA, DEC)' out=gdr_filtered_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'GDR' ')'\n\nCommand was: select startsWith(ID, \"GDR\")\n\nUsage: select <expr>\n    (Unused arguments: 'GDR' ')')\n"
    },
    {
        "prompt": "Generate a MOC from UNIQ IDs and enforce the use of the `mocimpl=bits` implementation.",
        "response": "stilts mocshape in=hpx_in.fits shape=uniq coords=UNIQ_ID mocimpl=bits out=bits_impl_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a circle MOC where the radius is determined by $\text{sqrt}(\text{X_ERR}^2 + \text{Y_ERR}^2)$ and saved as VOTable BINARY.",
        "response": "stilts mocshape in=err_data.fits shape=circle coords='array(RA, DEC, hypot(X_ERR, Y_ERR))' out=hypot_err_moc.vot ofmt=votable(format=BINARY)",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: Syntax error: \"(\" unexpected\n"
    },
    {
        "prompt": "Map coverage from ASCII MOC strings contained in a single column ($1), outputting to a raw binary stream.",
        "response": "stilts mocshape in=moc_list.txt ifmt=ascii shape=moc-ascii coords='$1' mocfmt=raw out=ascii_moc_raw.bin",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a polygon MOC (order 13) and check the row count.",
        "response": "stilts mocshape in=poly_in.fits shape=polygon coords=VERTICES order=13 omode=count",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=count\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter out null magnitude rows, convert RA/Dec from radians, and then create an order 10 point MOC.",
        "response": "stilts mocshape in=rad_mag_data.fits icmd='select !NULL_MAG' shape=point coords='array(radiansToDegrees(RA_R), radiansToDegrees(DEC_R))' order=10 out=clean_rad_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 16 MOC for objects within a radius defined by the constant $10 / 3600 \times 2$.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 10.0 / 3600.0 * 2)' order=16 out=scaled_10as.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Use row indices as coordinates (0, 1, 2, ...) to map positions, then create a point MOC (order 5), demonstrating the implicit index column $0$.",
        "response": "stilts mocshape in=:loop:1000 shape=point coords='array($0 / 10.0, $0 / 10.0)' order=5 out=index_points_o5.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an MOC where the circle radius is determined by parallax (PLX) error divided by the parallax value, assuming the result is in degrees.",
        "response": "stilts mocshape in=plx_cat.fits shape=circle coords='array(RA, DEC, PLX_ERR / PLX)' out=plx_distance_err.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a point MOC and apply an output filter to add a constant string column 'SURVEY' with value 'DEEP'.",
        "response": "stilts mocshape in=survey.fits shape=point coords='array(RA, DEC)' ocmd='addcol SURVEY \"DEEP\"' out=survey_with_tag.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=addcol SURVEY \"DEEP\"\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate an order 10 FITS MOC for the coverage defined by a catalogue containing HEALPix UNIQ identifiers, using standard FITS output format.",
        "response": "stilts mocshape in=hpx_data.fits shape=uniq coords=HPX_ID order=10 mocfmt=fits out=hpx_o10_standard.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter data to keep only the first 5 columns, then generate a circle MOC (radius 3 arcminutes).",
        "response": "stilts mocshape in=wide_table.fits icmd='keepcols \"$1 $2 $3 $4 $5\"' shape=circle coords='array(RA, DEC, 3.0 / 60.0)' out=subset_cols_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an order 20 MOC for all sources and force parallel execution for faster processing.",
        "response": "stilts mocshape in=big_data.fits shape=point coords='array(RA, DEC)' order=20 runner=parallel out=parallel_o20.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: runner=parallel\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a MOC from polygons and use a post-filter to discard any column except the PIXEL_INDEX.",
        "response": "stilts mocshape in=poly_data.fits shape=polygon coords=VERTICES ocmd='keepcols PIXEL_INDEX' out=index_only_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=keepcols PIXEL_INDEX\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a circle MOC with radius defined by the constant 1 mas, converted to degrees.",
        "response": "stilts mocshape in=mas_targets.fits shape=circle coords='array(RA, DEC, 1.0 / 3600000.0)' out=one_mas_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from a simulated chaotic attractor table, colored by row index, mapping the 2D coordinates to RA/Dec (order 10).",
        "response": "stilts mocshape in=:attractor:10000,clifford icmd='addcol RA x*10+180; addcol DEC y*10' shape=point coords='array(RA, DEC)' order=10 out=attractor_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an MOC that covers a region defined by a combination of two smaller circular MOC strings (MOC-ASCII).",
        "response": "stilts tpipe in=:loop:1 end=1 ocmd='addcol MOC_STR \"4/10-15 5/100-110\"' | stilts mocshape in=- shape=moc-ascii coords=MOC_STR out=combined_ascii_moc.fits",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: mocshape: not found\n\nUnused arguments: end=1 ocmd=addcol MOC_STR \"4/10-15 5/100-110\"\n\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n"
    },
    {
        "prompt": "Generate an MOC for objects within a fixed radius of 30 arcminutes, outputting the result in FITS format with VOTable metadata (fits-plus).",
        "response": "stilts mocshape in=wide_field.fits shape=circle coords='array(RA, DEC, 30.0 / 60.0)' ofmt=fits-plus out=wide_field_plus.fits",
        "chat.jar": "failed",
        "error": "Error: ofmt=fits-plus: out and ofmt parameters can only be used when omode=out\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter the input table to select only sources where the identifier string is exactly 'NGC104', then create an MOC (order 16).",
        "response": "stilts mocshape in=names.fits icmd='select equals(NAME, \"NGC104\")' shape=point coords='array(RA, DEC)' order=16 out=ngc104_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'NGC104' ')'\n\nCommand was: select equals(NAME, \"NGC104\")\n\nUsage: select <expr>\n    (Unused arguments: 'NGC104' ')')\n"
    },
    {
        "prompt": "Create a point MOC and apply an output filter to convert the PIXEL_INDEX column to its corresponding HEALPix order and index columns.",
        "response": "stilts mocshape in=data.fits shape=point coords='array(RA, DEC)' order=10 ocmd='addcol HPX_ORDER uniqToOrder(PIXEL_INDEX); addcol HPX_INDEX uniqToIndex(PIXEL_INDEX)' out=hpx_with_details.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=addcol HPX_ORDER uniqToOrder(PIXEL_INDEX); addcol HPX_INDEX uniqToIndex(PIXEL_INDEX)\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a MOC for circles whose radius is dynamically calculated as the magnitude error (MAG_ERR) multiplied by 5, converted to degrees.",
        "response": "stilts mocshape in=errors.fits shape=circle coords='array(RA, DEC, MAG_ERR * 5.0)' out=mag_err_scaled_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a dense MOC (order 20) and apply caching to disk for large memory operations.",
        "response": "stilts mocshape -disk in=dense_cat.fits shape=point coords='array(RA, DEC)' order=20 out=disk_cached_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in=dense_cat.fits\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate an MOC for sources within 5 mas (milli-arcseconds) of a position, outputting in CDS JSON format.",
        "response": "stilts mocshape in=targets.fits shape=circle coords='array(RA, DEC, 5.0 / 3600000.0)' mocfmt=cds_json out=tiny_mas_cds.json",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Filter the input table to keep only the bottom 10 rows, then generate an order 9 point MOC.",
        "response": "stilts mocshape in=full_table.fits icmd='tail 10' shape=point coords='array(RA, DEC)' order=9 out=tail10_o9.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create an MOC where the input coordinates are in radians, with a radius of $0.005$ degrees, saving as VOTable BINARY2.",
        "response": "stilts mocshape in=rad_in.fits shape=circle coords='array(radiansToDegrees(RA_RAD), radiansToDegrees(DEC_RAD), 0.005)' out=rad_converted_binary2.vot ofmt='votable(format=BINARY2)'",
        "chat.jar": "failed",
        "error": "Error: ofmt=votable(format=BINARY2): out and ofmt parameters can only be used when omode=out\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a MOC (order 12) and add a column to the output indicating the input row index ($0).",
        "response": "stilts mocshape in=data.fits shape=point coords='array(RA, DEC)' order=12 ocmd='addcol INPUT_ROW $0' out=indexed_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=addcol INPUT_ROW $0\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Map coverage from STC-S strings, running an input check for table validity before processing.",
        "response": "stilts mocshape in=stc_data.fits icmd='check' shape=stc-s coords=S_REGION out=checked_stc_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for circles whose radius is given by the expression $\frac{\text{PI} \times 100}{3600}$ degrees.",
        "response": "stilts mocshape in=data.fits shape=circle coords='array(RA, DEC, PI * 100.0 / 3600.0)' out=pi_arcsec_rad.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Create a point MOC and sort the final output HEALPix cells by the numerical index in descending order.",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' ocmd='sort -down PIXEL_INDEX' out=sorted_desc_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=sort -down PIXEL_INDEX\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter the input to keep only non-null values in the MAGNITUDE column, then generate an order 11 MOC.",
        "response": "stilts mocshape in=mag_data.fits icmd='select !NULL_MAGNITUDE' shape=point coords='array(RA, DEC)' order=11 out=not_null_mag_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an order 15 MOC from an ECSV file and pipe the output directly to a final checksum.",
        "response": "stilts mocshape in=input.ecsv ifmt=ecsv shape=point coords='array(RA, DEC)' order=15 omode=checksum",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=checksum\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a MOC (order 13) for objects within a radius defined by the geometric mean of two error columns ($\text{sqrt}(\text{E1} \times \text{E2})$) in degrees.",
        "response": "stilts mocshape in=geometric_errors.fits shape=circle coords='array(RA, DEC, sqrt(E1 * E2))' order=13 out=geometric_mean_rad.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a raw binary MOC stream (order 9) from sources derived from an input table that is itself streamed.",
        "response": "stilts mocshape in=input.fits istream=true shape=point coords='array(RA, DEC)' order=9 mocfmt=raw out=stream_input_raw.bin",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"input.fits\"\n"
    },
    {
        "prompt": "Filter the input to only retain objects where magnitude is exactly 19.5, then generate an order 10 point MOC.",
        "response": "stilts mocshape in=mag_data.fits icmd='select MAG == 19.5' shape=point coords='array(RA, DEC)' order=10 out=exact_mag_o10.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '==' '19.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG == 19.5\n\nUsage: select <expr>\n    (Unused arguments: '==' '19.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create an MOC for positions derived from Ecliptic Lon/Lat, converting to Galactic coordinates for the MOC. (Requires dual conversion.)",
        "response": "stilts mocshape in=ecl_to_gal.fits icmd='addskycoords ecliptic galactic ELON ELAT GLON GLAT' shape=point coords='array(GLON, GLAT)' out=ecliptic_galactic_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an order 15 MOC and subsequently apply an unrelated output filter to add a constant column 'TYPE'='POS'.",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' order=15 ocmd='addcol TYPE \"POS\"' out=moc_with_type.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=addcol TYPE \"POS\"\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create an order 4 MOC for 1 arcminute circles and save the result as standard ASCII text to standard output.",
        "response": "stilts mocshape in=input.fits shape=circle coords='array(RA, DEC, 1.0 / 60.0)' order=4 mocfmt=ascii out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC from UNIQ IDs and then apply a filter to keep only rows with PIXEL_INDEX less than 1000.",
        "response": "stilts mocshape in=hpx_list.fits shape=uniq coords=HPX_ID ocmd='select PIXEL_INDEX < 1000' out=low_index_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=select PIXEL_INDEX < 1000\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create an order 21 MOC, forcing the use of the slower, sequential 'lists' implementation to handle a challenging geometry.",
        "response": "stilts mocshape in=complex.fits shape=polygon coords=VERTICES order=21 mocimpl=lists out=lists_o21_poly.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "I need a summary report of coverage for all rows, using a polygon shape input.",
        "response": "stilts mocshape in=polygons.fits shape=polygon coords=VERTICES mocfmt=summary out=-",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate a MOC for the coverage defined by the constant 1 degree radius circle centered at the Galactic Center (L=0, B=0).",
        "response": "stilts mocshape in=:loop:1 end=1 shape=circle coords='array(0, 0, 1.0)' out=galactic_center_moc.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: end=1\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Create a polygon MOC and apply a filter to remove all columns from the input table except the coordinate array before MOC generation.",
        "response": "stilts mocshape in=full_table.fits icmd='keepcols VERTICES' shape=polygon coords=VERTICES out=filtered_input_moc.fits",
        "chat.jar": "executed successfully",
        "error": "Error response from daemon: No such container: stilts-chat-stilts-dev-env\n"
    },
    {
        "prompt": "Generate an order 10 MOC and apply an output command to calculate the median magnitude (MAG) of the entire table (requires pre-caching).",
        "response": "stilts mocshape in=input.fits shape=point coords='array(RA, DEC)' order=10 ocmd='keepcols MAG' omode=stats",
        "chat.jar": "failed",
        "error": "\nUnused arguments: ocmd=keepcols MAG omode=stats\n\nUsage: mocshape ifmt=<in-format> istream=true|false icmd=<cmds> order=0..29\n                coords=<expr> shape=point|circle|polygon|moc-ascii|uniq|stc-s\n                mocfmt=ascii|fits|json|raw|summary|cds_ascii|cds_json|cds_fits\n                mocimpl=auto|cds|bits|lists out=<out-file>\n                [in=]<table>\n\n"
    },
    {
        "prompt": "Filter the input to only keep rows with velocity (V) greater than 100 km/s, then generate an order 9 point MOC.",
        "response": "stilts mocshape in=velocity_data.fits icmd='select V > 100.0' shape=point coords='array(RA, DEC)' order=9 out=high_velocity_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select V > 100.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted))\n"
    }
]