[
    {
        "prompt": "Concatenate two FITS files, `obs_run1.fits` and `obs_run2.fits`, into a single output file named `combined_obs.fits`.",
        "response": "stilts tcat in=obs_run1.fits in=obs_run2.fits out=combined_obs.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How can I join three CSV files, `data_q1.csv`, `data_q2.csv`, and `data_q3.csv`, and save the result as a VOTable named `quarterly_report.xml`?",
        "response": "stilts tcat ifmt=csv in=\"data_q1.csv data_q2.csv data_q3.csv\" ofmt=votable out=quarterly_report.xml",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I want to combine `north_survey.dat` and `south_survey.dat`. Please add a new column called 'SurveyID' that indicates whether a row came from the first or second file.",
        "response": "stilts tcat ifmt=ascii in=north_survey.dat in=south_survey.dat seqcol=SurveyID out=combined_survey.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "What's the command to concatenate all the table extensions in my multi-extension FITS file `observations.fits` into `all_obs.fits`?",
        "response": "stilts tcat in=observations.fits multi=true out=all_obs.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"observations.fits\"\n"
    },
    {
        "prompt": "I have a list of FITS files in a text file called `file_list.txt`. How do I use this list with `tcat` to create `master_catalog.fits`?",
        "response": "stilts tcat in=@file_list.txt out=master_catalog.fits",
        "chat.jar": "failed",
        "error": "Error: file_list.txt (No such file or directory)\n"
    },
    {
        "prompt": "Just count the total number of rows I would get if I concatenated `chunk1.csv` and `chunk2.csv`.",
        "response": "stilts tcat ifmt=csv in=chunk1.csv in=chunk2.csv omode=count",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How can I combine `tile_1.fits`, `tile_2.fits`, and `tile_3.fits` and also keep track of the original filename for each row in a new column called `OriginFile`?",
        "response": "stilts tcat in=tile_1.fits in=tile_2.fits in=tile_3.fits loccol=OriginFile out=mosaic.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I'm merging files like `obs_2023_field1.vot` and `obs_2023_field2.vot`. Can you create a new column 'FieldID' that just contains 'field1' and 'field2'?",
        "response": "stilts tcat in=\"obs_2023_field1.vot obs_2023_field2.vot\" uloccol=FieldID out=obs_2023_merged.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I'm concatenating thousands of small FITS files listed in `all_patches.txt`. To avoid running out of file handles, how can I make stilts process them lazily?",
        "response": "stilts tcat in=@all_patches.txt lazy=true out=full_sky_mosaic.fits",
        "chat.jar": "failed",
        "error": "Error: all_patches.txt (No such file or directory)\n"
    },
    {
        "prompt": "Concatenate `table1.vot` and `table2.vot` and then immediately load the resulting table into TOPCAT.",
        "response": "stilts tcat in=table1.vot in=table2.vot omode=topcat",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use stilts tcat to join `part_A.fits` and `part_B.fits`. Before joining, for each table, select only rows where FLUX > 100. After joining, sort the final table by RA.",
        "response": "stilts tcat in=part_A.fits in=part_B.fits icmd='select FLUX > 100' ocmd='sort RA' out=filtered_sorted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "What's the command to combine only the first and third table extensions from my file `data_archive.fits`?",
        "response": "stilts tcat in=data_archive.fits#1 in=data_archive.fits#3 out=combined_extensions.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I need to merge two large tables, `sky_north.colfits` and `sky_south.colfits`, and write to a new FITS file. Can I hint to stilts to count the rows first to potentially speed it up?",
        "response": "stilts tcat in=sky_north.colfits in=sky_south.colfits countrows=true out=full_sky.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine `catalog_ugri.fits` and `catalog_z.fits` and output the result to standard output in text format.",
        "response": "stilts tcat in=catalog_ugri.fits in=catalog_z.fits ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How do I take all the tables from `multi_source.vot` and append them together, but for each one, only keep the 'ID', 'RA', and 'DEC' columns?",
        "response": "stilts tcat in=multi_source.vot multi=true icmd='keepcols \"ID RA DEC\"' out=condensed_source_list.vot",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multi_source.vot\"\n"
    },
    {
        "prompt": "I have two tables, `lightcurve_a.csv` and `lightcurve_b.csv`. I want to concatenate them and then get a statistical summary of the result.",
        "response": "stilts tcat ifmt=csv in=lightcurve_a.csv in=lightcurve_b.csv omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate all tables from `data.fits`. Beforehand, add a new column 'LOG_FLUX' calculated as `log10(FLUX)`. Then, add a column `SourceHDU` showing which extension each row came from.",
        "response": "stilts tcat in=data.fits multi=true icmd='addcol LOG_FLUX log10(FLUX)' seqcol=SourceHDU out=processed_data.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"data.fits\"\n"
    },
    {
        "prompt": "Join two IPAC tables `tbl1.tbl` and `tbl2.tbl` into a new FITS file `joined.fits`.",
        "response": "stilts tcat ifmt=ipac in=tbl1.tbl in=tbl2.tbl ofmt=fits out=joined.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Please show me the metadata of the table that would result from concatenating `header_info.fits` and `main_data.fits`.",
        "response": "stilts tcat in=header_info.fits in=main_data.fits omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have a collection of files: `spec-01.fits`, `spec-02.fits`, `spec-03.fits`. Combine them and then add a column 'File' that contains the original filename for each row.",
        "response": "stilts tcat in=\"spec-01.fits spec-02.fits spec-03.fits\" loccol=File out=all_spectra.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Take `sources1.fits` and `sources2.fits`, concatenate them, and then only keep the first 100 rows of the combined table.",
        "response": "stilts tcat in=sources1.fits in=sources2.fits ocmd='head 100' out=top100_combined.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How do I concatenate all tables from `archive_data.vot` and `new_data.vot` into a single file `full_archive.fits`?",
        "response": "stilts tcat in=archive_data.vot in=new_data.vot multi=true ofmt=fits out=full_archive.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"archive_data.vot\"\n"
    },
    {
        "prompt": "Combine `field_A.csv` and `field_B.csv` and add a sequence column named 'FieldNum'. Each input file should first be filtered to remove rows where `MAG_ERR` > 0.1.",
        "response": "stilts tcat ifmt=csv in=field_A.csv in=field_B.csv icmd='select MAG_ERR <= 0.1' seqcol=FieldNum out=clean_fields.csv",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<=' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR <= 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<=' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I need to stream a large number of CSV files listed in `stream_sources.txt` and concatenate them. How can I do this efficiently?",
        "response": "stilts tcat ifmt=csv in=@stream_sources.txt istream=true out=streamed_output.csv",
        "chat.jar": "failed",
        "error": "Error: stream_sources.txt (No such file or directory)\n"
    },
    {
        "prompt": "Concatenate all tables from `multi_obs.fits`. After combining, add a column `IS_BRIGHT` which is true if `MAG` < 15.",
        "response": "stilts tcat in=multi_obs.fits multi=true ocmd='addcol IS_BRIGHT MAG<15' out=bright_sources.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multi_obs.fits\"\n"
    },
    {
        "prompt": "Combine `cat1.vot` and `cat2.vot`. For each input table, replace the value -999 in the `FLUX` column with a null value. Save as `cat_cleaned.vot`.",
        "response": "stilts tcat in=cat1.vot in=cat2.vot icmd='badval -999 FLUX' out=cat_cleaned.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "What is the command to join `runA.fits` and `runB.fits` and show the result in a GUI window?",
        "response": "stilts tcat in=runA.fits in=runB.fits omode=gui",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I need to stack `jan.csv`, `feb.csv`, and `mar.csv`. The final output should be a FITS file and should include a column `MonthID` indicating the source file number.",
        "response": "stilts tcat ifmt=csv in=jan.csv in=feb.csv in=mar.csv ofmt=fits seqcol=MonthID out=q1_data.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine `data_part1.fits` and `data_part2.fits` but discard the output. I just want to test if the concatenation works without errors.",
        "response": "stilts tcat in=data_part1.fits in=data_part2.fits omode=discard",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How can I combine all the tables in `multidata.fits` and also add a column `OrigHDU` with the sequence number of the HDU?",
        "response": "stilts tcat in=multidata.fits multi=true seqcol=OrigHDU out=combined_hdu.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multidata.fits\"\n"
    },
    {
        "prompt": "Take `sources.txt` and `detections.txt` (both ASCII format), combine them, and then sort the result by the `ID` column.",
        "response": "stilts tcat ifmt=ascii in=sources.txt in=detections.txt ocmd='sort ID' out=sorted_detections.txt",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have FITS files for different filters: `u_band.fits`, `g_band.fits`, `r_band.fits`. Each has a 'Filter' column with a single value ('u', 'g', 'r'). I want to stack them.",
        "response": "stilts tcat in=\"u_band.fits g_band.fits r_band.fits\" out=ugr_photometry.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate `t1.csv` and `t2.csv`, keeping only the `RA`, `DEC`, and `MAG` columns from each before joining.",
        "response": "stilts tcat ifmt=csv in=t1.csv in=t2.csv icmd='keepcols \"RA DEC MAG\"' out=t_combined_subset.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Join all tables in `archive.fits`. Then, get the statistics for the combined table.",
        "response": "stilts tcat in=archive.fits multi=true omode=stats",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"archive.fits\"\n"
    },
    {
        "prompt": "Merge `set1.vot`, `set2.vot`, `set3.vot`. Add a column `SetNumber` indicating which file the row is from, and a column `OriginalFile` with the filename.",
        "response": "stilts tcat in=set1.vot in=set2.vot in=set3.vot seqcol=SetNumber loccol=OriginalFile out=full_set.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I need to concatenate a huge number of files from a list `huge_list.txt`. Can I enable lazy reading and also ask it to pre-count rows for FITS output?",
        "response": "stilts tcat in=@huge_list.txt lazy=true countrows=true out=mega_catalog.fits",
        "chat.jar": "failed",
        "error": "Error: huge_list.txt (No such file or directory)\n"
    },
    {
        "prompt": "Combine `cat_1.fits` and `cat_2.fits`. In the final table, add a new column 'MAG_COLOR' calculated as `BMAG - RMAG`.",
        "response": "stilts tcat in=cat_1.fits in=cat_2.fits ocmd='addcol MAG_COLOR BMAG-RMAG' out=color_catalog.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "What's the command to merge `file1.csv`, `file2.csv`, and output to an IPAC table file named `merged.tbl`?",
        "response": "stilts tcat ifmt=csv in=file1.csv in=file2.csv ofmt=ipac out=merged.tbl",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Take `region1.fits` and `region2.fits`. Concatenate them and then keep only the first 50 rows of the result.",
        "response": "stilts tcat in=region1.fits in=region2.fits ocmd='head 50' out=top50_regions.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How can I combine all the tables within `deep_field.fits` and `wide_field.fits` into a single file `survey_complete.vot`?",
        "response": "stilts tcat in=deep_field.fits in=wide_field.fits multi=true ofmt=votable out=survey_complete.vot",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"deep_field.fits\"\n"
    },
    {
        "prompt": "Join the tables in `all_files.lis`. For each one, select only rows where the object `CLASS` is 'GALAXY'.",
        "response": "stilts tcat in=@all_files.lis icmd='select CLASS==\"GALAXY\"' out=all_galaxies.fits",
        "chat.jar": "failed",
        "error": "Error: all_files.lis (No such file or directory)\n"
    },
    {
        "prompt": "Concatenate two tables from a pipe and a file. The first table comes from `gunzip -c data1.csv.gz` and the second is `data2.csv`.",
        "response": "stilts tcat ifmt=csv in=\"gunzip -c data1.csv.gz|\" in=data2.csv out=combined_pipe_file.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I need to see the metadata for a concatenation of all tables inside `multi_table.fits`.",
        "response": "stilts tcat in=multi_table.fits multi=true omode=meta",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multi_table.fits\"\n"
    },
    {
        "prompt": "Combine `dataset1.fits` and `dataset2.fits`. Add a column 'Dataset' with values 'Set1' for the first file and 'Set2' for the second.",
        "response": "stilts tcat in=dataset1.fits in=dataset2.fits uloccol=Dataset out=combined_datasets.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge `catalog_a.vot` and `catalog_b.vot` and then calculate a checksum on the resulting table.",
        "response": "stilts tcat in=catalog_a.vot in=catalog_b.vot omode=checksum",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate `a.fits`, `b.fits`, `c.fits`. After joining, keep only the columns named `ID`, `RA_DEG`, `DEC_DEG`.",
        "response": "stilts tcat in=\"a.fits b.fits c.fits\" ocmd='keepcols \"ID RA_DEG DEC_DEG\"' out=radec_only.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have `file_x.dat` and `file_y.dat` in ASCII format. Join them, and then add a column named 'ROW_NUM' which is the row index of the final table.",
        "response": "stilts tcat ifmt=ascii in=file_x.dat in=file_y.dat ocmd='addcol ROW_NUM $0' out=files_with_index.dat",
        "chat.jar": "failed",
        "error": "Error: Can't guess output format for files_with_index.dat\n    (No handler specified for writing table.\nKnown formats: jdbc, fits, colfits, votable, fits-healpix, ECSV, parquet, text, ascii, CSV, IPAC, HTML, LaTeX, TST, feather, mirage)\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "What is the command to combine all table extensions from `archive1.fits` and `archive2.fits`?",
        "response": "stilts tcat in=archive1.fits in=archive2.fits multi=true out=full_archive.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"archive1.fits\"\n"
    },
    {
        "prompt": "Combine `table_1.fits`, `table_2.fits`. Before joining, for each, add a column `LOG_E` which is the natural log of the `ENERGY` column.",
        "response": "stilts tcat in=table_1.fits in=table_2.fits icmd='addcol LOG_E ln(ENERGY)' out=tables_with_log.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I want to stack `a.csv`, `b.csv`, `c.csv`. The final output should just show the first 5 rows on my screen.",
        "response": "stilts tcat ifmt=csv in=\"a.csv b.csv c.csv\" ocmd='head 5' ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge `cat1.fits` and `cat2.fits`, and name the output `merged.vot` using the VOTable binary serialization.",
        "response": "stilts tcat in=cat1.fits in=cat2.fits ofmt=votable(format=BINARY) out=merged.vot",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: Syntax error: \"(\" unexpected\n"
    },
    {
        "prompt": "How to concatenate two tables and then add a column `InputTableID` with the input table sequence number and `InputFileName` with the input table file name?",
        "response": "stilts tcat in=first.fits in=second.fits seqcol=InputTableID loccol=InputFileName out=combined_with_provenance.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine all tables in `multicat.vot`, and after combining, keep only rows where the `MAG` column is not null.",
        "response": "stilts tcat in=multicat.vot multi=true ocmd='select !NULL_MAG' out=valid_mag_sources.vot",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multicat.vot\"\n"
    },
    {
        "prompt": "I have a lot of files (`file_*.csv`). I want to concatenate them lazily and just see the row count.",
        "response": "stilts tcat ifmt=csv in=file_*.csv lazy=true omode=count",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate `table_with_arrays.fits` and `more_arrays.fits`. Beforehand, explode all array columns in each table into scalar columns.",
        "response": "stilts tcat in=table_with_arrays.fits in=more_arrays.fits icmd=explodeall out=scalar_table.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Join the first, second, and fifth HDU from `data.fits`. Add a column `HDU_INDEX` with values 1, 2, and 5 respectively for the rows from each extension.",
        "response": "stilts tcat in=data.fits#1 in=data.fits#2 in=data.fits#5 seqcol=HDU_INDEX out=selected_hdus.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine `sources.csv` and `targets.csv`. Before combining, fix the column names in each to be syntactically convenient.",
        "response": "stilts tcat ifmt=csv in=sources.csv in=targets.csv icmd=fixcolnames out=clean_names.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Stack `log_day1.txt`, `log_day2.txt`, and `log_day3.txt`, which are ASCII tables. The final result should be sent to TOPCAT.",
        "response": "stilts tcat ifmt=ascii in=\"log_day1.txt log_day2.txt log_day3.txt\" omode=topcat",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have several files with different extensions, e.g. `data.fits` and `more_data.csv`. Can I concatenate them if they have the same column structure?",
        "response": "Yes, you can use tcatn. For tcat, all input tables are assumed to have the same format specified by a single `ifmt` parameter. `tcatn` is more flexible for heterogeneous inputs.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "How to combine `a.fits` and `b.fits` and then take a random sample of 1000 rows from the result?",
        "response": "stilts tcat in=a.fits in=b.fits ocmd='random 1000' out=random_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 1000\n\nUsage: random\n    (Unused arguments: '1000'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate all tables from `multi.fits` and `multi2.fits` together.",
        "response": "stilts tcat in=multi.fits in=multi2.fits multi=true out=combined_multi.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multi.fits\"\n"
    },
    {
        "prompt": "Join `stars.dat` and `galaxies.dat` (ASCII format). Add a column 'ORIGIN' that contains the unique part of the filename (e.g., 'stars' and 'galaxies').",
        "response": "stilts tcat ifmt=ascii in=stars.dat in=galaxies.dat uloccol=ORIGIN out=combined_objects.dat",
        "chat.jar": "failed",
        "error": "Error: Can't guess output format for combined_objects.dat\n    (No handler specified for writing table.\nKnown formats: jdbc, fits, colfits, votable, fits-healpix, ECSV, parquet, text, ascii, CSV, IPAC, HTML, LaTeX, TST, feather, mirage)\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "I want to merge `survey1.fits` and `survey2.fits`. Before merging, for each file, please convert the 'RA_RAD' column from radians to degrees and name it 'RA_DEG'.",
        "response": "stilts tcat in=survey1.fits in=survey2.fits icmd='addcol RA_DEG degreesToRadians(RA_RAD)' out=survey_deg.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two ECSV files, `edr3_zone1.ecsv` and `edr3_zone2.ecsv`, into a single FITS file.",
        "response": "stilts tcat ifmt=ecsv in=edr3_zone1.ecsv in=edr3_zone2.ecsv ofmt=fits out=edr3_combined.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Show me the metadata of a combined table from `part1.fits` and `part2.fits` after adding a sequence column 'PartNum'.",
        "response": "stilts tcat in=part1.fits in=part2.fits seqcol=PartNum omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate all FITS tables in the current directory (`*.fits`) and sort the final table by the `FLUX` column in descending order.",
        "response": "stilts tcat in=*.fits ocmd='sort -down FLUX' out=all_sorted.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I need to combine two tables, but the second one has an extra column. Can I use `tcat`?",
        "response": "No, `tcat` requires the tables to be of similar form, meaning they should have the same number and types of columns. You would need to use a preprocessing filter (`icmd`) to make the column structures match, or use `tcatn` which is more flexible for heterogeneous tables.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Join `a.csv`, `b.csv`, and `c.csv`, but only keep rows where the `ID` starts with 'NGC'. Then, count the total rows.",
        "response": "stilts tcat ifmt=csv in=\"a.csv b.csv c.csv\" icmd='select startsWith(ID, \"NGC\")' omode=count",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'NGC' ')'\n\nCommand was: select startsWith(ID, \"NGC\")\n\nUsage: select <expr>\n    (Unused arguments: 'NGC' ')')\n"
    },
    {
        "prompt": "Take all table extensions from `archive.fits`, add a column `SourceHDU` with the extension number, and then write the result as a multi-TABLE VOTable file.",
        "response": "stilts tcat in=archive.fits multi=true seqcol=SourceHDU ofmt=votable out=archive_tables.xml",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"archive.fits\"\n"
    },
    {
        "prompt": "Combine `list1.txt` and `list2.txt` (ASCII format) and output to a new file `list_combined.ipac` in IPAC format.",
        "response": "stilts tcat ifmt=ascii in=list1.txt in=list2.txt ofmt=ipac out=list_combined.ipac",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I'm joining many files. What's the difference between `lazy=true` and `istream=true`?",
        "response": "The `lazy=true` parameter defers accessing each table until its rows are needed, which is useful when concatenating a very large number of files to avoid resource issues like running out of file handles [2]. The `istream=true` parameter forces a table to be read as a stream, which can use less resources for certain formats but may fail if the data needs to be read more than once [2, 3].",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "What does the `countrows` parameter in `tcat` do?",
        "response": "The `countrows=true` parameter is a tuning parameter that counts the rows in the tables before starting the output. This can sometimes improve efficiency when writing to formats that require the total row count upfront, like standard FITS, by reducing the number of passes through the input files [2].",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Combine all tables listed in `my_tables.list` and after combining, add a column `is_faint` that is true if `magnitude` > 22.",
        "response": "stilts tcat in=@my_tables.list ocmd='addcol is_faint magnitude>22' out=faint_objects.fits",
        "chat.jar": "failed",
        "error": "Error: my_tables.list (No such file or directory)\n"
    },
    {
        "prompt": "Concatenate the first 5 HDUs of `data.fits` and add a column that contains the filename `data.fits` for all rows.",
        "response": "stilts tcat in=data.fits#{1,2,3,4,5} loccol=SourceFile out=data_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I want to merge two tables and see the result on screen in a simple text format. The tables are `cat1.vot` and `cat2.vot`.",
        "response": "stilts tcat in=cat1.vot in=cat2.vot ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "After concatenating `set_a.fits` and `set_b.fits`, can I calculate statistics only on the `flux_error` column?",
        "response": "stilts tcat in=set_a.fits in=set_b.fits ocmd='keepcols flux_error' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine `obslog1.csv` and `obslog2.csv` and add two new columns: `FileNum` with the file sequence number, and `FileLoc` with the file location string.",
        "response": "stilts tcat ifmt=csv in=obslog1.csv in=obslog2.csv seqcol=FileNum loccol=FileLoc out=full_log.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "What is the simplest `tcat` command to combine `file1.fits` and `file2.fits`?",
        "response": "stilts tcat in=file1.fits in=file2.fits out=output.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge `data1.fits`, `data2.fits`, `data3.fits`. After they are merged, I only want to see the last 10 rows.",
        "response": "stilts tcat in=\"data1.fits data2.fits data3.fits\" ocmd='tail 10' ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How to use `tcat` to combine `one.fits` and `two.fits` into a single file and ensure the output format is `colfits`?",
        "response": "stilts tcat in=one.fits in=two.fits ofmt=colfits-plus out=combined.colfits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have multiple VOTables (`v1.xml`, `v2.xml`). I want to concatenate them, keeping only columns with UCDs for position, and then view the result in TOPCAT.",
        "response": "stilts tcat in=v1.xml in=v2.xml icmd='keepcols \"ucd$pos.eq.ra ucd$pos.eq.dec\"' omode=topcat",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Can you show me a `tcat` command that takes two CSVs, adds a column with the source file number, and then outputs a new CSV?",
        "response": "stilts tcat ifmt=csv in=input1.csv in=input2.csv seqcol=SourceID ofmt=csv out=output.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate all tables from the file `multi_data.vot` and show me the total number of rows and columns.",
        "response": "stilts tcat in=multi_data.vot multi=true omode=count",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multi_data.vot\"\n"
    },
    {
        "prompt": "Combine `first_half.fits` and `second_half.fits`. Beforehand, for each table, rename the column `MAGNITUDE` to `MAG`.",
        "response": "stilts tcat in=first_half.fits in=second_half.fits icmd='colmeta -name MAG MAGNITUDE' out=full_renamed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have a list of ASCII files in `sources.list`. How do I concatenate them all into a single FITS file, using lazy evaluation?",
        "response": "stilts tcat ifmt=ascii in=@sources.list ofmt=fits lazy=true out=sources.fits",
        "chat.jar": "failed",
        "error": "Error: sources.list (No such file or directory)\n"
    },
    {
        "prompt": "Merge `table_x.fits` and `table_y.fits`. After merging, add a column `LOG_VAL` that is the base-10 log of the `VALUE` column.",
        "response": "stilts tcat in=table_x.fits in=table_y.fits ocmd='addcol LOG_VAL log10(VALUE)' out=table_log.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "What's the command to combine three tables (`t1.fits`, `t2.fits`, `t3.fits`) and then display the metadata of the final table?",
        "response": "stilts tcat in=t1.fits in=t2.fits in=t3.fits omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I want to join `data_run_A.fits` and `data_run_B.fits`. I need a column `RunLetter` that has 'A' for rows from the first file and 'B' for the second.",
        "response": "stilts tcat in=data_run_A.fits in=data_run_B.fits uloccol=RunLetter out=combined_runs.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate all the tables inside `archive.vot`. The output should be a single VOTable with BINARY2 serialization.",
        "response": "stilts tcat in=archive.vot multi=true ofmt='votable(format=BINARY2)' out=archive_binary2.vot",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"archive.vot\"\n"
    },
    {
        "prompt": "Take `cat1.fits` and `cat2.fits`. Join them, and then in the final table, replace any occurrences of the value 99.99 in the `mag` column with null.",
        "response": "stilts tcat in=cat1.fits in=cat2.fits ocmd='replaceval 99.99 null mag' out=cat_nulls.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How do I combine the first 100 rows of `table1.fits` with the first 100 rows of `table2.fits`?",
        "response": "stilts tcat in=table1.fits in=table2.fits icmd='head 100' out=top100s.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Join all FITS files in the current directory, and add a column 'filename' containing the name of the source file for each row.",
        "response": "stilts tcat in=*.fits loccol=filename out=all_files.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Can you explain the purpose of the `multi` parameter in `tcat`?",
        "response": "The `multi=true` parameter tells `tcat` to use all tables from each input file, not just the first one. This is for file formats that can contain multiple tables, like FITS or VOTable [2, 4].",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Concatenate `a.csv`, `b.csv`, and `c.csv`. The output should be an HTML table written to `report.html`.",
        "response": "stilts tcat ifmt=csv in=\"a.csv b.csv c.csv\" ofmt=html out=report.html",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have `file1.fits` and `file2.fits`. I want to concatenate them, but only if they both exist. How can I do that in a script?",
        "response": "STILTS itself doesn't have conditional logic for file existence. You would typically handle that in a shell script, for example: `if [ -f file1.fits ] && [ -f file2.fits ]; then stilts tcat in=file1.fits in=file2.fits out=output.fits; fi`.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Combine `data_part_1.fits` and `data_part_2.fits`. After combining, show me the statistics of the `FLUX` column.",
        "response": "stilts tcat in=data_part_1.fits in=data_part_2.fits ocmd='keepcols FLUX' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge all tables within the VOTable `multi.xml` and then sort the final result by the `ID` column.",
        "response": "stilts tcat in=multi.xml multi=true ocmd='sort ID' out=sorted_multi.xml",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multi.xml\"\n"
    },
    {
        "prompt": "What's the command to combine `table1.fits`, `table2.fits`, and `table3.fits`, adding a column `TableIndex` with the source table number?",
        "response": "stilts tcat in=table1.fits in=table2.fits in=table3.fits seqcol=TableIndex out=indexed_table.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate `a.fits` and `b.fits`. Before doing so, filter `a.fits` to keep rows with `FLAG==0` and filter `b.fits` to keep rows with `QUALITY>3`. Can I do this with `tcat`?",
        "response": "No, `tcat` applies the same `icmd` filter to all input tables [1]. To apply different filters to each input table before concatenation, you should use the `tcatn` command.",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Combine two tables, `cat1.vot` and `cat2.vot`, and write the output to a file `cat.colfits`, making sure it's in column-oriented FITS format.",
        "response": "stilts tcat in=cat1.vot in=cat2.vot ofmt=colfits-plus out=cat.colfits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Join `set1.fits`, `set2.fits`, and `set3.fits`. After joining, add a column `RAND_ID` with a random number for each row.",
        "response": "stilts tcat in=\"set1.fits set2.fits set3.fits\" ocmd='addcol RAND_ID random($0)' out=randomized_set.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Can `tcat` handle input from standard input?",
        "response": "Yes, you can use `in=-` to specify standard input. However, you must also explicitly provide the format using the `ifmt` parameter [2].",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Concatenate `data1.csv` and `data2.csv` from a pipe `cat data1.csv data2.csv | stilts ...` and output as a FITS file.",
        "response": "cat data1.csv data2.csv | stilts tcat in=- ifmt=csv ofmt=fits out=piped_data.fits",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Concatenate three FITS files: data_01.fits, data_02.fits, and data_03.fits, and display the resulting table's metadata.",
        "response": "stilts tcat in=data_01.fits in=data_02.fits in=data_03.fits omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine all table extensions found within two multi-extension FITS files, archive1.fits and archive2.fits.",
        "response": "stilts tcat in=archive1.fits in=archive2.fits multi=true out=full_archive.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"archive1.fits\"\n"
    },
    {
        "prompt": "Merge all sky survey segments (segment*.fits) but only keep the first 500 rows of the final consolidated table.",
        "response": "stilts tcat in='segment*.fits' ocmd='head 500' out=sample_head.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Join three CSV files where data fields are delimited by a pipe '|' instead of a comma.",
        "response": "stilts tcat ifmt='csv(delimiter=|)' in='partA.csv partB.csv partC.csv' out=pipe_delimited_output.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate four IPAC format files and save the final output as a single FITS file.",
        "response": "stilts tcat ifmt=ipac in='log1.tbl log2.tbl log3.tbl log4.tbl' ofmt=fits out=ipac_to_fits.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine rows from data_1.vot and data_2.vot and add a column named 'DataSource' indicating the numerical order (1 or 2).",
        "response": "stilts tcat in=data_1.vot in=data_2.vot seqcol=DataSource out=sequenced_data.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge three tables and add a column that tracks the exact original filename for each row, naming the column 'SourcePath'.",
        "response": "stilts tcat in='fileA.fits fileB.fits fileC.fits' loccol=SourcePath out=tracked_paths.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate records from input.fits with a randomly generated catalog of 5000 stars, then shuffle the combined result.",
        "response": "stilts tcat in=input.fits in2=:skysim:5000 ocmd=shuffle out=random_shuffled.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=:skysim:5000\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine two FITS files, ensuring all rows are sorted by the 'ID' column globally after concatenation.",
        "response": "stilts tcat in=cat_a.fits in=cat_b.fits ocmd='sort ID' out=globally_sorted.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge data that spans a multi-extension FITS file, extracting all HDUs, but first rename the column 'FLUX' to 'TOTAL_FLUX' in every HDU.",
        "response": "stilts tcat in=multi.fits multi=true icmd='colmeta -name TOTAL_FLUX FLUX' out=renamed_multi.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multi.fits\"\n"
    },
    {
        "prompt": "I need to combine all observation logs listed in the file 'log_files.txt'. Use lazy reading to conserve resources.",
        "response": "stilts tcat in=@log_files.txt lazy=true out=master_log.fits",
        "chat.jar": "failed",
        "error": "Error: log_files.txt (No such file or directory)\n"
    },
    {
        "prompt": "Combine two CSV tables, but ensure that any empty string field is interpreted as a null value in the output table.",
        "response": "stilts tcat ifmt='csv(notypes=blank)' in='t1.csv t2.csv' out=clean_nulls.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate the first table extension from three different FITS archives: arc1.fits, arc2.fits, and arc3.fits.",
        "response": "stilts tcat in=arc1.fits#1 in=arc2.fits#1 in=arc3.fits#1 out=first_extensions.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine three ASCII tables, adding a column named 'SOURCE_ORIGIN' containing only the unique part of each filename (e.g., 'star', 'gal', 'qso').",
        "response": "stilts tcat ifmt=ascii in='star.dat gal.dat qso.dat' uloccol=SOURCE_ORIGIN out=unique_origin.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge time series data from two ECSV files and write the result as a standard FITS table.",
        "response": "stilts tcat ifmt=ecsv in='ts1.ecsv ts2.ecsv' ofmt=fits out=ecsv_to_fits.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, but before joining, calculate a new column 'LOG_MASS' in each table as log10(MASS).",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='addcol LOG_MASS log10(MASS)' out=with_log_mass.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and then calculate the standard deviation for every numeric column in the final result.",
        "response": "stilts tcat in='set1.fits set2.fits' omode=stats ocmd='keepcols ucd$stat.stdev'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have two tables, A and B. I want to combine them and ensure the final table name is 'Master_Catalog'.",
        "response": "stilts tcat in='A.fits B.fits' ocmd='tablename Master_Catalog' out=master.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge two tables, filtering each one first to only include rows where 'QUALITY' is better than 0.9.",
        "response": "stilts tcat in='q1.fits q2.fits' icmd='select QUALITY > 0.9' out=high_quality_merge.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select QUALITY > 0.9\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate two tables and write the entire final table contents to standard output in a simple text format.",
        "response": "stilts tcat in='t1.vot t2.vot' ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two Parquet files into a single output file, ensuring the total row count is computed upfront.",
        "response": "stilts tcat in='p1.parquet p2.parquet' countrows=true out=merged_parquet.parquet",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge data from a local FITS file with data piped from a remote compressed URL using 'curl'.",
        "response": "stilts tcat in=local.fits in2='curl -s https://remote.com/data.fits.gz|' out=remote_local_merge.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=curl -s https://remote.com/data.fits.gz|\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Concatenate files and then randomly sample 10% of the combined total rows.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='random 0.1' out=random_tenth.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.1\n\nUsage: random\n    (Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine three tables. Before concatenation, for every table, remove columns named 'ERR_RA' and 'ERR_DEC'.",
        "response": "stilts tcat in='c1.fits c2.fits c3.fits' icmd='delcols \"ERR_RA ERR_DEC\"' out=errors_removed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge spectroscopic tables (spec*.fits), but ensure the final table is sorted by 'WAVELENGTH' then by 'TIME'.",
        "response": "stilts tcat in='spec*.fits' ocmd='sort WAVELENGTH TIME' out=sorted_spectra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'TIME'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort WAVELENGTH TIME\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'TIME'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I have data from 'run_a.csv' and 'run_b.csv'. Concatenate them and add a column 'RunID' showing 'a' or 'b'.",
        "response": "stilts tcat ifmt=csv in='run_a.csv run_b.csv' uloccol=RunID out=run_combined_id.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two tables and immediately send the final table to TOPCAT.",
        "response": "stilts tcat in=t1.fits in=t2.fits omode=topcat",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge a series of ASCII tables, and in the resulting table, add a row index column named 'Index' starting from 1.",
        "response": "stilts tcat ifmt=ascii in='list*.txt' ocmd='addcol Index $0' out=indexed_list.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate the first table of multitable.fits with all tables in multitable2.vot.",
        "response": "stilts tcat in=multitable.fits#1 in=multitable2.vot multi=true out=mixed_multi.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multitable.fits\"\n"
    },
    {
        "prompt": "Combine two tables, but only keep rows where the expression 'RA / DEC' is greater than 1.0.",
        "response": "stilts tcat in='pos1.fits pos2.fits' ocmd='select RA/DEC > 1.0' out=ratio_filtered.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA/DEC > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I have two tables, one containing the logarithm of flux. Convert the other table's linear flux column to logarithm before concatenation.",
        "response": "stilts tcat in=logflux.fits in2=linearflux.fits icmd='addcol LOG_FLUX log10(FLUX)' ocmd='keepcols \"LOG_FLUX ID\"' out=all_log_flux.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=linearflux.fits\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Merge all FITS tables in the current directory and calculate the statistical median of the combined 'MAG' column.",
        "response": "stilts tcat in='*.fits' ocmd='keepcols MAG' omode=stats ocmd='keepcols ucd$stat.median'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and if the final table has a column 'FLAG', replace any instance of value 99 with null in that column.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='replaceval 99 null FLAG' out=flag_cleaned.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, but before joining, transpose the columns and rows of the second table.",
        "response": "stilts tcat in1=t1.fits in2=t2.fits icmd2=transpose out=t1_plus_t2t.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Merge three Parquet files and output the result as a VOTable using the highly efficient BINARY2 format.",
        "response": "stilts tcat in='a.parquet b.parquet c.parquet' ofmt='votable(format=BINARY2)' out=parquet_to_binary2.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and add two columns: the numerical sequence ID ('Idx') and the originating filename ('File').",
        "response": "stilts tcat in='d1.fits d2.fits' seqcol=Idx loccol=File out=indexed_provenance.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and then run an expression check to ensure that all values in the final 'FLUX' column are positive.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='assert FLUX > 0' out=positive_flux.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I have two tables where array columns exist. Combine them and then explode all array columns into separate scalar columns.",
        "response": "stilts tcat in='a.fits b.fits' ocmd=explodeall out=scalar_exploded.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and then keep only rows where the expression 'abs(MAG_G - MAG_R)' is less than 0.1.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='select abs(MAG_G - MAG_R) < 0.1' out=narrow_color_band.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'MAG_R)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(MAG_G - MAG_R) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG_R)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine spectroscopic data sets (spec*.vot). After merging, rename the column 'FLUX_ENSITY' to 'F_LAMBDA'.",
        "response": "stilts tcat in='spec*.vot' ocmd='colmeta -name F_LAMBDA FLUX_DENSITY' out=renamed_flux.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, and then calculate the final table's checksum without saving the table itself.",
        "response": "stilts tcat in=t1.fits in=t2.fits omode=checksum",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge files, applying a filter to each input that selects rows where the observation date (ISO string) is after 2020-01-01.",
        "response": "stilts tcat in='obs*.fits' icmd='select isoToMjd(DATE) > isoToMjd(\"2020-01-01\")' out=post_2020.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' 'isoToMjd(2020-01-01' ')'\n\nCommand was: select isoToMjd(DATE) > isoToMjd(\"2020-01-01\")\n\nUsage: select <expr>\n    (Unused arguments: '>' 'isoToMjd(2020-01-01' ')')\n"
    },
    {
        "prompt": "Combine three tables, then eliminate any adjacent duplicate rows based on the primary 'ID' column.",
        "response": "stilts tcat in='c1.fits c2.fits c3.fits' ocmd='sort ID; uniq ID' out=unique_sorted.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Join tables, and then remove any column containing null values in all cells (using the constcol filter trick).",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='constcol -noparam' out=non_constant_only.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and write the final result as a LaTeX table snippet to 'report.tex'.",
        "response": "stilts tcat in='s1.fits s2.fits' ofmt=latex out=report.tex",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate a table with a single column generated by tloop, running from 1 to 10.",
        "response": "stilts tcat in=real_data.fits in2=':loop:1,11' out=data_with_index.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=:loop:1,11\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine two ASCII tables where fields are fixed-width and space-separated.",
        "response": "stilts tcat ifmt=ascii in='fixed_t1.txt fixed_t2.txt' out=fixed_width_merge.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge VOTables and discard all rows where the 'MAG_ERR' column is null.",
        "response": "stilts tcat in='v1.vot v2.vot' ocmd='select !NULL_MAG_ERR' out=non_null_errors.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, viewing the final table in the Swing GUI window.",
        "response": "stilts tcat in=t1.fits in=t2.fits omode=gui",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two tables, and replace the column 'FLUX' with a new column calculated as 'FLUX * 1e-12' (unit conversion).",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replacecol FLUX FLUX * 1e-12' out=unit_corrected.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '1e-12'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX * 1e-12\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '1e-12'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge three Parquet tables and rename all columns to ensure they are compatible with basic SQL naming conventions (using only alphanumeric and underscores).",
        "response": "stilts tcat in='p1.parquet p2.parquet p3.parquet' icmd=fixcolnames out=clean_names_parquet.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate multiple tables, enabling streaming input for optimal handling of very large files.",
        "response": "stilts tcat in='huge*.fits' istream=true out=huge_streamed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine three tables. Before joining, convert the magnitude column 'Vmag' to AB magnitude scale using the AB constant, assuming they are currently Johnson V.",
        "response": "stilts tcat in='v1.fits v2.fits v3.fits' icmd='replacecol Vmag Vmag + JOHNSON_AB_V' out=ab_mags.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol Vmag Vmag + JOHNSON_AB_V\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge all tables from an external URL listing input files in ASCII format.",
        "response": "stilts tcat in=@http://example.com/filelist.txt out=remote_list_merge.fits",
        "chat.jar": "failed",
        "error": "Error: http:/example.com/filelist.txt (No such file or directory)\n"
    },
    {
        "prompt": "Concatenate two tables, but only keep the columns: ID, RA, DEC, and MAG in the output, in that specific order.",
        "response": "stilts tcat in=t1.fits in=t2.fits ocmd='keepcols \"ID RA DEC MAG\"' out=ordered_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and then add a column 'IS_FAINT' that is true if 'MAG' > 20 and false otherwise.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol IS_FAINT MAG > 20' out=faint_flagged.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 20\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '20'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge a simulated sky catalog of 1000 sources with a table of observations, then keep only the first 50 rows from the simulation and the last 50 rows from the observation.",
        "response": "stilts tcat in1=':skysim:1000' icmd1='head 50' in2=obs.fits icmd2='tail 50' out=splice_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Concatenate a table with itself four times to quadruple its length.",
        "response": "stilts tcat nin=4 in1=t.fits in2=t.fits in3=t.fits in4=t.fits out=quadrupled.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Combine ECSV files, and then shuffle the rows of the final output table randomly.",
        "response": "stilts tcat ifmt=ecsv in='e1.ecsv e2.ecsv' ocmd=shuffle out=shuffled_ecsv.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, then randomly discard 50% of the rows from the combined table.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='random 0.5' out=half_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.5\n\nUsage: random\n    (Unused arguments: '0.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate all tables from a multi-table VOTable document and write the output as an HTML table.",
        "response": "stilts tcat in=multi.vot multi=true ofmt=html out=combined_html.html",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multi.vot\"\n"
    },
    {
        "prompt": "Combine tables, adding a column 'PARALLAX_M' calculated as parallax in micro-arcseconds, assuming input parallax is in mas.",
        "response": "stilts tcat in='p1.fits p2.fits' ocmd='addcol PARALLAX_M parallax * 1000.0' out=micro_parallax.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_M parallax * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables and then eliminate adjacent duplicates, but only based on equality of the 'OBS_ID' column.",
        "response": "stilts tcat in='o1.fits o2.fits' ocmd='sort OBS_ID; uniq OBS_ID' out=obs_id_unique.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables and, in the final table, replace the value 'BAD' in the 'FLAG' column with null.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replaceval \"BAD\" null FLAG' out=flag_nullified.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, filtering each input to remove the column 'RA_ERROR' before proceeding.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='delcols RA_ERROR' out=no_ra_error.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge spectroscopic data, using an icmd to ensure all column names are syntactically safe (e.g., replace spaces with underscores).",
        "response": "stilts tcat in='spec*.csv' icmd=fixcolnames out=safe_spec_names.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and add a column 'SourceTableIdx' that lists the table's sequence index.",
        "response": "stilts tcat in='t1.fits t2.fits t3.fits' seqcol=SourceTableIdx out=source_indexed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and enforce that the resulting table is written in FITS column-oriented format.",
        "response": "stilts tcat in='a.fits b.fits' ofmt=colfits out=combined.colfits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, calculate the total number of rows, and immediately discard the resulting table.",
        "response": "stilts tcat in='d1.fits d2.fits' omode=count omode=discard",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=discard\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Concatenate two tables. Before joining, collapse columns 'MAG_U', 'MAG_G', 'MAG_R' into a single array column 'UGRI_MAGS' in each table.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='collapsecols UGRI_MAGS MAG_U 3' out=array_mags.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables from two different Parquet files and output them as a compressed FITS file.",
        "response": "stilts tcat in='p1.parquet p2.parquet' ofmt=fits out=compressed_output.fits.gz",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge two tables, adding a column 'Distance_kpc' derived from 'PARALLAX' (in mas) using the expression language function.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol Distance_kpc 1.0/PARALLAX' out=distance_catalog.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables and ensure the final output file is written using the VOTable FITS serialization format.",
        "response": "stilts tcat in='a.vot b.vot' ofmt='votable(format=FITS)' out=fits_votable.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine a table with itself, then filter the resulting double-length table to keep only every 50th row.",
        "response": "stilts tcat in=t.fits in2=t.fits ocmd='every 50' out=sparse_double.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=t.fits\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Merge tables, and then calculate the final result's minimum and maximum values for all numeric columns.",
        "response": "stilts tcat in='d1.fits d2.fits' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, keeping only columns with UCDs related to position (pos.eq.ra, pos.eq.dec).",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='keepcols \"ucd$pos.eq.ra ucd$pos.eq.dec\"' out=position_only.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and add a column 'LOG_MAG' calculated using log10(MAG). Ensure this new column has a suitable description metadata.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='addcol -desc \"Logarithm of magnitude\" LOG_MAG log10(MAG)' out=log_mag_metadata.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and restrict the output to only the last 500 rows.",
        "response": "stilts tcat in='large*.fits' ocmd='tail 500' out=last_500.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate a table with a simulated attractor dataset of 10,000 points.",
        "response": "stilts tcat in=real_data.fits in2=':attractor:10000,clifford' out=real_plus_attractor.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=:attractor:10000,clifford\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine tables. Before joining, replace the column 'TIME_STRING' in each table with a calculated MJD value.",
        "response": "stilts tcat in='log1.fits log2.fits' icmd='replacecol TIME isoToMjd(TIME_STRING)' out=mjd_times.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and, after combining, enforce that the column 'ERROR' contains only non-negative values, replacing negatives with null.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='replacecol ERROR max(ERROR, 0.0)' out=non_negative_errors.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol ERROR max(ERROR, 0.0)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '0.0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, only retaining the first 1000 rows from each input file before combining.",
        "response": "stilts tcat in='c1.fits c2.fits c3.fits' icmd='head 1000' out=pre_filtered_head.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and write the result as an IPAC table, ensuring table parameters are included.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=ipac out=ipac_output.tbl",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables from standard input (VOTable format) and a local FITS file.",
        "response": "cat stream.vot | stilts tcat in=- ifmt=votable in2=local.fits out=piped_merge.fits",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Concatenate two tables, then calculate the square root of the 'AREA' column in the final table.",
        "response": "stilts tcat in='s1.fits s2.fits' ocmd='addcol SQRT_AREA sqrt(AREA)' out=with_sqrt_area.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, then group them by unique values in 'CLASS_ID' and count the total members in each group.",
        "response": "stilts tcat in='pop1.fits pop2.fits' ocmd='tgroup keys=CLASS_ID aggcols=\"0;count\"' out=class_counts.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Merge tables, adding a column that contains the absolute path of the originating table location.",
        "response": "stilts tcat in='local/t1.fits local/t2.fits' loccol=Full_Path out=full_path_merge.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, but drop all columns except 'ID' and any columns whose name begins with 'MAG_'.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='keepcols \"ID MAG_*\" ' out=id_mag_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, where each input table is filtered to keep only rows where 'FLAG' is true.",
        "response": "stilts tcat in='a.fits b.fits' icmd='select FLAG' out=flag_true_only.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge two tables and calculate the checksum of the resulting data, discarding the table content.",
        "response": "stilts tcat in=d1.fits in=d2.fits omode=checksum omode=discard",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=discard\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Concatenate tables, converting the output format to VOTable BINARY serialization.",
        "response": "stilts tcat in='t1.fits t2.fits' ofmt='votable(format=BINARY)' out=binary_output.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine three tables. After concatenation, transpose the final table so rows become columns.",
        "response": "stilts tcat in='v1.fits v2.fits v3.fits' ocmd=transpose out=transposed_result.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, and then calculate the 1st and 3rd quartiles (Q1, Q3) for the column 'FLUX'.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='keepcols FLUX' omode=stats ocmd='keepcols Q.25 Q.75'",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Q.75'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Q.25 Q.75\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Q.75'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate all tables from a VOTable that references multiple resources, but ensure only rows where 'CLASS' is 'QSO' are kept.",
        "response": "stilts tcat in=multi_resource.vot multi=true icmd='select equals(CLASS, \"QSO\")' out=qso_resources.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'QSO' ')'\n\nCommand was: select equals(CLASS, \"QSO\")\n\nUsage: select <expr>\n    (Unused arguments: 'QSO' ')')\n"
    },
    {
        "prompt": "Combine tables, adding a column that contains the natural logarithm of the 'ENERGY' column.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='addcol LOG_E ln(ENERGY)' out=log_energy.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, replacing the magnitude column 'gmag' with a corrected value 'gmag - 0.05' in the final output.",
        "response": "stilts tcat in='raw1.fits raw2.fits' ocmd='replacecol gmag gmag - 0.05' out=corrected_mags.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol gmag gmag - 0.05\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '0.05'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables and, before final output, keep only rows where the calculated column 'COLOR' (MAG_R - MAG_I) is positive.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='addcol COLOR MAG_R - MAG_I' ocmd='select COLOR > 0' out=positive_color.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'MAG_I'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COLOR MAG_R - MAG_I\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'MAG_I'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables and write the final result as a VOTable document with no internal XML line breaks (compact mode).",
        "response": "stilts tcat in='t1.fits t2.fits' ofmt='votable(compact=true)' out=compact.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, and apply an input filter to discard rows where 'DEC' is null.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='select !NULL_DEC' out=no_null_dec.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two CSV files using a semicolon delimiter and output the result as an ECSV file.",
        "response": "stilts tcat ifmt='csv(delimiter=;)' in='s1.csv s2.csv' ofmt=ecsv out=semicolon_ecsv.ecsv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and add a column 'Source_Id_Check' that is 'VALID' if ID > 0 and 'INVALID' otherwise.",
        "response": "stilts tcat in='i1.fits i2.fits' ocmd='addcol Source_Id_Check ID > 0 ? \"VALID\" : \"INVALID\"' out=id_checked.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0' '?' 'VALID' ':' 'INVALID'\n\nCommand was: addcol Source_Id_Check ID > 0 ? \"VALID\" : \"INVALID\"\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0' '?' 'VALID' ':' 'INVALID')\n"
    },
    {
        "prompt": "Merge all FITS files in a list and ensure the output is written using the VOTable FITS serialization format.",
        "response": "stilts tcat in='*.fits' ofmt='votable(format=FITS)' out=fits_votable_multi.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables and add a column 'IS_GALAXY' with a constant boolean value 'true'.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol IS_GALAXY true' out=galaxy_flag.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, keeping only rows where the exposure time ('EXPTIME') is greater than 1000 seconds.",
        "response": "stilts tcat in='e1.fits e2.fits' icmd='select EXPTIME > 1000' out=long_exposures.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select EXPTIME > 1000\n\nUsage: select <expr>\n    (Unused arguments: '>' '1000'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables, ensuring output is in ASCII format, and then apply a filter to remove redundant rows.",
        "response": "stilts tcat in='a1.fits a2.fits' ofmt=ascii ocmd='uniq *' out=unique_ascii.txt",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, then print a brief statistical summary of the table's contents to the console.",
        "response": "stilts tcat in=t1.fits in=t2.fits omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, forcing the output format to LaTeX table format for publication.",
        "response": "stilts tcat in='small_a.fits small_b.fits' ofmt=latex out=pub_table.tex",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, calculating a new column 'DIST_MPc' where distance is 1000 times the reciprocal of parallax (in mas).",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol DIST_MPc 1000.0 / PARALLAX' out=dist_mpc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' 'PARALLAX'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DIST_MPc 1000.0 / PARALLAX\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'PARALLAX'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables and then calculate the standard deviation of the column 'TEFF' for the combined data.",
        "response": "stilts tcat in='s1.fits s2.fits' ocmd='keepcols TEFF' omode=stats ocmd='keepcols ucd$stat.stdev'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, enabling lazy reading and streaming input, and count the total rows.",
        "response": "stilts tcat in='large_data*.fits' lazy=true istream=true omode=count",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and, after combining, rename the column 'FLUX_UNC' to 'FLUX_ERROR' globally.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='colmeta -name FLUX_ERROR FLUX_UNC' out=error_renamed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate three VOTables: part1.vot, part2.vot, and part3.vot, forcing the output to VOTable using the efficient BINARY2 serialization.",
        "response": "stilts tcat in='part1.vot part2.vot part3.vot' ofmt='votable(format=BINARY2)' out=combined_binary2.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two FITS files, calculating statistics only on columns with UCDs starting with 'phot.' after concatenation.",
        "response": "stilts tcat in='dataA.fits dataB.fits' ocmd='keepcols ucd$phot_*' omode=stats out=phot_stats.txt",
        "chat.jar": "failed",
        "error": "Error: out=phot_stats.txt: out and ofmt parameters can only be used when omode=out\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Merge CSV files (list.csv, other.csv) where fields are delimited by a semicolon, outputting the result in ECSV format.",
        "response": "stilts tcat ifmt='csv(delimiter=;)' in='list.csv other.csv' ofmt=ecsv out=semicolon_merge.ecsv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate data from a remote FTP link and a local FITS file, writing the output to a compressed FITS file.",
        "response": "stilts tcat in='ftp://archive.org/data/remote.fits local.fits' out=final_data.fits.gz",
        "chat.jar": "failed",
        "error": "Error: Can't guess output format for final_data.fits.gz\n    (No handler specified for writing table.\nKnown formats: jdbc, fits, colfits, votable, fits-healpix, ECSV, parquet, text, ascii, CSV, IPAC, HTML, LaTeX, TST, feather, mirage)\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine all tables found within two multi-extension FITS files (multi1.fits, multi2.fits), then display the combined metadata.",
        "response": "stilts tcat in='multi1.fits multi2.fits' multi=true omode=meta",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multi1.fits\"\n"
    },
    {
        "prompt": "Combine a standard table (real.fits) with a generated sequence of 500 rows, adding a column 'INDEX' calculated from the loop variable.",
        "response": "stilts tcat in=real.fits in2=:loop:500 ocmd='addcol INDEX $0' out=indexed_real_sim.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=:loop:500\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Merge two tables, filtering each input to remove all columns except 'RA', 'DEC', and 'Z'.",
        "response": "stilts tcat in='cat1.fits cat2.fits' icmd='keepcols \"RA DEC Z\"' out=xyz_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate files listed in `huge_list.txt`, enabling lazy reading and tracking the sequential order of input tables.",
        "response": "stilts tcat in=@huge_list.txt lazy=true seqcol=FileIndex out=lazy_indexed.fits",
        "chat.jar": "failed",
        "error": "Error: huge_list.txt (No such file or directory)\n"
    },
    {
        "prompt": "Combine tables, adding a column named 'FULL_PATH' that contains the absolute filesystem path or URL of the input table for each row.",
        "response": "stilts tcat in='data/obs1.fits http://remote/obs2.fits' loccol=FULL_PATH out=provenance_tracked.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables where inputs are named 'field_A.fits' and 'field_B.fits', adding a column 'FIELD' containing 'A' or 'B'.",
        "response": "stilts tcat in='field_A.fits field_B.fits' uloccol=FIELD out=field_merged.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, but eliminate any column that contains the exact same value (or null) for all rows across all input tables.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='constcol -noparam' out=non_constant_merge.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge two tables (gal.fits, quasar.fits) where coordinates are in Galactic (L, B) and Equatorial (RA, DEC) systems respectively. Convert both sets to Equatorial before concatenation.",
        "response": "stilts tcat in1=gal.fits in2=quasar.fits icmd1='addskycoords galactic equatorial L B RA DEC' icmd2='keepcols \"RA DEC\"' icmd='keepcols \"RA DEC\"' out=eq_merged_gal.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Combine two tables and rename a column named 'ERROR' to 'UNCERTAINTY' globally in the final output.",
        "response": "stilts tcat in='err1.fits err2.fits' ocmd='colmeta -name UNCERTAINTY ERROR' out=errors_renamed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate files, applying an input command that converts the 'FLUX' column to logarithmic scale (log10(FLUX)) in every table before merging.",
        "response": "stilts tcat in='f1.fits f2.fits f3.fits' icmd='addcol LOG_FLUX log10(FLUX)' out=log_flux_tcat.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge photometric data and output the result mode as `stats`, calculating the Median and Median Absolute Deviation (ScMedAbsDev) for MAG.",
        "response": "stilts tcat in='mag1.fits mag2.fits' ocmd='keepcols MAG' omode=stats ocmd='keepcols Median ScMedAbsDev'",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ScMedAbsDev'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Median ScMedAbsDev\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ScMedAbsDev'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables and display the total memory footprint and file format of the resulting merged table.",
        "response": "stilts tcat in='t1.fits t2.fits' omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, filtering the output to keep rows where 'TIME' is after MJD 59000, and asserting that the row count is greater than 100.",
        "response": "stilts tcat in='obs*.fits' ocmd='select isoToMjd(TIME) > 59000' ocmd='assert $nrow > 100' out=recent_obs_assert.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '59000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select isoToMjd(TIME) > 59000\n\nUsage: select <expr>\n    (Unused arguments: '>' '59000'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables, and add a boolean column 'NULL_FLAG' indicating if the 'FLUX' column was null in the input row.",
        "response": "stilts tcat in='data_x.fits data_y.fits' ocmd='addcol NULL_FLAG NULL_FLUX' out=null_flagged.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, using `badval` to convert the string 'INVALID' to null in the 'QUALITY' column for all inputs.",
        "response": "stilts tcat in='q1.vot q2.vot' icmd='badval \"INVALID\" QUALITY' out=quality_cleaned.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, forcing the output to FITS column-oriented format (COLFITS), ensuring the final row count is computed upfront.",
        "response": "stilts tcat in='data_a.fits data_b.fits' ofmt=colfits countrows=true out=combined_colfits.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and then collapse three scalar columns (R, G, B) into one 3-element array column named 'RGB_ARRAY' in the output.",
        "response": "stilts tcat in='color1.fits color2.fits' ocmd='collapsecols RGB_ARRAY R G B' out=array_collapsed.fits",
        "chat.jar": "failed",
        "error": "Error: Non-numeric <ncol>: \"G\"\n\nCommand was: collapsecols RGB_ARRAY R G B\n\nUsage: collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n    (Non-numeric <ncol>: \"G\")\n"
    },
    {
        "prompt": "Merge tables, and then explode a pre-existing 3-element array column ('VEC_3D') into three scalar columns ('VX', 'VY', 'VZ').",
        "response": "stilts tcat in='vector1.fits vector2.fits' ocmd='explodecols VEC_3D; colmeta -name VX VEC_3D_1; colmeta -name VY VEC_3D_2; colmeta -name VZ VEC_3D_3' out=vector_exploded.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables and send the result directly to the Swing GUI for interactive inspection.",
        "response": "stilts tcat in=t1.fits in2=t2.fits omode=gui",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=t2.fits\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine FITS tables from a URL list (`remote_files.url`) and output the result as a compressed VOTable.",
        "response": "stilts tcat in=@remote_files.url ofmt=votable out=remote_merge.vot.gz",
        "chat.jar": "failed",
        "error": "Error: remote_files.url (No such file or directory)\n"
    },
    {
        "prompt": "Merge tables, then randomly permute the rows of the combined table using a fixed seed of 42.",
        "response": "stilts tcat in='sets*.fits' ocmd='shuffle -seed 42' out=shuffled_fixed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate all tables from a VOTable document (`archive.xml`) where the table names are ambiguous, filtering out rows where 'MAG' > 20 in all inputs.",
        "response": "stilts tcat in=archive.xml multi=true icmd='select MAG <= 20' out=bright_multi.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<=' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG <= 20\n\nUsage: select <expr>\n    (Unused arguments: '<=' '20'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine two Parquet files and ensure the final output is a VOTable with FITS serialization.",
        "response": "stilts tcat ifmt=parquet in='p1.parquet p2.parquet' ofmt='votable(format=FITS)' out=parquet_to_votefits.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, then keep only rows where the 'ID' column has unique values, eliminating duplicates based on all column content.",
        "response": "stilts tcat in='dup1.fits dup2.fits' ocmd='uniq *' out=fully_unique.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, then calculate the average 'FLUX' and maximum 'ERROR' across the resulting single column using `omode=stats`.",
        "response": "stilts tcat in='a.fits b.fits' ocmd='keepcols FLUX ERROR' omode=stats ocmd='keepcols Mean_FLUX Maximum_ERROR'",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ERROR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols FLUX ERROR\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ERROR'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables, adding a column 'WEIGHT_KG' which is the expression 'MASS * 0.453592' (assuming input mass is in pounds).",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='addcol WEIGHT_KG MASS * 0.453592' out=weight_converted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '0.453592'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol WEIGHT_KG MASS * 0.453592\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '0.453592'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge IPAC tables (logA.tbl, logB.tbl) and output the result to standard output in plain text format, including table parameters.",
        "response": "stilts tcat ifmt=ipac in='logA.tbl logB.tbl' ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate a table with a synthetically generated set of 50,000 test data rows, keeping only the first 10 columns of the combined result.",
        "response": "stilts tcat in=real.fits in2=:test:50000 ocmd='keepcols $1-$10' out=test_and_real.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=:test:50000\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine two tables, and in the output, rename all columns from the first table with '_A' suffix and from the second with '_B' suffix.",
        "response": "stilts tcat in1=a.fits in2=b.fits ocmd='colmeta -name $1_A $1_1; colmeta -name $1_B $1_2' out=suffix_renamed.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Merge ASCII files, ensuring that only rows where the column 'TYPE' is exactly 'QSO' are kept in the intermediate processing step.",
        "response": "stilts tcat ifmt=ascii in='d1.txt d2.txt' icmd='select equals(TYPE, \"QSO\")' out=qso_only.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'QSO' ')'\n\nCommand was: select equals(TYPE, \"QSO\")\n\nUsage: select <expr>\n    (Unused arguments: 'QSO' ')')\n"
    },
    {
        "prompt": "Concatenate two tables and write the final output as a LaTeX table snippet to 'table_snippet.tex'.",
        "response": "stilts tcat in=small1.fits in=small2.fits ofmt=latex out=table_snippet.tex",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two tables, and then group rows based on exact equality of the 'ID_STR' column and output the count per group.",
        "response": "stilts tcat in='id_a.fits id_b.fits' ocmd='tgroup keys=ID_STR aggcols=\"null;count\"' out=id_group_count.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Merge time series data and then add a column 'TIME_STRING' containing the time converted from MJD to ISO-8601 string format.",
        "response": "stilts tcat in='ts1.fits ts2.fits' ocmd='addcol TIME_STRING mjdToIso(MJD)' out=ts_iso.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and add a column 'IS_NEAR' that is true if the 'DISTANCE' column is less than 10 kpc.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol IS_NEAR DISTANCE < 10' out=near_flagged.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_NEAR DISTANCE < 10\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables, and immediately send the result to TOPCAT for visualization without saving an intermediate file.",
        "response": "stilts tcat in='v1.fits v2.fits' omode=topcat",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, filtering each input to only retain the top 100 rows based on 'MAG' value (lowest MAG is best) before concatenation.",
        "response": "stilts tcat in='deepA.fits deepB.fits' icmd='sorthead 100 MAG' out=top100_per_file.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two ECSV files and replace the value 999.0 with null in the 'FLUX' column after concatenation.",
        "response": "stilts tcat ifmt=ecsv in='e1.ecsv e2.ecsv' ocmd='replaceval 999.0 null FLUX' out=cleaned_ecsv.ecsv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables from a piped input stream (VOTable format) and a local FITS file.",
        "response": "cat stream.vot | stilts tcat in=- ifmt=votable in2=local.fits out=piped_merge_b.fits",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Merge tables, and then calculate the final table's checksum without writing the data to an output file.",
        "response": "stilts tcat in='chk1.fits chk2.fits' omode=checksum",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and apply an input filter to remove all columns with names starting with 'ERROR_'.",
        "response": "stilts tcat in='e1.fits e2.fits' icmd='delcols ERROR_*' out=no_error_cols.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine three tables where the input format is FITS, outputting the rows that have a final magnitude (MAG) less than 15, and keeping only the first 50 rows of that selection.",
        "response": "stilts tcat in='f1.fits f2.fits f3.fits' ocmd='select MAG < 15; head 50' out=bright_head50.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 15\n\nUsage: select <expr>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge ASCII tables where the data is fixed-width and space-separated (ifmt=ascii).",
        "response": "stilts tcat ifmt=ascii in='fw1.txt fw2.txt' out=fixed_width_merge.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, adding a column 'OBS_TIME' by converting Julian Date (JD) column to Modified Julian Date (MJD).",
        "response": "stilts tcat in='log_a.fits log_b.fits' ocmd='addcol OBS_TIME jdToMjd(JD)' out=mjd_log.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and then enforce that the output table format is FITS-plus, including the rich metadata.",
        "response": "stilts tcat in='m1.fits m2.fits' ofmt=fits-plus out=metadata_rich.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, converting the output format to VOTable with BASE64 encoding for inline streaming.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt='votable(format=BINARY, inline=true)' out=inline_binary.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and add a column 'SourceTableIdx' that lists the table's 1-based input sequence number.",
        "response": "stilts tcat in='t1.fits t2.fits t3.fits' seqcol=SourceTableIdx out=source_indexed_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine files where column names might be poorly formatted (e.g., 'RA (deg)') by running `fixcolnames` on input.",
        "response": "stilts tcat in='bad_names1.csv bad_names2.csv' icmd=fixcolnames out=fixed_names.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge three tables and remove adjacent duplicate rows based solely on the 'OBJECT_ID' column.",
        "response": "stilts tcat in='c1.fits c2.fits c3.fits' ocmd='sort OBJECT_ID; uniq OBJECT_ID' out=object_id_unique.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables and write the entire table contents to standard output in simple text format, including metadata.",
        "response": "stilts tcat in='s1.fits s2.fits' ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and if the final table has a column 'FLAG', replace any instance of value 99 with null in that column.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replaceval 99 null FLAG' out=flag_cleaned_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, and then keep only rows where the expression 'abs(MAG_G - MAG_R)' is less than 0.1.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='select abs(MAG_G - MAG_R) < 0.1' out=narrow_color_band_b.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'MAG_R)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(MAG_G - MAG_R) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG_R)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, and then explode all multi-dimensional array columns into separate scalar columns.",
        "response": "stilts tcat in='array_data1.fits array_data2.fits' ocmd=explodeall out=scalar_exploded_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and then calculate the minimum and maximum values of the 'LUMINOSITY' column.",
        "response": "stilts tcat in='l1.fits l2.fits' ocmd='keepcols LUMINOSITY' omode=stats ocmd='keepcols Minimum Maximum'",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Maximum'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Minimum Maximum\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Maximum'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables and then transpose the columns and rows of the resulting table.",
        "response": "stilts tcat in='v1.fits v2.fits' ocmd=transpose out=transposed_combined.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, but only if the 'QUALITY' flag is true in both input tables.",
        "response": "stilts tcat in='q1.fits q2.fits' icmd='select QUALITY' out=quality_filtered_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine ASCII tables, adding a column named 'SOURCE_ORIGIN' containing the unique part of each input filename, assuming inputs like 'catalog_deep.txt' and 'catalog_shallow.txt'.",
        "response": "stilts tcat ifmt=ascii in='catalog_deep.txt catalog_shallow.txt' uloccol=SOURCE_ORIGIN out=unique_origin_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge files, and then add a column 'Distance_kpc' derived from 'PARALLAX' (in mas) using the expression '1000.0/PARALLAX'.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol Distance_kpc 1000.0/PARALLAX' out=distance_catalog_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and then run an expression check to assert that all magnitudes are positive (MAG > 0).",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='assert MAG > 0' out=positive_mag_assert.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine two tables, but only keep the first 50 rows of the resulting table.",
        "response": "stilts tcat in='partA.fits partB.fits' ocmd='head 50' out=top50_result.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge three tables, and then remove any column that is constant (same value for all rows) but ensure its metadata is retained as a table parameter.",
        "response": "stilts tcat in='d1.fits d2.fits d3.fits' ocmd=constcol out=constant_to_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and immediately send the final processed table to the SAMP hub.",
        "response": "stilts tcat in='s1.fits s2.fits' omode=samp",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and add two columns: the originating filename ('File') and the table sequence ID ('Idx').",
        "response": "stilts tcat in='d1.fits d2.fits' loccol=File seqcol=Idx out=indexed_provenance_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, and then add a column 'IS_GALAXY' that is true if 'CLASS' equals 'GALAXY'.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='addcol IS_GALAXY equals(CLASS, \"GALAXY\")' out=galaxy_flag_b.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'GALAXY' ')'\n\nCommand was: addcol IS_GALAXY equals(CLASS, \"GALAXY\")\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'GALAXY' ')')\n"
    },
    {
        "prompt": "Concatenate tables, restricting the output to only the last 100 rows of the combined dataset.",
        "response": "stilts tcat in='large*.fits' ocmd='tail 100' out=last100_result.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and then calculate the total checksum of the result before discarding it.",
        "response": "stilts tcat in='ch1.fits ch2.fits' omode=checksum omode=discard",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=discard\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Merge PDS4 files (pdsA.xml, pdsB.xml) into a standard FITS file.",
        "response": "stilts tcat ifmt=pds4 in='pdsA.xml pdsB.xml' ofmt=fits out=pds4_merged.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, applying an input filter to remove rows where the magnitude 'MAG' is null.",
        "response": "stilts tcat in='m1.fits m2.fits' icmd='select !NULL_MAG' out=non_null_mag.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, writing the output in the specialized MRT (Machine-Readable Table) format.",
        "response": "stilts tcat in='mrt1.fits mrt2.fits' ofmt=mrt out=combined.mrt",
        "chat.jar": "failed",
        "error": "Error: No handler for output format mrt\n    (No handler for table format \"mrt\")\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Merge all table extensions within a single FITS file (`archive.fits`) and then sort the result by the 'TIME' column.",
        "response": "stilts tcat in=archive.fits multi=true ocmd='sort TIME' out=sorted_archive.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"archive.fits\"\n"
    },
    {
        "prompt": "Concatenate two tables, adding a column 'PARALLAX_UAS' calculated from 'PARALLAX' (in mas) as 'PARALLAX * 1000.0'.",
        "response": "stilts tcat in='p1.fits p2.fits' ocmd='addcol PARALLAX_UAS PARALLAX * 1000.0' out=uas_parallax.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_UAS PARALLAX * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables, and then explode all fixed-length array columns into scalar columns.",
        "response": "stilts tcat in='arr_d1.fits arr_d2.fits' ocmd='explodecols *' out=all_scalar_cols.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge FITS files from the current directory, disabling format auto-detection to enforce FITS reading.",
        "response": "stilts tcat in='*.fits' ifmt=fits out=directory_fits.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables and add a row index column named 'ROW_IDX' starting from 1.",
        "response": "stilts tcat in='r1.fits r2.fits' ocmd='addcol ROW_IDX $0' out=indexed_output_c.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and add a column that tracks the unique part of the filename, assuming inputs like 'catalog_filter_R.vot' and 'catalog_filter_G.vot', yielding 'R' and 'G'.",
        "response": "stilts tcat in='catalog_filter_R.vot catalog_filter_G.vot' uloccol=FILTER_ID out=filter_merged.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and then group them by unique 'TYPE' values, calculating the minimum and maximum 'FLUX' for each type.",
        "response": "stilts tcat in='types1.fits types2.fits' ocmd='tgroup keys=TYPE aggcols=\"FLUX;min FLUX;max\"' out=type_flux_range.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Concatenate tables, and then randomly sample 100 rows from the combined result.",
        "response": "stilts tcat in='rand1.fits rand2.fits' ocmd='random 100' out=random_sample_100.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 100\n\nUsage: random\n    (Unused arguments: '100'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine two ASCII tables, filtering each input to only select rows where the 'DATE' string starts with '2023'.",
        "response": "stilts tcat ifmt=ascii in='log_a.txt log_b.txt' icmd='select startsWith(DATE, \"2023\")' out=2023_logs.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '2023' ')'\n\nCommand was: select startsWith(DATE, \"2023\")\n\nUsage: select <expr>\n    (Unused arguments: '2023' ')')\n"
    },
    {
        "prompt": "Merge tables and write the final result as an HTML table snippet suitable for insertion into a webpage.",
        "response": "stilts tcat in='web_d1.fits web_d2.fits' ofmt=html out=web_snippet.html",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, adding a column 'LOG_E' which is the natural logarithm of 'ENERGY' (ln(ENERGY)).",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='addcol LOG_E ln(ENERGY)' out=ln_energy.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and then enforce that the resulting table is sorted by 'TIME' in descending order.",
        "response": "stilts tcat in='t1.fits t2.fits' ocmd='sort -down TIME' out=time_sorted_down.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, replacing the magnitude column 'G_MAG' with a corrected value 'G_MAG + 0.01' in the final output.",
        "response": "stilts tcat in='raw1.fits raw2.fits' ocmd='replacecol G_MAG G_MAG + 0.01' out=zp_corrected.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol G_MAG G_MAG + 0.01\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' '0.01'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, but drop all columns except those with UCDs related to photometry (`phot.mag*`).",
        "response": "stilts tcat in='full1.fits full2.fits' ocmd='keepcols ucd$phot_mag*' out=phot_only_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, ensuring any empty string fields in the inputs are explicitly converted to null values during reading.",
        "response": "stilts tcat ifmt='csv(notypes=blank)' in='empty1.csv empty2.csv' out=clean_empty_strings.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, and calculate the 90th percentile (Q.90) for the column 'FLUX' in the combined result.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='keepcols FLUX' omode=stats ocmd='keepcols Q.90'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and then add a column 'IS_TRUE' with a constant boolean value 'true'.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='addcol IS_TRUE true' out=constant_true.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and apply an input filter to remove rows where 'DEC' is greater than 80 degrees or less than -80 degrees.",
        "response": "stilts tcat in='all_sky.fits near_pole.fits' icmd='select abs(DEC) < 80.0' out=polar_filtered.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '80.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(DEC) < 80.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '80.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables, converting the output to the TST (Tab-Separated Table) format.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=tst out=tst_output.tst",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate a multi-extension FITS file with a multi-TABLE VOTable, keeping all tables from both inputs.",
        "response": "stilts tcat in=fits_multi.fits in2=vot_multi.vot multi=true out=full_multi_combine.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"fits_multi.fits\"\n"
    },
    {
        "prompt": "Combine tables and then group them by 'CLASS' and calculate the population standard deviation (`stdev-pop`) of 'MASS' for each class.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='tgroup keys=CLASS aggcols=\"MASS;stdev-pop;CLASS_STDEV\"' out=class_stdev.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Merge two tables, but only include rows that appear in the first table after applying a random 50% sample filter to it.",
        "response": "stilts tcat in1=t1.fits icmd1='random 0.5' in2=t2.fits icmd2='random 1.0' out=half_t1_plus_t2.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Concatenate tables and add a new column 'LOG_LUM' defined by the algebraic expression '10 + MAG * -0.4'.",
        "response": "stilts tcat in='l1.fits l2.fits' ocmd='addcol LOG_LUM 10 + MAG * -0.4' out=absolute_lum.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'MAG' '*' '-0.4'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_LUM 10 + MAG * -0.4\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'MAG' '*' '-0.4'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables where one is a FITS file and the other is a VOTable, ensuring the output is written using the VOTable FITS serialization.",
        "response": "stilts tcat in=f.fits in2=v.vot ofmt='votable(format=FITS)' out=combined_fits_votable.vot",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=v.vot\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Merge tables and then apply the `transpose` filter, then output the result as an HTML table.",
        "response": "stilts tcat in='small1.fits small2.fits' ocmd=transpose ofmt=html out=transposed.html",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables and add a column 'TIME_STRING' by converting 'MJD' to an ISO-8601 string.",
        "response": "stilts tcat in='mjd_data1.fits mjd_data2.fits' ocmd='addcol TIME_STRING mjdToIso(MJD)' out=mjd_iso_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and enforce that the output table format is FITS-plus, including the rich metadata.",
        "response": "stilts tcat in='m1.fits m2.fits' ofmt=fits-plus out=metadata_rich_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and then eliminate any adjacent rows that are exact duplicates across all columns.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='uniq *' out=exact_duplicates_removed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, filtering inputs to keep only rows where the 'DATE' column string contains 'T20:00'.",
        "response": "stilts tcat in='log1.fits log2.fits' icmd='select contains(DATE, \"T20:00\")' out=evening_obs.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'T20:00' ')'\n\nCommand was: select contains(DATE, \"T20:00\")\n\nUsage: select <expr>\n    (Unused arguments: 'T20:00' ')')\n"
    },
    {
        "prompt": "Combine tables, writing the result in the TST (Tab-Separated Table) format, including table parameters.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt='tst(params=true)' out=tst_with_params.tst",
        "chat.jar": "failed",
        "error": "Error: No handler for output format tst(params=true)\n    (Handler configuration failed: uk.ac.starlink.util.LoadException: Failed setting \"params=true\" - No config options available\n        (Failed setting \"params=true\" - No config options available\n            (No method setParams in uk.ac.starlink.table.formats.TstTableWriter)))\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Merge tables, converting a string column 'RA_STR' (HMS format) to a numeric column 'RA_DEG' in every input table.",
        "response": "stilts tcat in='s1.fits s2.fits' icmd='addcol RA_DEG hmsToDegrees(RA_STR)' out=hms_to_deg.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, then sort the output by 'REDSHIFT' and keep the rows from the original table with the 20 lowest redshifts.",
        "response": "stilts tcat in='z1.fits z2.fits' ocmd='sorthead 20 REDSHIFT' out=low_redshift_20.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two tables, adding a column 'PARALLAX_PC' calculated from 'PARALLAX' (in mas) using the expression '1.0 / (PARALLAX * 0.001)'.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol PARALLAX_PC 1.0 / (PARALLAX * 0.001)' out=parallax_pc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' '(PARALLAX' '*' '0.001)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_PC 1.0 / (PARALLAX * 0.001)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '(PARALLAX' '*' '0.001)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables and then group rows by 'ID' and calculate the sum of 'WEIGHT' for each ID.",
        "response": "stilts tcat in='w1.fits w2.fits' ocmd='tgroup keys=ID aggcols=\"WEIGHT;sum\"' out=weighted_sum.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Concatenate tables, ensuring input columns are renamed to syntactically safe versions before proceeding.",
        "response": "stilts tcat in='unsafe1.csv unsafe2.csv' icmd=fixcolnames out=safecols_merge.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, but before joining, remove the 'COMMENT' column from both inputs.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='delcols COMMENT' out=comment_free.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and then convert the result to ECSV format, setting the output delimiter to space.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt='ecsv(delimiter=space)' out=spaced_ecsv.ecsv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and add a column 'IS_HIGH_ERR' that is true if 'ERROR' > 5.0.",
        "response": "stilts tcat in='err1.fits err2.fits' ocmd='addcol IS_HIGH_ERR ERROR > 5.0' out=high_err_flag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_HIGH_ERR ERROR > 5.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '5.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine two tables, then calculate the total number of rows and immediately discard the result.",
        "response": "stilts tcat in='d1.fits d2.fits' omode=count omode=discard",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=discard\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Merge table extensions from a FITS file and output the final table to the terminal in text format, showing only the metadata.",
        "response": "stilts tcat in=multi.fits multi=true omode=meta out=-",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multi.fits\"\n"
    },
    {
        "prompt": "Concatenate table, and replace null values in the 'FLUX_ERR' column with a fixed value of 0.001.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replaceval null 0.001 FLUX_ERR' out=fixed_flux_err.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two tables, one containing distances in AU and the other in light years. Convert both to parsecs before joining.",
        "response": "stilts tcat in1=au.fits icmd1='addcol PC_DIST au/$PC_AU' in2=ly.fits icmd2='addcol PC_DIST lightyear/$METRE_PER_PARSEC' ocmd='keepcols PC_DIST' out=distance_pc.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Merge tables and write the final output using the IPAC format, ensuring table parameters are included.",
        "response": "stilts tcat in='p1.fits p2.fits' ofmt='ipac(params=true)' out=combined.ipac",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate all tables from a VOTable that references multiple resources, but ensure only rows where 'CLASS' is 'GALAXY' are kept.",
        "response": "stilts tcat in=multi_resource.vot multi=true icmd='select equals(CLASS, \"GALAXY\")' out=galaxy_resources.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'GALAXY' ')'\n\nCommand was: select equals(CLASS, \"GALAXY\")\n\nUsage: select <expr>\n    (Unused arguments: 'GALAXY' ')')\n"
    },
    {
        "prompt": "Combine tables, and add a column 'LOG_COUNT' calculated as 'log10($0 + 1)' where $0 is the row index.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol LOG_COUNT log10($0 + 1)' out=log_row_index.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_COUNT log10($0 + 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate four Parquet files, filtering each input to exclude rows where 'Flag' is 'BAD' before merging.",
        "response": "stilts tcat in='p1.parquet p2.parquet p3.parquet p4.parquet' icmd='select Flag != \"BAD\"' out=filtered_parquet_merge.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!=' 'BAD'\n\nCommand was: select Flag != \"BAD\"\n\nUsage: select <expr>\n    (Unused arguments: '!=' 'BAD')\n"
    },
    {
        "prompt": "Combine all table extensions found within three separate FITS archive files, then view the resulting table in a GUI window.",
        "response": "stilts tcat in='arch1.fits arch2.fits arch3.fits' multi=true omode=gui",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"arch1.fits\"\n"
    },
    {
        "prompt": "Merge two large CSV files, ensuring that rows are read sequentially (streamed) for low memory usage, and save the result as FITS.",
        "response": "stilts tcat ifmt=csv in='large_a.csv large_b.csv' istream=true out=low_mem_merge.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, adding a column named 'SOURCE_TYPE' derived from the original filename, assuming filenames are 'star_cat.fits' and 'gal_cat.fits'.",
        "response": "stilts tcat in='star_cat.fits gal_cat.fits' uloccol=SOURCE_TYPE out=typed_catalog.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, adding a column 'PARALLAX_UAS' calculated from the existing 'PARALLAX' (mas) column, then sort the output by this new column.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol PARALLAX_UAS PARALLAX * 1000.0; sort PARALLAX_UAS' out=uas_sorted_parallax.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_UAS PARALLAX * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables and then calculate the first quartile (Q1) and third quartile (Q3) of the final combined 'FLUX' column.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='keepcols FLUX' omode=stats ocmd='keepcols Q1 Q3'",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Q3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Q1 Q3\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Q3'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate input files, applying a filter to each that removes columns 'X_COORD' and 'Y_COORD' before merging.",
        "response": "stilts tcat in='pos1.fits pos2.fits' icmd='delcols \"X_COORD Y_COORD\"' out=xy_removed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine three tables, then keep only unique rows based on identical content across all columns.",
        "response": "stilts tcat in='d1.fits d2.fits d3.fits' ocmd='uniq *' out=fully_deduplicated.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge ECSV files and output the combined table in VOTable format using the recommended BINARY2 serialization.",
        "response": "stilts tcat ifmt=ecsv in='e1.ecsv e2.ecsv' ofmt='votable(format=BINARY2)' out=ecsv_to_binary2.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate a sequence of files, forcing lazy reading, and outputting the final row count.",
        "response": "stilts tcat in='chunk*.fits' lazy=true omode=count",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two tables, adding an output column 'LOG_R' calculated as log10 of a 'DISTANCE' column.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol LOG_R log10(DISTANCE)' out=log_distance_calc.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge spectroscopic data, ensuring all input column names are adjusted to be syntactically convenient before concatenation.",
        "response": "stilts tcat in='spec1.vot spec2.vot' icmd=fixcolnames out=clean_name_spectra.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and then assert that every row in the output table has a positive 'MASS' value, failing if not.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='assert MASS > 0' out=positive_mass.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MASS > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine two tables, and then output the result as a LaTeX table snippet.",
        "response": "stilts tcat in=small_a.fits in=small_b.fits ofmt=latex out=output_table.tex",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge time series tables, ensuring that the final output is sorted by 'TIME' in descending order.",
        "response": "stilts tcat in='ts*.fits' ocmd='sort -down TIME' out=time_desc_sorted.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, where each input table has a column 'MAG_ARRAY' which is an array of magnitudes. After combining, explode this array column into individual scalar columns.",
        "response": "stilts tcat in='arr1.fits arr2.fits' ocmd=explodecols MAG_ARRAY out=scalar_mags.fits",
        "chat.jar": "failed",
        "error": "Error: Missing column list\n\nCommand was: explodecols\n\nUsage: explodecols <colid-list>\n    (Missing column list)\n"
    },
    {
        "prompt": "Combine two ASCII tables, and then replace all null values in the final 'FLUX' column with a specific bad value, -99.0.",
        "response": "stilts tcat ifmt=ascii in='a1.txt a2.txt' ocmd='replaceval null -99.0 FLUX' out=nulls_to_badval.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and write the output as an HTML table fragment.",
        "response": "stilts tcat in='web_parts*.fits' ofmt=html out=web_output.html",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate a FITS file with 10,000 synthetic sky sources, adding a provenance column indicating the filename or scheme name.",
        "response": "stilts tcat in1=real.fits in2=':skysim:10000' loccol=Source out=real_sim_provenance.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Combine tables, and add an output column 'RA_HMS' by converting the 'RA_DEG' column to sexagesimal string format (HMS).",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol RA_HMS degreesToHms(RA_DEG)' out=hms_coords.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge two tables, but keep only the last 100 rows of the combined result.",
        "response": "stilts tcat in='big1.fits big2.fits' ocmd='tail 100' out=last_100.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, filtering each input to only include sources where $\\text{G-R}$ color is positive.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='select G-R > 0' out=positive_color_filter.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select G-R > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables, and enforce that the resulting table is written in FITS column-oriented format (COLFITS), ensuring the total row count is calculated upfront.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=colfits countrows=true out=columnar_fits.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, adding a boolean column 'IS_BRIGHT' that flags rows where $\\text{MAG} < 18$.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='addcol IS_BRIGHT MAG < 18' out=flagged_bright.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT MAG < 18\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate two tables, then calculate the total number of rows and immediately discard the resulting data.",
        "response": "stilts tcat in=t_input.fits in2=t_more.fits omode=count omode=discard",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=t_more.fits omode=discard\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine tables, and in the output, rename the column 'FLUX_ENSITY' to 'F_DENSITY' globally.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='colmeta -name F_DENSITY FLUX_DENSITY' out=density_renamed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge two tables, and then eliminate adjacent duplicate rows based on the 'UID' column.",
        "response": "stilts tcat in='u1.fits u2.fits' ocmd='sort UID; uniq UID' out=uid_unique.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and add a column 'OBS_MJD' by converting an existing string column 'OBS_DATE' (ISO format) to MJD.",
        "response": "stilts tcat in='log1.fits log2.fits' ocmd='addcol OBS_MJD isoToMjd(OBS_DATE)' out=mjd_converted_log.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, converting the output format to VOTable with the less efficient, but highly portable, TABLEDATA serialization.",
        "response": "stilts tcat in='v1.fits v2.fits' ofmt='votable(format=TABLEDATA)' out=tabledata_merge.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, keeping only columns with UCDs related to 'photometry.magnitude' and writing the final result as an ECSV file.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='keepcols ucd$phot.mag*' ofmt=ecsv out=phot_mag_only.ecsv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, adding a column 'Distance_kpc' derived from parallax (in mas) using the expression $\\text{1.0}/\\text{PARALLAX}$.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol Distance_kpc 1.0/PARALLAX' out=distance_kpc_calc.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and add a column that tracks the absolute path of the originating table, labeling it 'FullPath'.",
        "response": "stilts tcat in='local/a.fits remote/b.fits' loccol=FullPath out=full_path_records.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge three tables, and then randomly sample 50% of the combined rows.",
        "response": "stilts tcat in='r1.fits r2.fits r3.fits' ocmd='random 0.5' out=half_random_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.5\n\nUsage: random\n    (Unused arguments: '0.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, filtering each input to only include rows where the quality flag 'Q_FLAG' is equal to 'A'.",
        "response": "stilts tcat in='q1.fits q2.fits' icmd='select equals(Q_FLAG, \"A\")' out=quality_a_only.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'A' ')'\n\nCommand was: select equals(Q_FLAG, \"A\")\n\nUsage: select <expr>\n    (Unused arguments: 'A' ')')\n"
    },
    {
        "prompt": "Combine ASCII tables, forcing input fields delimited by a vertical bar ('|').",
        "response": "stilts tcat ifmt='csv(delimiter=|)' in='pipe1.txt pipe2.txt' out=pipe_delimited_output.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and then transpose the final table so columns become rows.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd=transpose out=transposed_table.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and add a column 'BIT_COUNT' which is the number of set bits in an existing integer column 'FLAG_INT'.",
        "response": "stilts tcat in='b1.fits b2.fits' ocmd='addcol BIT_COUNT bitCount(FLAG_INT)' out=flag_bit_count.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, but keep only the columns: 'ID', 'X', 'Y', and any column starting with 'FLUX_'.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='keepcols \"ID X Y FLUX_*\"' out=xy_flux_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, and replace any instance of value 99.0 with null in all columns starting with 'MAG_'.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='replaceval 99.0 null MAG_*' out=mag_null_99.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate three tables, sort the result by 'ID', and then calculate the statistical mode (not directly supported, but calculating the count per group provides a proxy).",
        "response": "stilts tcat in='i1.fits i2.fits i3.fits' ocmd='tgroup keys=ID aggcols=\"null;count\"' out=id_counts.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Combine tables and then add a column 'LOG_ABS_Z' calculated as $\\log_{10}(|\\text{REDSHIFT}| + 1)$ to handle near-zero values.",
        "response": "stilts tcat in='z1.fits z2.fits' ocmd='addcol LOG_ABS_Z log10(abs(REDSHIFT) + 1)' out=robust_log_z.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_ABS_Z log10(abs(REDSHIFT) + 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables, adding a column 'SourceTableSeq' that lists the 1-based index of the table source.",
        "response": "stilts tcat in='t_part1.fits t_part2.fits t_part3.fits' seqcol=SourceTableSeq out=indexed_source_merge.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, then drop any column that is constant across the entire resulting dataset.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd=constcol out=non_constant_only.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two VOTables, ensuring that the output is written in VOTable format with inline binary data (BINARY, inline=true).",
        "response": "stilts tcat in='v1.vot v2.vot' ofmt='votable(format=BINARY, inline=true)' out=inline_binary_vot.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge data, forcing the output format to IPAC table (.tbl).",
        "response": "stilts tcat in='i1.fits i2.fits' ofmt=ipac out=ipac_output.tbl",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and then calculate the standard deviation of the column 'TEFF' for the combined data.",
        "response": "stilts tcat in='s1.fits s2.fits' ocmd='keepcols TEFF' omode=stats ocmd='keepcols ucd$stat.stdev'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine a local FITS file with a synthetically generated loop of 500 rows, adding a column 'ID' from the loop variable.",
        "response": "stilts tcat in1=real_data.fits in2=':loop:500' ocmd='addcol ID i' out=real_plus_loop.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Merge tables, filtering each input to only retain rows where the geometric column 'RA' is between 100 and 150 degrees.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='select RA > 100 && RA < 150' out=ra_range_filter.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '100' '&&' 'RA' '<' '150'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 100 && RA < 150\n\nUsage: select <expr>\n    (Unused arguments: '>' '100' '&&' 'RA' '<' '150'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, and add an integer column 'ROW_NUMBER' representing the final row index (starting at 1).",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol ROW_NUMBER $0' out=row_indexed_output.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, but before joining, collapse scalar magnitude columns (U, G, R) into a single 3-element array column named 'MAG_ARRAY'.",
        "response": "stilts tcat in='phot1.fits phot2.fits' icmd='collapsecols MAG_ARRAY U 3' out=collapsed_mags_array.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and then randomly sample 10% of the combined total, using a fixed seed for reproducibility.",
        "response": "stilts tcat in='r1.fits r2.fits' ocmd='random 0.1 -seed 1234' out=reproducible_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1' '-seed' '1234'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.1 -seed 1234\n\nUsage: random\n    (Unused arguments: '0.1' '-seed' '1234'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables and, in the final table, replace the column 'FLUX_UNC' with a scaled version: 'FLUX_UNC * 1e-3'.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replacecol FLUX_UNC FLUX_UNC * 1e-3' out=milli_flux_unc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '1e-3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_UNC FLUX_UNC * 1e-3\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '1e-3'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine three tables, and then output only the metadata of the combined result.",
        "response": "stilts tcat in='t1.fits t2.fits t3.fits' omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge spectroscopic tables, filtering each input to only keep rows where the 'WAVELENGTH' column is greater than 5000 Angstroms.",
        "response": "stilts tcat in='spec*.fits' icmd='select WAVELENGTH > 5000' out=long_wave_spectra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '5000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select WAVELENGTH > 5000\n\nUsage: select <expr>\n    (Unused arguments: '>' '5000'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, ensuring the output is written as a compressed FITS file (.fits.gz).",
        "response": "stilts tcat in='d1.fits d2.fits' out=compressed_merge.fits.gz",
        "chat.jar": "failed",
        "error": "Error: Can't guess output format for compressed_merge.fits.gz\n    (No handler specified for writing table.\nKnown formats: jdbc, fits, colfits, votable, fits-healpix, ECSV, parquet, text, ascii, CSV, IPAC, HTML, LaTeX, TST, feather, mirage)\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine tables, adding a column 'AGE_YR' calculated by converting a column 'AGE_DAY' using the 'SEC_PER_YEAR' constant.",
        "response": "stilts tcat in='p1.fits p2.fits' ocmd='addcol AGE_YR AGE_DAY / 365.25' out=age_in_years.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' '365.25'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AGE_YR AGE_DAY / 365.25\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '365.25'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge two tables, ensuring all input columns with non-safe names are fixed before concatenation, and stream input for efficiency.",
        "response": "stilts tcat in='a.csv b.csv' icmd=fixcolnames istream=true out=clean_streamed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and add a column that converts 'JD' (Julian Date) to 'MJD' (Modified Julian Date).",
        "response": "stilts tcat in='j1.fits j2.fits' ocmd='addcol MJD jdToMjd(JD)' out=mjd_times_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, enforcing that the column 'ERROR' has only non-negative values, replacing negatives with 0.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='replacecol ERROR max(ERROR, 0.0)' out=non_negative_errors_b.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol ERROR max(ERROR, 0.0)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '0.0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables and then perform an internal sort by 'FLUX' before outputting only the last 100 rows.",
        "response": "stilts tcat in='big1.fits big2.fits' ocmd='sort FLUX; tail 100' out=flux_sorted_tail.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate a single column generated by `tloop` (running 1 to 100) with itself to create a 200-row table.",
        "response": "stilts tcat in1=':loop:1,101' in2=':loop:1,101' out=double_loop.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Combine tables and then add a column 'IS_NEARBY' based on a complex geometric calculation: $\\text{DISTANCE} < 100 / \\text{sqrt}(\\text{AREA})$.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol IS_NEARBY DISTANCE < 100 / sqrt(AREA)' out=complex_proximity_flag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '100' '/' 'sqrt(AREA)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_NEARBY DISTANCE < 100 / sqrt(AREA)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '100' '/' 'sqrt(AREA)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables, and enforce that the output format is the metadata-rich FITS-plus format.",
        "response": "stilts tcat in='m1.fits m2.fits' ofmt=fits-plus out=metadata_fits_plus.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, but only keep rows where the absolute difference between 'MAG1' and 'MAG2' is less than 0.5.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='select abs(MAG1 - MAG2) < 0.5' out=small_mag_diff.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'MAG2)' '<' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(MAG1 - MAG2) < 0.5\n\nUsage: select <expr>\n    (Unused arguments: '-' 'MAG2)' '<' '0.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables, converting the output to VOTable format and setting the output version to 1.4.",
        "response": "stilts tcat in='v1.fits v2.fits' ofmt='votable(version=V14)' out=votable_v14.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge FITS files, and then apply a statistical filter to calculate the population standard deviation of 'VELOCITY' across the entire dataset.",
        "response": "stilts tcat in='v1.fits v2.fits' ocmd='keepcols VELOCITY' omode=stats ocmd='keepcols StDev_pop'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, filtering inputs to keep only rows where the row index (0-based) is less than 1000 in each input.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='select $0 < 1000' out=first_thousand_per_file.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select $0 < 1000\n\nUsage: select <expr>\n    (Unused arguments: '<' '1000'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables, adding a column 'JD' calculated from 'MJD' plus the required offset.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='addcol JD MJD + 2400000.5' out=jd_from_mjd.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol JD MJD + 2400000.5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables and write the final result as a VOTable document with no internal XML line breaks (compact=true).",
        "response": "stilts tcat in='v1.fits v2.fits' ofmt='votable(compact=true)' out=compact_votable.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate multiple tables, ensuring lazy reading is enabled for input files listed in 'big_list.txt'.",
        "response": "stilts tcat in=@big_list.txt lazy=true out=lazy_list_merge.fits",
        "chat.jar": "failed",
        "error": "Error: big_list.txt (No such file or directory)\n"
    },
    {
        "prompt": "Combine tables and enforce that any numeric column containing a null value is represented by the IEEE NaN constant, replacing any existing null representation.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='replaceval null NaN *' out=nan_replaced.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, adding a column that contains the unique string identifier derived from the input file location, ensuring the output is ASCII format.",
        "response": "stilts tcat ifmt=fits in='obs_1.fits obs_2.fits' uloccol=ObsID ofmt=ascii out=obs_id_ascii.txt",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, but before joining, convert the 'DEC_RAD' column from radians to degrees in both inputs.",
        "response": "stilts tcat in='r1.fits r2.fits' icmd='replacecol DEC_DEG radiansToDegrees(DEC_RAD)' out=degrees_converted.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, then group them by unique 'CLASS' values and calculate the median 'FLUX' for each class.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='tgroup keys=CLASS aggcols=\"FLUX;median;MEDIAN_FLUX\"' out=class_median_flux.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Merge tables and then calculate the final table's Adler32 checksum, discarding the output table content.",
        "response": "stilts tcat in='d1.fits d2.fits' omode=checksum omode=discard",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=discard\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Concatenate tables, adding a column 'LOG_TIME' calculated using the natural logarithm of a 'TIME' column.",
        "response": "stilts tcat in='t1.fits t2.fits' ocmd='addcol LOG_TIME ln(TIME)' out=natural_log_time.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine a local table with 50,000 synthetic attractor points (Clifford attractor).",
        "response": "stilts tcat in1=local.fits in2=':attractor:50000,clifford' out=real_plus_attractor.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Merge tables and ensure the resulting table is sorted first by 'CLASS' and then by 'REDSHIFT'.",
        "response": "stilts tcat in='z1.fits z2.fits' ocmd='sort CLASS REDSHIFT' out=double_sorted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'REDSHIFT'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort CLASS REDSHIFT\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'REDSHIFT'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, explicitly selecting only the final table extension from each multi-extension FITS input.",
        "response": "stilts tcat in='m1.fits#-1 m2.fits#-1' out=last_extension_merge.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and then replace the column 'FLUX' with 'FLUX / 1e-3' to convert millijanskys to janskys.",
        "response": "stilts tcat in='mj1.fits mj2.fits' ocmd='replacecol FLUX FLUX / 1e-3' out=jansky_converted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' '1e-3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX / 1e-3\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '1e-3'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables and add a row index column named 'Index' starting from 0, ensuring the final output uses the output format TST (Tab-Separated Table).",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol Index $0' ofmt=tst out=indexed_tst.tst",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, where each input table is filtered to drop the column 'COMMENT' before merging.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='delcols COMMENT' out=comment_free_merge.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and add a column 'HAS_ERROR' which is true if the 'ERR_MAG' column contains a non-null value.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='addcol HAS_ERROR !NULL_ERR_MAG' out=error_flagged.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and then randomly select every 50th row from the combined table.",
        "response": "stilts tcat in='r1.fits r2.fits' ocmd='every 50' out=every_50th_row.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate three tables, and then output the column metadata in human-readable text format to the terminal.",
        "response": "stilts tcat in='t1.fits t2.fits t3.fits' omode=meta out=-",
        "chat.jar": "failed",
        "error": "Error: out=-: out and ofmt parameters can only be used when omode=out\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine tables and then group them by unique integer 'TILE_ID' and calculate the minimum 'MAG' for each tile.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='tgroup keys=TILE_ID aggcols=\"MAG;min;MIN_MAG\"' out=tile_min_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Merge FITS files, ensuring the output is written using the VOTable FITS serialization format.",
        "response": "stilts tcat in='f1.fits f2.fits' ofmt='votable(format=FITS)' out=fits_votable_c.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, applying a filter to each input that converts string magnitude 'MAG_STR' to double 'MAG_DBL' before merging.",
        "response": "stilts tcat in='s1.fits s2.fits' icmd='addcol MAG_DBL parseDouble(MAG_STR)' out=string_to_double.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and add a constant string column 'VERSION' with the value 'DR4'.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol VERSION \"DR4\"' out=version_flagged.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and write the final result as a compressed ASCII file.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=ascii out=merged_ascii.txt.gz",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, retaining only the first 50 rows of the combined dataset.",
        "response": "stilts tcat in='t1.fits t2.fits' ocmd='head 50' out=top_50_combined.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, ensuring all array columns are preserved and written to a non-array-capable format like CSV (forcing array representation as strings).",
        "response": "stilts tcat in='a1.fits a2.fits' ofmt=csv out=array_to_string_csv.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and then calculate the standard deviation and mean of the 'G_FLUX' column.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='keepcols G_FLUX' omode=stats ocmd='keepcols Mean StDev'",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'StDev'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Mean StDev\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'StDev'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, applying an input filter to remove rows where the time column 'MJD' is null.",
        "response": "stilts tcat in='m1.fits m2.fits' icmd='select !NULL_MJD' out=non_null_mjd.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine a table with a synthetic dataset containing columns of various types (integers, strings, arrays) using ':test:' scheme.",
        "response": "stilts tcat in1=real.fits in2=':test:100,isv' out=real_plus_test_data.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Merge tables, and then add a column 'PAR_ERR_SQ' calculated as the square of 'PARALLAX_ERR'.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='addcol PAR_ERR_SQ PARALLAX_ERR * PARALLAX_ERR' out=squared_errors.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' 'PARALLAX_ERR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PAR_ERR_SQ PARALLAX_ERR * PARALLAX_ERR\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'PARALLAX_ERR'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, ensuring the output format is the TST format (Tab-Separated Table) for compatibility with tools like GAIA.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=tst out=tst_combined.tst",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, setting the output table name to 'Survey_DR1_Final'.",
        "response": "stilts tcat in='s1.fits s2.fits' ocmd='tablename Survey_DR1_Final' out=final_survey.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate four ECSV files: ecsv_A.ecsv, ecsv_B.ecsv, ecsv_C.ecsv, and ecsv_D.ecsv, retaining all metadata defined in their headers.",
        "response": "stilts tcat ifmt=ecsv in='ecsv_A.ecsv ecsv_B.ecsv ecsv_C.ecsv ecsv_D.ecsv' out=four_ecsv_combined.ecsv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two FITS files, ensuring that the combined table is sorted by the 'MJD' column in ascending order.",
        "response": "stilts tcat in=obs_log1.fits in=obs_log2.fits ocmd='sort MJD' out=mjd_sorted_log.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge three tables and add a column named 'DataSourceIndex' indicating the sequential position (1, 2, or 3) of the originating table.",
        "response": "stilts tcat in='t1.fits t2.fits t3.fits' seqcol=DataSourceIndex out=sequenced_tcat_result.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, filtering each input first to keep only rows where the 'FLAG' column is not null.",
        "response": "stilts tcat in='d_a.fits d_b.fits' icmd='select !NULL_FLAG' out=non_null_flag_combined.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine all tables found within a multi-extension FITS file, `archive_multi.fits`, and write the output as a single FITS file.",
        "response": "stilts tcat in=archive_multi.fits multi=true out=flattened_archive.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"archive_multi.fits\"\n"
    },
    {
        "prompt": "Merge two tables, adding a column named 'LOG_PARALLAX' calculated as log10(PARALLAX).",
        "response": "stilts tcat in='gaia_zone1.fits gaia_zone2.fits' ocmd='addcol LOG_PARALLAX log10(PARALLAX)' out=log_plx_merge.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate a table with a synthetic simulation of 1000 stars, using the 'skysim' scheme.",
        "response": "stilts tcat in=real_obs.fits in2=:skysim:1000 out=real_plus_sim_b.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=:skysim:1000\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine tables from a list provided in a file named `inputs.txt`, enabling lazy reading to conserve file handles.",
        "response": "stilts tcat in=@inputs.txt lazy=true out=lazy_combined_data.fits",
        "chat.jar": "failed",
        "error": "Error: inputs.txt (No such file or directory)\n"
    },
    {
        "prompt": "Merge tables, and then remove any row where the adjacent predecessor row has the exact same content across all columns.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='uniq *' out=fully_unique_rows.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, but before joining, keep only columns with UCDs related to photometry (phot.).",
        "response": "stilts tcat in='c1.fits c2.fits' icmd='keepcols ucd$phot.*' out=photometry_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two ASCII tables, assuming fields are separated by a space, and save the final result in FITS format.",
        "response": "stilts tcat ifmt=ascii in='a.txt b.txt' ofmt=fits out=ascii_to_fits.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge files, and if the column 'MASS' contains null values, replace them globally with the constant value 1.0e-5.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='replaceval null 1.0e-5 MASS' out=mass_nulls_fixed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, and then calculate the maximum value of the combined 'FLUX' column using the stats output mode.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='keepcols FLUX' omode=stats ocmd='keepcols Maximum'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, writing the result in VOTable format using the recommended binary serialization (BINARY2).",
        "response": "stilts tcat in='v1.fits v2.fits' ofmt='votable(format=BINARY2)' out=votable_binary2_merge.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, ensuring the output includes a column named 'SourceLocation' containing the full path or URL of the input file.",
        "response": "stilts tcat in='local_file.fits http://remote.com/data.vot' loccol=SourceLocation out=location_tracking.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two FITS files, but before joining, rename the column 'PM_RA' to 'PMRA' in both input files.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='colmeta -name PMRA PM_RA' out=pmra_renamed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and then group the rows by unique integer values in the 'CLASS_ID' column, calculating the mean 'MAG' for each group.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='tgroup keys=CLASS_ID aggcols=\"MAG;mean;MEAN_MAG\"' out=class_mean_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Merge tables, filtering the final combined table to include only rows where the 'RA' column is between 100 and 200 degrees.",
        "response": "stilts tcat in='sky1.fits sky2.fits' ocmd='select RA >= 100.0 && RA <= 200.0' out=ra_restricted_merge.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '100.0' '&&' 'RA' '<=' '200.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA >= 100.0 && RA <= 200.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '100.0' '&&' 'RA' '<=' '200.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate four CSV files that use a pipe '|' delimiter and ensure the final table name is 'Survey_Parts'.",
        "response": "stilts tcat ifmt='csv(delimiter=|)' in='p1.csv p2.csv p3.csv p4.csv' ocmd='tablename Survey_Parts' out=pipe_csv_titled.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two tables and immediately send the output table to a running instance of TOPCAT.",
        "response": "stilts tcat in=target_list.fits in2=ref_data.fits omode=topcat",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=ref_data.fits\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Merge spectroscopic data, where each input file has a column 'FLUX_ARRAY'. Explode this array column into individual scalar columns after concatenation.",
        "response": "stilts tcat in='spec1.fits spec2.fits' ocmd='explodecols FLUX_ARRAY' out=flux_scalars.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, then discard all the output. This is used solely to check if all inputs are readable and compatible.",
        "response": "stilts tcat in='check1.fits check2.fits' omode=discard",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two tables. Before joining, convert the magnitude 'R_MAG' to flux 'R_FLUX' (assuming Janskys/AB magnitudes) in both inputs.",
        "response": "stilts tcat in='m1.fits m2.fits' icmd='addcol R_FLUX abToJansky(R_MAG)' out=all_flux_r.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge files, and then add a column 'IS_FAINT' that is true if 'MAG' > 21 and false otherwise, writing the output as an ECSV file.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='addcol IS_FAINT MAG > 21' ofmt=ecsv out=faint_ecsv.ecsv",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '21'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 21\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '21'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate two tables, but only keep the columns: 'ID' and any column whose name starts with 'PM'.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='keepcols \"ID PM*\"' out=id_pm_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and add a column 'JD' by converting the existing 'MJD' column to Julian Date.",
        "response": "stilts tcat in='t1.fits t2.fits' ocmd='addcol JD MJD + 2400000.5' out=mjd_to_jd.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol JD MJD + 2400000.5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables, displaying the table metadata of the final result on the terminal.",
        "response": "stilts tcat in='a.fits b.fits' omode=meta out=-",
        "chat.jar": "failed",
        "error": "Error: out=-: out and ofmt parameters can only be used when omode=out\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Concatenate three tables and then randomly select 1000 rows from the combined result.",
        "response": "stilts tcat in='d1.fits d2.fits d3.fits' ocmd='random 1000' out=thousand_random_rows.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 1000\n\nUsage: random\n    (Unused arguments: '1000'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine two FITS files, forcing the output to a compressed VOTable using gzip compression.",
        "response": "stilts tcat in='a.fits b.fits' ofmt=votable out=combined.vot.gz",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge files, applying an input filter to remove the column 'DEC_ERROR' from all inputs before concatenation.",
        "response": "stilts tcat in='e1.fits e2.fits' icmd='delcols DEC_ERROR' out=no_dec_error.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and then run an expression assertion to ensure that all 'ERROR' values are non-negative.",
        "response": "stilts tcat in='err1.fits err2.fits' ocmd='assert ERROR >= 0' out=error_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert ERROR >= 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables and write the final result as a LaTeX table snippet for a publication.",
        "response": "stilts tcat in='small_d1.fits small_d2.fits' ofmt=latex out=output_latex.tex",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge two tables, ensuring that any missing strings in the input CSV files are interpreted as null values (using the 'notypes=blank' CSV option).",
        "response": "stilts tcat ifmt='csv(notypes=blank)' in='t1.csv t2.csv' out=blank_null_csv.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate a FITS file with a multi-table VOTable document, extracting all tables from the latter.",
        "response": "stilts tcat in=single.fits in2=multi.vot multi=true out=mixed_container_merge.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"single.fits\"\n"
    },
    {
        "prompt": "Combine tables, adding a column 'PARALLAX_PC' using the expression $1000.0/\\text{PARALLAX}$ to calculate distance in parsecs.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol PARALLAX_PC 1000.0 / PARALLAX' out=parallax_to_pc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' 'PARALLAX'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PARALLAX_PC 1000.0 / PARALLAX\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'PARALLAX'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables, and then limit the output to only the last 100 rows of the combined table.",
        "response": "stilts tcat in='big1.fits big2.fits' ocmd='tail 100' out=last_100_rows.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate three tables, and then calculate the standard deviation of 'TEFF' for the combined result.",
        "response": "stilts tcat in='s1.fits s2.fits s3.fits' ocmd='keepcols TEFF' omode=stats ocmd='keepcols StDev'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and enforce that the final output file is written using the VOTable FITS serialization format.",
        "response": "stilts tcat in='c1.fits c2.fits' ofmt='votable(format=FITS)' out=votable_fits_output.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, applying an input filter to keep only rows where $\\text{MAG_G} < 18$ before concatenation.",
        "response": "stilts tcat in='m1.fits m2.fits' icmd='select MAG_G < 18' out=mag_filtered_inputs.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_G < 18\n\nUsage: select <expr>\n    (Unused arguments: '<' '18'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, and add a constant string column 'VERSION_TAG' with the value 'DR5'.",
        "response": "stilts tcat in='v1.fits v2.fits' ocmd='addcol VERSION_TAG \"DR5\"' out=version_flagged_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, filtering each input to ensure that the coordinate columns are fixed (safe) names before merging.",
        "response": "stilts tcat in='bad_col1.fits bad_col2.fits' icmd=fixcolnames out=safe_column_merge.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, adding a column 'OBS_JD' by converting the ISO date string 'DATE_OBS' to Julian Day.",
        "response": "stilts tcat in='obs_a.fits obs_b.fits' ocmd='addcol OBS_JD isoToMjd(DATE_OBS) + 2400000.5' out=iso_to_jd.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol OBS_JD isoToMjd(DATE_OBS) + 2400000.5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '2400000.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate two tables, viewing the final combined table in a temporary GUI window.",
        "response": "stilts tcat in=d1.fits in2=d2.fits omode=gui",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=d2.fits\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine tables, and if the column 'FLAG' has the value '99', replace it with a null value in the output table.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='replaceval 99 null FLAG' out=flag_null_replaced.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge files, and if multiple tables are present in the inputs, add a column 'TableHDU' containing the sequential index of the HDU/TABLE element.",
        "response": "stilts tcat in='a.fits b.fits' multi=true seqcol=TableHDU out=hdu_indexed_merge.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"a.fits\"\n"
    },
    {
        "prompt": "Concatenate tables and add a row index column 'RowIndex' starting from 1.",
        "response": "stilts tcat in='data_x.fits data_y.fits' ocmd='addcol RowIndex $0' out=row_indexed_output_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables and then group them by unique 'TYPE' values, outputting the count per group to the console.",
        "response": "stilts tcat in='t1.fits t2.fits' ocmd='tgroup keys=TYPE aggcols=\"null;count\"' omode=out out=-",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Merge tables, converting the output format to CSV where fields are delimited by a tab character.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt='csv(delimiter=tab)' out=tab_delimited_output.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, ensuring they are read in parallel for faster processing of large inputs (if multiple cores are available).",
        "response": "stilts tcat in='p1.fits p2.fits p3.fits' runner=parallel out=parallel_tcat.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: runner=parallel\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine tables, adding a column 'LOG_FLUX_E' calculated as $\\ln(\\text{FLUX} + \\text{ERROR})$.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol LOG_FLUX_E ln(FLUX + ERROR)' out=log_flux_error_sum.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'ERROR)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_FLUX_E ln(FLUX + ERROR)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'ERROR)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge tables, only keeping columns whose UCD is exactly 'phot.mag' (case-insensitive UCD match).",
        "response": "stilts tcat in='m1.fits m2.fits' icmd='keepcols ucd$phot.mag' out=exact_phot_mag.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables and, after joining, shuffle the resulting rows randomly.",
        "response": "stilts tcat in='s1.fits s2.fits' ocmd=shuffle out=randomly_shuffled.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two ASCII tables, using single quotes as quotes and the pipe '|' as a delimiter.",
        "response": "stilts tcat ifmt='csv(delimiter=|)' in='quoted1.txt quoted2.txt' out=pipe_quoted.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables and then transpose the final table so rows become columns and vice versa.",
        "response": "stilts tcat in='row_data1.fits row_data2.fits' ocmd=transpose out=transposed_result_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, keeping only the rows that were present in the first 50 rows of the input stream.",
        "response": "stilts tcat in='s1.fits s2.fits' icmd='head 50' out=first_50_per_input.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, using an ocmd to eliminate duplicate adjacent rows based on the 'RA' and 'DEC' columns.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='sort RA DEC; uniq RA DEC' out=position_deduplicated.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort RA DEC\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge three tables, then calculate the total checksum of the combined table without writing the data.",
        "response": "stilts tcat in='c1.fits c2.fits c3.fits' omode=checksum",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, adding a numeric column 'FLUX_INV' equal to $1.0/\\text{FLUX}$.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol FLUX_INV 1.0/FLUX' out=inverse_flux.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables from two remote URLs and stream the input data to minimize local memory footprint.",
        "response": "stilts tcat in='http://archive.org/t1.fits http://archive.org/t2.fits' istream=true out=streamed_remote.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine multiple daily log files (log_day*.txt, ASCII format) and add a column that contains the absolute row index starting from 1 in the final combined table.",
        "response": "stilts tcat ifmt=ascii in='log_day*.txt' ocmd='addcol RowNumber $0+1' out=indexed_logs.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge two tables, filtering each input to keep only the rows where the error column 'ERR_G' is non-null and greater than zero.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='select !NULL_ERR_G && ERR_G > 0' out=clean_errors.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' 'ERR_G' '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_ERR_G && ERR_G > 0\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'ERR_G' '>' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate files and then remove all column metadata (UCD, units, descriptions) from the resulting table.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='colmeta -ucd null *; colmeta -units null *' out=stripped_meta.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine three VOTables, enforcing that the output is written in VOTable format using the compact mode to minimize XML whitespace.",
        "response": "stilts tcat in='v1.vot v2.vot v3.vot' ofmt='votable(compact=true)' out=compact_merge.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, adding a column 'LOG_ABS_FLUX' calculated as $\\log_{10}(\\text{abs}(\\text{FLUX}) + 1)$ to handle near-zero values safely.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol LOG_ABS_FLUX log10(abs(FLUX) + 1)' out=robust_log_flux.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_ABS_FLUX log10(abs(FLUX) + 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, and add a column that contains the full path/URL of the originating table, but ensures that input files are read lazily.",
        "response": "stilts tcat in='set*.fits' loccol=SourceUrl lazy=true out=lazy_tracked.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine multiple tables, and then group the entire dataset by unique values in a string column 'FIELD_ID', calculating the total count and median 'MAG' for each group.",
        "response": "stilts tcat in='a.fits b.fits' ocmd='tgroup keys=FIELD_ID aggcols=\"0;count;Count MAG;median;MedianMag\"' out=field_summary.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Merge two tables, filtering each input to convert any value of -999 in the 'DISTANCE' column to a null value before concatenation.",
        "response": "stilts tcat in='d1.fits d2.fits' icmd='replaceval -999 null DISTANCE' out=distance_cleaned.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate FITS tables where multiple extensions exist. Include all extensions from all input files.",
        "response": "stilts tcat in='multi1.fits multi2.fits' multi=true out=all_extensions_merged.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"multi1.fits\"\n"
    },
    {
        "prompt": "Combine tables, and add a constant column 'IS_GAL' with the boolean value 'true'.",
        "response": "stilts tcat in='g1.fits g2.fits' ocmd='addcol IS_GAL true' out=galaxy_flag_d.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, and remove all table parameters (per-table metadata) from the combined output.",
        "response": "stilts tcat in='meta1.fits meta2.fits' ocmd=clearparams out=no_params.fits",
        "chat.jar": "failed",
        "error": "Error: No parameter names supplied\n\nCommand was: clearparams\n\nUsage: clearparams <pname> ...\n    (No parameter names supplied)\n"
    },
    {
        "prompt": "Concatenate two tables, converting a column 'FLUX_STR' (string) to a numeric column 'FLUX_VAL' (double) in both tables before joining.",
        "response": "stilts tcat in='s1.fits s2.fits' icmd='addcol FLUX_VAL parseDouble(FLUX_STR)' ocmd='keepcols FLUX_VAL' out=string_flux_to_double.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and then output only the checksum of the final data without writing the table itself.",
        "response": "stilts tcat in='c1.fits c2.fits' omode=checksum omode=discard",
        "chat.jar": "failed",
        "error": "\nUnused arguments: omode=discard\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Merge multiple IPAC tables and output the result as a single, standard FITS table.",
        "response": "stilts tcat ifmt=ipac in='i1.tbl i2.tbl i3.tbl' ofmt=fits out=ipac_to_fits_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, ensuring the output table name is explicitly set to 'MasterCatalog_v1'.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='tablename MasterCatalog_v1' out=master_v1.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine two tables, adding an integer column 'TIME_BIN' calculated as the integer part of 'TIME / 1000.0'.",
        "response": "stilts tcat in='t1.fits t2.fits' ocmd='addcol TIME_BIN toInteger(TIME/1000.0)' out=binned_time.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, and then select only rows where the expression 'RA > 180' is true.",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='select RA > 180' out=southern_hemisphere.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '180'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 180\n\nUsage: select <expr>\n    (Unused arguments: '>' '180'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate data from a local FITS file with 10,000 simulated sky sources.",
        "response": "stilts tcat in=local.fits in2=:skysim:10000 out=local_plus_sim_b.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: in2=:skysim:10000\n\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine tables, and in the output, rename all columns containing 'error' in their name to include the prefix 'UNC_' (uncertainty).",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='colmeta -name UNC_$1 \"*error*\"' out=uncertainty_renamed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge two tables and keep only the rows that appear in either table, excluding those present in both (symmetric difference by row content).",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='tmatch2 in2=d2.fits join=1xor2 matcher=exact values1=\"*\" values2=\"*\"'",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tmatch2\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Concatenate tables, and then add a column 'IS_NEGATIVE' that is true if 'FLUX' is negative.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol IS_NEGATIVE FLUX < 0' out=negative_flag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_NEGATIVE FLUX < 0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables, writing the result as a simple plain text table to standard output.",
        "response": "stilts tcat in='t1.fits t2.fits' ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge two Parquet files, filtering them first to keep only columns named 'ID' and 'Z'.",
        "response": "stilts tcat ifmt=parquet in='p1.parquet p2.parquet' icmd='keepcols ID Z' out=id_z_parquet.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Z'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID Z\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Z'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, and then add a column 'ERROR_INVERSE' calculated as $1.0/\\text{ERROR}$ in the final result.",
        "response": "stilts tcat in='e1.fits e2.fits' ocmd='addcol ERROR_INVERSE 1.0/ERROR' out=inverse_error.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and ensure the output is in FITS format using the column-oriented storage type.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=colfits-plus out=columnar_fits_b.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge spectroscopic data, filtering each input to calculate the mean flux across a fixed-length array column 'FLUX_ARRAY' before joining.",
        "response": "stilts tcat in='spec1.fits spec2.fits' icmd='addcol MEAN_FLUX mean(FLUX_ARRAY)' ocmd='keepcols MEAN_FLUX' out=mean_flux_cat.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, adding a column 'SOURCE_TYPE' that contains the unique string derived from the input file location, assuming the tables are named 'stars_01.fits' and 'galaxies_02.fits'.",
        "response": "stilts tcat in='stars_01.fits galaxies_02.fits' uloccol=SOURCE_TYPE out=typed_sources.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and then sort the final table by the magnitude column 'G_MAG' in descending order.",
        "response": "stilts tcat in='m1.fits m2.fits' ocmd='sort -down G_MAG' out=mag_descending.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge three ASCII tables, using a filter to rename all columns to be uppercase before concatenation.",
        "response": "stilts tcat ifmt=ascii in='t1.txt t2.txt t3.txt' icmd='colmeta -name toUpperCase($1) $1' out=uppercase_cols.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, but before joining, remove any column containing only constant values (excluding nulls) in both inputs.",
        "response": "stilts tcat in='c1.fits c2.fits' icmd=constcol out=constant_cols_removed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and add an array-valued column 'COLOR_ARRAY' containing $[\text{MAG_G}, \text{MAG_R}, \text{MAG_I}]$ for each row.",
        "response": "stilts tcat in='p1.fits p2.fits' ocmd='addcol COLOR_ARRAY array(MAG_G, MAG_R, MAG_I)' out=color_array.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'MAG_R,' 'MAG_I)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COLOR_ARRAY array(MAG_G, MAG_R, MAG_I)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'MAG_R,' 'MAG_I)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge two ECSV files and display the final concatenated table in the graphical user interface.",
        "response": "stilts tcat ifmt=ecsv in='e1.ecsv e2.ecsv' omode=gui",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, ensuring the output is written as a compressed FITS file and the exact row count is calculated beforehand.",
        "response": "stilts tcat in='c1.fits c2.fits' out=compressed_counted.fits.gz countrows=true",
        "chat.jar": "failed",
        "error": "Error: Can't guess output format for compressed_counted.fits.gz\n    (No handler specified for writing table.\nKnown formats: jdbc, fits, colfits, votable, fits-healpix, ECSV, parquet, text, ascii, CSV, IPAC, HTML, LaTeX, TST, feather, mirage)\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Combine tables, and then apply a statistical filter to determine the statistical median of the combined 'FLUX' column.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='keepcols FLUX' omode=stats ocmd='keepcols Median'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge two tables, filtering the first to keep only rows where the row index is less than 50, and the second to keep rows where the row index is greater than 100.",
        "response": "stilts tcat in1=a.fits icmd1='head 50' in2=b.fits icmd2='select $0 > 100' out=indexed_splice.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Concatenate tables, and add a parameter 'InputCount' equal to the number of input tables being merged (set nin=3).",
        "response": "stilts tcat nin=3 in1=t1.fits in2=t2.fits in3=t3.fits ocmd='setparam InputCount 3' out=count_param.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Combine two ASCII files where fields are separated by a tab character.",
        "response": "stilts tcat ifmt='csv(delimiter=tab)' in='tab1.txt tab2.txt' out=tab_delimited_output.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, and then output the final table as an IPAC format file.",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=ipac out=merged_ipac.tbl",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two tables, and then keep only rows where the 'FLAG_INT' column has the 5th bit set (using the expression language).",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='select hasBit(FLAG_INT, 5)' out=bit_set_filter.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(FLAG_INT, 5)\n\nUsage: select <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Combine tables, and output the result in VOTable format using the original BINARY serialization (not BINARY2).",
        "response": "stilts tcat in='v1.fits v2.fits' ofmt='votable(format=BINARY)' out=binary_output_b.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, then randomly sample 10% of the entire combined dataset.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='random 0.1' out=random_sample_b.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.1\n\nUsage: random\n    (Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Concatenate tables, filtering each input to calculate the square root of the 'AREA' column before joining.",
        "response": "stilts tcat in='a1.fits a2.fits' icmd='addcol SQRT_AREA sqrt(AREA)' ocmd='keepcols SQRT_AREA' out=sqrt_area_combined.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and add a column 'HAS_FLUX' that is true if 'FLUX' is not null.",
        "response": "stilts tcat in='f1.fits f2.fits' ocmd='addcol HAS_FLUX !NULL_FLUX' out=flux_present_flag.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Merge tables, converting the output to Feather format (suitable for R/Python exchange).",
        "response": "stilts tcat in='d1.fits d2.fits' ofmt=feather out=merged_feather.feather",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate two CSV files, ensuring that the input column names (e.g., 'RA.deg') are fixed to simple identifiers (e.g., 'RA_deg') during reading.",
        "response": "stilts tcat ifmt=csv in='bad_col_names1.csv bad_col_names2.csv' icmd=fixcolnames out=fixed_csv_names.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and add a column 'GAL_POS' which is a 2-element array containing the Galactic coordinates $[\text{L}, \text{B}]$ derived from input $\text{RA}$ and $\text{DEC}$ (ICRS).",
        "response": "stilts tcat in='c1.fits c2.fits' ocmd='addcol GAL_POS array(icrsToGal(astromXYZ(RA,DEC,1)), icrsToGal(astromXYZ(RA,DEC,1))[3])' out=gal_pos_array.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'icrsToGal(astromXYZ(RA,DEC,1))[3])'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol GAL_POS array(icrsToGal(astromXYZ(RA,DEC,1)), icrsToGal(astromXYZ(RA,DEC,1))[3])\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'icrsToGal(astromXYZ(RA,DEC,1))[3])'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Merge two tables, but before joining, sort both tables by 'Z' (redshift) to minimize temporary storage if the aggregation is ordered (though concatenation breaks order).",
        "response": "stilts tcat in='z1.fits z2.fits' icmd='sort Z' out=presorted_z_tcat.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Concatenate tables, and in the final output, keep only the columns that have units defined.",
        "response": "stilts tcat in='d1.fits d2.fits' ocmd='keepcols ucd$*units' out=units_only.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Combine tables, and then calculate the final table's minimum and maximum values for all numeric columns, showing the output to standard output.",
        "response": "stilts tcat in='d1.fits d2.fits' omode=stats out=-",
        "chat.jar": "failed",
        "error": "Error: out=-: out and ofmt parameters can only be used when omode=out\nUsage: tcat in=<table> [<table> ...] ifmt=<in-format> multi=true|false\n            istream=true|false icmd=<cmds> ocmd=<cmds>\n            omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n            out=<out-table> ofmt=<out-format> seqcol=<colname>\n            loccol=<colname> uloccol=<colname> lazy=true|false\n            countrows=true|false\n\n"
    },
    {
        "prompt": "Merge a simulated dataset (attractor:10000,clifford) with a synthetic loop table (loop:1000).",
        "response": "stilts tcat in1=':attractor:10000,clifford' in2=':loop:1000' out=attractor_plus_loop.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter in: null value not allowed\nUsage: in=<table> [<table> ...]\n\n"
    },
    {
        "prompt": "Concatenate tables, adding a column 'OBS_JD' by converting the existing MJD column to Julian Date.",
        "response": "stilts tcat in='mjd1.fits mjd2.fits' ocmd='addcol OBS_JD mjdToJd(MJD)' out=jd_converted.fits",
        "chat.jar": "executed successfully"
    }
]