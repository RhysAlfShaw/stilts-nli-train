[
    {
        "prompt": "Filter the table `galaxy_catalog.fits` to only include rows where the redshift `z` is greater than 0.5. Save the result to a new file `high_z_galaxies.fits`.",
        "response": "stilts tpipe in=galaxy_catalog.fits cmd='select z > 0.5' out=high_z_galaxies.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select z > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "From `star_survey.vot`, I only want the columns `ID`, `RA_DEG`, and `DEC_DEG`. Please write them to a CSV file named `star_positions.csv`.",
        "response": "stilts tpipe in=star_survey.vot cmd='keepcols \"ID RA_DEG DEC_DEG\"' ofmt=csv out=star_positions.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How can I sort the table `photometry_data.dat` by the `V_MAG` column in ascending order and save it as `sorted_photometry.fits`?",
        "response": "stilts tpipe ifmt=ascii in=photometry_data.dat cmd='sort V_MAG' out=sorted_photometry.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a new column called `LOG_FLUX` to `source_list.fits`, calculated as the base-10 logarithm of the `FLUX` column. The output should be `sources_with_logflux.fits`.",
        "response": "stilts tpipe in=source_list.fits cmd='addcol LOG_FLUX log10(FLUX)' out=sources_with_logflux.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I need to perform two steps on `raw_data.csv`: first, select rows where `QUALITY_FLAG == 0`, and second, sort the result by `TIMESTAMP`. Save the final table as `clean_sorted_data.vot`.",
        "response": "stilts tpipe ifmt=csv in=raw_data.csv cmd='select QUALITY_FLAG == 0' cmd='sort TIMESTAMP' ofmt=votable out=clean_sorted_data.vot",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select QUALITY_FLAG == 0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "What's the command to see just the first 10 rows of the table in `large_catalog.fits` on my screen?",
        "response": "stilts tpipe in=large_catalog.fits cmd='head 10' omode=out ofmt=text",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How do I count the total number of rows in the file `event_log.ecsv`?",
        "response": "stilts tpipe in=event_log.ecsv ifmt=ecsv omode=count",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I want to calculate statistics (mean, stdev, etc.) for all numeric columns in `measurements.fits`.",
        "response": "stilts tpipe in=measurements.fits omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "In my table `candidates.fits`, there's a magic value of -999 in the `MAGNITUDE` column. How can I replace all occurrences of it with a null value?",
        "response": "stilts tpipe in=candidates.fits cmd='badval -999 MAGNITUDE' out=candidates_cleaned.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert the coordinates in `old_catalog.fits` from FK4 B1950 (`RA_B1950`, `DEC_B1950`) to FK5 J2000, naming the new columns `RA_J2000` and `DEC_J2000`.",
        "response": "stilts tpipe in=old_catalog.fits cmd='addskycoords fk4 fk5 RA_B1950 DEC_B1950 RA_J2000 DEC_J2000' out=new_catalog.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Please take `messy_names.csv` and fix the column names to be more convenient for use in expressions, then save as `clean_names.csv`.",
        "response": "stilts tpipe ifmt=csv in=messy_names.csv cmd=fixcolnames ofmt=csv out=clean_names.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Show me the metadata (column names, types, UCDs) of the table `data_archive.fits`.",
        "response": "stilts tpipe in=data_archive.fits omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have `data.fits`. I want to filter it for `FLUX > 100`, add a new column `MAG` as `-2.5*log10(FLUX)`, and then send the result to TOPCAT.",
        "response": "stilts tpipe in=data.fits cmd='select FLUX > 100' cmd='addcol MAG \"-2.5*log10(FLUX)\"' omode=topcat",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX > 100\n\nUsage: select <expr>\n    (Unused arguments: '>' '100'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "How do I take a random sample of 1000 rows from `massive_survey.colfits` and save it to `survey_sample.fits`?",
        "response": "stilts tpipe in=massive_survey.colfits cmd='random 1000' out=survey_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 1000\n\nUsage: random\n    (Unused arguments: '1000'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Delete the columns named `TEMP_1`, `TEMP_2`, and `TEMP_3` from `instrument_log.fits`.",
        "response": "stilts tpipe in=instrument_log.fits cmd='delcols \"TEMP_1 TEMP_2 TEMP_3\"' out=instrument_log_clean.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "In the table `stellar_data.vot`, rename the column `Vmag` to `V_MAG` and set its units to 'mag'.",
        "response": "stilts tpipe in=stellar_data.vot cmd='colmeta -name V_MAG -units mag Vmag' out=stellar_data_renamed.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I need to transpose my table `timeseries.fits`. How do I do that?",
        "response": "stilts tpipe in=timeseries.fits cmd=transpose out=timeseries_transposed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Generate a table of 10 rows using the loop scheme, then add a column `y` where `y = i*i`. Display the result in the terminal.",
        "response": "stilts tpipe in=:loop:10 cmd='addcol y i*i' ofmt=text",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate a checksum for the table `final_product.fits` after selecting only rows where `CONFIDENCE > 0.95`.",
        "response": "stilts tpipe in=final_product.fits cmd='select CONFIDENCE > 0.95' omode=checksum",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.95'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select CONFIDENCE > 0.95\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.95'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I want to see the last 20 rows of my observation log `obslog.dat`.",
        "response": "stilts tpipe ifmt=ascii in=obslog.dat cmd='tail 20' ofmt=text",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Take `catalog.fits` and remove any adjacent duplicate rows. Save the result as `unique_catalog.fits`.",
        "response": "stilts tpipe in=catalog.fits cmd=uniq out=unique_catalog.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "From `all_sky.fits`, create a new column `GAL_LAT` by converting the equatorial `DEC` coordinate to galactic latitude.",
        "response": "stilts tpipe in=all_sky.fits cmd='addskycoords icrs galactic RA DEC GAL_LON GAL_LAT' cmd='keepcols GAL_LAT' out=galactic_latitudes.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I want to process a large file `huge_stream.csv` that I'm piping from another command. How do I filter it for values in column 3 being greater than 100?",
        "response": "cat huge_stream.csv | stilts tpipe in=- ifmt=csv cmd='select $3 > 100' out=filtered_stream.csv",
        "chat.jar": "skipped - no 'stilts' prefix"
    },
    {
        "prompt": "Replace the string 'N/A' with a null value in the `comment` column of `notes.csv`.",
        "response": "stilts tpipe ifmt=csv in=notes.csv cmd='replaceval \"N/A\" null comment' ofmt=csv out=notes_fixed.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Sort `catalog.fits` by `RA` ascending, and for ties, by `DEC` descending.",
        "response": "stilts tpipe in=catalog.fits cmd='sort RA' cmd='sort -down DEC' out=sorted_catalog.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "From the simulated sky catalog `:skysim:1e6`, select all stars with gmag < 12 and count them.",
        "response": "stilts tpipe in=:skysim:1e6 cmd='select gmag < 12' omode=count",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select gmag < 12\n\nUsage: select <expr>\n    (Unused arguments: '<' '12'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I have `multi_array.fits` with array columns. Can you 'explode' all of them into scalar columns?",
        "response": "stilts tpipe in=multi_array.fits cmd=explodeall out=scalar_columns.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "For `results.fits`, add a column `IS_VALID` which is true if `FLAG` is 0 and `ERROR` < 0.1.",
        "response": "stilts tpipe in=results.fits cmd='addcol IS_VALID FLAG==0&&ERROR<0.1' out=results_validated.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How do I get the statistics of just the `FLUX_ERROR` column from `phot_data.fits`?",
        "response": "stilts tpipe in=phot_data.fits cmd='keepcols FLUX_ERROR' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Take `observations.vot` and display it in a temporary GUI window.",
        "response": "stilts tpipe in=observations.vot omode=gui",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I want to create a column `DISTANCE_PC` which is 1000 divided by the parallax in milliarcseconds (`parallax` column).",
        "response": "stilts tpipe in=gaia_data.fits cmd='addcol DISTANCE_PC 1000./parallax' out=gaia_with_distances.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Subsample my table `dense_field.fits` by keeping only every 100th row.",
        "response": "stilts tpipe in=dense_field.fits cmd='every 100' out=sparse_field.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Perform a sequence of operations from a script file named `processing_steps.txt` on the table `input_data.fits`.",
        "response": "stilts tpipe in=input_data.fits cmd=@processing_steps.txt out=processed_data.fits",
        "chat.jar": "failed",
        "error": "Error: processing_steps.txt (No such file or directory)\n"
    },
    {
        "prompt": "For my table `object_classes.fits`, I want to group by the `CLASS` column and count how many objects are in each class.",
        "response": "stilts tpipe in=object_classes.fits cmd='group CLASS' omode=out ofmt=text",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "In `measurements.fits`, I need to replace the `FLUX` column with its square root.",
        "response": "stilts tpipe in=measurements.fits cmd='replacecol FLUX sqrt(FLUX)' out=sqrt_flux.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Select rows from `catalog_with_ids.fits` where the `ID` string starts with 'NGC'.",
        "response": "stilts tpipe in=catalog_with_ids.fits cmd='select startsWith(ID,\"NGC\")' out=ngc_objects.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ')'\n\nCommand was: select startsWith(ID,\"NGC\")\n\nUsage: select <expr>\n    (Unused arguments: ')')\n"
    },
    {
        "prompt": "How to create a table from scratch with columns `x`, `y`, `z` based on a strange attractor for 10,000 rows?",
        "response": "stilts tpipe in=:attractor:10000,rampe out=strange_attractor.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I want to find the top 5 brightest stars (lowest `G_MAG`) in `field_of_view.fits`.",
        "response": "stilts tpipe in=field_of_view.fits cmd='sorthead 5 G_MAG' out=top5_brightest.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a constant column `SURVEY_ID` with the value 'SDSS_DR17' to all rows of `sdss_patch.fits`.",
        "response": "stilts tpipe in=sdss_patch.fits cmd='addcol SURVEY_ID \"SDSS_DR17\"' out=sdss_patch_tagged.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "For the table `test_data.fits`, assert that the `ERROR` column is always positive, then discard the output.",
        "response": "stilts tpipe in=test_data.fits cmd='assert ERROR>0' omode=discard",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Randomly shuffle the rows of `catalog_ordered.fits`.",
        "response": "stilts tpipe in=catalog_ordered.fits cmd=shuffle out=catalog_shuffled.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "From `gaia_sample.fits`, calculate the absolute magnitude in a new column `ABS_G` using the formula `phot_g_mean_mag + 5 * log10(parallax*0.001) + 5`.",
        "response": "stilts tpipe in=gaia_sample.fits cmd='addcol ABS_G \"phot_g_mean_mag + 5 * log10(parallax*0.001) + 5\"' out=gaia_abs_mag.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert my table `results.fits` to an HTML file for a web page.",
        "response": "stilts tpipe in=results.fits ofmt=html out=results_report.html",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "From `lightcurve.csv`, keep only rows with index from 100 to 200.",
        "response": "stilts tpipe ifmt=csv in=lightcurve.csv cmd='rowrange 100 200' out=lightcurve_slice.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have an array column `FLUX_ARRAY`. How do I create a new column `MEAN_FLUX` which is the mean of the values in that array for each row?",
        "response": "stilts tpipe in=array_data.fits cmd='addcol MEAN_FLUX mean(FLUX_ARRAY)' out=mean_flux_data.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Take `propermotion.fits` and select only objects with a total proper motion `sqrt(PMRA*PMRA + PMDEC*PMDEC)` greater than 500 mas/yr.",
        "response": "stilts tpipe in=propermotion.fits cmd='select hypot(PMRA,PMDEC) > 500' out=high_pm_stars.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '500'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA,PMDEC) > 500\n\nUsage: select <expr>\n    (Unused arguments: '>' '500'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "I need to ensure my streamed table is cached for a multi-pass operation. How do I force caching?",
        "response": "stilts tpipe in=streamed_data.vot cmd=cache cmd='sort SOME_COLUMN' out=sorted_from_stream.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Set the table name parameter of `my_table.fits` to 'My Awesome Catalog'.",
        "response": "stilts tpipe in=my_table.fits cmd='tablename \"My Awesome Catalog\"' out=my_table_renamed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "From `galaxy_types.txt`, find all unique values in the `MORPHOLOGY` column.",
        "response": "stilts tpipe ifmt=ascii in=galaxy_types.txt cmd='keepcols MORPHOLOGY' cmd='sort MORPHOLOGY' cmd=uniq ofmt=text",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Create a new column 'DEC_RAD' by converting the 'DEC_DEG' column from degrees to radians.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_RAD degreesToRadians(DEC_DEG)' out=coords_rad.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Show me the statistics of a table where I've replaced null `FLUX` values with 0.",
        "response": "stilts tpipe in=fluxes.fits cmd='replaceval null 0 FLUX' cmd='keepcols FLUX' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter my table `events.fits` to only include the last 1000 events.",
        "response": "stilts tpipe in=events.fits cmd='tail 1000' out=last_1000_events.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert my table `publication_data.fits` into a LaTeX table format.",
        "response": "stilts tpipe in=publication_data.fits ofmt=latex out=pub_table.tex",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have columns `FLUX_U`, `FLUX_G`, `FLUX_R`. Collapse them into a single 3-element array column named `FLUXES`.",
        "response": "stilts tpipe in=photometry.fits cmd='collapsecols FLUXES FLUX_U 3' out=photometry_arrays.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "For each `CLASS` in `objects.fits`, find the mean `REDSHIFT`.",
        "response": "stilts tpipe in=objects.fits cmd='group CLASS REDSHIFT;mean' ofmt=text",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Select every 10th row from `big_table.fits` and then take a random sample of 50 from that subset.",
        "response": "stilts tpipe in=big_table.fits cmd='every 10' cmd='random 50' out=random_subsample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '50'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 50\n\nUsage: random\n    (Unused arguments: '50'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "What's the command to calculate the sky separation in arcseconds between two sets of coordinate columns `RA1, DEC1` and `RA2, DEC2`?",
        "response": "stilts tpipe in=pairs.fits cmd='addcol SEPARATION_ARCSEC skyDistanceDegrees(RA1,DEC1,RA2,DEC2)*3600.' out=pairs_with_sep.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "From a table with a `NAME` column, create a new column `SHORT_NAME` which is the first 5 characters of `NAME`.",
        "response": "stilts tpipe in=names.fits cmd='addcol SHORT_NAME substring(NAME,0,5)' out=short_names.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How can I check if any rows in `data_check.fits` have a `FLUX` value of exactly zero?",
        "response": "stilts tpipe in=data_check.fits cmd='select FLUX==0' omode=count",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert an IPAC table `wise_data.tbl` to a Parquet file.",
        "response": "stilts tpipe ifmt=ipac in=wise_data.tbl ofmt=parquet out=wise_data.parquet",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I want to add a column that's a random number between 0 and 1 for each row.",
        "response": "stilts tpipe in=my_table.fits cmd='addcol RAND_VAL random($0)' out=my_table_randomized.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Find the top 100 rows with the smallest `ERROR` value.",
        "response": "stilts tpipe in=data.fits cmd='sorthead 100 ERROR' out=best_quality.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Take the table `sky_patches.fits`, sort it by `HEALPIX_INDEX`, and then remove adjacent rows with the same index.",
        "response": "stilts tpipe in=sky_patches.fits cmd='sort HEALPIX_INDEX' cmd='uniq HEALPIX_INDEX' out=unique_patches.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Create a new column `IS_EXTENDED` which is true if the `CLASS` column contains the word 'GALAXY'.",
        "response": "stilts tpipe in=morphology.fits cmd='addcol IS_EXTENDED contains(CLASS,\"GALAXY\")' out=extended_sources.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ')'\n\nCommand was: addcol IS_EXTENDED contains(CLASS,\"GALAXY\")\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: ')')\n"
    },
    {
        "prompt": "I have an array column `SPECTRUM`. I need to replace it with a smoothed version, let's say by averaging every 3 elements.",
        "response": "stilts tpipe in=spectra.fits cmd='replacecol SPECTRUM arrayFunc(\"mean(inArray[i-1:i+2])\",SPECTRUM)' out=spectra_smoothed.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',SPECTRUM)'\n\nCommand was: replacecol SPECTRUM arrayFunc(\"mean(inArray[i-1:i+2])\",SPECTRUM)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: ',SPECTRUM)')\n"
    },
    {
        "prompt": "Can you display the metadata of the table generated by `:skysim:10`?",
        "response": "stilts tpipe in=:skysim:10 omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Set the UCD of the `phot_g_mean_mag` column to `phot.mag;em.opt.G`.",
        "response": "stilts tpipe in=gaia.fits cmd='colmeta -ucd phot.mag;em.opt.G phot_g_mean_mag' out=gaia_ucd.fits",
        "chat.jar": "failed",
        "error": "Error: No columns specified\n\nCommand was: colmeta -ucd phot.mag\n\nUsage: colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n               [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n               [-shape <n>[,<n>...][,*]] [-elsize <n>]\n               <colid-list>\n    (No columns specified)\n"
    },
    {
        "prompt": "I need to select rows where `FLAG_A` OR `FLAG_B` is set. These are bitmask columns, so I need to check bit 3 (value 8).",
        "response": "stilts tpipe in=flags.fits cmd='select hasBit(FLAG_A,3) || hasBit(FLAG_B,3)' out=flagged_objects.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '||' 'hasBit(FLAG_B,3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(FLAG_A,3) || hasBit(FLAG_B,3)\n\nUsage: select <expr>\n    (Unused arguments: '||' 'hasBit(FLAG_B,3)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "How to convert the Modified Julian Date in column `MJD` to an ISO-8601 string in a new column `ISO_DATE`?",
        "response": "stilts tpipe in=time_data.fits cmd='addcol ISO_DATE mjdToIso(MJD)' out=time_data_iso.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter my table `events.fits` to only keep rows from index 5000 to 5100.",
        "response": "stilts tpipe in=events.fits cmd='rowrange 5000 +101' out=event_slice.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I want to get a count of unique `OBSERVER` names in `log.csv`.",
        "response": "stilts tpipe ifmt=csv in=log.csv cmd='keepcols OBSERVER' cmd='sort OBSERVER' cmd=uniq omode=count",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column `FULL_ID` by concatenating `SURVEY` name, a colon, and the `SOURCE_ID`.",
        "response": "stilts tpipe in=catalog.fits cmd='addcol FULL_ID concat(SURVEY,\":\",SOURCE_ID)' out=full_ids.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',SOURCE_ID)'\n\nCommand was: addcol FULL_ID concat(SURVEY,\":\",SOURCE_ID)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: ',SOURCE_ID)')\n"
    },
    {
        "prompt": "Calculate statistics on `data.fits` after applying a filter from the file `my_selection.stilts`.",
        "response": "stilts tpipe in=data.fits cmd=@my_selection.stilts omode=stats",
        "chat.jar": "failed",
        "error": "Error: my_selection. (No such file or directory)\n"
    },
    {
        "prompt": "I have `file.fits` with array column `VALUES`. I want a new column which is the median of that array for each row.",
        "response": "stilts tpipe in=file.fits cmd='addcol MEDIAN_VAL median(VALUES)' out=file_medians.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Select all rows where the `NAME` column is not null.",
        "response": "stilts tpipe in=data.fits cmd='select !NULL_NAME' out=named_objects.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Create an output table that is just the last 5 rows of `input.fits`.",
        "response": "stilts tpipe in=input.fits cmd='tail 5' out=last5.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have a `group_id` column. I want to find the mean `flux` for each `group_id`.",
        "response": "stilts tpipe in=groups.fits cmd='group group_id flux;mean' out=group_fluxes.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "How can I convert a column `EPOCH` from Julian Day to Modified Julian Date?",
        "response": "stilts tpipe in=epochs.fits cmd='replacecol EPOCH jdToMjd(EPOCH)' cmd='colmeta -name MJD EPOCH' out=epochs_mjd.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "From `test.fits`, keep only the columns from `COL_A` to `COL_F`.",
        "response": "stilts tpipe in=test.fits cmd='keepcols COL_A-COL_F' out=test_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a new table parameter named 'PROCESSED_DATE' with the current timestamp.",
        "response": "stilts tpipe in=data.fits cmd='setparam PROCESSED_DATE toString(CURRENT_TIMESTAMP)' out=data_processed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have a table of spectral lines. I need to select lines where the `WAVELENGTH` is between 4000 and 5000 Angstroms.",
        "response": "stilts tpipe in=spectral_lines.fits cmd='select WAVELENGTH>4000 && WAVELENGTH<5000' out=optical_lines.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' 'WAVELENGTH<5000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select WAVELENGTH>4000 && WAVELENGTH<5000\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'WAVELENGTH<5000'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "How do I show every 500th row of `big_survey.fits` in my terminal?",
        "response": "stilts tpipe in=big_survey.fits cmd='every 500' ofmt=text",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "From `data.fits`, create a table containing only unique rows, and add a column that counts the number of duplicates for each unique row.",
        "response": "stilts tpipe in=data.fits cmd='sort *' cmd='uniq -count *' out=unique_counts.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column `SNR` calculated as `FLUX / FLUX_ERROR` and then keep only rows where `SNR` is greater than 5.",
        "response": "stilts tpipe in=detections.fits cmd='addcol SNR FLUX/FLUX_ERROR' cmd='select SNR > 5' out=high_snr.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select SNR > 5\n\nUsage: select <expr>\n    (Unused arguments: '>' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "My file `coords_sex.txt` has RA and Dec in sexagesimal format. How do I convert them to decimal degrees in new columns?",
        "response": "stilts tpipe ifmt=ascii in=coords_sex.txt cmd='addcol RA_DEG hmsToDegrees(RA_SEX)' cmd='addcol DEC_DEG dmsToDegrees(DEC_SEX)' out=coords_deg.txt",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "What's the command to get a list of all column names from `complex_table.fits`?",
        "response": "stilts tpipe in=complex_table.fits cmd='meta Name' ofmt=text",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "From my catalog `stars.fits`, I need to select the 10 stars with the largest parallax.",
        "response": "stilts tpipe in=stars.fits cmd='sorthead -down 10 parallax' out=nearest_stars.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I need to clear all table parameters from `table_with_params.vot`.",
        "response": "stilts tpipe in=table_with_params.vot cmd='clearparams *' out=table_no_params.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "In `data.fits`, find rows where `ID_A` and `ID_B` are identical.",
        "response": "stilts tpipe in=data.fits cmd='select equals(ID_A,ID_B)' out=self_matches.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "For my list of galaxies, I need to add a column for luminosity distance, assuming H0=70, OmegaM=0.3, OmegaLambda=0.7.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol LUM_DIST_MPC luminosityDistance(z,70,0.3,0.7)' out=galaxies_dist.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "From a list of source names, I want to resolve their coordinates using SIMBAD and add RA/DEC columns.",
        "response": "stilts tpipe ifmt=ascii in=source_names.txt cmd='addresolve NAME RA_SIMBAD DEC_SIMBAD' out=resolved_coords.txt",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "How can I extract HEALPix pixel values from `lambda_sfd_ebv.fits` for each coordinate in my table `targets.fits`?",
        "response": "stilts tpipe in=targets.fits cmd='addpixsample RA DEC lambda_sfd_ebv.fits' out=targets_with_ebv.fits",
        "chat.jar": "failed",
        "error": "Error: Error using pixel data file lambda_sfd_ebv.fits\n\nCommand was: addpixsample RA DEC lambda_sfd_ebv.fits\n\nUsage: addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                    <expr-lon> <expr-lat> <healpix-file>\n    (Error using pixel data file lambda_sfd_ebv.fits\n        (No file, URL or command \"lambda_sfd_ebv.fits\"))\n"
    },
    {
        "prompt": "Take a table and show me the median, first, and third quartiles for every numeric column.",
        "response": "stilts tpipe in=my_data.fits cmd='stats Name Median Quartile1 Quartile3' ofmt=text",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Generate a table of 1000 random points on the sky from `:skysim:1000`, convert to galactic coordinates, and keep only points near the galactic center (abs(l) < 10 && abs(b) < 10).",
        "response": "stilts tpipe in=:skysim:1000 cmd='addskycoords icrs galactic ra dec l b' cmd='select abs(l)<10 && abs(b)<10' out=galactic_center_sim.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' 'abs(b)<10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(l)<10 && abs(b)<10\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'abs(b)<10'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "From `observations.fits`, I need to group rows by `FILTER` type, and for each filter, get the mean `AIRMASS` and the count of observations.",
        "response": "stilts tpipe in=observations.fits cmd='group FILTER AIRMASS;mean 0;count;NOBS' out=filter_summary.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "I have an array column `PIXEL_VALUES`. I want to replace any negative values in it with zero.",
        "response": "stilts tpipe in=image_data.fits cmd='replacecol PIXEL_VALUES arrayFunc(\"max(x,0)\",PIXEL_VALUES)' out=image_data_nonneg.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',PIXEL_VALUES)'\n\nCommand was: replacecol PIXEL_VALUES arrayFunc(\"max(x,0)\",PIXEL_VALUES)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: ',PIXEL_VALUES)')\n"
    },
    {
        "prompt": "What is the command to just check if `my_table.fits` can be read by stilts without producing any output?",
        "response": "stilts tpipe in=my_table.fits omode=discard",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I need to take all columns from `table.fits` but add a new column 'ROW_ID' which is just the row number.",
        "response": "stilts tpipe in=table.fits cmd='addcol ROW_ID $0' out=table_with_ids.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "For a table containing RA and DEC in degrees, add columns for galactic longitude (l) and latitude (b).",
        "response": "stilts tpipe in=coords.fits cmd='addskycoords icrs galactic RA DEC l b' out=galactic_coords.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table to keep only rows where the flux is non-null and greater than 10, and count the remaining rows.",
        "response": "stilts tpipe in=data.fits cmd='select !NULL_FLUX && FLUX > 10' omode=count",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' 'FLUX' '>' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_FLUX && FLUX > 10\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'FLUX' '>' '10'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the squared hypotenuse of X and Y columns and add it as a new column named 'R_SQ'.",
        "response": "stilts tpipe in=data.fits cmd='addcol R_SQ hypot(X,Y)*hypot(X,Y)' out=data_rsq.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert the entire table to a single VOTable stream encoded using BINARY2 format.",
        "response": "stilts tpipe in=input.fits ofmt='votable(format=BINARY2)' out=output.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove the last 50 rows from the table, sort the remainder by magnitude, and keep only the top 10 brightest sources.",
        "response": "stilts tpipe in=catalog.fits cmd='tail -$nrow-50' cmd='sorthead 10 MAG' out=top_bright_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Row count -$nrow-50 not numeric\n\nCommand was: tail -$nrow-50\n\nUsage: tail <nrows>\n    (Row count -$nrow-50 not numeric)\n"
    },
    {
        "prompt": "Rename the column 'G_MAG_ERR' to simply 'GERR' and save the result.",
        "response": "stilts tpipe in=phot.fits cmd='colmeta -name GERR G_MAG_ERR' out=phot_renamed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Select only objects where the proper motion in RA (PMRA) is within two times its error (PMRA_ERR).",
        "response": "stilts tpipe in=gaia.fits cmd='select abs(PMRA) < 2.0 * PMRA_ERR' out=clean_pm.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '2.0' '*' 'PMRA_ERR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(PMRA) < 2.0 * PMRA_ERR\n\nUsage: select <expr>\n    (Unused arguments: '<' '2.0' '*' 'PMRA_ERR'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create a new table containing all unique rows based on the 'ID' column, preserving the order of appearance.",
        "response": "stilts tpipe in=list.fits cmd='sort ID' cmd='uniq ID' out=unique_entries.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Replace all instances of the magic value 99.0 with null across all columns of the input table.",
        "response": "stilts tpipe in=raw_data.fits cmd='badval 99.0 *' out=clean_data.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Change the table name to 'Processed Catalog' and view the resulting metadata.",
        "response": "stilts tpipe in=old_cat.fits cmd='tablename \"Processed Catalog\"' omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Verify that all magnitude values are positive before writing the output.",
        "response": "stilts tpipe in=test.fits cmd='assert MAG > 0.0' out=verified.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG > 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "In the output table, replace all null values in the 'FLUX' column with -999.0.",
        "response": "stilts tpipe in=data.fits cmd='replaceval null -999.0 FLUX' out=data_fixed_nulls.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Create a table containing 100 rows, starting at 10 and ending at 109, using the 'rowrange' filter.",
        "response": "stilts tpipe in=any.fits cmd='rowrange 10 109' out=chunk.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a string column named 'SOURCE_TYPE' and set its value to 'GALAXY' for all rows.",
        "response": "stilts tpipe in=sources.fits cmd='addcol SOURCE_TYPE \"GALAXY\"' out=classified_sources.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Load the table, calculate statistics for the 'PM' column, and discard the table data afterward.",
        "response": "stilts tpipe in=large_gaia.fits cmd='keepcols PM' omode=stats cmd=discard",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: discard\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Select a random 1% sample of the data and send the result directly to TOPCAT for immediate viewing.",
        "response": "stilts tpipe in=full_survey.fits cmd='random 0.01' omode=topcat",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.01'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.01\n\nUsage: random\n    (Unused arguments: '0.01'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Apply a redshift zero-point correction of -0.001 to the 'Z_SPEC' column.",
        "response": "stilts tpipe in=spec_data.fits cmd='replacecol Z_SPEC Z_SPEC - 0.001' out=z_corrected.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' '0.001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol Z_SPEC Z_SPEC - 0.001\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '0.001'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "For each row, calculate the angular distance between two sets of coordinates (RA1, DEC1) and (RA2, DEC2) and name the column 'SEPARATION'.",
        "response": "stilts tpipe in=pairs.fits cmd='addcol SEPARATION skyDistanceDegrees(RA1,DEC1,RA2,DEC2)*3600.0' out=pairs_with_sep.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Generate a plot using the internal table definition, calculate percentiles (Q.16, Q.50, Q.84) for the 'MAG' column, and show the statistical summary.",
        "response": "stilts tpipe in=data.fits cmd='stats MAG;Q.16;median;Q.84' omode=stats out=- ofmt=text",
        "chat.jar": "failed",
        "error": "Error: Unknown quantity MAG must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn\n\nCommand was: stats MAG\n\nUsage: stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n    (Unknown quantity MAG must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn)\n"
    },
    {
        "prompt": "Convert the input ASCII file to VOTable, keeping only columns with UCD 'phot.mag'.",
        "response": "stilts tpipe in=in.dat ifmt=ascii cmd='keepcols ucd$phot_mag*' ofmt=votable out=out.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Apply the 'fixcolnames' filter to ensure all column names are syntactically safe for expressions.",
        "response": "stilts tpipe in=messy.fits cmd=fixcolnames out=clean.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Select every 1000th row, starting from the beginning, using the 'every' filter.",
        "response": "stilts tpipe in=huge_data.fits cmd='every 1000' out=sparse_sample.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Verify that the total number of rows is exactly 5000 before proceeding.",
        "response": "stilts tpipe in=fixed_size.fits cmd='assert $nrow == 5000L' out=validated.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '5000L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $nrow == 5000L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '5000L'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Change the data type of the column 'ID' from integer to long integer (64-bit).",
        "response": "stilts tpipe in=input.fits cmd='replacecol ID toLong(ID)' out=long_id.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate and view the metadata, including UCDs and Units, for the resulting table.",
        "response": "stilts tpipe in=data.fits cmd='meta Name UCD Units' omode=meta ofmt=text out=-",
        "chat.jar": "failed",
        "error": "Error: ofmt=text: out and ofmt parameters can only be used when omode=out\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n"
    },
    {
        "prompt": "Generate a table of 10 rows (1 to 10) and then add two new columns: 'X_SQ' and 'X_CUBE'.",
        "response": "stilts tpipe in=:loop:1,11 cmd='addcol X_SQ i*i' cmd='addcol X_CUBE i*i*i' out=powers_of_x.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove columns 'FLAG_1' and 'FLAG_2' if they exist, but preserve the table otherwise.",
        "response": "stilts tpipe in=data.fits cmd='delcols \"FLAG_1 FLAG_2\"' out=data_clean.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Ensure the table is buffered in memory for random access before processing, using the 'cache' filter.",
        "response": "stilts tpipe in=streamed.fits cmd=cache cmd='sort MAG' out=sorted_cached.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Check if a given angular distance column 'SEP_DEG' is always positive and assert it.",
        "response": "stilts tpipe in=measurements.fits cmd='assert SEP_DEG >= 0.0' out=positive_sep.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert SEP_DEG >= 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Apply a filter to ensure non-sequential read access to optimize parallel operations.",
        "response": "stilts tpipe in=big_table.fits cmd=random out=randomized_view.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a parameter named 'OBS_DATE' with the ISO-8601 value corresponding to MJD 56000.",
        "response": "stilts tpipe in=meta.fits cmd='setparam OBS_DATE mjdToIso(56000.0)' out=param_added.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove all existing table parameters except 'TELESCOPE' and 'SURVEY'.",
        "response": "stilts tpipe in=meta.fits cmd='clearparams *' cmd='setparam TELESCOPE \"param$TELESCOPE\"' cmd='setparam SURVEY \"param$SURVEY\"' out=clean_params.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert RA and Dec strings in HMS/DMS format to numeric degrees, assuming they are in columns 'RA_HMS' and 'DEC_DMS'.",
        "response": "stilts tpipe in=string_coords.fits cmd='addcol RA_DEG hmsToDegrees(RA_HMS)' cmd='addcol DEC_DEG dmsToDegrees(DEC_DMS)' out=numeric_coords.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert the input table to an HTML file suitable for display, including table parameters.",
        "response": "stilts tpipe in=data.fits ofmt=html out=report.html",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the average and standard deviation of 'TEMPERATURE' values aggregated by the discrete 'REGION' column, outputting the result table.",
        "response": "stilts tpipe in=data.fits cmd='group REGION TEMPERATURE;mean;MEAN_TEMP TEMPERATURE;stdev;STDEV_TEMP' out=region_stats.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "For every row, compute the luminosity distance (Mpc) for a given redshift (Z) using cosmological constants (H0=70, OmegaM=0.3, OmegaLambda=0.7).",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol L_DIST luminosityDistance(Z, 70.0, 0.3, 0.7)' out=galaxies_dist.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol L_DIST luminosityDistance(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter out rows where the boolean column 'VALID_FLAG' is false and calculate the total size of the resultant data stream in bytes, discarding the output.",
        "response": "stilts tpipe in=data.fits cmd='select VALID_FLAG' omode=checksum",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Check the memory storage implementation used at this point in the pipeline.",
        "response": "stilts tpipe in=input.fits cmd=check out=checked.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Transpose the table so that rows become columns and columns become rows.",
        "response": "stilts tpipe in=data.fits cmd=transpose out=data_transposed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Replace a faulty proper motion column 'PM' with the calculated hypotenuse of PMRA and PMDEC, only for rows where PM is null.",
        "response": "stilts tpipe in=data.fits cmd='replacecol PM NULL_PM ? hypot(PMRA, PMDEC) : PM' out=data_repaired.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '?' 'hypot(PMRA,' 'PMDEC)' ':' 'PM'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PM NULL_PM ? hypot(PMRA, PMDEC) : PM\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' 'hypot(PMRA,' 'PMDEC)' ':' 'PM'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a new column 'LOG_MASS' which is the base-10 logarithm of the 'MASS' column, ensuring it is present even if MASS is null.",
        "response": "stilts tpipe in=stars.fits cmd='addcol -units dex LOG_MASS log10(MASS)' out=log_stars.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert the input table to IPAC format for writing to standard output.",
        "response": "stilts tpipe in=data.fits ofmt=ipac out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the catalogue to keep only objects with magnitude 'MAG' in the range 10 to 15, inclusive.",
        "response": "stilts tpipe in=cat.fits cmd='select MAG >= 10.0 && MAG <= 15.0' out=mid_range.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '10.0' '&&' 'MAG' '<=' '15.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG >= 10.0 && MAG <= 15.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '10.0' '&&' 'MAG' '<=' '15.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Propagate the position defined by (RA, DEC, PMRA, PMDEC, PARALLAX) forward by 5 years, updating RA and DEC columns.",
        "response": "stilts tpipe in=gaia.fits cmd='replacecol RA epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))' cmd='replacecol DEC epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))' out=propagated.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' '0.0))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' '0.0))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Collapse the scalar columns 'FLUX_U', 'FLUX_G', 'FLUX_R' into a single array column named 'FLUXES', removing the original scalar columns.",
        "response": "stilts tpipe in=phot.fits cmd='collapsecols FLUXES FLUX_U 3' out=phot_array.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Explode a 4-element array column 'CORNERS' into 4 scalar columns: 'X1', 'Y1', 'X2', 'Y2'.",
        "response": "stilts tpipe in=boxes.fits cmd='explodecols CORNERS' cmd='colmeta -name X1 C1; colmeta -name Y1 C2; colmeta -name X2 C3; colmeta -name Y2 C4' cmd='keepcols \"!C\"' out=scalars.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Ensure that the coordinate column 'RA' contains no negative values; if it does, terminate immediately with an error message.",
        "response": "stilts tpipe in=data.fits cmd='assert RA >= 0.0 \"RA value is negative\"' out=ra_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0' 'RA value is negative'\n\nCommand was: assert RA >= 0.0 \"RA value is negative\"\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0' 'RA value is negative')\n"
    },
    {
        "prompt": "Convert the input table to a multi-table FITS file format (FITS-plus column oriented).",
        "response": "stilts tpipe in=data.fits ofmt='fits(col=true,primary=votable)' out=data.colfits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Select only the rows that have a redshift (Z) greater than 2, and write the output as a LaTeX table.",
        "response": "stilts tpipe in=qso.fits cmd='select Z > 2.0' ofmt=latex out=qso_report.tex",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '2.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 2.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '2.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert the integer column 'BIT_FLAG' to a binary string representation.",
        "response": "stilts tpipe in=flags.fits cmd='addcol FLAG_BIN toBinary(BIT_FLAG)' out=binary_flags.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Replace null values in the proper motion error column (PM_ERR) with a fixed value of 0.5 mas.",
        "response": "stilts tpipe in=errors.fits cmd='replacecol PM_ERR NULL_PM_ERR ? 0.5 : PM_ERR' out=fixed_errors.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '?' '0.5' ':' 'PM_ERR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PM_ERR NULL_PM_ERR ? 0.5 : PM_ERR\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '0.5' ':' 'PM_ERR'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the photometric distance modulus (DM) from absolute magnitude (M_ABS) and apparent magnitude (M_APP).",
        "response": "stilts tpipe in=phot.fits cmd='addcol DM M_APP - M_ABS' out=phot_dm.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'M_ABS'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DM M_APP - M_ABS\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'M_ABS'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Split the table rows into 10 independent groups based on the row index modulo 10.",
        "response": "stilts tpipe in=big_cat.fits cmd='addcol GROUP_ID toInteger($0 % 10)' cmd='group GROUP_ID 0;count;COUNT' out=grouped_data.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '%' '10)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol GROUP_ID toInteger($0 % 10)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '%' '10)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Check if bit 3 (zero-indexed) is set in the integer column 'STATUS_WORD', adding a boolean column 'BIT3_SET'.",
        "response": "stilts tpipe in=telemetry.fits cmd='addcol BIT3_SET hasBit(STATUS_WORD, 3)' out=telemetry_bit.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol BIT3_SET hasBit(STATUS_WORD, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Re-express the 'FLUX' column using its natural logarithm (ln).",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLUX ln(FLUX)' out=data_ln.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table so that the logarithm of the row count in the output table is greater than 5.",
        "response": "stilts tpipe in=large_data.fits cmd='select log10($nrow) > 5.0' omode=count",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select log10($nrow) > 5.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '5.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Invert the entire table structure (transpose) and display the resulting metadata.",
        "response": "stilts tpipe in=data.fits cmd=transpose omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a constant column named 'VEL_C' with the value 299792.458 (speed of light in km/s).",
        "response": "stilts tpipe in=data.fits cmd='addcol -units km/s VEL_C 299792.458' out=data_c.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert the array column 'SPECTRUM' values to floating point using an element-wise function: multiply each element by 1000.",
        "response": "stilts tpipe in=spectra.fits cmd='replacecol SPECTRUM arrayFunc(\"x * 1000.0\", SPECTRUM)' out=spectra_scaled.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',' 'SPECTRUM)'\n\nCommand was: replacecol SPECTRUM arrayFunc(\"x * 1000.0\", SPECTRUM)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: ',' 'SPECTRUM)')\n"
    },
    {
        "prompt": "Remove the parameter 'OBS_ID' from the table metadata.",
        "response": "stilts tpipe in=meta.fits cmd='clearparams OBS_ID' out=meta_cleared.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "For every row, generate a new array column 'RAND_ERR' containing 5 random Gaussian numbers.",
        "response": "stilts tpipe in=data.fits cmd='addcol RAND_ERR randomGaussianArray($0, 5)' out=data_rand.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RAND_ERR randomGaussianArray($0, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column giving the HEALPix pixel index (order 10, NEST scheme) for ICRS coordinates (RA, DEC).",
        "response": "stilts tpipe in=coords.fits cmd='addcol HPX_INDEX healpixNestIndex(10, RA, DEC)' out=hpx_indexed.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'RA,' 'DEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HPX_INDEX healpixNestIndex(10, RA, DEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA,' 'DEC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Check if there is a column named 'RA' present in the input table and assert its existence.",
        "response": "stilts tpipe in=data.fits cmd='assert $ncol > 0L' out=checked_nonempty.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $ncol > 0L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Sample a pixel value from the HEALPix file 'dust_map.fits' at the position given by (RA, DEC), and add it as 'EXTINCTION'.",
        "response": "stilts tpipe in=cat.fits cmd='addpixsample RA DEC dust_map.fits' out=cat_with_dust.fits",
        "chat.jar": "failed",
        "error": "Error: Error using pixel data file dust_map.fits\n\nCommand was: addpixsample RA DEC dust_map.fits\n\nUsage: addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                    <expr-lon> <expr-lat> <healpix-file>\n    (Error using pixel data file dust_map.fits\n        (No file, URL or command \"dust_map.fits\"))\n"
    },
    {
        "prompt": "Add a scalar column 'FLUX_RATIO' calculated as 'FLUX_A' / 'FLUX_B', and suppress the output if the operation causes division by zero or null values.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_RATIO FLUX_A / FLUX_B' cmd='select !NULL_FLUX_RATIO' out=safe_ratio.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_RATIO FLUX_A / FLUX_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'FLUX_B'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Set the table parameter 'VERSION' to the integer value 3.",
        "response": "stilts tpipe in=meta.fits cmd='setparam -type int VERSION 3' out=meta_v3.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Create a table containing only the rows between index 500 and 1500 (inclusive).",
        "response": "stilts tpipe in=big_table.fits cmd='rowrange 500 1500' out=middle_chunk.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_K' derived by converting flux in mJy from 'FLUX_MJY' to magnitudes, assuming Vega zeropoint 18.5.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol MAG_K 18.5 - 2.5 * log10(FLUX_MJY)' out=mags.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' '2.5' '*' 'log10(FLUX_MJY)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_K 18.5 - 2.5 * log10(FLUX_MJY)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '2.5' '*' 'log10(FLUX_MJY)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column representing the decimal year equivalent of the MJD column 'TIME_MJD'.",
        "response": "stilts tpipe in=lc.fits cmd='addcol TIME_YEAR mjdToDecYear(TIME_MJD)' out=lc_dec_year.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the proper motion error (PM_ERR) is never negative.",
        "response": "stilts tpipe in=data.fits cmd='assert PM_ERR >= 0.0' out=asserted_pm_err.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert PM_ERR >= 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert the input FITS file to ECSV format, ensuring the ECSV output delimiter is a space instead of a comma.",
        "response": "stilts tpipe in=input.fits ofmt='ecsv(delimiter=space)' out=output.ecsv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table to keep rows where the string column 'SPECIES' contains the substring 'ant' (case insensitive).",
        "response": "stilts tpipe in=animals.fits cmd='select contains(toLowerCase(SPECIES), \"ant\")' out=ants.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ant' ')'\n\nCommand was: select contains(toLowerCase(SPECIES), \"ant\")\n\nUsage: select <expr>\n    (Unused arguments: 'ant' ')')\n"
    },
    {
        "prompt": "Remove the existing magnitude column 'MAG' and add a new one named 'MAG_RECAL' using the expression 'MAG_OLD + 0.1'.",
        "response": "stilts tpipe in=data.fits cmd='replacecol MAG MAG_OLD + 0.1' cmd='colmeta -name MAG MAG_RECAL' out=recalibrated.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG MAG_OLD + 0.1\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a boolean column 'IS_FAINT' that is true if 'FLUX' is less than its mean value across the entire table (requires initial pass).",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='addcol IS_FAINT FLUX < mean(FLUX)' out=faint_flagged.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT FLUX < mean(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group the table by 'FILTER_ID', calculate the minimum and maximum of 'FLUX', and display the results on the console.",
        "response": "stilts tpipe in=data.fits cmd='group FILTER_ID FLUX;min;MIN_FLUX FLUX;max;MAX_FLUX' ofmt=text out=-",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: min\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Create an output column 'RA_DEG' by calculating degrees from an array of three string components (HH, MM, SS) stored in 'RA_HMS_ARRAY'.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_DEG hmsToDegrees(RA_HMS_ARRAY, RA_HMS_ARRAY, RA_HMS_ARRAY)' out=array_hms_conversion.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'RA_HMS_ARRAY,' 'RA_HMS_ARRAY)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DEG hmsToDegrees(RA_HMS_ARRAY, RA_HMS_ARRAY, RA_HMS_ARRAY)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA_HMS_ARRAY,' 'RA_HMS_ARRAY)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Ensure that the table is read fully into memory, even if it could be streamed.",
        "response": "stilts tpipe in=huge_data.fits cmd=cache out=force_cached.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Send the resulting table to all registered SAMP clients.",
        "response": "stilts tpipe in=data.fits omode=samp",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_ABS' using the formula M_abs = G_MAG - 5 * log10(DISTANCE_PC) + 5, then rename G_MAG to M_APP.",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_ABS G_MAG - 5.0 * log10(DISTANCE_PC) + 5.0' cmd='colmeta -name M_APP G_MAG' out=absolute_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' '5.0' '*' 'log10(DISTANCE_PC)' '+' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_ABS G_MAG - 5.0 * log10(DISTANCE_PC) + 5.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '5.0' '*' 'log10(DISTANCE_PC)' '+' '5.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column named 'ERROR_ARRAY' containing the sum of the square of two array columns, 'ERR1' and 'ERR2', element-wise.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol ERROR_ARRAY add(square(ERR1), square(ERR2))' out=error_quadrature.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'square(ERR2))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_ARRAY add(square(ERR1), square(ERR2))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'square(ERR2))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'GAL_L_RAD' calculated from 'GAL_L_DEG' converted from degrees to radians.",
        "response": "stilts tpipe in=coords.fits cmd='addcol GAL_L_RAD degreesToRadians(GAL_L_DEG)' out=radians_conv.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table, retaining only the top 100 rows based on the lowest 'FLUX_ERR' values.",
        "response": "stilts tpipe in=data.fits cmd='sorthead 100 FLUX_ERR' out=low_error_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Explode a 2D array column of shape (3, 5) into 15 scalar columns, naming them automatically (C1_1...C3_5).",
        "response": "stilts tpipe in=arrays.fits cmd='explodecols -ifshape 3,5 array_col' out=exploded.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '3,5' 'array_col'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: explodecols -ifshape 3,5 array_col\n\nUsage: explodecols <colid-list>\n    (Unused arguments: '3,5' 'array_col'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group the table by integer column 'TILE_ID' and count the total number of rows per tile, using the count-long aggregator.",
        "response": "stilts tpipe in=massive.fits cmd='group TILE_ID 0;count-long;ROW_COUNT' out=tile_counts_long.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: count-long\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Convert all numeric column names to a fixed case (lowercase) for easier use in scripting.",
        "response": "stilts tpipe in=mixed_case.fits cmd=fixcolnames out=lowercase.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Check if a given string column 'NOTES' contains the exact phrase 'Failed Observation'.",
        "response": "stilts tpipe in=logs.fits cmd='select equals(NOTES, \"Failed Observation\")' out=failed_logs.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Failed Observation' ')'\n\nCommand was: select equals(NOTES, \"Failed Observation\")\n\nUsage: select <expr>\n    (Unused arguments: 'Failed Observation' ')')\n"
    },
    {
        "prompt": "Add a new column that gives the number of hours since the Unix epoch for the given 'TIME_UNIX' column (seconds).",
        "response": "stilts tpipe in=time_data.fits cmd='addcol HOURS_SINCE TIME_UNIX / 3600.0' out=time_hours.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HOURS_SINCE TIME_UNIX / 3600.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a boolean column that is true only if the string column 'DESIG' starts with 'NGC'.",
        "response": "stilts tpipe in=objects.fits cmd='addcol IS_NGC startsWith(DESIG, \"NGC\")' out=ngc_flags.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'NGC' ')'\n\nCommand was: addcol IS_NGC startsWith(DESIG, \"NGC\")\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'NGC' ')')\n"
    },
    {
        "prompt": "Ensure a column named 'FLUX_ERR' is present in the table; if absent, add it with null values.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_ERR NULL' out=ensure_flux_err.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Update the column 'FLUX_ERR' to be the sample standard deviation of the grouped 'FLUX' values based on 'ID'.",
        "response": "stilts tpipe in=data.fits cmd='group ID FLUX;array;FLUXES' cmd='addcol FLUX_ERR stdev(FLUXES)' out=grouped_stdev.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'LOG_FLUX' and ensure that it is typed as a 32-bit floating point value (float).",
        "response": "stilts tpipe in=data.fits cmd='addcol -type float LOG_FLUX log10(FLUX)' out=float_log.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'LOG_FLUX' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type float LOG_FLUX log10(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'LOG_FLUX' 'log10(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the catalogue to keep rows corresponding to the last 10 minutes of observation, given a 'TIME_MJD' column and a constant parameter 'OBS_END_MJD'.",
        "response": "stilts tpipe in=logs.fits cmd='select TIME_MJD > param$OBS_END_MJD - 10.0/1440.0' out=last_10_min.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' 'param$OBS_END_MJD' '-' '10.0/1440.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TIME_MJD > param$OBS_END_MJD - 10.0/1440.0\n\nUsage: select <expr>\n    (Unused arguments: '>' 'param$OBS_END_MJD' '-' '10.0/1440.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove all rows which are exact duplicates across all columns.",
        "response": "stilts tpipe in=duplicates.fits cmd='sort 1' cmd='uniq' out=no_duplicates.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column representing the parallax error in micro-arcseconds (uas) given the column 'PLX_ERR_MAS' in milli-arcseconds.",
        "response": "stilts tpipe in=data.fits cmd='addcol -units uas PLX_ERR_UAS PLX_ERR_MAS * 1000.0' out=uas_error.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -units uas PLX_ERR_UAS PLX_ERR_MAS * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Replace null values in boolean column 'FLAG' with false.",
        "response": "stilts tpipe in=bool_data.fits cmd='replacecol FLAG NULL_FLAG ? false : FLAG' out=bool_fixed.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '?' 'false' ':' 'FLAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLAG NULL_FLAG ? false : FLAG\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' 'false' ':' 'FLAG'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_UCD' and set its UCD to 'phot.mag;em.opt.U' and its unit to 'mag'.",
        "response": "stilts tpipe in=data.fits cmd='addcol -ucd \"phot.mag;em.opt.U\" -units mag MAG_UCD 99.0' out=ucd_mag.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Check if any entry in the 'FLUX' column is positive and assert it is true for at least one row.",
        "response": "stilts tpipe in=zero_data.fits cmd='assert FLUX > 0.0' out=positive_flux_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX > 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the difference between RA and DEC in degrees and assert that the difference is always less than 10 degrees.",
        "response": "stilts tpipe in=data.fits cmd='addcol DIFF abs(RA-DEC)' cmd='assert DIFF < 10.0' out=diff_checked.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert DIFF < 10.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove the column 'VEL_ERR' if the table parameter 'ERROR_CORRECTED' is present and true.",
        "response": "stilts tpipe in=data.fits cmd='select !NULL_ERROR_CORRECTED && ERROR_CORRECTED' cmd='delcols VEL_ERR' out=vel_cleaned.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' 'ERROR_CORRECTED'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_ERROR_CORRECTED && ERROR_CORRECTED\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'ERROR_CORRECTED'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Display a progress monitor on the console while calculating a large, slow transformation, but immediately discard the output table.",
        "response": "stilts tpipe in=huge_data.fits cmd='addcol SLOW_COL log10($0 * 1.0)' cmd=progress omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '1.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SLOW_COL log10($0 * 1.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1.0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Sort the entire table randomly using the 'shuffle' filter.",
        "response": "stilts tpipe in=ordered.fits cmd=shuffle out=shuffled.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter out rows where the string column 'COMMENT' is either null or an empty string.",
        "response": "stilts tpipe in=data.fits cmd='select !NULL_COMMENT && length(COMMENT) > 0' out=comments_present.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' 'length(COMMENT)' '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_COMMENT && length(COMMENT) > 0\n\nUsage: select <expr>\n    (Unused arguments: '&&' 'length(COMMENT)' '>' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'LOG_FLUX' that is automatically typed as double, and then convert the result to ECSV format.",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_FLUX log10(FLUX)' ofmt=ecsv out=log_flux.ecsv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'FLAG_NEW' that is the logical OR of 'FLAG_A' and 'FLAG_B'.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLAG_NEW FLAG_A || FLAG_B' out=logical_flags.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '||' 'FLAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLAG_NEW FLAG_A || FLAG_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '||' 'FLAG_B'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Replicate every row in the table exactly five times.",
        "response": "stilts tpipe in=data.fits cmd='repeat 5' out=data_x5.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Ensure that the table has sequential access only (useful for debugging streaming I/O).",
        "response": "stilts tpipe in=data.fits cmd=seqview out=sequential.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Change the name of the table itself to 'Final_DR3_Catalog'.",
        "response": "stilts tpipe in=input.fits cmd='tablename \"Final_DR3_Catalog\"' out=renamed_table.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate K-correction for SDSS g-band (KCF_g) at redshift Z=0.1, using g-r color (KCC_gr).",
        "response": "stilts tpipe in=data.fits cmd='addcol KCORR kCorr(KCF_g, 0.1, KCC_gr, G_MAG-R_MAG)' out=kcorrected.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1,' 'KCC_gr,' 'G_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR kCorr(KCF_g, 0.1, KCC_gr, G_MAG-R_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.1,' 'KCC_gr,' 'G_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert the input FITS table directly into a remote SQL database table named 'UPLOAD_TEMP' using the 'tosql' mode.",
        "response": "stilts tpipe in=local.fits omode=tosql protocol=mysql host=remote_db db=db1 dbtable=UPLOAD_TEMP write=create user=user1 password=pw1",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Explode a 1-dimensional integer array column 'IDS' into scalar columns.",
        "response": "stilts tpipe in=arrays.fits cmd='explodecols IDS' out=exploded_ids.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a string column containing the bibcode URL derived from the existing 'BIBCODE' column.",
        "response": "stilts tpipe in=pubs.fits cmd='addcol BIB_URL bibcodeUrl(BIBCODE)' out=pubs_with_url.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Verify that the average magnitude (MAG) is numerically finite and assert it.",
        "response": "stilts tpipe in=data.fits cmd='cache' cmd='assert isFinite(mean(MAG))' out=finite_mag.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the mean of the array column 'FLUX_ARRAY' element-wise, and add it as a new array column 'MEAN_FLUX_ARRAY'.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol MEAN_FLUX_ARRAY mean(FLUX_ARRAY)' out=element_mean.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column of hexadecimal strings corresponding to the integer column 'ID'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ID_HEX toHex(ID)' out=hex_ids.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Find rows where the galactic latitude (GLAT) is within the southern hemisphere (GLAT < 0) and filter the result.",
        "response": "stilts tpipe in=coords.fits cmd='select GLAT < 0.0' out=southern_sky.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select GLAT < 0.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Set the column metadata 'RA' unit to 'deg' and UCD to 'pos.eq.ra;meta.main'.",
        "response": "stilts tpipe in=data.fits cmd='colmeta -units deg -ucd \"pos.eq.ra;meta.main\" RA' out=meta_updated.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Simulate sampling data from a remote HEALPix map ('dust_map.fits', Galactic) at (RA, DEC), converting coordinates on the fly.",
        "response": "stilts tpipe in=cat.fits cmd='addpixsample -systems icrs galactic RA DEC dust_map.fits' out=sampled.fits",
        "chat.jar": "failed",
        "error": "Error: Error using pixel data file dust_map.fits\n\nCommand was: addpixsample -systems icrs galactic RA DEC dust_map.fits\n\nUsage: addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                    <expr-lon> <expr-lat> <healpix-file>\n    (Error using pixel data file dust_map.fits\n        (No file, URL or command \"dust_map.fits\"))\n"
    },
    {
        "prompt": "Add a column containing the name of the input file itself.",
        "response": "stilts tpipe in=large_file.fits cmd='addcol FILENAME param$in' out=file_provenance.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove the column 'OLD_RA' and replace it with a new 'RA' column calculated from 'RA_RAD' converted to degrees.",
        "response": "stilts tpipe in=data.fits cmd='delcols OLD_RA' cmd='addcol RA radiansToDegrees(RA_RAD)' out=ra_degree.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a parameter named 'PIXEL_SCALE' using a string value '0.2 arcsec/pixel'.",
        "response": "stilts tpipe in=data.fits cmd='setparam PIXEL_SCALE \"0.2 arcsec/pixel\"' out=scale_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Ensure that the input table supports random access, copying it to temporary storage if necessary, for debugging purposes only.",
        "response": "stilts tpipe in=stream.fits cmd=random out=rand_access.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_K_ABS' using the luminosity distance (Mpc) calculated from the Z column (using default cosmology).",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_K_ABS K_MAG - distanceToModulus(mToMpc(comovingDistanceL(Z, 70.0, 0.3, 0.7)))' out=k_abs_dist.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'distanceToModulus(mToMpc(comovingDistanceL(Z,' '70.0,' '0.3,' '0.7)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_K_ABS K_MAG - distanceToModulus(mToMpc(comovingDistanceL(Z, 70.0, 0.3, 0.7)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'distanceToModulus(mToMpc(comovingDistanceL(Z,' '70.0,' '0.3,' '0.7)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'CLASS' and then collect all 'FLUX' values into an array named 'FLUX_COLLECTION'.",
        "response": "stilts tpipe in=data.fits cmd='group CLASS FLUX;array;FLUX_COLLECTION' out=grouped_arrays.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Filter the table using an approximate sampling: keep only every 10th row, sacrificing strict precision for speed.",
        "response": "stilts tpipe in=big_data.fits cmd='every -approx 10' out=approx_sample.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'FLUX_RECIP' containing the element-wise reciprocal of the array column 'FLUX_ARR'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_RECIP reciprocal(FLUX_ARR)' out=reciprocals.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'PM_VEL_ICRS' containing the 3-element velocity vector calculated from astrometric parameters (RA, DEC, PMRA, PMDEC, PARALLAX, RV).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_ICRS astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))' out=gaia_velocity_vector.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_ICRS astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Propagate the full 22-element astrometric error matrix backwards by 5 years, updating all fields.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PROP_22 epochPropErr(-5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV, RA_error, DEC_error, PARALLAX_error, PMRA_error, PMDEC_error, RV_error, RA_DEC_corr, RA_PARALLAX_corr, RA_PMRA_corr, RA_PMDEC_corr, DEC_PARALLAX_corr, DEC_PMRA_corr, DEC_PMDEC_corr, PARALLAX_PMRA_corr, PARALLAX_PMDEC_corr, PMRA_PMDEC_corr))' out=gaia_error_propagated.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV,' 'RA_error,' 'DEC_error,' 'PARALLAX_error,' 'PMRA_error,' 'PMDEC_error,' 'RV_error,' 'RA_DEC_corr,' 'RA_PARALLAX_corr,' 'RA_PMRA_corr,' 'RA_PMDEC_corr,' 'DEC_PARALLAX_corr,' 'DEC_PMRA_corr,' 'DEC_PMDEC_corr,' 'PARALLAX_PMRA_corr,' 'PARALLAX_PMDEC_corr,' 'PMRA_PMDEC_corr))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PROP_22 epochPropErr(-5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV, RA_error, DEC_error, PARALLAX_error, PMRA_error, PMDEC_error, RV_error, RA_DEC_corr, RA_PARALLAX_corr, RA_PMRA_corr, RA_PMDEC_corr, DEC_PARALLAX_corr, DEC_PMRA_corr, DEC_PMDEC_corr, PARALLAX_PMRA_corr, PARALLAX_PMDEC_corr, PMRA_PMDEC_corr))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV,' 'RA_error,' 'DEC_error,' 'PARALLAX_error,' 'PMRA_error,' 'PMDEC_error,' 'RV_error,' 'RA_DEC_corr,' 'RA_PARALLAX_corr,' 'RA_PMRA_corr,' 'RA_PMDEC_corr,' 'DEC_PARALLAX_corr,' 'DEC_PMRA_corr,' 'DEC_PMDEC_corr,' 'PARALLAX_PMRA_corr,' 'PARALLAX_PMDEC_corr,' 'PMRA_PMDEC_corr))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Assert that the number of good rows ($nrow) is within a defined range.",
        "response": "stilts tpipe in=data.fits cmd='assert $nrow >= 1000L && $nrow <= 100000L' out=size_checked.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1000L' '&&' '$nrow' '<=' '100000L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $nrow >= 1000L && $nrow <= 100000L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1000L' '&&' '$nrow' '<=' '100000L'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove the first 100 rows, then select the remaining rows in reverse order.",
        "response": "stilts tpipe in=data.fits cmd='rowrange 101 $nrow' cmd='sort -down $0' out=reversed_data.fits",
        "chat.jar": "failed",
        "error": "Error: Arg \"iStr\" not <int> or +<int>\n\nCommand was: rowrange 101 $nrow\n\nUsage: rowrange <first> <last>|+<count>\n    (Arg \"iStr\" not <int> or +<int>)\n"
    },
    {
        "prompt": "Convert the input table to Parquet format, forcing GZIP compression.",
        "response": "stilts tpipe in=input.fits ofmt='parquet(compression=gzip)' out=output.parquet",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column of boolean values indicating whether the integer column 'STATUS' has bit 5 set.",
        "response": "stilts tpipe in=flags.fits cmd='addcol HAS_BIT5 hasBit(STATUS, 5)' out=bit_checked.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HAS_BIT5 hasBit(STATUS, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "For the column 'FLUX', calculate quartiles (Q1, Q2, Q3) for the statistical summary output.",
        "response": "stilts tpipe in=data.fits cmd='stats FLUX;Q1;median;Q3' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unknown quantity FLUX must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn\n\nCommand was: stats FLUX\n\nUsage: stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n    (Unknown quantity FLUX must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn)\n"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the ratio of 'FLUX_A' to 'FLUX_B' is never infinite.",
        "response": "stilts tpipe in=data.fits cmd='assert isFinite(FLUX_A / FLUX_B)' out=ratio_finite.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert isFinite(FLUX_A / FLUX_B)\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_U' and set its UCD to 'phot.mag;em.opt.U' and UType to 'magnitude_u', ensuring explicit type definition.",
        "response": "stilts tpipe in=data.fits cmd='addcol -ucd \"phot.mag;em.opt.U\" -utype magnitude_u MAG_U 20.0' out=u_mag_meta.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the mean of 'TEMP' for each distinct 'REGION' and rename the output column to 'MEAN_TEMP'.",
        "response": "stilts tpipe in=data.fits cmd='group REGION TEMP;mean;MEAN_TEMP' out=mean_temp_by_region.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Filter the table to keep only the second hundred rows (index 101 to 200).",
        "response": "stilts tpipe in=data.fits cmd='rowrange 101 200' out=second_hundred.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Set the column metadata 'FLUX' description to 'Integrated flux measurement' and type to float (32-bit).",
        "response": "stilts tpipe in=data.fits cmd='colmeta -desc \"Integrated flux measurement\" -type float FLUX' out=flux_meta_updated.fits",
        "chat.jar": "failed",
        "error": "Error: No such flag -type\n\nCommand was: colmeta -desc \"Integrated flux measurement\" -type float FLUX\n\nUsage: colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n               [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n               [-shape <n>[,<n>...][,*]] [-elsize <n>]\n               <colid-list>\n    (No such flag -type)\n"
    },
    {
        "prompt": "Display the output table using the graphical user interface (GUI) mode.",
        "response": "stilts tpipe in=data.fits omode=gui",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Extract the first 5 elements of the array column 'DATA_ARRAY' and make them a new array column 'SUB_ARRAY'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol SUB_ARRAY slice(DATA_ARRAY, 0, 5)' out=sliced_array.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0,' '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SUB_ARRAY slice(DATA_ARRAY, 0, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0,' '5)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the string column 'NAME' has a non-zero length for all rows.",
        "response": "stilts tpipe in=data.fits cmd='assert length(NAME) > 0' out=name_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert length(NAME) > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Sort the table by 'TIME' and ensure the output stream is written to standard output in FITS format.",
        "response": "stilts tpipe in=data.fits cmd='sort TIME' ofmt=fits out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'LOG_FLUX' and force all operations downstream to treat the table as random access.",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_FLUX log10(FLUX)' cmd=randomview out=random_log_flux.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a new column 'LOG_TIME' derived from 'TIME_MJD' using the natural logarithm (ln).",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_TIME ln(TIME_MJD)' out=log_time.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'ERROR_Q' containing the quadrature sum of 'ERR1' and 'ERR2'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q hypot(ERR1, ERR2)' out=quad_error.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ERR2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q hypot(ERR1, ERR2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'ERR2)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the average value of 'FLUX' per 'REGION' and output the median instead of the mean of 'FLUX_ERR' for each region.",
        "response": "stilts tpipe in=data.fits cmd='group REGION FLUX;mean;MEAN_FLUX FLUX_ERR;median;MEDIAN_ERR' out=complex_agg.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Select rows where the value of 'MAG' is numerically smaller than 10.5.",
        "response": "stilts tpipe in=cat.fits cmd='select MAG < 10.5' out=bright_cat.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '10.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 10.5\n\nUsage: select <expr>\n    (Unused arguments: '<' '10.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove any rows that were previously duplicated based on column 'ID' and calculate statistics on the resulting unique table.",
        "response": "stilts tpipe in=data.fits cmd='uniq ID' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column with the sine of the angle in degrees given by 'POS_ANG_DEG'.",
        "response": "stilts tpipe in=data.fits cmd='addcol POS_ANG_SIN sinDeg(POS_ANG_DEG)' out=sines.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Test for rows where the string 'OBS_ID' starts with 'XMM' or 'Chandra'.",
        "response": "stilts tpipe in=obs.fits cmd='select startsWith(OBS_ID, \"XMM\") || startsWith(OBS_ID, \"Chandra\")' out=xmm_chandra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'XMM' ')' '||' 'startsWith(OBS_ID,' 'Chandra' ')'\n\nCommand was: select startsWith(OBS_ID, \"XMM\") || startsWith(OBS_ID, \"Chandra\")\n\nUsage: select <expr>\n    (Unused arguments: 'XMM' ')' '||' 'startsWith(OBS_ID,' 'Chandra' ')')\n"
    },
    {
        "prompt": "Use the 'group' filter to list the distinct values of column 'FILTER' and count their occurrences.",
        "response": "stilts tpipe in=data.fits cmd='group FILTER 0;count;COUNT' out=filter_counts.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: count\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a string column named 'URL_NED' containing the NED service URL for the object name in column 'OBJ_NAME'.",
        "response": "stilts tpipe in=targets.fits cmd='addcol URL_NED nedUrl(OBJ_NAME)' out=targets_with_ned.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table to keep only rows where the integer value of 'QUALITY_FLAG' has the bit pattern 0x04 set.",
        "response": "stilts tpipe in=data.fits cmd='select hasBit(QUALITY_FLAG, 2)' out=flag_4_set.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(QUALITY_FLAG, 2)\n\nUsage: select <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert input column 'RA' from radians to degrees before outputting the table.",
        "response": "stilts tpipe in=data.fits cmd='replacecol RA radiansToDegrees(RA)' out=ra_degrees.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove the parameter 'OBS_END_TIME' and set a new parameter 'DURATION' equal to 10.0 seconds.",
        "response": "stilts tpipe in=meta.fits cmd='clearparams OBS_END_TIME' cmd='setparam DURATION 10.0' out=new_meta.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "For every row, check if the value of 'MAG' is greater than 25 and assert this condition is met by all rows.",
        "response": "stilts tpipe in=faint_sources.fits cmd='assert MAG > 25.0' out=faint_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '25.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG > 25.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '25.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Create 100 rows containing random numbers drawn from a Gaussian distribution.",
        "response": "stilts tpipe in=:loop:100 cmd='replacecol i randomGaussian($0)' out=gaussian_sample.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Sample the mean pixel value within a 1 arcminute radius from the map 'extinction.fits' (Galactic), given positions in (L, B).",
        "response": "stilts tpipe in=cat.fits cmd='addpixsample L B extinction.fits -radius 1.0/60.0 -stat mean' out=mean_extinction.fits",
        "chat.jar": "failed",
        "error": "Error: Error using pixel data file extinction.fits\n\nCommand was: addpixsample L B extinction.fits -radius 1.0/60.0 -stat mean\n\nUsage: addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                    <expr-lon> <expr-lat> <healpix-file>\n    (Error using pixel data file extinction.fits\n        (No file, URL or command \"extinction.fits\"))\n"
    },
    {
        "prompt": "Use the assert filter to verify that all values in 'FLUX' are convertible to 32-bit integers without overflow.",
        "response": "stilts tpipe in=data.fits cmd='assert FLUX == toFloat(toInteger(FLUX))' out=float_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'toFloat(toInteger(FLUX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX == toFloat(toInteger(FLUX))\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'toFloat(toInteger(FLUX))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_KCORR' using the formula M_corr = M + K_corr, where K_corr is calculated using the photometric redshift (Z_PHOT).",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_KCORR MAG + kCorr(KCF_r, Z_PHOT, KCC_gr, G_MAG-R_MAG)' out=kcorr_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'kCorr(KCF_r,' 'Z_PHOT,' 'KCC_gr,' 'G_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_KCORR MAG + kCorr(KCF_r, Z_PHOT, KCC_gr, G_MAG-R_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'kCorr(KCF_r,' 'Z_PHOT,' 'KCC_gr,' 'G_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert the array column 'ERROR_ARRAY' of fixed shape into a scalar column containing the sum of its elements.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol ERROR_SUM sum(ERROR_ARRAY)' out=error_sum_scalar.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MJD_ISO' containing the MJD date converted to ISO-8601 string format.",
        "response": "stilts tpipe in=time.fits cmd='addcol MJD_ISO mjdToIso(MJD_TIME)' out=iso_time.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Check if a given column 'ERROR' has a null value and replace the entire row with a blank table if it does (not possible directly with tpipe, ask for clarification).",
        "response": "stilts tpipe in=data.fits cmd='select !NULL_ERROR' out=no_null_errors.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Output the final table to a PostgreSQL database table named 'processed_data' (appending rows).",
        "response": "stilts tpipe in=final.fits omode=tosql protocol=postgresql host=db_host db=mydb dbtable=processed_data write=append user=dbuser",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a boolean column 'IS_BRIGHT' only if MAG is defined (not null) and less than 18.",
        "response": "stilts tpipe in=cat.fits cmd='addcol IS_BRIGHT !NULL_MAG && MAG < 18.0' out=flagged.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' 'MAG' '<' '18.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT !NULL_MAG && MAG < 18.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '&&' 'MAG' '<' '18.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Copy the input table and save it to standard output in ASCII format, padded with spaces.",
        "response": "stilts tpipe in=data.fits ofmt=ascii out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the 'meta' filter to extract only the Name, Description, and UCD columns for all fields.",
        "response": "stilts tpipe in=data.fits cmd='meta Name Description UCD' ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Create 100 rows containing random numbers sampled from a uniform distribution (0 to 1).",
        "response": "stilts tpipe in=:loop:100 cmd='replacecol i random($0)' out=uniform_sample.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'PM_VEL_GAL' containing the 3-element Galactic velocity vector (UVW) derived from astrometric parameters.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_GAL icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))' out=gaia_galactic_velocity.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_GAL icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Ensure that the table is suitable for parallel processing by caching it if it's currently sequential.",
        "response": "stilts tpipe in=streamed.csv ifmt=csv cmd=random out=cached.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'LOG10_E' calculated as log10 of 'ENERGY' and set its unit to 'dex'.",
        "response": "stilts tpipe in=events.fits cmd='addcol -units dex LOG10_E log10(ENERGY)' out=log_events.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Change the name of the column 'TEFF' to 'Temperature' and explicitly set its unit to 'K'.",
        "response": "stilts tpipe in=stars.fits cmd='colmeta -name Temperature -units K TEFF' out=stars_temp.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column containing the angle in radians corresponding to the galactic position angle (POS_ANG_GAL_DEG).",
        "response": "stilts tpipe in=data.fits cmd='addcol POS_ANG_RAD degreesToRadians(POS_ANG_GAL_DEG)' out=pos_ang_rad.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Validate that the column 'MAG_ERR' only contains values that are small (less than 1.0) for all rows.",
        "response": "stilts tpipe in=errors.fits cmd='assert MAG_ERR < 1.0' out=small_errors.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG_ERR < 1.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Check the whole table for constant-valued columns and remove them, promoting their values to parameters.",
        "response": "stilts tpipe in=meta.fits cmd=constcol out=meta_collapsed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table to keep rows where 'RA' is greater than 100 degrees, and calculate the number of remaining rows.",
        "response": "stilts tpipe in=cat.fits cmd='select RA > 100.0' omode=count",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 100.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '100.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove the columns whose names contain 'ERROR' and those with index greater than 10.",
        "response": "stilts tpipe in=data.fits cmd='delcols \"*ERROR* 11-\"' out=data_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the difference between the maximum and minimum values of the array column 'TEMP_READINGS'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol TEMP_RANGE maximum(TEMP_READINGS) - minimum(TEMP_READINGS)' out=temp_range.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'minimum(TEMP_READINGS)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol TEMP_RANGE maximum(TEMP_READINGS) - minimum(TEMP_READINGS)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'minimum(TEMP_READINGS)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Replace the existing 'FLUX' column with a normalized version: 'FLUX / SUM(FLUX)' (requires initial pass for sum).",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='replacecol FLUX FLUX / sum(FLUX)' out=normalized_flux.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' 'sum(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX FLUX / sum(FLUX)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' 'sum(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column containing the URL of the ADS bibcode for the entry in 'BIBCODE'.",
        "response": "stilts tpipe in=pubs.fits cmd='addcol ADS_URL bibcodeUrl(BIBCODE)' out=pubs_ads.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "For every row, check if the sum of 'FLUX_A' and 'FLUX_B' is zero and assert that it never happens.",
        "response": "stilts tpipe in=data.fits cmd='assert FLUX_A + FLUX_B != 0.0' out=non_zero_sum.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'FLUX_B' '!=' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX_A + FLUX_B != 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'FLUX_B' '!=' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert the MJD time 'TIME' to seconds since Unix Epoch and add it as 'TIME_UNIX_SEC'.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_UNIX_SEC mjdToUnixSec(TIME)' out=unix_time.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a boolean column 'IS_ODD' which is true if the 'ID' number is odd.",
        "response": "stilts tpipe in=data.fits cmd='addcol IS_ODD ID % 2 != 0' out=odd_ids.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '%' '2' '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_ODD ID % 2 != 0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '%' '2' '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add columns corresponding to the X, Y, Z Cartesian components of the object position derived from (RA, DEC, DISTANCE_PC).",
        "response": "stilts tpipe in=data.fits cmd='addcol XYZ_VEC polarXYZ(RA, DEC, DISTANCE_PC)' out=xyz_vectors.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'DISTANCE_PC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol XYZ_VEC polarXYZ(RA, DEC, DISTANCE_PC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'DISTANCE_PC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_U_ABS' using the conversion constant 'JOHNSON_AB_U' to approximate the absolute magnitude.",
        "response": "stilts tpipe in=stars.fits cmd='addcol MAG_U_ABS U_MAG + JOHNSON_AB_U' out=u_abs_approx.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_ABS U_MAG + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the logical array column 'MASK' does not contain any true values.",
        "response": "stilts tpipe in=arrays.fits cmd='assert countTrue(MASK) == 0L' out=mask_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert countTrue(MASK) == 0L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add an array column 'FLUX_NORM' where each element is the ratio of the original flux array element to the sum of the flux array elements.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol FLUX_NORM divide(FLUX_ARRAY, sum(FLUX_ARRAY))' out=normalized_array.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'sum(FLUX_ARRAY))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_NORM divide(FLUX_ARRAY, sum(FLUX_ARRAY))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'sum(FLUX_ARRAY))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the catalogue to keep only objects whose name ends with 'Nebula' (case sensitive).",
        "response": "stilts tpipe in=objects.fits cmd='select endsWith(NAME, \"Nebula\")' out=nebulae.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Nebula' ')'\n\nCommand was: select endsWith(NAME, \"Nebula\")\n\nUsage: select <expr>\n    (Unused arguments: 'Nebula' ')')\n"
    },
    {
        "prompt": "Calculate the mean of the 'FLUX' column for the whole table and output the result in plain text format.",
        "response": "stilts tpipe in=data.fits cmd='stats FLUX;mean' omode=out ofmt=text out=-",
        "chat.jar": "failed",
        "error": "Error: Unknown quantity FLUX must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn\n\nCommand was: stats FLUX\n\nUsage: stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n    (Unknown quantity FLUX must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn)\n"
    },
    {
        "prompt": "Filter the table to remove rows where the proper motion error in RA ('PMRA_ERR') is larger than 1.0 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select PMRA_ERR <= 1.0' out=low_pm_error.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<=' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA_ERR <= 1.0\n\nUsage: select <expr>\n    (Unused arguments: '<=' '1.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Copy the input table and send it via the PLASTIC protocol to a listening application named 'TOPCAT'.",
        "response": "stilts tpipe in=data.fits omode=plastic client=TOPCAT",
        "chat.jar": "failed",
        "error": "Error: Can't connect to PLASTIC hub\n    (No PLASTIC hub detected (no file ~/.plastic))\n"
    },
    {
        "prompt": "Set the table parameter 'SOURCE_ID' to the value of the first row's 'ID' column.",
        "response": "stilts tpipe in=data.fits cmd='head 1' cmd='setparam -type long SOURCE_ID ID' out=first_id_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Extract the proper motion vector (PMRA, PMDEC) and convert it to the Galactic coordinate system.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_ICRS astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))' cmd='addcol PM_GAL icrsToGal(PM_ICRS)' out=pm_galactic.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_ICRS astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Check if a string column 'FLAG_TEXT' has null values and replace them with 'UNKNOWN'.",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLAG_TEXT NULL_FLAG_TEXT ? \"UNKNOWN\" : FLAG_TEXT' out=flag_text_fixed.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '?' 'UNKNOWN' ':' 'FLAG_TEXT'\n\nCommand was: replacecol FLAG_TEXT NULL_FLAG_TEXT ? \"UNKNOWN\" : FLAG_TEXT\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' 'UNKNOWN' ':' 'FLAG_TEXT')\n"
    },
    {
        "prompt": "Add columns corresponding to the X, Y, Z Cartesian components of the object position (XYZ) in Galactic coordinates.",
        "response": "stilts tpipe in=data.fits cmd='addcol XYZ_VEC icrsToGal(astromXYZ(RA, DEC, PARALLAX))' out=galactic_xyz.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol XYZ_VEC icrsToGal(astromXYZ(RA, DEC, PARALLAX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_U_AB' converting Johnson U magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB MAG_U + JOHNSON_AB_U' out=u_ab_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the table to keep rows where the distance (DIST) is between 100 and 200 parsecs.",
        "response": "stilts tpipe in=data.fits cmd='select DISTANCE_PC >= 100.0 && DISTANCE_PC <= 200.0' out=mid_dist.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '100.0' '&&' 'DISTANCE_PC' '<=' '200.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DISTANCE_PC >= 100.0 && DISTANCE_PC <= 200.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '100.0' '&&' 'DISTANCE_PC' '<=' '200.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'RA_HMS' converting the RA in degrees to HMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS degreesToHms(RA, 2)' out=hms_ra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS degreesToHms(RA, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate 500 rows, add a random number column 'WEIGHT', and calculate statistics including median and MAD.",
        "response": "stilts tpipe in=:loop:500 cmd='addcol WEIGHT random($0)' cmd='stats WEIGHT;median;MedAbsDev' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unknown quantity WEIGHT must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn\n\nCommand was: stats WEIGHT\n\nUsage: stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n    (Unknown quantity WEIGHT must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn)\n"
    },
    {
        "prompt": "Simulate drawing a random sample of 100 rows, ensuring the precise number is obtained.",
        "response": "stilts tpipe in=large_data.fits cmd='random 100.0/$nrow' cmd='assert $nrow >= 100L' out=exact_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '100.0/$nrow'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 100.0/$nrow\n\nUsage: random\n    (Unused arguments: '100.0/$nrow'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column with the hyperbolic tangent of 'VELOCITY'.",
        "response": "stilts tpipe in=data.fits cmd='addcol VEL_TANH tanh(VELOCITY)' out=hyperbolic_vel.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Check for and remove any columns whose values are identical across all rows, even if some values are null (constant-valued columns).",
        "response": "stilts tpipe in=meta.fits cmd='constcol -acceptnull' out=non_constant.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'HEALPIX_META' by setting coordinate system metadata (level 6, Galactic, RING scheme) for the current table.",
        "response": "stilts tpipe in=data.fits cmd='healpixmeta -level 6 -csys G -ring' out=hpx_meta_table.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a description to the table: 'Survey data filtered for bright sources.'.",
        "response": "stilts tpipe in=data.fits cmd='setparam -desc \"Survey data filtered for bright sources.\" TITLE \"My Survey\"' out=described.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'ERROR_Q_ERR' containing the quadrature sum of the array columns 'ERR_X' and 'ERR_Y', element-wise.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol ERROR_Q_ERR arrayFunc(\"sqrt(x)\", add(square(ERR_X), square(ERR_Y)))' out=array_quad_sum.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',' 'add(square(ERR_X),' 'square(ERR_Y)))'\n\nCommand was: addcol ERROR_Q_ERR arrayFunc(\"sqrt(x)\", add(square(ERR_X), square(ERR_Y)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: ',' 'add(square(ERR_X),' 'square(ERR_Y)))')\n"
    },
    {
        "prompt": "Filter rows to keep only those with non-null values in columns 1, 3, and 5.",
        "response": "stilts tpipe in=data.fits cmd='select !NULL_$1 && !NULL_$3 && !NULL_$5' out=non_null_subset.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' '!NULL_$3' '&&' '!NULL_$5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_$1 && !NULL_$3 && !NULL_$5\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_$3' '&&' '!NULL_$5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'FLAG_TEXT' which is 'A' if FLAG > 0, and 'B' otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLAG_TEXT FLAG > 0 ? \"A\" : \"B\"' out=conditional_flag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0' '?' 'A' ':' 'B'\n\nCommand was: addcol FLAG_TEXT FLAG > 0 ? \"A\" : \"B\"\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0' '?' 'A' ':' 'B')\n"
    },
    {
        "prompt": "Ensure that the input file name is kept as a parameter called 'FILE_PATH'.",
        "response": "stilts tpipe in=input.fits cmd='setparam FILE_PATH param$in' out=file_path_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column containing the velocity (km/s) derived from the redshift (Z) using the speed of light constant (approximate conversion).",
        "response": "stilts tpipe in=data.fits cmd='addcol VELOCITY_KMS Z * C_KMS / 1000.0' out=vel_kms.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' 'C_KMS' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VELOCITY_KMS Z * C_KMS / 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'C_KMS' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the ratio of the number of rows where 'FLUX' is positive to the total number of rows.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='addcol POS_RATIO toDouble(sum(FLUX > 0)) / $nrow' out=ratio_table.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0))' '/' '$nrow'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_RATIO toDouble(sum(FLUX > 0)) / $nrow\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0))' '/' '$nrow'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_V_AB' converting Johnson V magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_V_AB MAG_V + JOHNSON_AB_V' out=v_ab_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_V_AB MAG_V + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'RA_ECL' containing the ICRS RA converted to Ecliptic Longitude (approximate conversion for comparison).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol COORDS_ICRS astromXYZ(RA, DEC, 1.0)' cmd='addcol COORDS_ECL icrsToEcl(COORDS_ICRS)' cmd='addcol RA_ECL cartesianToLon(COORDS_ECL, COORDS_ECL)' out=ecliptic_coords.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' '1.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COORDS_ICRS astromXYZ(RA, DEC, 1.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' '1.0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'CHANNEL' and calculate the median of 'FLUX' for each channel.",
        "response": "stilts tpipe in=data.fits cmd='group CHANNEL FLUX;median;MEDIAN_FLUX' out=median_flux_channel.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: median\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Force the output table to stream to standard output in FITS format, even if random access is available upstream.",
        "response": "stilts tpipe in=data.fits ofmt=fits out=- istream=true",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"data.fits\"\n"
    },
    {
        "prompt": "Add a column 'PLX_INV' as the inverse of 'PARALLAX', but set it to null if 'PARALLAX' is less than 0.1 mas.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_INV PARALLAX > 0.1 ? 1.0 / PARALLAX : NULL' out=inverse_parallax.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.1' '?' '1.0' '/' 'PARALLAX' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_INV PARALLAX > 0.1 ? 1.0 / PARALLAX : NULL\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0.1' '?' '1.0' '/' 'PARALLAX' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add columns converting coordinates from Galactic (L, B) to ICRS (RA, DEC).",
        "response": "stilts tpipe in=data.fits cmd='addskycoords galactic icrs L B RA DEC' out=icrs_coords.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Set the output mode to view the statistics, but ensure the result table is cached internally first.",
        "response": "stilts tpipe in=data.fits cmd=cache omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add an array column 'FLUX_NORM' calculated by normalizing the original flux array by the maximum element.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol FLUX_NORM divide(FLUX_ARRAY, maximum(FLUX_ARRAY))' out=max_normalized_array.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'maximum(FLUX_ARRAY))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_NORM divide(FLUX_ARRAY, maximum(FLUX_ARRAY))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'maximum(FLUX_ARRAY))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Check if column 'Z' exists and assert that it is type Double.",
        "response": "stilts tpipe in=data.fits cmd='meta Name Class' cmd='select equals(Name, \"Z\")' cmd='assert equals(Class, \"Double\")' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Z' ')'\n\nCommand was: select equals(Name, \"Z\")\n\nUsage: select <expr>\n    (Unused arguments: 'Z' ')')\n"
    },
    {
        "prompt": "Round the numeric column 'FLUX' to 3 decimal places for storage as a string.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_STR formatDecimal(FLUX, 3)' out=flux_formatted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_STR formatDecimal(FLUX, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_J_AB' converting 2MASS J magnitude (Vega) to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB MAG_J + VEGA_AB_J' out=j_ab_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'KCORR_UV' using the KCF_FUV filter at Z=0.3, leveraging the FUV-NUV color (KCC_FUVNUV).",
        "response": "stilts tpipe in=uv_data.fits cmd='addcol KCORR_UV kCorr(KCF_FUV, 0.3, KCC_FUVNUV, FUV-NUV)' out=kcorr_uv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.3,' 'KCC_FUVNUV,' 'FUV-NUV)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_UV kCorr(KCF_FUV, 0.3, KCC_FUVNUV, FUV-NUV)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.3,' 'KCC_FUVNUV,' 'FUV-NUV)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Output the table as a FITS file and calculate its checksum.",
        "response": "stilts tpipe in=data.fits out=data.fits omode=checksum",
        "chat.jar": "failed",
        "error": "Error: out=data.fits: out and ofmt parameters can only be used when omode=out\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n"
    },
    {
        "prompt": "Convert the input table to Parquet format, forcing ZSTD compression.",
        "response": "stilts tpipe in=input.fits ofmt='parquet(compression=zstd)' out=output_zstd.parquet",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows to keep only those where the time difference between 'TIME_END' and 'TIME_START' is less than 100 units.",
        "response": "stilts tpipe in=logs.fits cmd='select TIME_END - TIME_START < 100.0' out=short_events.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'TIME_START' '<' '100.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select TIME_END - TIME_START < 100.0\n\nUsage: select <expr>\n    (Unused arguments: '-' 'TIME_START' '<' '100.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a boolean column 'HIGH_RA' that is true if the RA value is between 180 and 360 degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol HIGH_RA RA >= 180.0 && RA <= 360.0' out=high_ra_flag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '180.0' '&&' 'RA' '<=' '360.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HIGH_RA RA >= 180.0 && RA <= 360.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>=' '180.0' '&&' 'RA' '<=' '360.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by the combination of 'FIELD_ID' and 'CHIP_ID' and calculate the population standard deviation of 'FLUX'.",
        "response": "stilts tpipe in=obs.fits cmd='group FIELD_ID CHIP_ID FLUX;stdev-pop;FLUX_PSTDEV' out=obs_pstdev.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: stdev-pop\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a parameter 'ROW_COUNT_LONG' set to the total number of rows ($nrow).",
        "response": "stilts tpipe in=data.fits cmd='setparam -type long ROW_COUNT_LONG $nrow' out=row_count_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Round the MJD column 'TIME' to the nearest integer MJD, keeping the original precision.",
        "response": "stilts tpipe in=time.fits cmd='replacecol TIME round(TIME)' out=rounded_time.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'RA_SIN' which is sine of the RA in radians, assuming RA is currently in degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_SIN sin(degreesToRadians(RA))' out=ra_sin_calc.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Perform a sanity check on the data (check filter) and output the result to standard output.",
        "response": "stilts tpipe in=data.fits cmd=check out=- ofmt=text",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column containing the velocity vector (XYZ) corresponding to the proper motion (PMRA, PMDEC, PARALLAX) of the object, assuming zero radial velocity.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_XYZ astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))' out=pm_xyz.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' '0.0))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_XYZ astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, 0.0))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' '0.0))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DMS_DEC' converting DEC in degrees to DMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DMS_DEC degreesToDms(DEC, 1)' out=dms_dec.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DMS_DEC degreesToDms(DEC, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter to keep only rows where the integer column 'STATUS' has the 6th bit set (0x20).",
        "response": "stilts tpipe in=flags.fits cmd='select hasBit(STATUS, 5)' out=bit_5_set.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(STATUS, 5)\n\nUsage: select <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate statistics on all numeric columns, explicitly setting output to use sequential execution.",
        "response": "stilts tpipe in=data.fits cmd='stats -noparallel' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove the first 10 rows and the last 10 rows from the table.",
        "response": "stilts tpipe in=data.fits cmd='head -$nrow-10' cmd='tail -$nrow-10' out=trimmed.fits",
        "chat.jar": "failed",
        "error": "Error: Row count -$nrow-10 not numeric\n\nCommand was: head -$nrow-10\n\nUsage: head <nrows>\n    (Row count -$nrow-10 not numeric)\n"
    },
    {
        "prompt": "Add a column 'FLUX_DIFF' which is the element-wise subtraction of array 'FLUX_A' from array 'FLUX_B'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_DIFF subtract(FLUX_B, FLUX_A)' out=array_diff.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'FLUX_A)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_DIFF subtract(FLUX_B, FLUX_A)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_A)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Ensure the table is only stored on disk (force disk caching) and output the number of rows.",
        "response": "stilts -disk tpipe in=large.fits omode=count",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a string column named 'DOI_URL' containing the DOI resolution URL derived from the existing 'DOI' string.",
        "response": "stilts tpipe in=pubs.fits cmd='addcol DOI_URL doiUrl(DOI)' out=pubs_with_doi.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows where the proper motion magnitude is greater than 10 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select hypot(PMRA, PMDEC) > 10.0' out=high_pm.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 10.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_R_AB' converting Johnson R magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_R_AB MAG_R + JOHNSON_AB_R' out=r_ab_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_R_AB MAG_R + JOHNSON_AB_R\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert the input table to a LaTeX output document, including table parameters.",
        "response": "stilts tpipe in=data.fits ofmt='latex(standalone=true)' out=latex_doc.tex",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the mean of the array column 'FLUX_ARRAY' element-wise, but only for the first 10 elements.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol MEAN_FLUX_10 mean(slice(FLUX_ARRAY, 0, 10))' out=sliced_mean.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0,' '10))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MEAN_FLUX_10 mean(slice(FLUX_ARRAY, 0, 10))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0,' '10))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the 'assert' filter to verify that 'FLUX' never contains NaN or infinite values.",
        "response": "stilts tpipe in=data.fits cmd='assert isFinite(FLUX)' out=finite_flux_asserted.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MJD_TIME' containing the integer component of the MJD and convert it to type int.",
        "response": "stilts tpipe in=time.fits cmd='addcol MJD_TIME toInteger(roundDown(MJD))' out=mjd_int.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a string column containing the decimal year equivalent of the JD time 'TIME_JD' with 4 decimal places.",
        "response": "stilts tpipe in=time.fits cmd='addcol DEC_YEAR formatDecimal(mjdToDecYear(jdToMjd(TIME_JD)), 4)' out=dec_year_formatted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_YEAR formatDecimal(mjdToDecYear(jdToMjd(TIME_JD)), 4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'CLASS' and then aggregate the string column 'NAME' into a single array per group, including blanks.",
        "response": "stilts tpipe in=data.fits cmd='group CLASS NAME;array-withblanks;NAMES' out=grouped_string_arrays.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array-withblanks\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a string column 'URL_SIMBAD' containing the SIMBAD service URL for the object name in column 'OBJ_NAME'.",
        "response": "stilts tpipe in=targets.fits cmd='addcol URL_SIMBAD simbadUrl(OBJ_NAME)' out=targets_with_simbad.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove all columns except 'ID' and 'RA', then rename 'RA' to 'RA_ICRS'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"ID RA\"' cmd='colmeta -name RA_ICRS RA' out=minimal_renamed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the difference between the parallax error in mas and the radial velocity error in km/s.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol ERROR_DIFF PARALLAX_ERR - RV_ERR' out=error_diff.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'RV_ERR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_DIFF PARALLAX_ERR - RV_ERR\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'RV_ERR'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the table to keep every 5th row exactly, without approximation.",
        "response": "stilts tpipe in=big_data.fits cmd='every -exact 5' out=exact_sample_5.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Simulate resolving names using an external service by adding columns for the resolved RA and DEC.",
        "response": "stilts tpipe in=objects.fits cmd='addresolve NAME RA_RESOLVED DEC_RESOLVED' out=resolved_objects.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table to keep rows where the absolute magnitude 'M_G' is numerically larger than 0.5.",
        "response": "stilts tpipe in=stars.fits cmd='select M_G > 0.5' out=giants.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select M_G > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a string column 'FLAG_HEX' containing the hexadecimal representation of the integer 'FLAG'.",
        "response": "stilts tpipe in=flags.fits cmd='addcol FLAG_HEX toHex(FLAG)' out=hex_flagged.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the line-of-sight comoving distance (Mpc) for redshift Z using standard cosmology.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol COMOVING_DIST comovingDistanceL(Z, 70.0, 0.3, 0.7)' out=galaxies_comoving.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COMOVING_DIST comovingDistanceL(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert flux in Jansky to AB magnitude and add it as 'MAG_AB'.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol MAG_AB janskyToAb(FLUX_JY)' out=mag_ab_conv.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a boolean column 'HIGH_FLUX_ERROR' based on the condition that FLUX_ERR > 0.1.",
        "response": "stilts tpipe in=data.fits cmd='addcol HIGH_FLUX_ERROR FLUX_ERR > 0.1' out=high_err_flagged.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HIGH_FLUX_ERROR FLUX_ERR > 0.1\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a parameter 'RUN_TIME_MJD' and set it to the current Modified Julian Date.",
        "response": "stilts tpipe in=data.fits cmd='setparam RUN_TIME_MJD isoToMjd(now())' out=runtime_mjd.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Replicate the input table three times, resulting in a table three times the original size, ensuring table-level concatenation.",
        "response": "stilts tpipe in=data.fits cmd='repeat -table 3' out=data_tripled.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Check if a numeric column is constant (all values identical or null) and keep only non-constant columns.",
        "response": "stilts tpipe in=data.fits cmd='constcol -acceptnull' out=non_constant_only.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add columns converting Galactic coordinates (GLON, GLAT) to ICRS (RA, DEC) using the expression language directly.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA degreesToRadians(GLON)' cmd='addcol DEC degreesToRadians(GLAT)' out=icrs_raw.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Sort the table in descending order of the combination of 'MAG' and 'COLOR'.",
        "response": "stilts tpipe in=data.fits cmd='sort -down MAG COLOR' out=double_sorted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'COLOR'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort -down MAG COLOR\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'COLOR'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Output the column metadata, renaming the 'Name' column to 'Column_Title'.",
        "response": "stilts tpipe in=data.fits cmd='meta Name Description' cmd='replacecol Name Column_Title' out=meta_table.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows where the absolute magnitude is brighter than -20.",
        "response": "stilts tpipe in=qso.fits cmd='select M_ABS < -20.0' out=ultra_bright.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '-20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select M_ABS < -20.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '-20.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Set the output mode to view a checksum of the resultant table data, discarding the physical table.",
        "response": "stilts tpipe in=data.fits omode=checksum",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Apply a random shuffle to the rows and send the result directly to the terminal as text.",
        "response": "stilts tpipe in=data.fits cmd=shuffle ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_B_AB' converting Johnson B magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_B_AB MAG_B + JOHNSON_AB_B' out=b_ab_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_B_AB MAG_B + JOHNSON_AB_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_B'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the 'assert' filter to guarantee that the integer ID column is always positive.",
        "response": "stilts tpipe in=data.fits cmd='assert ID > 0' out=id_positive.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert ID > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'SQRT_FLUX' as the square root of 'FLUX', explicitly handling invalid operations (NaN output).",
        "response": "stilts tpipe in=data.fits cmd='addcol SQRT_FLUX sqrt(FLUX)' out=sqrt_flux.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a parameter 'PROCESSOR_NAME' using the current system property for the OS name.",
        "response": "stilts tpipe in=meta.fits cmd='setparam PROCESSOR_NAME param$java.vm.name' out=processor_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table to keep only the bottom 10% of the data using the 'tail' and '$nrow' mechanism.",
        "response": "stilts tpipe in=big_table.fits cmd='tail -$nrow / 10' out=bottom_10_percent.fits",
        "chat.jar": "failed",
        "error": "Error: Row count -$nrow not numeric\n\nCommand was: tail -$nrow / 10\n\nUsage: tail <nrows>\n    (Row count -$nrow not numeric)\n"
    },
    {
        "prompt": "Add a column 'LOG_PLX' applying log scaling to parallax (PARALLAX) to handle a wide range of values.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol LOG_PLX log10(PARALLAX)' out=log_parallax.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by 'Z_BIN' and calculate the median of 'TEMP' for each bin.",
        "response": "stilts tpipe in=data.fits cmd='group Z_BIN TEMP;median;MEDIAN_TEMP' out=median_temp.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: median\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'VEL_GAL_X' containing the X component of the Galactic velocity vector derived from astrometric parameters.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_X icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))' out=galactic_x_vel.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_X icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Extract the best distance estimate (parsec) using the EDSD prior (L=1350pc) given 'PARALLAX' and 'PARALLAX_ERR'.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol DIST_EDSD distanceEstimateEdsd(PARALLAX, PARALLAX_ERR, 1350.0)' out=edsd_distance.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DIST_EDSD distanceEstimateEdsd(PARALLAX, PARALLAX_ERR, 1350.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DISTANCE_MODULUS' derived from distance in parsecs (DISTANCE_PC).",
        "response": "stilts tpipe in=data.fits cmd='addcol DISTANCE_MODULUS distanceToModulus(DISTANCE_PC)' out=distance_mod.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Force the output table to stream to standard output, ensuring only tables that require sequential access are preserved.",
        "response": "stilts tpipe in=data.fits cmd=seqview ofmt=fits out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by 'FLAG' and then aggregate the numeric column 'FLUX_ERR' into an array, keeping blank entries as null.",
        "response": "stilts tpipe in=data.fits cmd='group FLAG FLUX_ERR;array-withblanks;ERR_ARRAY_WB' out=grouped_errors_wb.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array-withblanks\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a string column that is the concatenation of 'FIRST_NAME', a space, and 'LAST_NAME'.",
        "response": "stilts tpipe in=names.fits cmd='addcol FULL_NAME concat(FIRST_NAME, \" \", LAST_NAME)' out=full_names.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ' ' ',' 'LAST_NAME)'\n\nCommand was: addcol FULL_NAME concat(FIRST_NAME, \" \", LAST_NAME)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: ' ' ',' 'LAST_NAME)')\n"
    },
    {
        "prompt": "Replace null values in the 32-bit integer column 'INT_COL' with -999.",
        "response": "stilts tpipe in=data.fits cmd='replacecol INT_COL NULL_INT_COL ? -999 : INT_COL' out=int_fixed.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '?' '-999' ':' 'INT_COL'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol INT_COL NULL_INT_COL ? -999 : INT_COL\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '-999' ':' 'INT_COL'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Check if column 'ID' is a long integer type and assert it is true.",
        "response": "stilts tpipe in=data.fits cmd='meta Name Class' cmd='select equals(Name, \"ID\")' cmd='assert equals(Class, \"Long\")' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ID' ')'\n\nCommand was: select equals(Name, \"ID\")\n\nUsage: select <expr>\n    (Unused arguments: 'ID' ')')\n"
    },
    {
        "prompt": "Set the table parameter 'VERSION' to the current STILTS version string.",
        "response": "stilts tpipe in=data.fits cmd='setparam VERSION param$stilts.version' out=version_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'PM_VEL_ICRS_X' containing the X component of the ICRS velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_ICRS_X astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))' out=icrs_x_vel.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_ICRS_X astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_I_AB' converting Johnson I magnitude to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_I_AB MAG_I + JOHNSON_AB_I' out=i_ab_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_I'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_I_AB MAG_I + JOHNSON_AB_I\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_I'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'POS_ANGLE_DEG' calculating the position angle between the North Pole and (RA, DEC) relative to the North Pole (requires a fixed secondary point).",
        "response": "stilts tpipe in=data.fits cmd='addcol POS_ANGLE_DEG posAngDegrees(RA, DEC, RA, 90.0)' out=pos_angle.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'RA,' '90.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_ANGLE_DEG posAngDegrees(RA, DEC, RA, 90.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'RA,' '90.0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Collapse the columns 'X_POS', 'Y_POS', 'Z_POS' into a 3-element array column 'POS_3D'.",
        "response": "stilts tpipe in=coords.fits cmd='collapsecols POS_3D X_POS 3' out=3d_pos_array.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_LOG' using the logarithmic scaling function 'log' and assert that all resulting values are greater than -10.",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_LOG log10(MAG)' cmd='assert MAG_LOG > -10.0' out=log_mag_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MAG_LOG > -10.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '-10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep only those with non-null values for both 'RA' and 'DEC'.",
        "response": "stilts tpipe in=data.fits cmd='select !NULL_RA && !NULL_DEC' out=clean_coords.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_RA && !NULL_DEC\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_DEC'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'OBS_DATE' and count the number of good 'FLUX' measurements per day.",
        "response": "stilts tpipe in=data.fits cmd='group OBS_DATE FLUX;ngood;GOOD_FLUX_COUNT' out=good_flux_per_day.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: ngood\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'AVG_FLUX_ARR' containing the element-wise average of two array columns, 'FLUX_A' and 'FLUX_B'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol AVG_FLUX_ARR multiply(add(FLUX_A, FLUX_B), 0.5)' out=array_average.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'FLUX_B),' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AVG_FLUX_ARR multiply(add(FLUX_A, FLUX_B), 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_B),' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Check if a given angular separation column 'SEP' is strictly positive and assert this for the whole table.",
        "response": "stilts tpipe in=data.fits cmd='assert SEP > 0.0' out=positive_sep_check.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert SEP > 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the table to keep rows where the string column 'SPECIES' matches the regular expression '.*(Ant|Bee).*'.",
        "response": "stilts tpipe in=animals.fits cmd='select matches(SPECIES, \".*(Ant|Bee).*\")' out=insects.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '.*(Ant|Bee).*' ')'\n\nCommand was: select matches(SPECIES, \".*(Ant|Bee).*\")\n\nUsage: select <expr>\n    (Unused arguments: '.*(Ant|Bee).*' ')')\n"
    },
    {
        "prompt": "Add a column 'PM_VEL_GAL_Z' containing the Z component of the Galactic velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_GAL_Z icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))' out=galactic_z_vel.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_GAL_Z icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_MOD' converting magnitude to distance modulus (DM) to parsecs, and add a constant column 'H_0' (H0=70).",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_MOD modulusToDistance(MAG_V)' cmd='addcol H_0 70.0' out=distance_conversion.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a string column containing the decimal year of the JD time 'TIME_JD' rounded to 0 decimal places.",
        "response": "stilts tpipe in=time.fits cmd='addcol DEC_YEAR_INT formatDecimal(round(mjdToDecYear(jdToMjd(TIME_JD))), 0)' out=dec_year_int.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_YEAR_INT formatDecimal(round(mjdToDecYear(jdToMjd(TIME_JD))), 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Set the output mode to perform an integrity check on the table (checksum mode).",
        "response": "stilts tpipe in=data.fits omode=checksum",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table by keeping columns 1 to 5 and columns starting with 'FLUX'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"1-5 FLUX*\"' out=col_range_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'KCORR_UV_R' using the KCF_NUV filter at Z=0.2, leveraging the NUV-r color (KCC_NUVr).",
        "response": "stilts tpipe in=uv_data.fits cmd='addcol KCORR_UV_R kCorr(KCF_NUV, 0.2, KCC_NUVr, NUV-R_MAG)' out=kcorr_nuvr.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.2,' 'KCC_NUVr,' 'NUV-R_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_UV_R kCorr(KCF_NUV, 0.2, KCC_NUVr, NUV-R_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.2,' 'KCC_NUVr,' 'NUV-R_MAG)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep only those where the integer column 'STATUS' has bit 1 (0x02) set.",
        "response": "stilts tpipe in=flags.fits cmd='select hasBit(STATUS, 1)' out=bit_1_set.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hasBit(STATUS, 1)\n\nUsage: select <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'RA_HMS_S' converting RA in degrees to HMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_S degreesToHms(RA, 1)' out=hms_ra_s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_S degreesToHms(RA, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'TARGET_ID' and collect all associated 'FLUX' values into an array, calculating the median of that array.",
        "response": "stilts tpipe in=data.fits cmd='group TARGET_ID FLUX;array;FLUXES' cmd='addcol FLUX_MEDIAN median(FLUXES)' cmd='delcols FLUXES' out=median_flux_target.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Convert the input table to an array of table rows and pipe it to an external process using a system command.",
        "response": "stilts tpipe in=data.fits ofmt=csv out=\"| cat > output.csv\"",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Apply the filter 'fixcolnames' to standardize names, including renaming duplicates, and check the resultant table structure.",
        "response": "stilts tpipe in=messy.fits cmd=fixcolnames omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Ensure that the total row count matches the number stored in the table parameter 'N_TOTAL_EXPECTED'.",
        "response": "stilts tpipe in=data.fits cmd='assert $nrow == param$N_TOTAL_EXPECTED' out=count_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'param$N_TOTAL_EXPECTED'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $nrow == param$N_TOTAL_EXPECTED\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'param$N_TOTAL_EXPECTED'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a parameter named 'DATE_TODAY' with the current date string (ISO-8601).",
        "response": "stilts tpipe in=meta.fits cmd='setparam DATE_TODAY now()' out=today_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'X_SQUARE' calculated as X*X, but only for rows where X is not null.",
        "response": "stilts tpipe in=data.fits cmd='addcol X_SQUARE !NULL_X ? X*X : NULL' out=squared_x.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '?' 'X*X' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol X_SQUARE !NULL_X ? X*X : NULL\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '?' 'X*X' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the table, keeping every 10th row exactly, starting from the 5th row.",
        "response": "stilts tpipe in=big_data.fits cmd='every -exact 10' cmd='select ($0 % 10) == 5' out=offset_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '%' '10)' '==' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ($0 % 10) == 5\n\nUsage: select <expr>\n    (Unused arguments: '%' '10)' '==' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'PM_XYZ_GAL_X' containing the X (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_XYZ_GAL_X icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))' out=galactic_x_vel_comp.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_XYZ_GAL_X icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_K_AB' converting 2MASS K magnitude (Vega) to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_K_AB MAG_K + VEGA_AB_K' out=k_ab_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_K'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_K_AB MAG_K + VEGA_AB_K\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_K'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the angular diameter distance (Mpc) for redshift Z using standard cosmology.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol ANGULAR_DIAMETER_DIST angularDiameterDistance(Z, 70.0, 0.3, 0.7)' out=galaxies_angular_dist.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ANGULAR_DIAMETER_DIST angularDiameterDistance(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove the column 'FLUX_ERR' and implicitly derive a similar column using a simple formula (FLUX/10).",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLUX_ERR FLUX / 10.0' out=derived_err.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_ERR FLUX / 10.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the table to remove rows where the magnitude 'MAG' is outside the range 10 to 20.",
        "response": "stilts tpipe in=cat.fits cmd='select MAG >= 10.0 && MAG <= 20.0' out=mag_range_filter.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '10.0' '&&' 'MAG' '<=' '20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG >= 10.0 && MAG <= 20.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '10.0' '&&' 'MAG' '<=' '20.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a parameter 'DATA_SOURCE' with a text description and another 'PIXEL_COUNT' with a numeric value 12288.",
        "response": "stilts tpipe in=data.fits cmd='setparam DATA_SOURCE \"Gaia DR3 subset\"' cmd='setparam -type long PIXEL_COUNT 12288L' out=multi_params.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'UCD_TEST' and explicitly set its UCD to an arbitrary value, 'phot.flux;em.xray', and its UType to 'xray_flux'.",
        "response": "stilts tpipe in=data.fits cmd='addcol -ucd \"phot.flux;em.xray\" -utype xray_flux UCD_TEST 1.0' out=xray_meta.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the assert filter to ensure that the array length of 'SPECTRA' is exactly 100 for all rows.",
        "response": "stilts tpipe in=arrays.fits cmd='assert size(SPECTRA) == 100L' out=size_100_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '100L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert size(SPECTRA) == 100L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '100L'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate statistics on the derived column 'MAG_ABS' for the subset where 'TYPE' is 'GALAXY'.",
        "response": "stilts tpipe in=data.fits cmd='select equals(TYPE, \"GALAXY\")' cmd='addcol MAG_ABS MAG - distanceToModulus(DISTANCE)' cmd='stats MAG_ABS' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'GALAXY' ')'\n\nCommand was: select equals(TYPE, \"GALAXY\")\n\nUsage: select <expr>\n    (Unused arguments: 'GALAXY' ')')\n"
    },
    {
        "prompt": "Add a boolean array column 'BRIGHT_PIXELS' that is true where 'FLUX_ARRAY' elements are greater than the array mean.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol BRIGHT_PIXELS arrayFunc(\"x > mean(FLUX_ARRAY)\", FLUX_ARRAY)' out=bright_pixels.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',' 'FLUX_ARRAY)'\n\nCommand was: addcol BRIGHT_PIXELS arrayFunc(\"x > mean(FLUX_ARRAY)\", FLUX_ARRAY)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: ',' 'FLUX_ARRAY)')\n"
    },
    {
        "prompt": "Add a column that contains a reference to the FITS file itself, using the param$in value.",
        "response": "stilts tpipe in=input.fits cmd='addcol FITS_REFERENCE param$in' out=with_ref.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Transpose the table and make the original column names a separate column named 'Old_Name'.",
        "response": "stilts tpipe in=data.fits cmd='transpose -namecol 1' cmd='colmeta -name Old_Name C1' out=name_col_transposed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a new column 'LOG_MASS' which is the base-10 logarithm of 'MASS', explicitly setting its type as double.",
        "response": "stilts tpipe in=stars.fits cmd='addcol -type double LOG_MASS log10(MASS)' out=double_log_stars.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'LOG_MASS' 'log10(MASS)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type double LOG_MASS log10(MASS)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'LOG_MASS' 'log10(MASS)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep only the 5th through 10th row (inclusive).",
        "response": "stilts tpipe in=data.fits cmd='rowrange 5 10' out=middle_five.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_H_AB' converting 2MASS H magnitude (Vega) to AB magnitude, approximately.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_H_AB MAG_H + VEGA_AB_H' out=h_ab_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_H'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_H_AB MAG_H + VEGA_AB_H\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_H'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column containing the radial velocity (RV) in km/s derived from the normalized RV in mas/yr, given 'PARALLAX'.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol RV_KMS rvMasyrToKms(RV_MASYR, PARALLAX)' out=rv_converted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RV_KMS rvMasyrToKms(RV_MASYR, PARALLAX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove the column 'ID_2' and replace it with a newly calculated column 'NEW_ID_2' based on the product of 'ID_1' and 2.",
        "response": "stilts tpipe in=data.fits cmd='replacecol ID_2 ID_1 * 2' out=recalculated_id.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol ID_2 ID_1 * 2\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '2'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Check if there is a parameter named 'SOURCE_EPOCH' and set its type to string.",
        "response": "stilts tpipe in=meta.fits cmd='setparam -type string SOURCE_EPOCH \"param$SOURCE_EPOCH\"' out=epoch_string_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Output table metadata, including the value of the 'nrows' parameter, and format it for a CGI response.",
        "response": "stilts tpipe in=data.fits cmd='meta Name Class' omode=cgi ofmt=json",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter ofmt: No such output format\n    (No handler for table format \"json\")\nValue was: ofmt=\"json\"\nUsage: ofmt=<out-format>\n\n"
    },
    {
        "prompt": "Add a column 'VELOCITY_GAL' containing the full 3-component galactic velocity vector (UVW).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VELOCITY_GAL icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))' out=full_galactic_vel.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VELOCITY_GAL icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep those where the string 'OBS_ID' ends with '001' or '002'.",
        "response": "stilts tpipe in=obs.fits cmd='select endsWith(OBS_ID, \"001\") || endsWith(OBS_ID, \"002\")' out=final_obs.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '001' ')' '||' 'endsWith(OBS_ID,' '002' ')'\n\nCommand was: select endsWith(OBS_ID, \"001\") || endsWith(OBS_ID, \"002\")\n\nUsage: select <expr>\n    (Unused arguments: '001' ')' '||' 'endsWith(OBS_ID,' '002' ')')\n"
    },
    {
        "prompt": "Add a column 'ANG_SEP_RAD' calculating the angular separation between two RA/DEC pairs, ensuring the output is in radians.",
        "response": "stilts tpipe in=pairs.fits cmd='addcol ANG_SEP_RAD skyDistanceRadians(RA1,DEC1,RA2,DEC2)' out=sep_radians.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column with the hyperbolic cosine of 'TEMPERATURE'.",
        "response": "stilts tpipe in=data.fits cmd='addcol TEMP_COSH cosh(TEMPERATURE)' out=hyperbolic_temp.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert the input table to an array of rows and pass it to an external plotting script via standard input.",
        "response": "stilts tpipe in=data.fits ofmt=text out=\"| ./plot_script.sh -\"",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by 'FIELD' and output the maximum 'MAG' for each field.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD MAG;max;MAX_MAG' out=max_mag_field.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: max\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'MAG_U_KCORR' using the KCF_u filter at Z=0.1, leveraging the u-r color (KCC_ur).",
        "response": "stilts tpipe in=uv_data.fits cmd='addcol MAG_U_KCORR MAG_U - kCorr(KCF_u, 0.1, KCC_ur, U_MAG-R_MAG)' out=u_kcorr_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'kCorr(KCF_u,' '0.1,' 'KCC_ur,' 'U_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_KCORR MAG_U - kCorr(KCF_u, 0.1, KCC_ur, U_MAG-R_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'kCorr(KCF_u,' '0.1,' 'KCC_ur,' 'U_MAG-R_MAG)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove the column 'FLUX_ERR' and replace it with a constant value of 0.05, setting its unit to 'Jy'.",
        "response": "stilts tpipe in=data.fits cmd='replacecol -units Jy FLUX_ERR 0.05' out=constant_err.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column that is a single-element array containing the value of the 'MAG' column.",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_ARRAY array(MAG)' out=mag_single_array.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove columns whose UCD is 'stat.error'.",
        "response": "stilts tpipe in=data.fits cmd='delcols ucd$stat_error*' out=no_error_cols.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Create 50 rows starting at index 10 and stepping by 2, but force the column type to double precision.",
        "response": "stilts tpipe in=:loop:10,110,2 forcefloat=true out=double_loop_sample.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: forcefloat=true\n\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n"
    },
    {
        "prompt": "Set the output mode to stream the table directly to the running TOPCAT application.",
        "response": "stilts tpipe in=data.fits omode=topcat",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Collapse the numeric columns 1, 2, 3 into a single array column 'VEC_3D', retaining the original columns.",
        "response": "stilts tpipe in=data.fits cmd='collapsecols -keepscalars VEC_3D $1 3' out=retained_collapse.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table to keep only rows where the object type (TYPE) is not 'Star'.",
        "response": "stilts tpipe in=cat.fits cmd='select !equals(TYPE, \"Star\")' out=non_stars.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Star' ')'\n\nCommand was: select !equals(TYPE, \"Star\")\n\nUsage: select <expr>\n    (Unused arguments: 'Star' ')')\n"
    },
    {
        "prompt": "Filter by 'FLAG' and ensure that the filtered table contains at least 100 rows.",
        "response": "stilts tpipe in=data.fits cmd='select FLAG == 1' cmd='assert $nrow >= 100L' out=min_100_rows.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '==' '1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG == 1\n\nUsage: select <expr>\n    (Unused arguments: '==' '1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a parameter 'PI_NAME' with the string 'John Smith' and ensure it has type string and description 'Principal Investigator'.",
        "response": "stilts tpipe in=meta.fits cmd='setparam -type string -desc \"Principal Investigator\" PI_NAME \"John Smith\"' out=pi_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the mean and standard deviation of 'MAG' for rows where 'FLAG' is true, and output the statistics.",
        "response": "stilts tpipe in=data.fits cmd='select FLAG' cmd='stats MAG;mean;stdev' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unknown quantity MAG must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn\n\nCommand was: stats MAG\n\nUsage: stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n    (Unknown quantity MAG must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn)\n"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_NEW' using Johnson U mag converted to AB, and explicitly setting its UCD.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -ucd \"phot.mag;em.opt.U\" MAG_U_AB_NEW MAG_U + JOHNSON_AB_U' out=u_ab_new_meta.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n\nCommand was: addcol -ucd \"phot.mag;em.opt.U\" MAG_U_AB_NEW MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U')\n"
    },
    {
        "prompt": "Group by 'FIELD' and find the maximum flux error ('FLUX_ERR') and associate it with the minimum flux ('FLUX').",
        "response": "stilts tpipe in=data.fits cmd='group FIELD FLUX_ERR;max;MAX_ERR FLUX;min;MIN_FLUX' out=field_min_max.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: max\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column that is the arc tangent of Y/X in degrees, suitable for position angle calculations.",
        "response": "stilts tpipe in=data.fits cmd='addcol ANGLE_DEG atan2Deg(Y, X)' out=angle_degrees.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'X)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ANGLE_DEG atan2Deg(Y, X)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'X)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the table to keep only objects in the first half of the catalogue (based on row index).",
        "response": "stilts tpipe in=data.fits cmd='head $nrow / 2' out=first_half.fits",
        "chat.jar": "failed",
        "error": "Error: Row count $nrow not numeric\n\nCommand was: head $nrow / 2\n\nUsage: head <nrows>\n    (Row count $nrow not numeric)\n"
    },
    {
        "prompt": "Add a column 'ERR_PROD' containing the dot product of array columns 'ERR1' and 'ERR2'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol ERR_PROD dotProduct(ERR1, ERR2)' out=error_dot_product.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ERR2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERR_PROD dotProduct(ERR1, ERR2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'ERR2)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert the coordinate array 'POS_ARRAY' (RA, DEC) to an explicit Cartesian X, Y, Z vector, assuming unit distance.",
        "response": "stilts tpipe in=coords.fits cmd='addcol CARTESIAN polarXYZ(POS_ARRAY, POS_ARRAY, 1.0)' out=cartesian_vector.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'POS_ARRAY,' '1.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol CARTESIAN polarXYZ(POS_ARRAY, POS_ARRAY, 1.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'POS_ARRAY,' '1.0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'TIME_STRING' rounding 'TIME_MJD' to the nearest integer and converting it to a string.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_STRING toString(toLong(round(TIME_MJD)))' out=time_string.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the proper motion in RA is never zero.",
        "response": "stilts tpipe in=data.fits cmd='assert PMRA != 0.0' out=nonzero_pmra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert PMRA != 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep only those where the integer 'ID' column has an even value.",
        "response": "stilts tpipe in=data.fits cmd='select ID % 2 == 0' out=even_ids_filtered.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID % 2 == 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the lookback time (Gyr) for redshift Z using standard cosmology.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol LOOKBACK_TIME lookbackTime(Z, 70.0, 0.3, 0.7)' out=galaxies_lookback.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOOKBACK_TIME lookbackTime(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Set a flag in the column 'QUALITY_FLAG' only if bit 0 is not set (i.e., bit 0 is 0).",
        "response": "stilts tpipe in=flags.fits cmd='addcol BIT0_FALSE !hasBit(QUALITY_FLAG, 0)' out=bit0_false.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol BIT0_FALSE !hasBit(QUALITY_FLAG, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Replicate the table rows four times, ensuring row-level concatenation (1, 2, 3, 1, 2, 3...).",
        "response": "stilts tpipe in=data.fits cmd='repeat -row 4' out=data_x4_row.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'FLUX_CONV' converting flux to luminosity, assuming unit distance of 1 Mpc.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol FLUX_CONV fluxToLuminosity(FLUX, 3.086e22)' out=luminosities.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '3.086e22)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_CONV fluxToLuminosity(FLUX, 3.086e22)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3.086e22)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Ensure a column 'FLUX_ERR' exists and set its size (elementsize) to 10 bytes for strings.",
        "response": "stilts tpipe in=data.fits cmd='addcol -elsize 10 FLUX_ERR 0.05' out=fixed_string_size.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove the column 'RA' and replace it with a new 'RA' column calculated from 'RA_RAD' converted to degrees, preserving metadata.",
        "response": "stilts tpipe in=data.fits cmd='replacecol RA radiansToDegrees(RA_RAD)' out=ra_degree_meta.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column with the minimum value of three related magnitude columns: 'MAG1', 'MAG2', 'MAG3'.",
        "response": "stilts tpipe in=data.fits cmd='addcol MAG_MIN min(MAG1, MAG2, MAG3)' out=min_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'MAG2,' 'MAG3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_MIN min(MAG1, MAG2, MAG3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'MAG2,' 'MAG3)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial sphere position is within a polygon defined by a fixed coordinate array (e.g., poly_coords).",
        "response": "stilts tpipe in=data.fits cmd='select inSkyPolygon(RA, DEC, poly_coords)' out=polygon_overlap.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'poly_coords)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select inSkyPolygon(RA, DEC, poly_coords)\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' 'poly_coords)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_R_AB_NEW' converting Johnson R mag to AB, explicitly setting its UCD.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -ucd \"phot.mag;em.opt.R\" MAG_R_AB_NEW MAG_R + JOHNSON_AB_R' out=r_ab_new_meta.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_R'\n\nCommand was: addcol -ucd \"phot.mag;em.opt.R\" MAG_R_AB_NEW MAG_R + JOHNSON_AB_R\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_R')\n"
    },
    {
        "prompt": "Calculate the average and standard deviation of 'PMRA' values after filtering out outliers (PMRA > 10).",
        "response": "stilts tpipe in=data.fits cmd='select PMRA <= 10.0' cmd='stats PMRA;mean;stdev' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<=' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA <= 10.0\n\nUsage: select <expr>\n    (Unused arguments: '<=' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'Z_VEL' that converts redshift (Z) to velocity (km/s) using the formula c * Z.",
        "response": "stilts tpipe in=data.fits cmd='addcol Z_VEL Z * C_KMS / 1000.0' out=z_velocity.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' 'C_KMS' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol Z_VEL Z * C_KMS / 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'C_KMS' '/' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Verify that the final output table contains only columns whose names start with 'ID' or 'FLUX'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"ID* FLUX*\"' omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'RA_ICRS_DEG' converting FK4 RA/DEC (B1950) to ICRS RA (J2000) using the old function with explicit input/output units.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_ICRS_DEG raFK4toFK5degrees(RA_B1950, DEC_B1950)' out=fk4_to_icrs_ra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_ICRS_DEG raFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate statistics on the absolute value of 'PMRA'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ABS_PMRA abs(PMRA)' cmd='stats ABS_PMRA' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unknown quantity ABS_PMRA must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn\n\nCommand was: stats ABS_PMRA\n\nUsage: stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n    (Unknown quantity ABS_PMRA must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn)\n"
    },
    {
        "prompt": "Add a column 'FLUX_CONV_LUMIN' converting flux to luminosity distance, explicitly using the luminosityDistance function.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol LUMINOSITY fluxToLuminosity(FLUX, mToMpc(luminosityDistance(Z, 70.0, 0.3, 0.7)))' out=derived_luminosity.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'mToMpc(luminosityDistance(Z,' '70.0,' '0.3,' '0.7)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LUMINOSITY fluxToLuminosity(FLUX, mToMpc(luminosityDistance(Z, 70.0, 0.3, 0.7)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'mToMpc(luminosityDistance(Z,' '70.0,' '0.3,' '0.7)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAX_FLUX_ARRAY' containing the maximum value of the array column 'FLUX_ARRAY'.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol MAX_FLUX_ARRAY maximum(FLUX_ARRAY)' out=array_max.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'TIME_ISO_DATE' converting JD time 'TIME_JD' to ISO-8601 date-only format string.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_ISO_DATE mjdToDate(jdToMjd(TIME_JD))' out=iso_date.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that all values in a floating point column 'WEIGHT' are less than 1.0.",
        "response": "stilts tpipe in=data.fits cmd='assert WEIGHT < 1.0' out=weight_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert WEIGHT < 1.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove the parameter 'OBS_DATE_START' and set the table name to 'Observed Data'.",
        "response": "stilts tpipe in=meta.fits cmd='clearparams OBS_DATE_START' cmd='tablename \"Observed Data\"' out=renamed_and_cleared.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the mean of the array column 'FLUX_ARRAY' and assert that the mean is always positive.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol MEAN_FLUX mean(FLUX_ARRAY)' cmd='assert MEAN_FLUX > 0.0' out=mean_flux_positive.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MEAN_FLUX > 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep those where the proper motion error (PM_ERR) is zero, asserting the condition is met.",
        "response": "stilts tpipe in=data.fits cmd='assert PM_ERR == 0.0' out=zero_error_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert PM_ERR == 0.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'FIELD' and add an array column 'FLUX_ALL' containing all flux values per field.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD FLUX;array;FLUX_ALL' out=flux_arrays_per_field.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'PLX_INV_SAFE' calculated as the inverse of parallax, returning a safe default of 0.0 if parallax is null or non-positive.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_INV_SAFE PARALLAX > 0.0 ? 1.0 / PARALLAX : 0.0' out=safe_inverse_parallax.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.0' '?' '1.0' '/' 'PARALLAX' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_INV_SAFE PARALLAX > 0.0 ? 1.0 / PARALLAX : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '0.0' '?' '1.0' '/' 'PARALLAX' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column containing the sine of the angle in radians corresponding to the DEC in degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_SIN sin(degreesToRadians(DEC))' out=dec_sin_calc.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the table is always non-empty ($nrow > 0).",
        "response": "stilts tpipe in=data.fits cmd='assert $nrow > 0L' out=non_empty_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $nrow > 0L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0L'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a parameter 'DATA_VERSION' with value 1.0, explicitly typing it as double.",
        "response": "stilts tpipe in=meta.fits cmd='setparam -type double DATA_VERSION 1.0' out=version_double_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by the string column 'TYPE' and count the total number of rows per type, writing the final table to standard output.",
        "response": "stilts tpipe in=data.fits cmd='group TYPE 0;count;TYPE_COUNT' ofmt=text out=-",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: count\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'VEL_GAL_Y' containing the Y component of the Galactic velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_Y icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))' out=galactic_y_vel.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_Y icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep only the bottom 50 rows of the table.",
        "response": "stilts tpipe in=data.fits cmd='tail 50' out=last_50.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_MOD_NEW' using distance modulus derived from 'DISTANCE_PC' and set its UCD to 'phot.mag.dist'.",
        "response": "stilts tpipe in=data.fits cmd='addcol -ucd \"phot.mag.dist\" MAG_MOD_NEW distanceToModulus(DISTANCE_PC)' out=mod_new_ucd.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'FLUX_LOG_NORM' calculated as the base-10 logarithm of 'FLUX', divided by the mean flux (requires caching).",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='addcol FLUX_LOG_NORM log10(FLUX) / mean(FLUX)' out=log_normalized.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_LOG_NORM log10(FLUX) / mean(FLUX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'mean(FLUX)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Replace null values in the 64-bit integer column 'LONG_ID' with -1.",
        "response": "stilts tpipe in=data.fits cmd='replacecol LONG_ID NULL_LONG_ID ? -1L : LONG_ID' out=long_id_fixed.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '?' '-1L' ':' 'LONG_ID'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol LONG_ID NULL_LONG_ID ? -1L : LONG_ID\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '-1L' ':' 'LONG_ID'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'KCORR_V' using the KCF_V filter at Z=0.1, leveraging the V-Rc color (KCC_VRc).",
        "response": "stilts tpipe in=phot.fits cmd='addcol KCORR_V kCorr(KCF_V, 0.1, KCC_VRc, MAG_V-MAG_RC)' out=kcorr_v.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1,' 'KCC_VRc,' 'MAG_V-MAG_RC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_V kCorr(KCF_V, 0.1, KCC_VRc, MAG_V-MAG_RC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.1,' 'KCC_VRc,' 'MAG_V-MAG_RC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'FIELD' and find the first quartile (Q1) and third quartile (Q3) of 'FLUX'.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD FLUX;Q1;FLUX_Q1 FLUX;Q3;FLUX_Q3' out=field_quartiles.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: Q1\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'FLUX_ERROR_ABS' containing the absolute value of the flux error.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_ERROR_ABS abs(FLUX_ERR)' out=abs_error.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Check if a given angular separation column 'SEP' is strictly less than 1.0 arcsecond (1/3600 degrees) and assert it.",
        "response": "stilts tpipe in=data.fits cmd='assert SEP < 1.0/3600.0' out=sub_arcsec_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1.0/3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert SEP < 1.0/3600.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '1.0/3600.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DEC_RAD_SIN' calculating the sine of the DEC in radians, assuming DEC is currently in degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_RAD_SIN sin(degreesToRadians(DEC))' out=dec_rad_sin.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table to keep rows where the string 'FLAG' is exactly 'GOOD' (case sensitive).",
        "response": "stilts tpipe in=data.fits cmd='select equals(FLAG, \"GOOD\")' out=good_flag_filter.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'GOOD' ')'\n\nCommand was: select equals(FLAG, \"GOOD\")\n\nUsage: select <expr>\n    (Unused arguments: 'GOOD' ')')\n"
    },
    {
        "prompt": "Add a parameter 'PROCESSING_DATE' containing the current time in ISO-8601 format.",
        "response": "stilts tpipe in=data.fits cmd='setparam PROCESSING_DATE now()' out=processing_time.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove the column 'FLUX' and add a new one with the same name containing the value '100.0' for all rows.",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLUX 100.0' out=constant_flux_col.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the time column 'TIME_MJD' is strictly increasing (requires sort).",
        "response": "stilts tpipe in=data.fits cmd='sort TIME_MJD' cmd='addcol TIME_DIFF TIME_MJD - param$TIME_MJD' cmd='assert TIME_DIFF >= 0.0' out=time_sequence_checked.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'param$TIME_MJD'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol TIME_DIFF TIME_MJD - param$TIME_MJD\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'param$TIME_MJD'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep only those with 'MAG_ERR' greater than 0.1 and output the resultant metadata.",
        "response": "stilts tpipe in=data.fits cmd='select MAG_ERR > 0.1' omode=meta",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR > 0.1\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_H_AB_NEW' converting 2MASS H mag to AB, explicitly setting its UCD.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -ucd \"phot.mag;em.IR.H\" MAG_H_AB_NEW MAG_H + VEGA_AB_H' out=h_ab_new_meta.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_H'\n\nCommand was: addcol -ucd \"phot.mag;em.IR.H\" MAG_H_AB_NEW MAG_H + VEGA_AB_H\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_H')\n"
    },
    {
        "prompt": "Remove all rows which are exact duplicates based on columns 'RA' and 'DEC'.",
        "response": "stilts tpipe in=data.fits cmd='sort RA DEC' cmd='uniq RA DEC' out=unique_coords.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort RA DEC\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'DEC'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'COM_VOL' calculating the comoving volume (Gpc\u00b3) out to redshift Z using standard cosmology.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol COM_VOL comovingVolume(Z, 70.0, 0.3, 0.7)' out=galaxies_volume.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COM_VOL comovingVolume(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert the input FITS file to ECSV format, forcing the ECSV output delimiter to a semicolon.",
        "response": "stilts tpipe in=input.fits ofmt='ecsv(delimiter=;)' out=output_semicolon.ecsv",
        "chat.jar": "failed",
        "error": "Error: No handler for output format ecsv(delimiter=;)\n    (Handler configuration failed: uk.ac.starlink.util.LoadException: Failed setting \"delimiter=;\" - Options are delimiter=comma|space\n        (Failed setting \"delimiter=;\" - Options are delimiter=comma|space\n            (java.lang.reflect.InvocationTargetException\n                (Illegal delimiter \";\"))))\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n"
    },
    {
        "prompt": "Group by 'WAVELENGTH_BIN' and collect all 'FLUX_ERR' values into an array, calculating the 84th percentile.",
        "response": "stilts tpipe in=data.fits cmd='group WAVELENGTH_BIN FLUX_ERR;Q.84;FLUX_Q84' out=error_q84.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: Q.84\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Convert RA/DEC (degrees) to the Ecliptic coordinate system, storing the coordinates in a new column 'ECL_VEC'.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol ECL_VEC icrsToEcl(astromXYZ(RA, DEC, 1.0))' out=ecliptic_vector.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' '1.0))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ECL_VEC icrsToEcl(astromXYZ(RA, DEC, 1.0))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' '1.0))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'TIME_JULIAN' converting MJD to Julian Epoch.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_JULIAN mjdToJulian(MJD_TIME)' out=julian_time.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the 'assert' filter to check that the total number of columns ($ncol) is less than 50.",
        "response": "stilts tpipe in=wide_table.fits cmd='assert $ncol < 50L' out=narrow_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '50L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $ncol < 50L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '50L'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'ERROR_Q_SUM' containing the element-wise quadrature sum of three array columns, 'ERR1', 'ERR2', and 'ERR3'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol ERROR_Q_SUM arrayFunc(\"sqrt(x)\", add(square(ERR1), add(square(ERR2), square(ERR3))))' out=array_quad_sum_3d.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',' 'add(square(ERR1),' 'add(square(ERR2),' 'square(ERR3))))'\n\nCommand was: addcol ERROR_Q_SUM arrayFunc(\"sqrt(x)\", add(square(ERR1), add(square(ERR2), square(ERR3))))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: ',' 'add(square(ERR1),' 'add(square(ERR2),' 'square(ERR3))))')\n"
    },
    {
        "prompt": "Remove all columns, then add only the column 'ID'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols ID' out=id_only.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter to keep only rows where the 'FLAG' string is exactly 'GOOD' (case insensitive).",
        "response": "stilts tpipe in=data.fits cmd='select equalsIgnoreCase(FLAG, \"GOOD\")' out=good_flag_case_insensitive.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'GOOD' ')'\n\nCommand was: select equalsIgnoreCase(FLAG, \"GOOD\")\n\nUsage: select <expr>\n    (Unused arguments: 'GOOD' ')')\n"
    },
    {
        "prompt": "Convert the table to FITS format, ensuring that the original column names (which contain spaces) are fixed to be valid FITS column names.",
        "response": "stilts tpipe in=messy_cols.fits cmd=fixcolnames ofmt=fits out=fixed_fits.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a parameter 'SQL_QUERY_USED' containing a placeholder string.",
        "response": "stilts tpipe in=data.fits cmd='setparam SQL_QUERY_USED \"SELECT * FROM table\"' out=sql_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'COMPLEX_RATIO' that is the ratio of two complex array columns, 'FLUX_COMPLEX_A' and 'FLUX_COMPLEX_B', element-wise.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol COMPLEX_RATIO divide(FLUX_COMPLEX_A, FLUX_COMPLEX_B)' out=complex_ratio.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'FLUX_COMPLEX_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol COMPLEX_RATIO divide(FLUX_COMPLEX_A, FLUX_COMPLEX_B)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_COMPLEX_B)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the mean of the array column 'ERROR_ARR' and assert that the mean is always less than 0.1.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol MEAN_ERR mean(ERROR_ARR)' cmd='assert MEAN_ERR < 0.1' out=mean_err_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MEAN_ERR < 0.1\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "For the row with the maximum 'FLUX' value, replace the 'QUALITY' column with 'BEST'.",
        "response": "stilts tpipe in=data.fits cmd='sort -down FLUX' cmd='head 1' cmd='replacecol QUALITY \"BEST\"' out=best_quality.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table to keep every 100th row, starting from row 50.",
        "response": "stilts tpipe in=data.fits cmd='every 100' cmd='select ($0 % 100) == 50' out=offset_100_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '%' '100)' '==' '50'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ($0 % 100) == 50\n\nUsage: select <expr>\n    (Unused arguments: '%' '100)' '==' '50'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB' calculating absolute magnitude using J-band AB magnitude and distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB MAG_J + VEGA_AB_J' cmd='addcol MAG_ABS_J_AB MAG_J_AB - distanceToModulus(DISTANCE_PC)' out=j_abs_ab.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'RA_HMS_0' converting RA in degrees to HMS string format with 0 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_0 degreesToHms(RA, 0)' out=hms_ra_0.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_0 degreesToHms(RA, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use 'setparam' to record the average 'FLUX' of the whole table as a parameter named 'AVG_FLUX'.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='setparam AVG_FLUX mean(FLUX)' out=flux_avg_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert the input table to Parquet format, explicitly turning off dictionary encoding.",
        "response": "stilts tpipe in=input.fits ofmt='parquet(usedict=false)' out=output_nodict.parquet",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'IS_GALAXY' using string equality check for 'TYPE' column, and rename 'TYPE' to 'OBJECT_TYPE'.",
        "response": "stilts tpipe in=cat.fits cmd='addcol IS_GALAXY equals(TYPE, \"GALAXY\")' cmd='colmeta -name OBJECT_TYPE TYPE' out=galaxy_flagged.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'GALAXY' ')'\n\nCommand was: addcol IS_GALAXY equals(TYPE, \"GALAXY\")\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'GALAXY' ')')\n"
    },
    {
        "prompt": "Add a column containing the squared value of the hyperbolic sine of 'Z_REDSHIFT'.",
        "response": "stilts tpipe in=data.fits cmd='addcol Z_SQ_ASINH square(asinh(Z_REDSHIFT))' out=asinh_z.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table by removing the last row.",
        "response": "stilts tpipe in=data.fits cmd='head -$nrow-1' out=no_last_row.fits",
        "chat.jar": "failed",
        "error": "Error: Row count -$nrow-1 not numeric\n\nCommand was: head -$nrow-1\n\nUsage: head <nrows>\n    (Row count -$nrow-1 not numeric)\n"
    },
    {
        "prompt": "Group by 'CHANNEL' and calculate the element-wise sum of the array column 'FLUX_ARRAY' per group.",
        "response": "stilts tpipe in=spectra.fits cmd='group CHANNEL FLUX_ARRAY;array;FLUX_SUMS' cmd='replacecol FLUX_SUMS sum(FLUX_SUMS)' out=channel_sum_spectra.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Group by 'ID' and calculate the median of 'TIME' for each ID.",
        "response": "stilts tpipe in=data.fits cmd='group ID TIME;median;MEDIAN_TIME' out=median_time_group.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: median\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'PM_VEL_ICRS_Y' containing the Y component of the ICRS velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_ICRS_Y astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))' out=icrs_y_vel.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_ICRS_Y astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Assert that the current version of STILTS being used is greater than 3.0.",
        "response": "stilts tpipe in=data.fits cmd='assert param$stilts.version > 3.0' out=version_checked.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '3.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert param$.version > 3.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '3.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate K-correction for SDSS z-band (KCF_z) at Z=0.5, using r-z color (KCC_rz).",
        "response": "stilts tpipe in=data.fits cmd='addcol KCORR_Z kCorr(KCF_z, 0.5, KCC_rz, R_MAG-Z_MAG)' out=kcorrected_z.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.5,' 'KCC_rz,' 'R_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_Z kCorr(KCF_z, 0.5, KCC_rz, R_MAG-Z_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.5,' 'KCC_rz,' 'R_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Output the final table to a PostgreSQL database table named 'processed_temp', dropping the existing table first.",
        "response": "stilts tpipe in=final.fits omode=tosql protocol=postgresql host=db_host db=mydb dbtable=processed_temp write=dropcreate user=dbuser",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'FLUX_SUM' calculated as the element-wise sum of two array columns, 'FLUX_A' and 'FLUX_B'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_SUM add(FLUX_A, FLUX_B)' out=array_sum.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_SUM add(FLUX_A, FLUX_B)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_I_AB_NEW' converting Johnson I mag to AB, explicitly setting its UCD.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -ucd \"phot.mag;em.opt.I\" MAG_I_AB_NEW MAG_I + JOHNSON_AB_I' out=i_ab_new_meta.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_I'\n\nCommand was: addcol -ucd \"phot.mag;em.opt.I\" MAG_I_AB_NEW MAG_I + JOHNSON_AB_I\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_I')\n"
    },
    {
        "prompt": "Select every 5th row and send the table to all registered SAMP clients.",
        "response": "stilts tpipe in=data.fits cmd='every 5' omode=samp",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Ensure that the table has random access available and use 'progress' to monitor the read.",
        "response": "stilts tpipe in=slow_stream.fits cmd=random cmd=progress out=fast_read_monitor.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use 'setparam' to record the maximum 'FLUX' in the table as a parameter 'MAX_FLUX'.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='setparam MAX_FLUX maximum(FLUX)' out=max_flux_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows to keep only those where 'RA' and 'DEC' are not null and within 1 degree of M31 (RA=10.68, DEC=41.27).",
        "response": "stilts tpipe in=cat.fits cmd='select !NULL_RA && !NULL_DEC && skyDistanceDegrees(RA, DEC, 10.68, 41.27) < 1.0' out=m31_vicinity.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' '!NULL_DEC' '&&' 'skyDistanceDegrees(RA,' 'DEC,' '10.68,' '41.27)' '<' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_RA && !NULL_DEC && skyDistanceDegrees(RA, DEC, 10.68, 41.27) < 1.0\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_DEC' '&&' 'skyDistanceDegrees(RA,' 'DEC,' '10.68,' '41.27)' '<' '1.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert the input CSV table to IPAC format, using a semi-transparent output colour.",
        "response": "stilts tpipe in=input.csv ifmt=csv ofmt=ipac out=output.tbl",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by 'COLOR_BIN' and collect all 'FLUX' values into an array, calculating the standard deviation of that array.",
        "response": "stilts tpipe in=data.fits cmd='group COLOR_BIN FLUX;array;FLUXES' cmd='addcol FLUX_STDEV stdev(FLUXES)' cmd='delcols FLUXES' out=stdev_flux_color.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'Z_COMOVING' converting Redshift (Z) to the transverse comoving distance (Mpc).",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol Z_COMOVING comovingDistanceT(Z, 70.0, 0.3, 0.7)' out=galaxies_trans_comoving.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol Z_COMOVING comovingDistanceT(Z, 70.0, 0.3, 0.7)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a boolean column 'IS_VALID_NAME' that is true if the string column 'NAME' contains only alphanumeric characters.",
        "response": "stilts tpipe in=data.fits cmd='addcol IS_VALID_NAME matches(NAME, \"^[A-Za-z0-9_]+$\")' out=valid_names.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '^[A-Za-z0-9_]+$' ')'\n\nCommand was: addcol IS_VALID_NAME matches(NAME, \"^[A-Za-z0-9_]+$\")\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '^[A-Za-z0-9_]+$' ')')\n"
    },
    {
        "prompt": "Add a column 'ERROR_QUAD_SUM' containing the quadrature sum of the elements of array column 'ERR_ARRAY'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol ERROR_QUAD_SUM hypot(ERR_ARRAY)' out=array_quad_sum_hypot.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table to keep rows where the string column 'SECTOR_ID' matches the pattern 'TESS_{3}'.",
        "response": "stilts tpipe in=data.fits cmd='select matches(SECTOR_ID, \"TESS_[1, 2, 21-27]{3}\")' out=tess_sectors.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'TESS_[1, 2, 21-27]{3}' ')'\n\nCommand was: select matches(SECTOR_ID, \"TESS_[1, 2, 21-27]{3}\")\n\nUsage: select <expr>\n    (Unused arguments: 'TESS_[1, 2, 21-27]{3}' ')')\n"
    },
    {
        "prompt": "Convert the coordinate string 'RA_DMS_STR' (DMS format) to numeric degrees.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_DEG dmsToDegrees(RA_DMS_STR)' out=dms_to_deg.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by 'OBSERVER' and count the number of non-null 'FLUX' measurements, using the 'ngood' aggregator (long integer).",
        "response": "stilts tpipe in=data.fits cmd='group OBSERVER FLUX;ngood-long;GOOD_FLUX_LONG' out=observer_ngood.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: ngood-long\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a parameter 'DATA_SOURCE' by reading the unique path component of the input file name (e.g., 'catalog.fits').",
        "response": "stilts tpipe in=path/to/catalog.fits cmd='setparam DATA_SOURCE replaceAll(param$in, \".*/|\\.fits$\", \"\")' out=path_param.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '.*/|.fits$' ',' '' ')'\n\nCommand was: setparam DATA_SOURCE replaceAll(param$in, \".*/|\\.fits$\", \"\")\n\nUsage: setparam [-type byte|short|int|long|float|double|boolean|string]\n                [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n                [-utype <utype>] [-xtype <xtype>]\n                <pname> <pexpr>\n    (Unused arguments: '.*/|.fits$' ',' '' ')')\n"
    },
    {
        "prompt": "Add a column 'PM_VEL_ICRS_Z' containing the Z component of the ICRS velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_VEL_ICRS_Z astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))' out=icrs_z_vel.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_VEL_ICRS_Z astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_K_AB_NEW' converting 2MASS K mag to AB, explicitly setting its UCD.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -ucd \"phot.mag;em.IR.K\" MAG_K_AB_NEW MAG_K + VEGA_AB_K' out=k_ab_new_meta.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_K'\n\nCommand was: addcol -ucd \"phot.mag;em.IR.K\" MAG_K_AB_NEW MAG_K + VEGA_AB_K\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_K')\n"
    },
    {
        "prompt": "Convert the input table to a Parquet file, ensuring a custom parameter 'SOURCE_ID:123' is written to the metadata.",
        "response": "stilts tpipe in=input.fits ofmt='parquet(kvmap=SOURCE_ID:123)' out=output_custom_meta.parquet",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by 'FIELD_ID' and return the minimum value of 'MAG' for each field.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD_ID MAG;min;MIN_MAG' out=min_mag_field.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: min\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Filter rows where the proper motion in RA is exactly 0.0.",
        "response": "stilts tpipe in=gaia.fits cmd='select PMRA == 0.0' out=zero_pmra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '==' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA == 0.0\n\nUsage: select <expr>\n    (Unused arguments: '==' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a string column that contains the absolute value of 'FLUX', rounded to 2 decimal places.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_STR formatDecimal(abs(FLUX), 2)' out=abs_flux_str.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_STR formatDecimal(abs(FLUX), 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'Z_COMOVING_ABS' calculating the absolute magnitude using Z converted to distance modulus.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol L_DIST_PC 10.0^((25.0 + luminosityDistance(Z, 70.0, 0.3, 0.7)) / 5.0)' out=absolute_mag_gal.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'luminosityDistance(Z,' '70.0,' '0.3,' '0.7))' '/' '5.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol L_DIST_PC 10.0^((25.0 + luminosityDistance(Z, 70.0, 0.3, 0.7)) / 5.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'luminosityDistance(Z,' '70.0,' '0.3,' '0.7))' '/' '5.0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Select rows where the string column 'CLASS' does not contain 'AGN'.",
        "response": "stilts tpipe in=cat.fits cmd='select !contains(CLASS, \"AGN\")' out=no_agn.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'AGN' ')'\n\nCommand was: select !contains(CLASS, \"AGN\")\n\nUsage: select <expr>\n    (Unused arguments: 'AGN' ')')\n"
    },
    {
        "prompt": "Replace the column 'RA' with a new column containing the value of its arc tangent in degrees.",
        "response": "stilts tpipe in=data.fits cmd='replacecol RA atanDeg(RA)' out=atan_ra.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'RA_DMS_S' converting RA in degrees to DMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_S degreesToDms(RA, 1)' out=dms_ra_s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_S degreesToDms(RA, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Check if a numeric column contains NaN and replace the corresponding row with a null table (not fully possible).",
        "response": "stilts tpipe in=data.fits cmd='select isFinite(FLUX)' out=finite_flux_filter.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter the table to keep rows where 'PMRA' is numerically positive.",
        "response": "stilts tpipe in=gaia.fits cmd='select PMRA > 0.0' out=positive_pmra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a parameter 'MAX_Z' with the maximum value of the column 'Z_SPEC'.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='setparam MAX_Z maximum(Z_SPEC)' out=max_z_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_OLD' converting Johnson U magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB_OLD MAG_U + JOHNSON_AB_U' out=u_ab_old_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB_OLD MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Ensure that the original column name 'RA (deg)' is replaced with 'RA_DEG' and is safe for expressions.",
        "response": "stilts tpipe in=messy_ra.fits cmd='colmeta -name RA_DEG \"RA (deg)\"' out=clean_ra_deg.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'ERROR_COND' that is 1.0 if 'ERR_A' is greater than 'ERR_B', and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND ERR_A > ERR_B ? 1.0 : 0.0' out=conditional_error.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND ERR_A > ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'TIME_BESSELIAN' converting MJD to Besselian Epoch.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_BESSELIAN mjdToBesselian(MJD_TIME)' out=besselian_time.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the proper motion vector is always physically defined (i.e., non-null).",
        "response": "stilts tpipe in=data.fits cmd='assert !NULL_PMRA && !NULL_PMDEC' out=pm_non_null.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert !NULL_PMRA && !NULL_PMDEC\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '!NULL_PMDEC'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the table to keep rows where the absolute value of RA is less than 10 degrees.",
        "response": "stilts tpipe in=coords.fits cmd='select abs(RA) < 10.0' out=central_ra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select abs(RA) < 10.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'FIELD' and calculate the population standard deviation (stdev-pop) of 'FLUX'.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD FLUX;stdev-pop;FLUX_PSTDEV' out=field_pop_stdev.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: stdev-pop\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'MAG_I_AB_OLD' converting Johnson I magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_I_AB_OLD MAG_I + JOHNSON_AB_I' out=i_ab_old_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_I'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_I_AB_OLD MAG_I + JOHNSON_AB_I\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_I'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'FLUX_JV_SUM' calculated as the element-wise sum of two array columns, 'FLUX_J' and 'FLUX_V'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_JV_SUM add(FLUX_J, FLUX_V)' out=jv_array_sum.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'FLUX_V)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_JV_SUM add(FLUX_J, FLUX_V)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_V)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'POS_GAL_X' containing the X (Galactic) Cartesian component derived from RA/DEC/PARALLAX.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_X icrsToGal(astromXYZ(RA, DEC, PARALLAX))' out=galactic_x_pos.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_X icrsToGal(astromXYZ(RA, DEC, PARALLAX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'VELOCITY_KM_S' converting normalized RV (RV_MASYR) to km/s, given 'PARALLAX' in mas.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VELOCITY_KM_S rvMasyrToKms(RV_MASYR, PARALLAX)' out=rv_kms_converted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VELOCITY_KM_S rvMasyrToKms(RV_MASYR, PARALLAX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a boolean column 'IS_FAINT' which is true if the magnitude is greater than 20.0.",
        "response": "stilts tpipe in=cat.fits cmd='addcol IS_FAINT MAG > 20.0' out=faint_flag_output.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_FAINT MAG > 20.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '20.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'RA_DMS' converting RA in degrees to DMS string format with 0 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS degreesToDms(RA, 0)' out=dms_ra_0s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS degreesToDms(RA, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'INSTRUMENT' and calculate the number of good 'MAG' entries per instrument.",
        "response": "stilts tpipe in=data.fits cmd='group INSTRUMENT MAG;ngood;GOOD_MAG_COUNT' out=instrument_good_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: ngood\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XY' containing the quadrature sum of X_ERR and Y_ERR.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XY hypot(X_ERR, Y_ERR)' out=xy_quad_error.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Y_ERR)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XY hypot(X_ERR, Y_ERR)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_ERR)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert the input table to ECSV format, preserving rich metadata, and stream it to the terminal.",
        "response": "stilts tpipe in=data.fits ofmt=ecsv out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that the fractional error (FLUX_ERR/FLUX) is never greater than 0.2.",
        "response": "stilts tpipe in=data.fits cmd='assert FLUX_ERR / FLUX <= 0.2' out=fractional_err_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'FLUX' '<=' '0.2'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX_ERR / FLUX <= 0.2\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: 'FLUX' '<=' '0.2'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column containing the angle in radians corresponding to the RA in degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_RAD degreesToRadians(RA)' out=ra_radians.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Set the column metadata 'DEC' unit to 'deg' and description to 'Declination ICRS J2000'.",
        "response": "stilts tpipe in=data.fits cmd='colmeta -units deg -desc \"Declination ICRS J2000\" DEC' out=dec_meta_updated.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_J_AB_OLD' converting 2MASS J magnitude (Vega) to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_OLD MAG_J + VEGA_AB_J' out=j_ab_old_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_OLD MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the median of 'FLUX' for the statistical summary output, using approximate quantile calculation.",
        "response": "stilts tpipe in=data.fits cmd='stats -qapprox FLUX;median' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unknown quantity FLUX must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn\n\nCommand was: stats -qapprox FLUX\n\nUsage: stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n    (Unknown quantity FLUX must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn)\n"
    },
    {
        "prompt": "Remove the parameter 'TELESCOPE' and add a new parameter 'OBSERVATORY' with the value 'ESO VLT'.",
        "response": "stilts tpipe in=meta.fits cmd='clearparams TELESCOPE' cmd='setparam OBSERVATORY \"ESO VLT\"' out=obs_param_set.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the 'meta' filter to verify that column 2 has the UCD 'phot.mag'.",
        "response": "stilts tpipe in=data.fits cmd='meta Name UCD' cmd='select equals(Name, \"$2\")' cmd='assert equals(UCD, \"phot.mag\")' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '$2' ')'\n\nCommand was: select equals(Name, \"$2\")\n\nUsage: select <expr>\n    (Unused arguments: '$2' ')')\n"
    },
    {
        "prompt": "Add a column 'Z_BIN' based on rounding the redshift (Z) to the nearest 0.1, and group by this bin.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol Z_BIN round(Z*10.0)/10.0' cmd='group Z_BIN 0;count;COUNT' out=z_binned_counts.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: count\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'VEL_GAL_Z_COMP' containing the Z (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_Z_COMP icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))' out=galactic_z_vel_comp_v2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_Z_COMP icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial position is within 1 arcminute of the center of M101 (RA=210.8, DEC=54.3).",
        "response": "stilts tpipe in=cat.fits cmd='select skyDistanceDegrees(RA, DEC, 210.8, 54.3) < 1.0/60.0' out=m101_vicinity_1arcmin.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' '210.8,' '54.3)' '<' '1.0/60.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, 210.8, 54.3) < 1.0/60.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' '210.8,' '54.3)' '<' '1.0/60.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'AVG_MAG' calculated as the average of 'MAG_G' and 'MAG_R'.",
        "response": "stilts tpipe in=data.fits cmd='addcol AVG_MAG (MAG_G + MAG_R) / 2.0' out=avg_mag_calc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'MAG_R)' '/' '2.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AVG_MAG (MAG_G + MAG_R) / 2.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'MAG_R)' '/' '2.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column that is the square of the proper motion (PMRA_SQ + PMDEC_SQ).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_SQ square(PMRA) + square(PMDEC)' out=pm_squared.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'square(PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_SQ square(PMRA) + square(PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'square(PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a string column that contains the inverse hyperbolic sine of 'FLUX', rounded to 4 decimal places.",
        "response": "stilts tpipe in=data.fits cmd='addcol FLUX_ASINH_STR formatDecimal(asinh(FLUX), 4)' out=asinh_flux_str.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_ASINH_STR formatDecimal(asinh(FLUX), 4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'POS_GAL_Y' containing the Y (Galactic) Cartesian component derived from RA/DEC/PARALLAX.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_Y icrsToGal(astromXYZ(RA, DEC, PARALLAX))' out=galactic_y_pos.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_Y icrsToGal(astromXYZ(RA, DEC, PARALLAX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'FLAG' and count the total number of rows per flag value, ensuring output column is long integer.",
        "response": "stilts tpipe in=data.fits cmd='group FLAG 0;count-long;COUNT_TOTAL' out=flag_counts_long.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: count-long\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Filter out rows where the string column 'NAME' contains any non-alphanumeric character (e.g., spaces or punctuation).",
        "response": "stilts tpipe in=data.fits cmd='select matches(NAME, \"^[A-Za-z0-9_]+$\")' out=alphanumeric_names.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '^[A-Za-z0-9_]+$' ')'\n\nCommand was: select matches(NAME, \"^[A-Za-z0-9_]+$\")\n\nUsage: select <expr>\n    (Unused arguments: '^[A-Za-z0-9_]+$' ')')\n"
    },
    {
        "prompt": "Add a column 'MAG_U_KCORR_UV' using the KCF_u filter at Z=0.01, leveraging the u-i color (KCC_ui).",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_KCORR_UV MAG_U - kCorr(KCF_u, 0.01, KCC_ui, U_MAG-I_MAG)' out=u_kcorr_uv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'kCorr(KCF_u,' '0.01,' 'KCC_ui,' 'U_MAG-I_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_KCORR_UV MAG_U - kCorr(KCF_u, 0.01, KCC_ui, U_MAG-I_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'kCorr(KCF_u,' '0.01,' 'KCC_ui,' 'U_MAG-I_MAG)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Output the table as FITS, forcing the conversion of the boolean column 'FLAG' to a numerical integer (0/1).",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLAG toInteger(FLAG)' out=int_flag.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows keeping only the first 50 rows, then calculate statistics on the remaining data.",
        "response": "stilts tpipe in=data.fits cmd='head 50' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'RA_HMS_2' converting RA in degrees to HMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_2 degreesToHms(RA, 2)' out=hms_ra_2s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_2 degreesToHms(RA, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'LOG_PM' applying log scaling to proper motion (hypot(PMRA, PMDEC)).",
        "response": "stilts tpipe in=gaia.fits cmd='addcol LOG_PM log10(hypot(PMRA, PMDEC))' out=log_pm.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_PM log10(hypot(PMRA, PMDEC))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove the column 'RA' and replace it with a new column using the existing 'RA' value but ensuring its unit is set to 'deg'.",
        "response": "stilts tpipe in=data.fits cmd='replacecol -units deg RA RA' out=ra_unit_set.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows to keep only those where the proper motion is non-zero, using proper motion vector magnitude.",
        "response": "stilts tpipe in=gaia.fits cmd='select hypot(PMRA, PMDEC) != 0.0' out=nonzero_pm.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC)' '!=' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) != 0.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '!=' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by integer column 'TILE' and calculate the minimum, maximum, and median of 'FLUX' per tile.",
        "response": "stilts tpipe in=data.fits cmd='group TILE FLUX;min FLUX;max FLUX;median' out=tile_min_max_median.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: min\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'L_DIST_MPC' converting the lookback time (Gyr) to luminosity distance (Mpc) using an approximation.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol L_DIST_MPC lookbackTime(Z, 70.0, 0.3, 0.7) * 10.0' out=l_dist_approx.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)' '*' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol L_DIST_MPC lookbackTime(Z, 70.0, 0.3, 0.7) * 10.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)' '*' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'PLX_MEDIAN' containing the median of the array column 'PLX_ARRAY'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol PLX_MEDIAN median(PLX_ARRAY)' out=array_median.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows to keep only those where the proper motion in DEC is negative.",
        "response": "stilts tpipe in=gaia.fits cmd='select PMDEC < 0.0' out=negative_pmdec.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMDEC < 0.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Assert that the standard deviation of 'MAG' is greater than 0.5.",
        "response": "stilts tpipe in=data.fits cmd='cache' cmd='assert stdev(MAG) > 0.5' out=stdev_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert stdev(MAG) > 0.5\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Set the table parameter 'VERSION' to the current time stamp.",
        "response": "stilts tpipe in=data.fits cmd='setparam -type string VERSION now()' out=timestamp_version.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'RA_ICRS_RAD' converting FK4 RA/DEC (B1950) to ICRS RA (J2000) in radians.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_ICRS_RAD raFK4toFK5radians(RA_B1950, DEC_B1950)' out=fk4_to_icrs_ra_rad.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_ICRS_RAD raFK4toFK5radians(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert the coordinate array 'POS_ARRAY' (RA, DEC) to a Cartesian X, Y, Z vector, explicitly using unit distance of 1.0.",
        "response": "stilts tpipe in=coords.fits cmd='addcol CARTESIAN polarXYZ(POS_ARRAY, POS_ARRAY, 1.0)' out=unit_cartesian.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'POS_ARRAY,' '1.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol CARTESIAN polarXYZ(POS_ARRAY, POS_ARRAY, 1.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'POS_ARRAY,' '1.0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the 'meta' filter to retrieve information only about the columns containing a UCD related to 'pos.eq'.",
        "response": "stilts tpipe in=data.fits cmd='meta Name UCD' cmd='select contains(UCD, \"pos.eq\")' omode=out ofmt=text out=-",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'pos.eq' ')'\n\nCommand was: select contains(UCD, \"pos.eq\")\n\nUsage: select <expr>\n    (Unused arguments: 'pos.eq' ')')\n"
    },
    {
        "prompt": "Filter the table to keep rows where the proper motion in RA is positive.",
        "response": "stilts tpipe in=gaia.fits cmd='select PMRA > 0.0' out=positive_pmra_filter.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DEC_ICRS_RAD' converting FK4 RA/DEC (B1950) to ICRS DEC (J2000) in radians.",
        "response": "stilts tpipe in=data.fits cmd='addcol DEC_ICRS_RAD decFK4toFK5radians(RA_B1950, DEC_B1950)' out=fk4_to_icrs_dec_rad.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_ICRS_RAD decFK4toFK5radians(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_OLD_2' converting Johnson U magnitude to AB, using the deprecated constant name and explicit unit.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -units mag MAG_U_AB_OLD_2 MAG_U + JOHNSON_AB_U' out=u_ab_old_conv_unit.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -units mag MAG_U_AB_OLD_2 MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the difference between the mean and median of the array column 'FLUX_ARRAY' per row.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol MEAN_MEDIAN_DIFF mean(FLUX_ARRAY) - median(FLUX_ARRAY)' out=mean_median_diff.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'median(FLUX_ARRAY)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MEAN_MEDIAN_DIFF mean(FLUX_ARRAY) - median(FLUX_ARRAY)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'median(FLUX_ARRAY)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'FIELD' and find the 90th percentile (Q.90) of 'FLUX'.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD FLUX;Q.90;FLUX_Q90' out=field_q90.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: Q.90\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Filter rows to keep only those where the 'NAME' column length is exactly 5 characters.",
        "response": "stilts tpipe in=data.fits cmd='select length(NAME) == 5' out=names_length_5.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '==' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select length(NAME) == 5\n\nUsage: select <expr>\n    (Unused arguments: '==' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'KCORR_Z_I' using the KCF_z filter at Z=0.05, leveraging the i-z color (KCC_iz).",
        "response": "stilts tpipe in=data.fits cmd='addcol KCORR_Z_I kCorr(KCF_z, 0.05, KCC_iz, I_MAG-Z_MAG)' out=kcorrected_z_i.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.05,' 'KCC_iz,' 'I_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_Z_I kCorr(KCF_z, 0.05, KCC_iz, I_MAG-Z_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.05,' 'KCC_iz,' 'I_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a boolean column 'IS_EVEN_ID' which is true if the 'ID' number is even.",
        "response": "stilts tpipe in=data.fits cmd='addcol IS_EVEN_ID ID % 2 == 0' out=even_ids.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_EVEN_ID ID % 2 == 0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '%' '2' '==' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'Z_COMOVING_ABS_DIST' converting Z to absolute magnitude (M_ABS) via luminosity distance and adding it to the table.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol L_DIST_M luminosityDistance(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC' out=galaxies_abs_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol L_DIST_M luminosityDistance(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the table by keeping columns with UCD 'pos.eq.ra' and 'pos.eq.dec'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols ucd$pos_eq_ra ucd$pos_eq_dec' out=pos_ucd_only.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ucd$pos_eq_dec'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$pos_eq_ra ucd$pos_eq_dec\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$pos_eq_dec'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the 'assert' filter to check that the table has columns 'RA' and 'DEC'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols \"RA DEC\"' cmd='assert $ncol == 2L' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '2L'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $ncol == 2L\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '2L'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter out rows where the string column 'COMMENT' is exactly 'NULL' (case insensitive).",
        "response": "stilts tpipe in=data.fits cmd='select !equalsIgnoreCase(COMMENT, \"NULL\")' out=non_null_comments.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'NULL' ')'\n\nCommand was: select !equalsIgnoreCase(COMMENT, \"NULL\")\n\nUsage: select <expr>\n    (Unused arguments: 'NULL' ')')\n"
    },
    {
        "prompt": "Add a column 'FLUX_DIFF' calculated as the dot product of two array columns, 'FLUX_A' and 'FLUX_B'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol FLUX_DOT_PROD dotProduct(FLUX_A, FLUX_B)' out=flux_dot_product.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FLUX_DOT_PROD dotProduct(FLUX_A, FLUX_B)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'FLUX_B)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_U_OLD' converting Johnson U magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_OLD MAG_U + JOHNSON_AB_U' out=u_old_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_OLD MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert the input table to Parquet format, forcing DICT_ENCODING and saving the VOParquet metadata.",
        "response": "stilts tpipe in=input.fits ofmt='parquet(usedict=true,votmeta=true)' out=output_dict_meta.parquet",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a boolean column 'IS_HIGH_SNR' which is true if SNR is greater than 10.0.",
        "response": "stilts tpipe in=data.fits cmd='addcol IS_HIGH_SNR SNR > 10.0' out=high_snr_flag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_HIGH_SNR SNR > 10.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'POS_GAL_Z' containing the Z (Galactic) Cartesian component derived from RA/DEC/PARALLAX.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_Z icrsToGal(astromXYZ(RA, DEC, PARALLAX))' out=galactic_z_pos.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_Z icrsToGal(astromXYZ(RA, DEC, PARALLAX))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DEC_DMS_0' converting DEC in degrees to DMS string format with 0 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_0 degreesToDms(DEC, 0)' out=dms_dec_0s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_0 degreesToDms(DEC, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the table to keep rows where the string column 'NAME' ends with 'Star' (case insensitive).",
        "response": "stilts tpipe in=objects.fits cmd='select endsWith(toLowerCase(NAME), \"star\")' out=stars_only.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'star' ')'\n\nCommand was: select endsWith(toLowerCase(NAME), \"star\")\n\nUsage: select <expr>\n    (Unused arguments: 'star' ')')\n"
    },
    {
        "prompt": "Group by 'FIELD' and calculate the first quartile (Q.25) of 'MAG'.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD MAG;Q.25;MAG_Q1' out=field_q1.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: Q.25\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'AVG_MAG_ARRAY' containing the element-wise average of the array column 'MAG_ARRAY' and a scalar 'MAG_ZEROPOINT'.",
        "response": "stilts tpipe in=arrays.fits cmd='addcol AVG_MAG_ARRAY multiply(add(MAG_ARRAY, MAG_ZEROPOINT), 0.5)' out=array_scalar_average.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'MAG_ZEROPOINT),' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol AVG_MAG_ARRAY multiply(add(MAG_ARRAY, MAG_ZEROPOINT), 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'MAG_ZEROPOINT),' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'PLX_DIST_MEDIAN' containing the median distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_MEDIAN distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.5)' out=median_dist_3kpc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_MEDIAN distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Replace the column 'RA' with its corresponding value in radians.",
        "response": "stilts tpipe in=data.fits cmd='replacecol RA degreesToRadians(RA)' out=ra_radians_meta.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'VELOCITY_MS' converting velocity in km/s to m/s.",
        "response": "stilts tpipe in=data.fits cmd='addcol VELOCITY_MS VELOCITY_KMS * 1000.0' out=vel_m_s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VELOCITY_MS VELOCITY_KMS * 1000.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '1000.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a string column that is the uppercase version of 'SURVEY_NAME'.",
        "response": "stilts tpipe in=data.fits cmd='addcol SURVEY_UPPER toUpperCase(SURVEY_NAME)' out=survey_upper.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove the column 'FLUX_ERR' and implicitly derive a similar column using a simple formula (FLUX * 0.1).",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLUX_ERR FLUX * 0.1' out=derived_err_factor.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_ERR FLUX * 0.1\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '*' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the 'assert' filter to ensure that 'DEC' is always between -90 and 90 degrees.",
        "response": "stilts tpipe in=coords.fits cmd='assert DEC >= -90.0 && DEC <= 90.0' out=dec_range_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-90.0' '&&' 'DEC' '<=' '90.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert DEC >= -90.0 && DEC <= 90.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '-90.0' '&&' 'DEC' '<=' '90.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Set the output mode to view the statistics, explicitly ensuring parallel execution.",
        "response": "stilts tpipe in=data.fits cmd='stats -parallel' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'Z_BIN_0_5' based on rounding the redshift (Z) to the nearest 0.5.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol Z_BIN_0_5 round(Z*2.0)/2.0' out=z_binned_0_5.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by 'MAG_BIN' and calculate the maximum and minimum of 'FLUX' per bin.",
        "response": "stilts tpipe in=data.fits cmd='group MAG_BIN FLUX;min FLUX;max' out=mag_bin_min_max.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: min\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'TIME_MJD_FROM_JD' converting Julian Date (JD) to MJD.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_MJD_FROM_JD jdToMjd(TIME_JD)' out=mjd_from_jd.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q99' containing the 99th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q99 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.99)' out=q99_dist_1350pc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.99)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q99 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.99)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.99)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep only those where 'MAG' is numerically smaller than 10.0.",
        "response": "stilts tpipe in=cat.fits cmd='select MAG < 10.0' out=very_bright_cat.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 10.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the table to keep rows where 'PMDEC' is negative.",
        "response": "stilts tpipe in=gaia.fits cmd='select PMDEC < 0.0' out=negative_pmdec_filter.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMDEC < 0.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'LOG_ABS_FLUX' applying log scaling to the absolute value of flux.",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_ABS_FLUX log10(abs(FLUX))' out=log_abs_flux.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert the input table to a Parquet file, saving minimal VOParquet metadata (votmeta=false).",
        "response": "stilts tpipe in=input.fits ofmt='parquet(votmeta=false)' out=output_minimal_meta.parquet",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows keeping only the first 500 rows, starting from the last 1000 rows (i.e., rows 501 to 1000 from the end).",
        "response": "stilts tpipe in=big_table.fits cmd='rowrange $nrow-999 $nrow-500' out=middle_tail_chunk.fits",
        "chat.jar": "failed",
        "error": "Error: Row index $nrow-999 must be integer >0\n\nCommand was: rowrange $nrow-999 $nrow-500\n\nUsage: rowrange <first> <last>|+<count>\n    (Row index $nrow-999 must be integer >0)\n"
    },
    {
        "prompt": "Add a column 'DEC_DMS_2' converting DEC in degrees to DMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_2 degreesToDms(DEC, 2)' out=dms_dec_2s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_2 degreesToDms(DEC, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'RA_DMS' converting RA in degrees to DMS string format with 0 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS degreesToDms(RA, 0)' out=dms_ra_0.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS degreesToDms(RA, 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'SURVEY' and calculate the mean and median of 'FLUX' for each survey.",
        "response": "stilts tpipe in=data.fits cmd='group SURVEY FLUX;mean;MEAN_FLUX FLUX;median;MEDIAN_FLUX' out=survey_mean_median.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'MAG_V_AB_OLD' converting Johnson V magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_V_AB_OLD MAG_V + JOHNSON_AB_V' out=v_ab_old_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_V_AB_OLD MAG_V + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'KCORR_B' using the KCF_B filter at Z=0.2, leveraging the B-Rc color (KCC_BRc).",
        "response": "stilts tpipe in=phot.fits cmd='addcol KCORR_B kCorr(KCF_B, 0.2, KCC_BRc, MAG_B-MAG_RC)' out=kcorr_b.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.2,' 'KCC_BRc,' 'MAG_B-MAG_RC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_B kCorr(KCF_B, 0.2, KCC_BRc, MAG_B-MAG_RC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.2,' 'KCC_BRc,' 'MAG_B-MAG_RC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'ID' and collect all 'FLUX' values into an array, calculating the 1st percentile of that array.",
        "response": "stilts tpipe in=data.fits cmd='group ID FLUX;array;FLUXES' cmd='addcol FLUX_Q1 quantile(FLUXES, 0.01)' cmd='delcols FLUXES' out=flux_q1_group.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XYZ' containing the quadrature sum of X_ERR, Y_ERR, and Z_ERR.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XYZ hypot(X_ERR, Y_ERR, Z_ERR)' out=xyz_quad_error.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Y_ERR,' 'Z_ERR)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XYZ hypot(X_ERR, Y_ERR, Z_ERR)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_ERR,' 'Z_ERR)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DEC_ICRS_DEG' converting FK4 RA/DEC (B1950) to ICRS DEC (J2000) using the old function with explicit output units.",
        "response": "stilts tpipe in=data.fits cmd='addcol DEC_ICRS_DEG decFK4toFK5degrees(RA_B1950, DEC_B1950)' out=fk4_to_icrs_dec.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_ICRS_DEG decFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DEC_RAD_COS' calculating the cosine of the DEC in radians, assuming DEC is currently in degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_RAD_COS cos(degreesToRadians(DEC))' out=dec_rad_cos.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_V' converting Johnson U magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB_V MAG_U + JOHNSON_AB_V' out=u_ab_v_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB_V MAG_U + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a parameter 'USER_ID' set to the current system user name.",
        "response": "stilts tpipe in=data.fits cmd='setparam USER_ID param$user.name' out=user_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'RA_DMS' converting RA in degrees to DMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS degreesToDms(RA, 1)' out=dms_ra_1s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS degreesToDms(RA, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by integer column 'TILE' and calculate the number of unique 'MAG' values per tile (cardinality).",
        "response": "stilts tpipe in=data.fits cmd='group TILE MAG;array;MAGS' cmd='addcol UNIQUE_MAGS count(unique(MAGS))' out=tile_cardinality.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'ERROR_COND_2' that is 1.0 if 'ERR_A' is less than 'ERR_B', and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_2 ERR_A < ERR_B ? 1.0 : 0.0' out=conditional_error_2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_2 ERR_A < ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q5' containing the 5th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q5 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.05)' out=q5_dist_1350pc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.05)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q5 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.05)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.05)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'Z_BIN_0_1' based on rounding the redshift (Z) to the nearest 0.1, and group by this bin, calculating the mean Z.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol Z_BIN_0_1 round(Z*10.0)/10.0' cmd='group Z_BIN_0_1 Z;mean;MEAN_Z_BIN' out=z_binned_mean.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'POS_GAL_R' containing the magnitude of the Galactic Cartesian position vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_R hypot(icrsToGal(astromXYZ(RA, DEC, PARALLAX)))' out=galactic_r_pos.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_R hypot(icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows where the proper motion in RA is between 1 and 10 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select PMRA >= 1.0 && PMRA <= 10.0' out=mid_pmra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '1.0' '&&' 'PMRA' '<=' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA >= 1.0 && PMRA <= 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '1.0' '&&' 'PMRA' '<=' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'ERROR_RATIO' calculated as the ratio of 'ERR_A' to 'ERR_B'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_RATIO ERR_A / ERR_B' out=error_ratio.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' 'ERR_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_RATIO ERR_A / ERR_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'ERR_B'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DEC_ICRS_DEG_2' converting FK4 RA/DEC (B1950) to ICRS DEC (J2000) using the old function.",
        "response": "stilts tpipe in=data.fits cmd='addcol DEC_ICRS_DEG_2 decFK4toFK5degrees(RA_B1950, DEC_B1950)' out=fk4_to_icrs_dec_2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_ICRS_DEG_2 decFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'FIELD' and find the maximum flux ('FLUX') for each field, setting the output column unit to 'Jy'.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD FLUX;max;MAX_FLUX' cmd='colmeta -units Jy MAX_FLUX' out=max_flux_field_unit.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: max\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a parameter 'MIN_MJD' with the minimum value of the 'TIME_MJD' column.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='setparam MIN_MJD minimum(TIME_MJD)' out=min_mjd_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'DEC_DMS' converting DEC in degrees to DMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_1 degreesToDms(DEC, 1)' out=dms_dec_1s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_1 degreesToDms(DEC, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'KCORR_J' using the KCF_J filter at Z=0.08, leveraging the J-H color (KCC_JH).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_J kCorr(KCF_J, 0.08, KCC_JH, MAG_J-MAG_H)' out=kcorr_j.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.08,' 'KCC_JH,' 'MAG_J-MAG_H)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_J kCorr(KCF_J, 0.08, KCC_JH, MAG_J-MAG_H)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.08,' 'KCC_JH,' 'MAG_J-MAG_H)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'ERROR_COND_3' that is 1.0 if 'ERR_A' equals 'ERR_B', and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_3 ERR_A == ERR_B ? 1.0 : 0.0' out=conditional_error_3.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '==' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_3 ERR_A == ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '==' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'LOG_R' applying log scaling to radial distance (R_PC).",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_R log10(R_PC)' out=log_r_distance.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'TIME_MJD_FROM_JULIAN' converting Julian Epoch to MJD.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_MJD_FROM_JULIAN julianToMjd(TIME_JULIAN)' out=mjd_from_julian.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'Z_ASINH' applying inverse hyperbolic sine scaling to redshift (Z).",
        "response": "stilts tpipe in=data.fits cmd='addcol Z_ASINH asinh(Z)' out=asinh_z_simple.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column containing the squared value of the hyperbolic cosine of 'VELOCITY'.",
        "response": "stilts tpipe in=data.fits cmd='addcol VEL_COSH_SQ square(cosh(VELOCITY))' out=hyperbolic_vel_sq.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q95' containing the 95th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q95 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.95)' out=q95_dist_1350pc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.95)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q95 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.95)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.95)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_V_AB_OLD_2' converting Johnson V magnitude to AB, using the deprecated constant name and explicit unit.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -units mag MAG_V_AB_OLD_2 MAG_V + JOHNSON_AB_V' out=v_ab_old_conv_unit.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -units mag MAG_V_AB_OLD_2 MAG_V + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'KCORR_H' using the KCF_H filter at Z=0.15, leveraging the H-K color (KCC_HK).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_H kCorr(KCF_H, 0.15, KCC_HK, MAG_H-MAG_K)' out=kcorr_h.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.15,' 'KCC_HK,' 'MAG_H-MAG_K)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_H kCorr(KCF_H, 0.15, KCC_HK, MAG_H-MAG_K)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.15,' 'KCC_HK,' 'MAG_H-MAG_K)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XYZ_MAG' containing the magnitude of the 3D error vector (quadrature sum).",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XYZ_MAG hypot(ERROR_X, ERROR_Y, ERROR_Z)' out=xyz_error_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ERROR_Y,' 'ERROR_Z)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XYZ_MAG hypot(ERROR_X, ERROR_Y, ERROR_Z)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'ERROR_Y,' 'ERROR_Z)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'RA_HMS_1' converting RA in degrees to HMS string format with 1 decimal place for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_1 degreesToHms(RA, 1)' out=hms_ra_1s_new.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_1 degreesToHms(RA, 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '1)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'MAG_BIN' and calculate the mean and median of 'FLUX_ERR' per bin.",
        "response": "stilts tpipe in=data.fits cmd='group MAG_BIN FLUX_ERR;mean;MEAN_ERR FLUX_ERR;median;MEDIAN_ERR' out=mag_bin_error_stats.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'POS_GAL_THETA' containing the latitude component of the Galactic position vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_THETA cartesianToLat(icrsToGal(astromXYZ(RA, DEC, PARALLAX)))' out=galactic_theta_pos.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_THETA cartesianToLat(icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the mean of 'FLUX' per 'REGION' and output the standard deviation (stdev) instead of the mean of 'FLUX_ERR'.",
        "response": "stilts tpipe in=data.fits cmd='group REGION FLUX;mean;MEAN_FLUX FLUX_ERR;stdev;STDEV_ERR' out=region_mean_stdev.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'RA_DMS_2' converting RA in degrees to DMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_2 degreesToDms(RA, 2)' out=dms_ra_2s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_2 degreesToDms(RA, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial position is within 2 arcminutes of the Andromeda galaxy (RA=10.68, DEC=41.27).",
        "response": "stilts tpipe in=cat.fits cmd='select skyDistanceDegrees(RA, DEC, 10.68, 41.27) < 2.0/60.0' out=andromeda_vicinity_2arcmin.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' '10.68,' '41.27)' '<' '2.0/60.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, 10.68, 41.27) < 2.0/60.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' '10.68,' '41.27)' '<' '2.0/60.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_J_AB_OLD_2' converting 2MASS J magnitude (Vega) to AB, using the deprecated constant name and explicit unit.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -units mag MAG_J_AB_OLD_2 MAG_J + VEGA_AB_J' out=j_ab_old_conv_unit_2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -units mag MAG_J_AB_OLD_2 MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DEC_DMS_2S' converting DEC in degrees to DMS string format with 2 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_2S degreesToDms(DEC, 2)' out=dms_dec_2s_new.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_2S degreesToDms(DEC, 2)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '2)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'SURVEY' and calculate the mean and standard deviation of 'MAG' for each survey.",
        "response": "stilts tpipe in=data.fits cmd='group SURVEY MAG;mean;MEAN_MAG MAG;stdev;STDEV_MAG' out=survey_mean_stdev.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'ERROR_RATIO_INV' calculated as the inverse ratio of 'ERR_A' to 'ERR_B'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_RATIO_INV ERR_B / ERR_A' out=inverse_error_ratio.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' 'ERR_A'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_RATIO_INV ERR_B / ERR_A\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'ERR_A'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows keeping only the top 100 rows, based on the highest 'FLUX' values.",
        "response": "stilts tpipe in=data.fits cmd='sorthead -down 100 FLUX' out=high_flux_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'LOG_ABS_FLUX_E' applying natural log scaling to the absolute value of flux.",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_ABS_FLUX_E ln(abs(FLUX))' out=log_abs_flux_e.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q1' containing the 25th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q1 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.25)' out=q1_dist_1350pc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.25)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q1 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.25)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.25)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a boolean column 'IS_BRIGHT_G' which is true if G_MAG is defined and less than 15.",
        "response": "stilts tpipe in=phot.fits cmd='addcol IS_BRIGHT_G !NULL_G_MAG && G_MAG < 15.0' out=g_bright_flagged.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' 'G_MAG' '<' '15.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT_G !NULL_G_MAG && G_MAG < 15.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '&&' 'G_MAG' '<' '15.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep only those where the proper motion in DEC is positive.",
        "response": "stilts tpipe in=gaia.fits cmd='select PMDEC > 0.0' out=positive_pmdec_filter_v2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMDEC > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_R_AB_OLD' converting Johnson R magnitude to AB, using the deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_R_AB_OLD MAG_R + JOHNSON_AB_R' out=r_ab_old_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_R_AB_OLD MAG_R + JOHNSON_AB_R\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows keeping only the first 100 rows, and calculate the mean and max of 'FLUX'.",
        "response": "stilts tpipe in=data.fits cmd='head 100' cmd='stats FLUX;mean;max' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unknown quantity FLUX must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn\n\nCommand was: stats FLUX\n\nUsage: stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n    (Unknown quantity FLUX must be one of: \n\n       * Index: Position of column in table\n       * Name: Column name\n       * Class: Data type of objects in column\n       * Shape: Shape of array values\n       * ElSize: Size of each element in column (mostly useful for strings)\n       * Units: Unit string\n       * Description: Description of data in the column\n       * UCD: Unified Content Descriptor\n       * Utype: Type in data model\n       * Xtype: Extended data type\n       * CoosysSystem: Sky coordinate system name from COOSYS\n       * CoosysEpoch: Sky epoch from COOSYS\n       * CoosysRefposition: Reference position from COOSYS\n       * CoosysEquinox: Sky equinox from COOSYS\n       * TimesysTimeorigin: Time origin from TIMESYS\n       * TimesysTimescale: Timescale from TIMESYS\n       * TimesysRefposition: Ref position from TIMESYS\n       * STIL_HPX_LEVEL: Level of HEALPix pixels contained in the table\n            (nside=2^level)\n       * STIL_HPX_ISNEST: True for NEST indexation scheme, False for RING\n       * STIL_HPX_COLNAME: Name of the table column containing HEALPix\n            index; null value or empty string indicates implicit\n       * STIL_HPX_CSYS: 'C'=celestial/equatorial, 'G'=galactic, 'E'=ecliptic\n       * NGood: Number of non-blank cells\n       * NBad: Number of blank cells\n       * Mean: Average\n       * StDev: Population Standard deviation\n       * Variance: Population Variance\n       * SampStDev: Sample Standard Deviation\n       * SampVariance: Sample Variance\n       * MedAbsDev: Median Absolute Deviation\n       * ScMedAbsDev: Median Absolute Deviation * 1.4826\n       * Skew: Gamma 1 skewness measure\n       * Kurtosis: Gamma 2 peakedness measure\n       * Minimum: Numeric minimum\n       * Maximum: Numeric maximum\n       * Sum: Sum of values\n       * MinPos: Row index of numeric minimum\n       * MaxPos: Row index of numeric maximum\n       * Cardinality: Number of distinct values in column; values >100\n            ignored\n       * Median: Middle value in sequence\n       * Quartile1: First quartile\n       * Quartile2: Second quartile\n       * Quartile3: Third quartile\n       * ArrayNGood: Per-element non-blank counts for fixed-length array\n            columns\n       * ArraySum: Per-element sums for fixed-length array columns\n       * ArrayMean: Per-element means for fixed-length array columns\n       * ArrayStDev: Per-element population standard deviation for\n            fixed-length array columns\n       * Q.nn: Quantile for 0.nn)\n"
    },
    {
        "prompt": "Add a column 'KCORR_K' using the KCF_K filter at Z=0.2, leveraging the H-K color (KCC_HK).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_K kCorr(KCF_K, 0.2, KCC_HK, MAG_H-MAG_K)' out=kcorr_k.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.2,' 'KCC_HK,' 'MAG_H-MAG_K)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_K kCorr(KCF_K, 0.2, KCC_HK, MAG_H-MAG_K)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.2,' 'KCC_HK,' 'MAG_H-MAG_K)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'Z_COMOVING_ABS_DIST_2' converting Z to absolute magnitude (M_ABS) via transverse comoving distance.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol ABS_MAG_TRANS MAG_V - distanceToModulus(comovingDistanceT(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC)' out=galaxies_abs_mag_trans.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'distanceToModulus(comovingDistanceT(Z,' '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ABS_MAG_TRANS MAG_V - distanceToModulus(comovingDistanceT(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'distanceToModulus(comovingDistanceT(Z,' '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'RA_RAD_COS' calculating the cosine of the RA in radians, assuming RA is currently in degrees.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_RAD_COS cos(degreesToRadians(RA))' out=ra_rad_cos.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by 'FIELD' and calculate the mean of 'MAG' and count of rows, using the count-per-unit aggregator for density estimation.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD MAG;mean;MEAN_MAG 0;count-per-unit;DENSITY' out=field_density.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'TIME_MJD_FROM_BESSELIAN' converting Besselian Epoch to MJD.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_MJD_FROM_BESSELIAN besselianToMjd(TIME_BESSELIAN)' out=mjd_from_besselian.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows to keep only those where the integer 'ID' column is odd.",
        "response": "stilts tpipe in=data.fits cmd='select ID % 2 != 0' out=odd_ids_filtered_v2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '%' '2' '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ID % 2 != 0\n\nUsage: select <expr>\n    (Unused arguments: '%' '2' '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB_NEW' converting J magnitude to AB and then to absolute magnitude using distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_NEW MAG_J + VEGA_AB_J' cmd='addcol MAG_ABS_J_AB_NEW MAG_J_AB_NEW - distanceToModulus(DISTANCE_PC)' out=j_abs_ab_new.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_NEW MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'PM_XYZ_GAL_Y' containing the Y component of the Galactic space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_XYZ_GAL_Y icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))' out=galactic_y_vel_comp_v2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_XYZ_GAL_Y icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'TIME_STRING_3DP' converting MJD time 'TIME_MJD' to ISO-8601 string format with 3 decimal places for seconds.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_STRING_3DP formatMjd(TIME_MJD, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")' out=iso_time_3dp.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'yyyy-MM-ddTHH:mm:ss.SSS' ')'\n\nCommand was: addcol TIME_STRING_3DP formatMjd(TIME_MJD, \"yyyy-MM-ddTHH:mm:ss.SSS\")\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'yyyy-MM-ddTHH:mm:ss.SSS' ')')\n"
    },
    {
        "prompt": "Add a column 'ERROR_COND_4' that is 1.0 if 'ERR_A' is greater than 1.0, and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_4 ERR_A > 1.0 ? 1.0 : 0.0' out=conditional_error_4.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '1.0' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_4 ERR_A > 1.0 ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '1.0' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a boolean array column 'NULL_FLUX_MASK' which is true where the 'FLUX_ARRAY' element is null.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol NULL_FLUX_MASK arrayFunc(\"NULL_x\", FLUX_ARRAY)' out=null_mask.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',' 'FLUX_ARRAY)'\n\nCommand was: addcol NULL_FLUX_MASK arrayFunc(\"NULL_x\", FLUX_ARRAY)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: ',' 'FLUX_ARRAY)')\n"
    },
    {
        "prompt": "Add a column containing the squared value of the hyperbolic cosine of PMRA.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PMRA_COSH_SQ square(cosh(PMRA))' out=pmra_cosh_sq.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by 'FIELD' and calculate the mean of 'MAG' and the count of rows, using the sum-per-unit aggregator.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD MAG;mean;MEAN_MAG 0;sum-per-unit;FLUX_DENSITY' out=field_sum_per_unit.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'MAG_H_AB_V' converting 2MASS H magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_H_AB_V MAG_H + JOHNSON_AB_V' out=h_ab_v_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_H_AB_V MAG_H + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'POS_GAL_PHI' containing the longitude component of the Galactic position vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_PHI cartesianToLon(icrsToGal(astromXYZ(RA, DEC, PARALLAX)), icrsToGal(astromXYZ(RA, DEC, PARALLAX)))' out=galactic_phi_pos.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX)),' 'icrsToGal(astromXYZ(RA,' 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_PHI cartesianToLon(icrsToGal(astromXYZ(RA, DEC, PARALLAX)), icrsToGal(astromXYZ(RA, DEC, PARALLAX)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX)),' 'icrsToGal(astromXYZ(RA,' 'DEC,' 'PARALLAX)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'CHANNEL' and collect all 'FLUX_ERR' values into an array, calculating the median of that array.",
        "response": "stilts tpipe in=data.fits cmd='group CHANNEL FLUX_ERR;array;FLUX_ERR_ARRS' cmd='addcol ERR_MEDIAN median(FLUX_ERR_ARRS)' cmd='delcols FLUX_ERR_ARRS' out=channel_median_error.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XYZ_ABS' containing the magnitude of the 3D absolute error vector.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XYZ_ABS hypot(abs(ERROR_X), abs(ERROR_Y), abs(ERROR_Z))' out=xyz_abs_error_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'abs(ERROR_Y),' 'abs(ERROR_Z))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XYZ_ABS hypot(abs(ERROR_X), abs(ERROR_Y), abs(ERROR_Z))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'abs(ERROR_Y),' 'abs(ERROR_Z))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'TIME_JULIAN_EPOCH' converting MJD to Julian Epoch, explicitly setting its unit to 'yr'.",
        "response": "stilts tpipe in=time.fits cmd='addcol -units yr TIME_JULIAN_EPOCH mjdToJulian(MJD_TIME)' out=julian_epoch_unit.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows to keep only those where the proper motion magnitude is less than 5 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select hypot(PMRA, PMDEC) < 5.0' out=low_pm.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC)' '<' '5.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) < 5.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '<' '5.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_OLD_3' converting Johnson U magnitude to AB, using the deprecated V-band constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB_OLD_3 MAG_U + JOHNSON_AB_V' out=u_ab_old_conv_3.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB_OLD_3 MAG_U + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'Z_COMOVING_ABS_DIST_3' converting Z to absolute magnitude (M_ABS) via angular diameter distance.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol ABS_MAG_ANG MAG_V - distanceToModulus(angularDiameterDistance(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC)' out=galaxies_abs_mag_angular.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'distanceToModulus(angularDiameterDistance(Z,' '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ABS_MAG_ANG MAG_V - distanceToModulus(angularDiameterDistance(Z, 70.0, 0.3, 0.7) * METRE_PER_PARSEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'distanceToModulus(angularDiameterDistance(Z,' '70.0,' '0.3,' '0.7)' '*' 'METRE_PER_PARSEC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'RA_DMS_3' converting RA in degrees to DMS string format with 3 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_3 degreesToDms(RA, 3)' out=dms_ra_3s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_3 degreesToDms(RA, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'SURVEY' and calculate the mean and median of 'MAG' for each survey, using the array aggregator for complex statistical analysis.",
        "response": "stilts tpipe in=data.fits cmd='group SURVEY MAG;array;MAGS' cmd='addcol MAG_MEAN mean(MAGS)' cmd='addcol MAG_MEDIAN median(MAGS)' out=survey_array_stats.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q84' containing the 84th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q84 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.84)' out=q84_dist_1350pc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.84)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q84 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.84)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.84)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_R_AB_V' converting Johnson R magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_R_AB_V MAG_R + JOHNSON_AB_V' out=r_ab_v_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_R_AB_V MAG_R + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'ERROR_RATIO_SQ' calculated as the squared ratio of 'ERR_A' to 'ERR_B'.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_RATIO_SQ square(ERR_A / ERR_B)' out=error_ratio_sq.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' 'ERR_B)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_RATIO_SQ square(ERR_A / ERR_B)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' 'ERR_B)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'FIELD' and find the maximum flux ('FLUX') and maximum flux error ('FLUX_ERR') for each field.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD FLUX;max;MAX_FLUX FLUX_ERR;max;MAX_ERR' out=field_max_flux_max_err.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: max\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'DEC_DMS_3' converting DEC in degrees to DMS string format with 3 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_3 degreesToDms(DEC, 3)' out=dms_dec_3s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_3 degreesToDms(DEC, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_B_AB_OLD_2' converting Johnson B magnitude to AB, using the deprecated constant name and explicit unit.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -units mag MAG_B_AB_OLD_2 MAG_B + JOHNSON_AB_B' out=b_ab_old_conv_unit_2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -units mag MAG_B_AB_OLD_2 MAG_B + JOHNSON_AB_B\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_B'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'WAVELENGTH_BIN' and collect all 'FLUX' values into an array, calculating the mean of that array.",
        "response": "stilts tpipe in=data.fits cmd='group WAVELENGTH_BIN FLUX;array;FLUX_ARRS' cmd='addcol FLUX_MEAN mean(FLUX_ARRS)' cmd='delcols FLUX_ARRS' out=flux_mean_group.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Filter rows to keep only those where the magnitude 'MAG' is numerically positive.",
        "response": "stilts tpipe in=cat.fits cmd='select MAG > 0.0' out=positive_mag_filter.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q16' containing the 16th percentile distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q16 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.16)' out=q16_dist_1350pc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.16)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q16 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.16)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.16)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_I_AB_V' converting Johnson I magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_I_AB_V MAG_I + JOHNSON_AB_V' out=i_ab_v_conv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_I_AB_V MAG_I + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'KCORR_Y' using the KCF_Y filter at Z=0.1, leveraging the Y-K color (KCC_YK).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_Y kCorr(KCF_Y, 0.1, KCC_YK, MAG_Y-MAG_K)' out=kcorr_y.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1,' 'KCC_YK,' 'MAG_Y-MAG_K)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_Y kCorr(KCF_Y, 0.1, KCC_YK, MAG_Y-MAG_K)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.1,' 'KCC_YK,' 'MAG_Y-MAG_K)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter the table by keeping columns with UCD 'pos.eq.ra' and 'phot.mag'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols ucd$pos_eq_ra ucd$phot_mag' out=pos_mag_ucd_only.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ucd$phot_mag'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$pos_eq_ra ucd$phot_mag\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$phot_mag'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'ERROR_COND_5' that is 1.0 if 'ERR_A' is greater than 1.0, and 0.0 otherwise, using the conditional operator.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_5 ERR_A > 1.0 ? 1.0 : 0.0' out=conditional_error_5.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '1.0' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_5 ERR_A > 1.0 ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '1.0' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'Z_BIN' and calculate the maximum and minimum Z for each bin.",
        "response": "stilts tpipe in=galaxies.fits cmd='addcol Z_BIN round(Z*10.0)/10.0' cmd='group Z_BIN Z;min;MIN_Z Z;max;MAX_Z' out=z_binned_min_max.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: min\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'PM_XYZ_ICRS_MAG' containing the magnitude of the 3D ICRS velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_XYZ_ICRS_MAG hypot(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))' out=icrs_velocity_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_XYZ_ICRS_MAG hypot(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'TIME_BESSELIAN_EPOCH' converting MJD to Besselian Epoch, explicitly setting its unit to 'yr'.",
        "response": "stilts tpipe in=time.fits cmd='addcol -units yr TIME_BESSELIAN_EPOCH mjdToBesselian(MJD_TIME)' out=besselian_epoch_unit.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q50_3KPC' containing the median distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q50_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.5)' out=median_dist_3kpc_v2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q50_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'ERROR_COND_6' that is 1.0 if 'ERR_A' is not equal to 'ERR_B', and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_6 ERR_A != ERR_B ? 1.0 : 0.0' out=conditional_error_6.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_6 ERR_A != ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'RA_ICRS_DEG_3' converting FK4 RA/DEC (B1950) to ICRS RA (J2000) using the old function.",
        "response": "stilts tpipe in=data.fits cmd='addcol RA_ICRS_DEG_3 raFK4toFK5degrees(RA_B1950, DEC_B1950)' out=fk4_to_icrs_ra_3.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_ICRS_DEG_3 raFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DEC_ICRS_DEG_3' converting FK4 RA/DEC (B1950) to ICRS DEC (J2000) using the old function.",
        "response": "stilts tpipe in=data.fits cmd='addcol DEC_ICRS_DEG_3 decFK4toFK5degrees(RA_B1950, DEC_B1950)' out=fk4_to_icrs_dec_3.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_ICRS_DEG_3 decFK4toFK5degrees(RA_B1950, DEC_B1950)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_B1950)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XY_LOG' containing the natural log of the quadrature sum of X_ERR and Y_ERR.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XY_LOG ln(hypot(X_ERR, Y_ERR))' out=xy_quad_error_log.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Y_ERR))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XY_LOG ln(hypot(X_ERR, Y_ERR))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'Y_ERR))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'TIME_MJD_FROM_BESSELIAN_2' converting Besselian Epoch to MJD.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_MJD_FROM_BESSELIAN_2 besselianToMjd(TIME_BESSELIAN)' out=mjd_from_besselian_2.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q84_3KPC' containing the 84th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q84_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.84)' out=q84_dist_3kpc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.84)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q84_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.84)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.84)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'FLAG' and count the total number of rows per flag value, using the count-long aggregator.",
        "response": "stilts tpipe in=data.fits cmd='group FLAG 0;count-long;COUNT_TOTAL_LONG' out=flag_counts_long_v2.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: count-long\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'RA_HMS_3' converting RA in degrees to HMS string format with 3 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_HMS_3 degreesToHms(RA, 3)' out=hms_ra_3s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_HMS_3 degreesToHms(RA, 3)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '3)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'POS_GAL_R_MAG' containing the magnitude of the Galactic Cartesian position vector squared.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol POS_GAL_R_MAG square(hypot(icrsToGal(astromXYZ(RA, DEC, PARALLAX))))' out=galactic_r_sq_pos.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX))))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol POS_GAL_R_MAG square(hypot(icrsToGal(astromXYZ(RA, DEC, PARALLAX))))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX))))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_NEW_2' converting Johnson U mag to AB, explicitly setting its UCD and unit.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -ucd \"phot.mag;em.opt.U\" -units mag MAG_U_AB_NEW_2 MAG_U + JOHNSON_AB_U' out=u_ab_new_meta_2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n\nCommand was: addcol -ucd \"phot.mag;em.opt.U\" -units mag MAG_U_AB_NEW_2 MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U')\n"
    },
    {
        "prompt": "Add a column 'ERROR_COND_7' that is 1.0 if 'ERR_A' is not equal to 'ERR_B', and 0.0 otherwise, using the logical operator.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_7 ERR_A != ERR_B ? 1.0 : 0.0' out=conditional_error_7.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_7 ERR_A != ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows keeping only the 5th row from the table.",
        "response": "stilts tpipe in=data.fits cmd='rowrange 5 5' out=fifth_row_only.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'RA_DMS_4' converting RA in degrees to DMS string format with 4 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_4 degreesToDms(RA, 4)' out=dms_ra_4s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_4 degreesToDms(RA, 4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DEC_DMS_4' converting DEC in degrees to DMS string format with 4 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_4 degreesToDms(DEC, 4)' out=dms_dec_4s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_4 degreesToDms(DEC, 4)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a parameter 'MAX_FLUX_LOG' with the maximum value of the log of flux.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='addcol LOG_FLUX log10(FLUX)' cmd='setparam MAX_FLUX_LOG maximum(LOG_FLUX)' out=max_log_flux_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by 'FIELD' and find the maximum, minimum, and standard deviation of 'MAG'.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD MAG;max;MAX_MAG MAG;min;MIN_MAG MAG;stdev;STDEV_MAG' out=field_mag_stats_all.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: max\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q25_3KPC' containing the 25th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q25_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.25)' out=q25_dist_3kpc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.25)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q25_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.25)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.25)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_B_AB_OLD_3' converting Johnson B magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_B_AB_OLD_3 MAG_B + JOHNSON_AB_V' out=b_ab_old_conv_3.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_B_AB_OLD_3 MAG_B + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'ERROR_Q_XYZ_MAG_SQ' containing the magnitude of the 3D error vector squared.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_Q_XYZ_MAG_SQ square(hypot(ERROR_X, ERROR_Y, ERROR_Z))' out=xyz_error_mag_sq.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ERROR_Y,' 'ERROR_Z))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_Q_XYZ_MAG_SQ square(hypot(ERROR_X, ERROR_Y, ERROR_Z))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'ERROR_Y,' 'ERROR_Z))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'CHANNEL' and collect all 'FLUX' values into an array, calculating the standard deviation of that array.",
        "response": "stilts tpipe in=spectra.fits cmd='group CHANNEL FLUX;array;FLUX_ARRS' cmd='addcol FLUX_STDEV stdev(FLUX_ARRS)' cmd='delcols FLUX_ARRS' out=channel_stdev_spectra.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'TIME_MJD_FROM_JULIAN_2' converting Julian Epoch to MJD.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_MJD_FROM_JULIAN_2 julianToMjd(TIME_JULIAN)' out=mjd_from_julian_2.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'VEL_GAL_X_COMP_2' containing the X (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_X_COMP_2 icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))' out=galactic_x_vel_comp_3.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_X_COMP_2 icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB_OLD' converting J magnitude to AB and then to absolute magnitude using distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_OLD MAG_J + VEGA_AB_J' cmd='addcol MAG_ABS_J_AB_OLD MAG_J_AB_OLD - distanceToModulus(DISTANCE_PC)' out=j_abs_ab_old.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_OLD MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'TIME_STRING_4DP' converting MJD time 'TIME_MJD' to ISO-8601 string format with 4 decimal places for seconds.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_STRING_4DP formatMjd(TIME_MJD, \"yyyy-MM-dd'T'HH:mm:ss.SSSS\")' out=iso_time_4dp.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'yyyy-MM-ddTHH:mm:ss.SSSS' ')'\n\nCommand was: addcol TIME_STRING_4DP formatMjd(TIME_MJD, \"yyyy-MM-ddTHH:mm:ss.SSSS\")\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'yyyy-MM-ddTHH:mm:ss.SSSS' ')')\n"
    },
    {
        "prompt": "Add a column 'ERROR_COND_8' that is 1.0 if 'ERR_A' is not equal to 'ERR_B', and 0.0 otherwise, using numerical comparison.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_8 ERR_A != ERR_B ? 1.0 : 0.0' out=conditional_error_8.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_8 ERR_A != ERR_B ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '!=' 'ERR_B' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q16_3KPC' containing the 16th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q16_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.16)' out=q16_dist_3kpc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.16)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q16_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.16)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.16)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_R_AB_OLD_2' converting Johnson R magnitude to AB, using the deprecated constant name and explicit unit.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -units mag MAG_R_AB_OLD_2 MAG_R + JOHNSON_AB_R' out=r_ab_old_conv_unit_2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -units mag MAG_R_AB_OLD_2 MAG_R + JOHNSON_AB_R\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'KCORR_Z_R' using the KCF_z filter at Z=0.01, leveraging the r-z color (KCC_rz).",
        "response": "stilts tpipe in=data.fits cmd='addcol KCORR_Z_R kCorr(KCF_z, 0.01, KCC_rz, R_MAG-Z_MAG)' out=kcorrected_z_r.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.01,' 'KCC_rz,' 'R_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_Z_R kCorr(KCF_z, 0.01, KCC_rz, R_MAG-Z_MAG)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.01,' 'KCC_rz,' 'R_MAG-Z_MAG)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'RA_DMS_5' converting RA in degrees to DMS string format with 5 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_5 degreesToDms(RA, 5)' out=dms_ra_5s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_5 degreesToDms(RA, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DEC_DMS_5' converting DEC in degrees to DMS string format with 5 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_5 degreesToDms(DEC, 5)' out=dms_dec_5s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_5 degreesToDms(DEC, 5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '5)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'FIELD' and calculate the population variance of 'MAG'.",
        "response": "stilts tpipe in=data.fits cmd='group FIELD MAG;stdev-pop;MAG_PSTDEV' cmd='replacecol MAG_PSTDEV square(MAG_PSTDEV)' out=field_mag_pop_var.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: stdev-pop\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_NEW_3' converting Johnson U mag to AB, explicitly setting its UCD and unit.",
        "response": "stilts tpipe in=phot.fits cmd='addcol -ucd \"phot.mag;em.opt.U\" -units mag MAG_U_AB_NEW_3 MAG_U + JOHNSON_AB_U' out=u_ab_new_meta_3.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_U'\n\nCommand was: addcol -ucd \"phot.mag;em.opt.U\" -units mag MAG_U_AB_NEW_3 MAG_U + JOHNSON_AB_U\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_U')\n"
    },
    {
        "prompt": "Add a column 'ERROR_COND_9' that is 1.0 if 'ERR_A' is not equal to 'ERR_B', and 0.0 otherwise, using strict comparison.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_9 !equals(toString(ERR_A), toString(ERR_B)) ? 1.0 : 0.0' out=conditional_error_9.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'toString(ERR_B))' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_9 !equals(toString(ERR_A), toString(ERR_B)) ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'toString(ERR_B))' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q50_1350PC' containing the median distance estimate (L=1350pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q50_1350PC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.5)' out=median_dist_1350pc_v2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q50_1350PC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 1350.0, 0.5)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '1350.0,' '0.5)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'VEL_GAL_Y_COMP_2' containing the Y (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_Y_COMP_2 icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))' out=galactic_y_vel_comp_3.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_Y_COMP_2 icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB_NEW_2' converting J magnitude to AB and then to absolute magnitude using distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_NEW_2 MAG_J + VEGA_AB_J' cmd='addcol MAG_ABS_J_AB_NEW_2 MAG_J_AB_NEW_2 - distanceToModulus(DISTANCE_PC)' out=j_abs_ab_new_2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_NEW_2 MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'TIME_STRING_5DP' converting MJD time 'TIME_MJD' to ISO-8601 string format with 5 decimal places for seconds.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_STRING_5DP formatMjd(TIME_MJD, \"yyyy-MM-dd'T'HH:mm:ss.SSSSS\")' out=iso_time_5dp.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'yyyy-MM-ddTHH:mm:ss.SSSSS' ')'\n\nCommand was: addcol TIME_STRING_5DP formatMjd(TIME_MJD, \"yyyy-MM-ddTHH:mm:ss.SSSSS\")\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'yyyy-MM-ddTHH:mm:ss.SSSSS' ')')\n"
    },
    {
        "prompt": "Add a column 'ERROR_COND_10' that is 1.0 if 'ERR_A' is greater than 1.0 and 'ERR_B' is less than 0.5, and 0.0 otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_10 (ERR_A > 1.0 && ERR_B < 0.5) ? 1.0 : 0.0' out=conditional_error_10.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '1.0' '&&' 'ERR_B' '<' '0.5)' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_10 (ERR_A > 1.0 && ERR_B < 0.5) ? 1.0 : 0.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '1.0' '&&' 'ERR_B' '<' '0.5)' '?' '1.0' ':' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q5_3KPC' containing the 5th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q5_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.05)' out=q5_dist_3kpc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.05)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q5_3KPC distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.05)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.05)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_R_AB_V_2' converting Johnson R magnitude to AB, using the deprecated V-band constant.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_R_AB_V_2 MAG_R + JOHNSON_AB_V' out=r_ab_v_conv_2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_R_AB_V_2 MAG_R + JOHNSON_AB_V\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_V'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'KCORR_J_K' using the KCF_J filter at Z=0.01, leveraging the J-K color (KCC_JK).",
        "response": "stilts tpipe in=nir_data.fits cmd='addcol KCORR_J_K kCorr(KCF_J, 0.01, KCC_JK, MAG_J-MAG_K)' out=kcorr_jk.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.01,' 'KCC_JK,' 'MAG_J-MAG_K)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol KCORR_J_K kCorr(KCF_J, 0.01, KCC_JK, MAG_J-MAG_K)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0.01,' 'KCC_JK,' 'MAG_J-MAG_K)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'RA_DMS_6' converting RA in degrees to DMS string format with 6 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol RA_DMS_6 degreesToDms(RA, 6)' out=dms_ra_6s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '6)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_DMS_6 degreesToDms(RA, 6)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '6)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'DEC_DMS_6' converting DEC in degrees to DMS string format with 6 decimal places for seconds.",
        "response": "stilts tpipe in=coords.fits cmd='addcol DEC_DMS_6 degreesToDms(DEC, 6)' out=dms_dec_6s.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '6)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DEC_DMS_6 degreesToDms(DEC, 6)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '6)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'FIELD' and calculate the mean and median of the absolute magnitude (M_ABS).",
        "response": "stilts tpipe in=data.fits cmd='addcol M_ABS MAG - distanceToModulus(DISTANCE)' cmd='group FIELD M_ABS;mean;MEAN_M_ABS M_ABS;median;MEDIAN_M_ABS' out=field_abs_mag_stats.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'distanceToModulus(DISTANCE)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol M_ABS MAG - distanceToModulus(DISTANCE)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'distanceToModulus(DISTANCE)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_U_AB_OLD_4' converting Johnson U magnitude to AB, using the R-band deprecated constant name.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_U_AB_OLD_4 MAG_U + JOHNSON_AB_R' out=u_ab_old_conv_4.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_U_AB_OLD_4 MAG_U + JOHNSON_AB_R\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'JOHNSON_AB_R'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'CHANNEL' and collect all 'FLUX' values into an array, calculating the minimum of that array.",
        "response": "stilts tpipe in=spectra.fits cmd='group CHANNEL FLUX;array;FLUX_ARRS' cmd='addcol FLUX_MIN minimum(FLUX_ARRS)' cmd='delcols FLUX_ARRS' out=channel_min_spectra.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'ERROR_COND_11' that is true if 'ERR_A' is greater than 1.0 and 'ERR_B' is less than 0.5.",
        "response": "stilts tpipe in=data.fits cmd='addcol ERROR_COND_11 ERR_A > 1.0 && ERR_B < 0.5' out=conditional_error_11.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '1.0' '&&' 'ERR_B' '<' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ERROR_COND_11 ERR_A > 1.0 && ERR_B < 0.5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '>' '1.0' '&&' 'ERR_B' '<' '0.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'PLX_DIST_Q95_3KPC' containing the 95th percentile distance estimate (L=3000pc) derived from parallax.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PLX_DIST_Q95_3KPC_2 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.95)' out=q95_dist_3kpc_v2.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.95)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PLX_DIST_Q95_3KPC_2 distanceQuantilesEdsd(PARALLAX, PARALLAX_ERR, 3000.0, 0.95)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PARALLAX_ERR,' '3000.0,' '0.95)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group by 'CLASS' and aggregate the string column 'NAME' into an array, excluding blanks.",
        "response": "stilts tpipe in=data.fits cmd='group CLASS NAME;array;NAMES_NONBLANK' out=grouped_string_arrays_nb.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a column 'VEL_GAL_X_COMP_3' containing the X (Galactic) component of the space velocity vector.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol VEL_GAL_X_COMP_3 icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))' out=galactic_x_vel_comp_4.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol VEL_GAL_X_COMP_3 icrsToGal(astromUVW(array(RA, DEC, PARALLAX, PMRA, PMDEC, RV)))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV)))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'MAG_ABS_J_AB_OLD_3' converting J magnitude to AB and then to absolute magnitude using distance modulus.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_J_AB_OLD_3 MAG_J + VEGA_AB_J' cmd='addcol MAG_ABS_J_AB_OLD_3 MAG_J_AB_OLD_3 - distanceToModulus(DISTANCE_PC)' out=j_abs_ab_old_3.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_J_AB_OLD_3 MAG_J + VEGA_AB_J\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' 'VEGA_AB_J'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a column 'TIME_STRING_6DP' converting MJD time 'TIME_MJD' to ISO-8601 string format with 6 decimal places for seconds.",
        "response": "stilts tpipe in=time.fits cmd='addcol TIME_STRING_6DP formatMjd(TIME_MJD, \"yyyy-MM-dd'T'HH:mm:ss.SSSSSS\")' out=iso_time_6dp.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'yyyy-MM-ddTHH:mm:ss.SSSSSS' ')'\n\nCommand was: addcol TIME_STRING_6DP formatMjd(TIME_MJD, \"yyyy-MM-ddTHH:mm:ss.SSSSSS\")\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'yyyy-MM-ddTHH:mm:ss.SSSSSS' ')')\n"
    },
    {
        "prompt": "Read a FITS file, calculate the absolute K magnitude (K_abs), then output the first 100 rows to an ECSV file.",
        "response": "stilts tpipe in=catalog.fits cmd='addcol K_ABS K_MAG + 5 * log10(PARALLAX) + 5' cmd='head 100' ofmt=ecsv out=abs_k_mag.ecsv",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' '5' '*' 'log10(PARALLAX)' '+' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol K_ABS K_MAG + 5 * log10(PARALLAX) + 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '5' '*' 'log10(PARALLAX)' '+' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a CSV file using a pipe delimiter, delete the 'FLAG' column, and output the result to a VOTable using BINARY2 format.",
        "response": "stilts tpipe in=obs.csv ifmt='csv(delimiter=|)' cmd='delcols FLAG' ofmt='votable(format=BINARY2)' out=clean_obs.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Generate a 100-row table using the loop scheme, calculate Y=X^2, and output the results as a JSON table.",
        "response": "stilts tpipe in=:loop:100 cmd='addcol X i+1' cmd='addcol Y X*X' cmd='delcols i' ofmt=json out=squares.json",
        "chat.jar": "failed",
        "error": "Error: No handler for output format json\n    (No handler for table format \"json\")\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n"
    },
    {
        "prompt": "Filter a catalog for sources within 5 arcminutes of RA 150, Dec 10, then count the total number of remaining rows.",
        "response": "stilts tpipe in=survey.fits cmd='select skyDistanceDegrees(RA, DEC, 150.0, 10.0) * 3600.0 < 300.0' omode=count",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' '150.0,' '10.0)' '*' '3600.0' '<' '300.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, 150.0, 10.0) * 3600.0 < 300.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' '150.0,' '10.0)' '*' '3600.0' '<' '300.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the mean, minimum, and maximum of the 'FLUX' column for objects where 'Z' > 0.5.",
        "response": "stilts tpipe in=data.fits cmd='select Z > 0.5' cmd='keepcols FLUX' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select Z > 0.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Rename 'RA' to 'RA_DEG', 'DEC' to 'DEC_DEG', set their units to 'deg', and output the table metadata only.",
        "response": "stilts tpipe in=coords.fits cmd='colmeta -name RA_DEG RA -units deg' cmd='colmeta -name DEC_DEG DEC -units deg' omode=meta",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-units' 'deg'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: colmeta -name RA_DEG RA -units deg\n\nUsage: colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n               [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n               [-shape <n>[,<n>...][,*]] [-elsize <n>]\n               <colid-list>\n    (Unused arguments: '-units' 'deg'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert input FK4 J1950 coordinates (RA, DEC) to Galactic coordinates (GLON, GLAT).",
        "response": "stilts tpipe in=legacy_data.fits cmd='addskycoords fk4 galactic RA DEC GLON GLAT' out=legacy_galactic.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter a table to keep only every 100th row, then display the resulting table in a GUI window.",
        "response": "stilts tpipe in=large_survey.fits cmd='every 100' omode=gui",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Replace all occurrences of the placeholder magnitude value -99.99 with null in the 'MAG_R' column.",
        "response": "stilts tpipe in=phot.vot cmd='badval -99.99 MAG_R' out=phot_cleaned.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Check if every row in 'CLEAN_FLAG' is true, aborting if not, then discard the output table.",
        "response": "stilts tpipe in=data.fits cmd='assert CLEAN_FLAG' omode=discard",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a string column 'TYPE' and set it to 'GALAXY' for all rows, then save as an IPAC table.",
        "response": "stilts tpipe in=gals.fits cmd='addcol TYPE \"GALAXY\"' ofmt=ipac out=gals.tbl",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Explode a fixed-length array column named 'FLUX_BAND[4]' into five scalar columns.",
        "response": "stilts tpipe in=spectra.fits cmd='explodecols FLUX_BAND' out=spectra_exploded.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group all objects by their 'CLASS' string, calculating the total number of sources (COUNT) and the mean 'MAG' per class.",
        "response": "stilts tpipe in=cat.fits cmd='group CLASS 0;count;NUM_SOURCES MAG;mean;MEAN_MAG' out=class_summary.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: count\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Sort the input table by 'REDSHIFT' in descending order, then retrieve only the top 5 records.",
        "response": "stilts tpipe in=qso.fits cmd='sort -down REDSHIFT' cmd='head 5' out=highest_z.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the efficient sorting filter to find the 100 rows with the smallest 'ERR' value.",
        "response": "stilts tpipe in=data.fits cmd='sorthead 100 ERR' out=best_errors.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read an ASCII file, keep only columns starting with 'FLUX', and output the total data checksum.",
        "response": "stilts tpipe in=pipe_data.txt ifmt=ascii cmd='keepcols FLUX*' omode=checksum",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use synthetic sky data, calculate the proper motion vector magnitude (PM_TOTAL), and delete the individual PM components.",
        "response": "stilts tpipe in=:skysim:1000 cmd='addcol PM_TOTAL hypot(pmra, pmdec)' cmd='delcols pmra pmdec' out=sim_pm_total.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_TOTAL hypot(pmra, pmdec)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a table, convert the ISO-8601 time string to Modified Julian Date (MJD), and output the first 10 rows to standard output.",
        "response": "stilts tpipe in=obs_log.fits cmd='addcol MJD isoToMjd(TIME_ISO)' cmd='head 10' ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Apply a simple magnitude correction formula to the 'MAG_G' column in place.",
        "response": "stilts tpipe in=phot.fits cmd='replacecol MAG_G MAG_G - 0.03 * (MAG_G - MAG_R)' out=phot_corrected.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' '0.03' '*' '(MAG_G' '-' 'MAG_R)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_G MAG_G - 0.03 * (MAG_G - MAG_R)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '0.03' '*' '(MAG_G' '-' 'MAG_R)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove all rows that have duplicate values in the 'OBS_ID' column (assuming they are adjacent or presorted).",
        "response": "stilts tpipe in=obs.fits cmd='sort OBS_ID' cmd='uniq OBS_ID' out=unique_obs.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Replace the 'FLUX_ERR' column with a new one calculated as 1.0 / sqrt(FLUX_ERR) and rename it 'WEIGHT'.",
        "response": "stilts tpipe in=data.fits cmd='replacecol FLUX_ERR 1.0 / sqrt(FLUX_ERR)' cmd='colmeta -name WEIGHT FLUX_ERR' out=weighted_data.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' 'sqrt(FLUX_ERR)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_ERR 1.0 / sqrt(FLUX_ERR)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' 'sqrt(FLUX_ERR)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a table, filter rows where 'QUALITY' flag is not 0, then shuffle the remaining rows randomly.",
        "response": "stilts tpipe in=large.fits cmd='select QUALITY != 0' cmd='shuffle' out=shuffled_filtered.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select QUALITY != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Identify constant columns, promote their value to table parameters, and save the result.",
        "response": "stilts tpipe in=survey.fits cmd='constcol' out=survey_clean_params.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Select only columns named 'ID', 'RA', and those starting with 'FLUX'.",
        "response": "stilts tpipe in=table.fits cmd='keepcols \"ID RA FLUX*\"' out=subset_flux.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert a radial velocity column (RV) in km/s to normalized velocity (RV/c), adding a new column.",
        "response": "stilts tpipe in=stars.fits cmd='addcol RV_NORM RV / 299792.458' out=normalized_rv.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' '299792.458'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RV_NORM RV / 299792.458\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '299792.458'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Add a new column 'LOG_MASS' using `log10(MASS)`, setting the output column UCD explicitly.",
        "response": "stilts tpipe in=gals.fits cmd='addcol -ucd phys.mass;arith.log LOG_MASS log10(MASS)' out=gals_log_mass.fits",
        "chat.jar": "failed",
        "error": "Error: Bad addcol specification\n\nCommand was: addcol -ucd phys.mass\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Bad addcol specification)\n"
    },
    {
        "prompt": "Retrieve the column names and data types, sorted by name, as a result table (using the `meta` filter).",
        "response": "stilts tpipe in=my_table.fits cmd=meta cmd='sort Name' out=meta_sorted.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows to keep those where the flux ratio (FLUX1/FLUX2) is between 0.9 and 1.1.",
        "response": "stilts tpipe in=bands.fits cmd='select FLUX1/FLUX2 BETWEEN 0.9 AND 1.1' out=low_variability.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'BETWEEN' '0.9' 'AND' '1.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLUX1/FLUX2 BETWEEN 0.9 AND 1.1\n\nUsage: select <expr>\n    (Unused arguments: 'BETWEEN' '0.9' 'AND' '1.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a VOTable, use the `group` filter to calculate the median and quartile range (Q1, Q3) of 'TEFF' for each unique 'FE_H' value.",
        "response": "stilts tpipe in=stellar_abundances.vot cmd='group FE_H TEFF;median;MED_TEFF TEFF;Q1;Q1_TEFF TEFF;Q3;Q3_TEFF' out=teff_summary.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: median\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Generate 1000 rows, add a random number, then keep only the rows with a random number greater than 0.9.",
        "response": "stilts tpipe in=:loop:1000 cmd='addcol RAND random($0)' cmd='select RAND > 0.9' out=random_sample_filter.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RAND > 0.9\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.9'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read input from standard input (FITS), keep columns using the array index $1, $2, then send to TOPCAT.",
        "response": "stilts tpipe in=- ifmt=fits cmd='keepcols $1 $2' omode=topcat",
        "chat.jar": "failed",
        "error": "Error: FITS ended before header\n"
    },
    {
        "prompt": "Use `replaceval` to change a blank/null value in 'MAG' to a nominal value of 25.0.",
        "response": "stilts tpipe in=survey.fits cmd='replaceval NULL 25.0 MAG' out=survey_no_nulls.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert degrees/min/sec components to a single decimal degree RA column, then delete the components.",
        "response": "stilts tpipe in=raw.fits cmd='replacecol RA hmsToDegrees(RA_H, RA_M, RA_S)' cmd='delcols RA_H RA_M RA_S' out=decimal_ra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'RA_M,' 'RA_S)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA hmsToDegrees(RA_H, RA_M, RA_S)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'RA_M,' 'RA_S)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Select only rows 500 to 1000, inclusive (using the 1-based index).",
        "response": "stilts tpipe in=huge_cat.fits cmd='rowrange 500 1000' out=middle_sample.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert a time column from decimal year to MJD using `mjdToDecYear`'s inverse.",
        "response": "stilts tpipe in=times.fits cmd='replacecol TIME mjdToDecYear(TIME)' out=times_mjd.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read an ECSV file and output the table's structural metadata in text format to the console.",
        "response": "stilts tpipe in=data.ecsv ifmt=ecsv omode=meta ofmt=text out=-",
        "chat.jar": "failed",
        "error": "Error: ofmt=text: out and ofmt parameters can only be used when omode=out\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n"
    },
    {
        "prompt": "Read a table with string column names containing spaces, automatically fix those names, and select only the fixed columns.",
        "response": "stilts tpipe in=messy.fits cmd='fixcolnames' cmd='keepcols ID_OBJ RA_DEG DEC_DEG' out=clean_names.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'RA_DEG' 'DEC_DEG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID_OBJ RA_DEG DEC_DEG\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'RA_DEG' 'DEC_DEG'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the `group` filter to calculate both the sum and mean of 'MASS' per 'TYPE'.",
        "response": "stilts tpipe in=objects.fits cmd='group TYPE MASS;sum;TOTAL_MASS MASS;mean;MEAN_MASS' out=mass_stats_per_type.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: sum\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Add a numeric column based on a conditional expression, setting it to 1 if MAG<15, else 0.",
        "response": "stilts tpipe in=phot.fits cmd='addcol IS_BRIGHT MAG < 15 ? 1 : 0' out=phot_flags.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '15' '?' '1' ':' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_BRIGHT MAG < 15 ? 1 : 0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '15' '?' '1' ':' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Take a random 10% subset of a table and calculate the population standard deviation of 'Z' in that subset.",
        "response": "stilts tpipe in=big_data.fits cmd='random 0.1' cmd='keepcols Z' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.1\n\nUsage: random\n    (Unused arguments: '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Display the checksum of the table after removing columns using the UCD filter (e.g., all photometry).",
        "response": "stilts tpipe in=full_data.fits cmd='delcols ucd$phot_mag_*' omode=checksum",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use a sequential random number generator to assign a unique random ID to each row, outputting to a CSV file.",
        "response": "stilts tpipe in=cat.fits cmd='addcol RAND_ID nextRandom()' ofmt=csv out=random_ids.csv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows where proper motion in RA (PMRA) is greater than 10 mas/yr, then pipe the result to TOPCAT.",
        "response": "stilts tpipe in=gaia.fits cmd='select PMRA > 10.0' omode=topcat",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PMRA > 10.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the `group` filter to collect all non-blank 'FLUX' values into an array column named 'FLUXES' for each 'FIELD_ID'.",
        "response": "stilts tpipe in=observations.fits cmd='group FIELD_ID FLUX;array;FLUXES' out=grouped_flux_arrays.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Calculate a distance modulus column (DIST_MOD) from parallax (PLX) and filter out any rows where PLX < 0.",
        "response": "stilts tpipe in=stars.fits cmd='select PLX > 0' cmd='addcol DIST_MOD 5 * log10(1.0 / (PLX/1000.0)) - 5' out=dist_mod.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PLX > 0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Retrieve the last 50 rows of a large file and output the table structure, ensuring the input is treated as a stream.",
        "response": "stilts tpipe in=huge.vot istream=true cmd='tail 50' omode=meta",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"huge.vot\"\n"
    },
    {
        "prompt": "Explode all array columns in the input table and rename the output table.",
        "response": "stilts tpipe in=arrays.fits cmd='explodeall' cmd='tablename exploded_scalars' out=exploded.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use a long command string to perform filtering, column addition, and sorting.",
        "response": "stilts tpipe in=data.fits cmd='select MAG < 20; addcol B_R B_MAG - R_MAG; sort -down B_R' out=processed_sorted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 20\n\nUsage: select <expr>\n    (Unused arguments: '<' '20'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a table, convert the string column 'ERROR_STR' to a double-precision float, replacing the original column.",
        "response": "stilts tpipe in=log.txt ifmt=ascii cmd='replacecol ERROR_STR parseDouble(ERROR_STR)' cmd='colmeta -units mag ERROR_STR' out=log_numeric_error.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Duplicate every row in the input catalogue twice, placing the duplicate immediately after the original.",
        "response": "stilts tpipe in=cat.fits cmd='repeat -row 2' out=doubled_cat.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a FITS catalog, remove rows where the magnitude error (MAG_ERR) is zero, and replace the column description of 'RA_ICRS' to include units.",
        "response": "stilts tpipe in=survey.fits cmd='select MAG_ERR != 0' cmd='colmeta -desc \"Right Ascension (ICRS, deg)\" RA_ICRS' out=clean_survey.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_ERR != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a million simulated stars, select only those visible in the Southern Hemisphere (DEC < 0), and then calculate the statistical summary of their magnitudes (GMAG).",
        "response": "stilts tpipe in=:skysim:1000000 cmd='select dec < 0' cmd='keepcols gmag' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select dec < 0\n\nUsage: select <expr>\n    (Unused arguments: '<' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a CSV file, calculate the base-10 logarithm of 'FLUX', and save the result as a portable FITS-plus file to retain metadata.",
        "response": "stilts tpipe in=photometry.csv ifmt=csv cmd='addcol LOG_FLUX log10(FLUX)' ofmt=fits-plus out=log_flux.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter a large table to keep only every 500th row, then display the resulting subset table in a graphical user interface (GUI) window.",
        "response": "stilts tpipe in=massive.fits cmd='every 500' omode=gui",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Take a file, apply a boolean expression check, and halt execution with an error message if any row fails the check (e.g., if Z > 10).",
        "response": "stilts tpipe in=qso_data.fits cmd='assert Z < 10.0' cmd='assert \"Redshift is too high at row \" + $0' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert Z < 10.0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a VOTable, define a new string column 'SHORT_NAME' using the substring function on 'FULL_NAME', and save the output in JSON format.",
        "response": "stilts tpipe in=objects.vot cmd='addcol SHORT_NAME substring(FULL_NAME, 0, 10)' ofmt=json out=short_names.json",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0,' '10)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SHORT_NAME substring(FULL_NAME, 0, 10)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '0,' '10)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Sort a table by magnitude (V_MAG) descending, retaining only the 20 faintest objects, and output the total number of rows retained.",
        "response": "stilts tpipe in=stars.fits cmd='sorthead 20 V_MAG' omode=count",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert celestial coordinates from FK4 B1950 (RA_B, DEC_B) to ICRS (RA_I, DEC_I) using the addskycoords filter.",
        "response": "stilts tpipe in=legacy.fits cmd='addskycoords fk4 icrs RA_B DEC_B RA_I DEC_I' out=icrs_converted.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Collapse three scalar magnitude columns (U, G, R) into a single 3-element array column named 'UG_R_MAGS'.",
        "response": "stilts tpipe in=phot.fits cmd='collapsecols UG_R_MAGS U G 3' out=phot_array.fits",
        "chat.jar": "failed",
        "error": "Error: Non-numeric <ncol>: \"G\"\n\nCommand was: collapsecols UG_R_MAGS U G 3\n\nUsage: collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n    (Non-numeric <ncol>: \"G\")\n"
    },
    {
        "prompt": "Read a table, convert the proper motion columns (PMRA, PMDEC) from mas/yr to km/s at 1 kpc distance (using distance=1000/PLX), then remove the original PM columns.",
        "response": "stilts tpipe in=gaia_abundances.fits cmd='addcol RV_RA (PMRA * 4.740470446 / 1000) * (1000/PLX)' cmd='addcol RV_DEC (PMDEC * 4.740470446 / 1000) * (1000/PLX)' cmd='delcols PMRA PMDEC' out=rv_converted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' '4.740470446' '/' '1000)' '*' '(1000/PLX)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RV_RA (PMRA * 4.740470446 / 1000) * (1000/PLX)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' '4.740470446' '/' '1000)' '*' '(1000/PLX)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group a table by the 'CLASS' column and calculate the median 'FLUX' and the maximum 'ERROR' for each group.",
        "response": "stilts tpipe in=data.fits cmd='group CLASS FLUX;median;MED_FLUX ERROR;max;MAX_ERROR' out=group_median_max.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: median\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Read a table with columns 'RA_H', 'RA_M', 'RA_S' and combine them into a single decimal degree column 'RA_DEG', then remove the original columns.",
        "response": "stilts tpipe in=hms_cat.fits cmd='replacecol RA_H hmsToDegrees(RA_H, RA_M, RA_S)' cmd='colmeta -name RA_DEG RA_H' cmd='delcols RA_M RA_S' out=decimal_hms.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'RA_M,' 'RA_S)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA_H hmsToDegrees(RA_H, RA_M, RA_S)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'RA_M,' 'RA_S)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the population variance of the 'TEMP' column, but first discard rows where 'FLAG' is greater than 5.",
        "response": "stilts tpipe in=measurements.fits cmd='select FLAG <= 5' cmd='keepcols TEMP' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<=' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG <= 5\n\nUsage: select <expr>\n    (Unused arguments: '<=' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Set the table name to 'Processed_Data' and output the table metadata only.",
        "response": "stilts tpipe in=input.fits cmd='tablename Processed_Data' omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Select only rows where the expression 'log10(FLUX) > 1.5' is true.",
        "response": "stilts tpipe in=deep_field.fits cmd='select log10(FLUX) > 1.5' out=high_log_flux.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '1.5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select log10(FLUX) > 1.5\n\nUsage: select <expr>\n    (Unused arguments: '>' '1.5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a table, ensure random access by caching the data, and then output the checksum of the table content.",
        "response": "stilts tpipe in=streamed.vot cmd=cache omode=checksum",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter a table to keep only the second and third table columns (using $ID notation).",
        "response": "stilts tpipe in=full.fits cmd='keepcols $2 $3' out=cols2_3.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '$3'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols $2 $3\n\nUsage: keepcols <colid-list>\n    (Unused arguments: '$3'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove the column 'COMMENT' and output the modified table to standard output in text format.",
        "response": "stilts tpipe in=data.fits cmd='delcols COMMENT' ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "In a table with proper motions, filter out sources where the total proper motion (hypot(PMRA, PMDEC)) is less than 10 mas/yr.",
        "response": "stilts tpipe in=gaia_pm.fits cmd='select hypot(PMRA, PMDEC) >= 10.0' out=high_pm.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC)' '>=' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) >= 10.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>=' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Set the UCD of the 'REDSHIFT' column to 'spect.z' and the unit to 'dimensionless'.",
        "response": "stilts tpipe in=z_cat.fits cmd='colmeta -ucd spect.z -units dimensionless REDSHIFT' out=z_metadata.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Generate a table from the loop scheme with 50 rows, then add a second column calculated as sin(i / 10.0).",
        "response": "stilts tpipe in=:loop:50 cmd='addcol Y sin(i / 10.0)' out=sine_loop.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' '10.0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol Y sin(i / 10.0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '/' '10.0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter out rows where the stellarity index is 0.0 or less, treating blank values in STELLARITY as false.",
        "response": "stilts tpipe in=stars.fits cmd='select STELLARITY > 0.0' out=positive_stellarity.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select STELLARITY > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Find rows where 'MJD' is greater than 58000 and calculate the column `DEC_YEAR` from MJD.",
        "response": "stilts tpipe in=obs.fits cmd='select MJD > 58000' cmd='addcol DEC_YEAR mjdToDecYear(MJD)' out=recent_obs.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '58000'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MJD > 58000\n\nUsage: select <expr>\n    (Unused arguments: '>' '58000'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a Parquet file, and pipe the table directly into TOPCAT for visual inspection.",
        "response": "stilts tpipe in=large_data.parquet omode=topcat",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert a time column from ISO-8601 string format to MJD, assuming the column is called 'DATE_STR'.",
        "response": "stilts tpipe in=log.fits cmd='addcol MJD isoToMjd(DATE_STR)' out=mjd_log.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the median of the 'TEMPERATURE' column after removing the top 10% of rows by 'Z_SCORE'.",
        "response": "stilts tpipe in=temps.fits cmd='sort -down Z_SCORE' cmd='rowrange 1 +round($nrow * 0.9)' cmd='keepcols TEMPERATURE' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Arg \"iStr\" not <int> or +<int>\n\nCommand was: rowrange 1 +round($nrow * 0.9)\n\nUsage: rowrange <first> <last>|+<count>\n    (Arg \"iStr\" not <int> or +<int>)\n"
    },
    {
        "prompt": "Filter an input table, then duplicate every resulting row exactly once.",
        "response": "stilts tpipe in=data.fits cmd='select FLAG == true' cmd='repeat -row 2' out=duplicated_flags.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '==' 'true'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG == true\n\nUsage: select <expr>\n    (Unused arguments: '==' 'true'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Replace null values in the 'FLUX_I' column with the numeric value 0.0.",
        "response": "stilts tpipe in=phot.fits cmd='replaceval NULL 0.0 FLUX_I' out=flux_zero_nulls.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove all rows that have identical values in both the 'ID' and 'FIELD' columns.",
        "response": "stilts tpipe in=detections.fits cmd='sort ID FIELD' cmd='uniq ID FIELD' out=unique_detections.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'FIELD'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort ID FIELD\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: 'FIELD'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the average 'FLUX_U' and 'FLUX_G' across the entire catalog and output the statistics.",
        "response": "stilts tpipe in=survey.fits cmd='keepcols FLUX_U FLUX_G' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'FLUX_G'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols FLUX_U FLUX_G\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'FLUX_G'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Select the bottom 25 rows of a table and output them in IPAC format.",
        "response": "stilts tpipe in=full_log.fits cmd='tail 25' ofmt=ipac out=log_tail.tbl",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, convert the position angle column (PA_DEG) from 0-360 degrees to radians, and rename the column to PA_RAD.",
        "response": "stilts tpipe in=angles.fits cmd='replacecol PA_DEG degreesToRadians(PA_DEG)' cmd='colmeta -name PA_RAD PA_DEG' out=angles_rad.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the assert filter to check if the total number of rows is exactly 500.",
        "response": "stilts tpipe in=fixed_list.fits cmd='assert $nrow == 500' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '500'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $nrow == 500\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '500'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert a string column of JSON arrays named 'VERTICES' into an array of doubles.",
        "response": "stilts tpipe in=polygons.fits cmd='replacecol VERTICES jsonToDoubles(VERTICES)' out=numeric_polygons.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Identify constant columns, remove them, and ensure their constant value is preserved as a table parameter.",
        "response": "stilts tpipe in=data.fits cmd='constcol' out=data_with_params.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter an ECSV table to include only rows where 'SNR' is greater than 100, running the process in streaming mode if possible.",
        "response": "stilts tpipe in=spectrum.ecsv ifmt=ecsv istream=true cmd='select SNR > 100' out=high_snr_stream.fits",
        "chat.jar": "failed",
        "error": "Error: No file, URL or command \"spectrum.ecsv\"\n"
    },
    {
        "prompt": "Explode a 3-element array column 'XYZ_POS' into three scalar columns: 'X', 'Y', 'Z'.",
        "response": "stilts tpipe in=vectors.fits cmd='explodecols XYZ_POS' cmd='colmeta -name X XYZ_POS_0; colmeta -name Y XYZ_POS_1; colmeta -name Z XYZ_POS_2' out=scalars.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by the binary 'TYPE' flag, and aggregate the non-blank 'FLUX' values into an array for each group.",
        "response": "stilts tpipe in=data.fits cmd='group TYPE FLUX;array;FLUX_ARRAY' out=grouped_flux_arrays.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Read a table from a compressed URL, convert the proper motion (PM) from mas/yr to degrees/yr, and save the checksum.",
        "response": "stilts tpipe in=http://example.com/gaia.fits.gz cmd='replacecol PMRA PMRA / 3600000.0' omode=checksum",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol PMRA PMRA / 3600000.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '3600000.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Select only columns whose UCD contains 'phot.mag', and output the final table's column metadata in text format.",
        "response": "stilts tpipe in=full_cat.fits cmd='keepcols ucd$phot_mag_*' omode=meta ofmt=text out=-",
        "chat.jar": "failed",
        "error": "Error: ofmt=text: out and ofmt parameters can only be used when omode=out\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n"
    },
    {
        "prompt": "Calculate the population standard deviation of the column 'AGE', excluding rows where AGE is negative.",
        "response": "stilts tpipe in=population.fits cmd='select AGE >= 0' cmd='keepcols AGE' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select AGE >= 0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Select rows where RA is greater than 180 degrees, then randomly permute the remaining rows.",
        "response": "stilts tpipe in=sky_data.fits cmd='select RA > 180.0' cmd='shuffle' out=shuffled_hemisphere.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '180.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 180.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '180.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the rowrange filter to extract rows 1000 through 1199 (a range of 200 rows).",
        "response": "stilts tpipe in=full_set.fits cmd='rowrange 1000 +200' out=subset_200.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a FITS file and replace the string 'GALAXY' with 'GAL' in the 'TYPE' column.",
        "response": "stilts tpipe in=objects.fits cmd='replaceval \"GALAXY\" \"GAL\" TYPE' out=type_abbreviated.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Set a table parameter 'MJD_OBS' to the fixed value 59000.0.",
        "response": "stilts tpipe in=data.fits cmd='setparam MJD_OBS 59000.0' out=data_param_set.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter a table to include only the first 50 rows, then assert that the table is still readable randomly (cache filter implies random access).",
        "response": "stilts tpipe in=huge.fits cmd='head 50' cmd=cache out=small_random.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read an ASCII file, and automatically fix messy column names (e.g., those containing spaces or symbols) to be syntactically legal.",
        "response": "stilts tpipe in=messy.txt ifmt=ascii cmd='fixcolnames' out=clean_names.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert coordinates from ICRS (RA, DEC) to Galactic (GLON, GLAT), saving the result in a VOTable.",
        "response": "stilts tpipe in=icrs_cat.fits cmd='addskycoords icrs galactic RA DEC GLON GLAT' out=galactic_cat.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Transpose an input table so columns become rows and vice versa, using the 'ID' column as the name for the output columns.",
        "response": "stilts tpipe in=long_form.fits cmd='transpose -namecol ID' out=wide_form.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the distance modulus (DM) from parallax (PLX) in mas, assuming DM = 5 * log10(100 / PLX) - 5, and filter out all rows where PLX is non-positive.",
        "response": "stilts tpipe in=gaia.fits cmd='select PLX > 0.0' cmd='addcol DIST_MOD 5 * log10(100.0 / PLX) - 5' out=dist_mod_positive.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select PLX > 0.0\n\nUsage: select <expr>\n    (Unused arguments: '>' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group a table by 'COLOR_BIN' and collect all 'ID' strings into an array column for each bin.",
        "response": "stilts tpipe in=data.fits cmd='group COLOR_BIN ID;array;IDS' out=grouped_ids.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Use the conditional operator to create a column 'MAG_CLEAN' which is 'MAG' if 'MAG_FLAG' is false, otherwise it is null.",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_CLEAN MAG_FLAG == false ? MAG : NULL' out=phot_conditional.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '==' 'false' '?' 'MAG' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_CLEAN MAG_FLAG == false ? MAG : NULL\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '==' 'false' '?' 'MAG' ':' 'NULL'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Replace a column 'FLUX_ERR' with the expression '1.0 / (FLUX_ERR * FLUX_ERR)' to calculate the weight, and rename the column to 'WEIGHT'.",
        "response": "stilts tpipe in=errors.fits cmd='replacecol FLUX_ERR 1.0 / (FLUX_ERR * FLUX_ERR)' cmd='colmeta -name WEIGHT FLUX_ERR' out=weights.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '/' '(FLUX_ERR' '*' 'FLUX_ERR)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol FLUX_ERR 1.0 / (FLUX_ERR * FLUX_ERR)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '/' '(FLUX_ERR' '*' 'FLUX_ERR)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a table of 100 random numbers sampled from a Gaussian distribution.",
        "response": "stilts tpipe in=:loop:100 cmd='addcol GAUSS randomGaussian(i)' cmd='delcols i' out=gaussian_sample.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a FITS file and rename all columns that contain the substring 'FLUX' by appending '_RAW' to their names.",
        "response": "stilts tpipe in=raw_data.fits cmd='colmeta -name FLUX*_RAW FLUX*' out=renamed_fluxes.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the `statline` layer type (available in plot2plane via post-processing) on a spectral array to calculate the mean spectrum and output the resulting table (assuming a pre-existing table 'spectra.fits').",
        "response": "stilts tpipe in=spectra.fits cmd='tgroup 1;count;N wav_array;array;WAVES flux_array;array;FLUXES' cmd='addcol MEAN_FLUX arrayFunc(\"mean(FLUXES)\", WAVES)' cmd='addcol MEAN_WAVE arrayFunc(\"mean(WAVES)\", WAVES)' cmd='keepcols \"MEAN_FLUX MEAN_WAVE N\"' out=mean_spectrum.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Filter rows to keep those whose 'ID_STR' column starts with 'SDSS', then output the table structure, excluding the data.",
        "response": "stilts tpipe in=ids.fits cmd='select startsWith(ID_STR, \"SDSS\")' omode=meta",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'SDSS' ')'\n\nCommand was: select startsWith(ID_STR, \"SDSS\")\n\nUsage: select <expr>\n    (Unused arguments: 'SDSS' ')')\n"
    },
    {
        "prompt": "Convert a long integer row index ($0) to a string padded with zeros to 8 digits.",
        "response": "stilts tpipe in=:loop:100 cmd='replacecol i padWithZeros(i, 8)' out=padded_index.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '8)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol i padWithZeros(i, 8)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '8)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "For an array column 'FLUX_BANDS', calculate the array's median and store it as a scalar column 'MED_FLUX'.",
        "response": "stilts tpipe in=array_data.fits cmd='addcol MED_FLUX median(FLUX_BANDS)' out=median_scalar.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Set the output format to VOTable BINARY2 and ensure that the table is processed in a single pass using in-memory caching.",
        "response": "stilts tpipe in=large.fits cmd=cache ofmt='votable(format=BINARY2)' out=output_binary2.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, select only columns with 'RA' or 'DEC' in their UCD, and output the total data checksum.",
        "response": "stilts tpipe in=astro_data.fits cmd='keepcols ucd$pos_eq_ra_* ucd$pos_eq_dec_*' omode=checksum",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ucd$pos_eq_dec_*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$pos_eq_ra_* ucd$pos_eq_dec_*\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$pos_eq_dec_*'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows where the ICRS distance between (RA, DEC) and a fixed point (10, 5) is less than 0.1 degrees.",
        "response": "stilts tpipe in=cat.fits cmd='select skyDistanceDegrees(RA, DEC, 10.0, 5.0) < 0.1' out=cone_0_1.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC,' '10.0,' '5.0)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA, DEC, 10.0, 5.0) < 0.1\n\nUsage: select <expr>\n    (Unused arguments: 'DEC,' '10.0,' '5.0)' '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert a table from CSV to LaTeX format, ensuring the output is a standalone LaTeX document.",
        "response": "stilts tpipe in=report.csv ifmt=csv ofmt='latex(standalone=true)' out=report.tex",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Find rows where the magnitude 'MAG_J' is null and replace the value with 25.0.",
        "response": "stilts tpipe in=phot.fits cmd='replacecol MAG_J NULL_MAG_J ? 25.0 : MAG_J' out=imputed_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '?' '25.0' ':' 'MAG_J'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol MAG_J NULL_MAG_J ? 25.0 : MAG_J\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '?' '25.0' ':' 'MAG_J'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the fraction of the year passed (using day-of-year expression) and add it as a column `FRAC_YEAR`.",
        "response": "stilts tpipe in=dates.fits cmd='addcol FRAC_YEAR (MJD - decYearToMjd(round(mjdToDecYear(MJD)))) / 365.25' out=fractional_year.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'decYearToMjd(round(mjdToDecYear(MJD))))' '/' '365.25'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol FRAC_YEAR (MJD - decYearToMjd(round(mjdToDecYear(MJD)))) / 365.25\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' 'decYearToMjd(round(mjdToDecYear(MJD))))' '/' '365.25'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the `head` and `tail` filters in sequence to extract the first 100 rows and then the last 10 of those 100 (i.e., rows 91-100).",
        "response": "stilts tpipe in=data.fits cmd='head 100' cmd='tail 10' out=end_of_head.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by two keys, 'COLOR' and 'Z_BIN', and calculate the minimum, maximum, and count for each resulting group.",
        "response": "stilts tpipe in=data.fits cmd='group COLOR Z_BIN null;min;MIN_VAL null;max;MAX_VAL null;count;COUNT' out=min_max_count.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: min\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Set the table name parameter to 'Final Catalog' and remove all existing table parameters.",
        "response": "stilts tpipe in=input.fits cmd='clearparams *; tablename Final Catalog' out=final_cat.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Catalog'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was:  tablename Final Catalog\n\nUsage: tablename <name>\n    (Unused arguments: 'Catalog'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Sort the entire table by 'TIME_MJD' and output the checksum of the sorted table.",
        "response": "stilts tpipe in=time_series.fits cmd='sort TIME_MJD' omode=checksum",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read an array-per-row column named 'FLUX_ERR_ARRAY' and calculate the array's standard deviation into a scalar column 'STDEV_FLUX'.",
        "response": "stilts tpipe in=errors.fits cmd='addcol STDEV_FLUX stdev(FLUX_ERR_ARRAY)' out=stdev_flux.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert galactic coordinates (GLON, GLAT) to ICRS (RA, DEC), with the input coordinates in radians.",
        "response": "stilts tpipe in=galactic_rad.fits cmd='addskycoords -inunit rad galactic icrs GLON GLAT RA_ICRS DEC_ICRS' out=icrs_rad_converted.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the `assert` filter to check that the minimum value of 'MAG' is greater than 10.0.",
        "response": "stilts tpipe in=bright_stars.fits cmd='select MAG < 10.0' cmd='assert $nrow == 0 \"Found stars brighter than MAG=10.0\"' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG < 10.0\n\nUsage: select <expr>\n    (Unused arguments: '<' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Generate a table using the loop scheme from 1 to 1000, step 1, and output to a Feather format file.",
        "response": "stilts tpipe in=:loop:1,1001,1 ofmt=feather out=indexed.feather",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Load a table, apply a filter, and ensure that the intermediate filtered result is written to a disk cache before the final output.",
        "response": "stilts tpipe in=huge_data.fits cmd='select RA > 50' cmd=cache storage=disk out=cached_filtered.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>' '50'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select RA > 50\n\nUsage: select <expr>\n    (Unused arguments: '>' '50'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read an ECSV file, and locally add a column 'TEFF_K' which is simply a copy of the 'TEFF' column, but set its UCD to 'phys.temp.eff'.",
        "response": "stilts tpipe in=stars.ecsv ifmt=ecsv cmd='addcol -ucd phys.temp.eff TEFF_K TEFF' out=stars_ucd.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows to keep those where the JSON string column 'INFO_JSON' contains a value for the key 'status' equal to 'COMPLETE'.",
        "response": "stilts tpipe in=json_logs.fits cmd='select equals(jsonObject(INFO_JSON).getString(\"status\"), \"COMPLETE\")' out=completed_jobs.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '),' 'COMPLETE' ')'\n\nCommand was: select equals(jsonObject(INFO_JSON).getString(\"status\"), \"COMPLETE\")\n\nUsage: select <expr>\n    (Unused arguments: '),' 'COMPLETE' ')')\n"
    },
    {
        "prompt": "Read a table, calculate a new column 'LOG_R' (log base 10 of radius), filter out nulls, and rename the original 'R' column to 'OLD_R'.",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_R log10(R)' cmd='select !NULL_R' cmd='colmeta -name OLD_R R' out=log_r_data.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Generate a 10,000-row table using the synthetic attractor scheme (clifford), keep only the Y and Z coordinates, and calculate the checksum.",
        "response": "stilts tpipe in=:attractor:10000,clifford cmd='keepcols Y Z' omode=checksum",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'Z'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols Y Z\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'Z'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read an ECSV file, verify that the 'FLUX_ERR' is always positive, and discard the table data afterward.",
        "response": "stilts tpipe in=photometry.ecsv ifmt=ecsv cmd='assert FLUX_ERR > 0' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert FLUX_ERR > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter a catalog to include only sources where the total proper motion (hypot(PMRA, PMDEC)) is greater than 50 mas/yr.",
        "response": "stilts tpipe in=gaia.fits cmd='select hypot(PMRA, PMDEC) > 50.0' out=high_pm_stars.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC)' '>' '50.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select hypot(PMRA, PMDEC) > 50.0\n\nUsage: select <expr>\n    (Unused arguments: 'PMDEC)' '>' '50.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a FITS file, identify all constant-valued columns, and promote those values to table parameters, removing the columns from the row data.",
        "response": "stilts tpipe in=survey.fits cmd='constcol' out=survey_with_params.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a catalogue, calculate the statistical summary (mean, min, max, etc.) of 'TEMP' for rows where the error 'ERR_TEMP' is less than 0.1.",
        "response": "stilts tpipe in=measurements.fits cmd='select ERR_TEMP < 0.1' cmd='keepcols TEMP' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select ERR_TEMP < 0.1\n\nUsage: select <expr>\n    (Unused arguments: '<' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use an astronomical survey catalog, convert ICRS coordinates (RA, DEC) to Ecliptic coordinates (ECL_LON, ECL_LAT) in place, and save as a VOTable.",
        "response": "stilts tpipe in=cat.fits cmd='addskycoords icrs ecliptic RA DEC RA ECL_LAT' cmd='colmeta -name ECL_LON RA' out=ecliptic_coords.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Sort a table by 'Z' ascending, then by 'MAG' descending, and output the first 50 results as a LaTeX table.",
        "response": "stilts tpipe in=data.fits cmd='sort Z -down MAG' cmd='head 50' ofmt=latex out=top_z_mag.tex",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-down' 'MAG'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort Z -down MAG\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '-down' 'MAG'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Remove all rows containing a null value in any column in the table.",
        "response": "stilts tpipe in=raw_data.fits cmd='select !hasNull($0)' out=no_nulls.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Take a random 5% sample of a massive table and send the resulting subset directly to TOPCAT.",
        "response": "stilts tpipe in=massive_cat.fits cmd='random 0.05' omode=topcat",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.05'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.05\n\nUsage: random\n    (Unused arguments: '0.05'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read an ASCII file with space delimiters, clean up improper column names, and replace any nulls in 'FLUX' with 0.0.",
        "response": "stilts tpipe in=dirty_data.txt ifmt=ascii cmd='fixcolnames' cmd='replaceval NULL 0.0 FLUX' out=cleaned_fixed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group the input table by the integer expression 'round(log10(FLUX))', then calculate the total number of sources (count) in each flux bin.",
        "response": "stilts tpipe in=phot.fits cmd='group round(log10(FLUX)) null;count;COUNT' out=log_flux_bins.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: count\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Filter rows to include only those where the character string 'NAME' starts with 'NGC' or 'IC'.",
        "response": "stilts tpipe in=objects.fits cmd='select startsWith(NAME, \"NGC\") || startsWith(NAME, \"IC\")' out=ngc_ic_objects.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'NGC' ')' '||' 'startsWith(NAME,' 'IC' ')'\n\nCommand was: select startsWith(NAME, \"NGC\") || startsWith(NAME, \"IC\")\n\nUsage: select <expr>\n    (Unused arguments: 'NGC' ')' '||' 'startsWith(NAME,' 'IC' ')')\n"
    },
    {
        "prompt": "Read a table with string column 'TIME_ISO', convert it to MJD, assert all MJDs are post-2000 (MJD > 51544), and save the checksum.",
        "response": "stilts tpipe in=obs.fits cmd='addcol MJD isoToMjd(TIME_ISO)' cmd='assert MJD > 51544' omode=checksum",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '51544'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert MJD > 51544\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '51544'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a VOTable, use the positional crossmatch error matcher (skyerr) parameters to perform local filtering, keeping rows where separation is less than the quadrature sum of errors.",
        "response": "stilts tpipe in=matched.vot cmd='addcol SEP skyDistanceDegrees(RA_1, DEC_1, RA_2, DEC_2) * 3600.0' cmd='select SEP < hypot(ERR_1, ERR_2)' out=clean_skyerr.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC_1,' 'RA_2,' 'DEC_2)' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol SEP skyDistanceDegrees(RA_1, DEC_1, RA_2, DEC_2) * 3600.0\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'DEC_1,' 'RA_2,' 'DEC_2)' '*' '3600.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Split a single 3-element array column named 'FLUX_BANDS' into three separate scalar columns named 'F_U', 'F_G', and 'F_R'.",
        "response": "stilts tpipe in=arrays.fits cmd='explodecols FLUX_BANDS' cmd='colmeta -name F_U FLUX_BANDS_0; colmeta -name F_G FLUX_BANDS_1; colmeta -name F_R FLUX_BANDS_2' out=scalar_flux.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Duplicate every row in the input table 5 times, then randomly shuffle the resulting rows.",
        "response": "stilts tpipe in=small_cat.fits cmd='repeat -row 5' cmd='shuffle' out=shuffled_repeated.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the population standard deviation (`stdev-pop`) and the number of non-null items (`ngood`) of the `MAG_R` column.",
        "response": "stilts tpipe in=phot.fits cmd='keepcols MAG_R' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Select only rows where the decimal year (`DECYEAR`) is 2010.0 or later, and convert the RA coordinate to radians in a new column.",
        "response": "stilts tpipe in=data.fits cmd='select DECYEAR >= 2010.0' cmd='addcol RA_RAD degreesToRadians(RA)' out=recent_rad_ra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '>=' '2010.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select DECYEAR >= 2010.0\n\nUsage: select <expr>\n    (Unused arguments: '>=' '2010.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Transpose the table, setting the column names of the output rows from the 'ID' column of the input, and write the metadata only.",
        "response": "stilts tpipe in=data.fits cmd='transpose -namecol ID' omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a JSON string column 'GEO_INFO', extract the double value associated with the key 'latitude', and add it as a new column 'LAT_DEG'.",
        "response": "stilts tpipe in=log.fits cmd='addcol LAT_DEG jsonObject(GEO_INFO).getDouble(\"latitude\")' out=with_lat.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ')'\n\nCommand was: addcol LAT_DEG jsonObject(GEO_INFO).getDouble(\"latitude\")\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: ')')\n"
    },
    {
        "prompt": "Find the top 20 rows ordered by the square root of 'MASS', outputting the result in FITS-plus format.",
        "response": "stilts tpipe in=objects.fits cmd='sorthead 20 sqrt(MASS)' ofmt=fits-plus out=top_mass_sqrt.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter out rows where the string column 'ERROR_MESSAGE' matches the regular expression '.*(timeout|fail).*'.",
        "response": "stilts tpipe in=log.txt cmd='select !matches(ERROR_MESSAGE, \".*(timeout|fail).*\" )' out=successful_log.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '.*(timeout|fail).*' ')'\n\nCommand was: select !matches(ERROR_MESSAGE, \".*(timeout|fail).*\" )\n\nUsage: select <expr>\n    (Unused arguments: '.*(timeout|fail).*' ')')\n"
    },
    {
        "prompt": "Add a new column 'MAG_CHECK' that is 1 if 'MAG_G' is null, and 'MAG_G' otherwise (using the conditional operator).",
        "response": "stilts tpipe in=phot.fits cmd='addcol MAG_CHECK NULL_MAG_G ? 1 : MAG_G' out=checked_mag.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '?' '1' ':' 'MAG_G'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_CHECK NULL_MAG_G ? 1 : MAG_G\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '?' '1' ':' 'MAG_G'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert coordinates from ICRS (RA, DEC) to FK4 (RA_B, DEC_B) using an explicit epoch B1950.0 (Besselian 1950.0) in the input columns.",
        "response": "stilts tpipe in=data.fits cmd='addcol BEPOCH 1950.0' cmd='addskycoords -epoch BEPOCH icrs fk4 RA DEC RA_B DEC_B' out=fk4_coords.fits",
        "chat.jar": "failed",
        "error": "Error: For input string: \"BEPOCH\"\n\nCommand was: addskycoords -epoch BEPOCH icrs fk4 RA DEC RA_B DEC_B\n\nUsage: addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                    <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n    (For input string: \"BEPOCH\")\n"
    },
    {
        "prompt": "Group by both 'ID' and 'DATE', and combine the 'FLUX' values into an array column named 'FLUX_ARRAY' for each group.",
        "response": "stilts tpipe in=series.fits cmd='group ID DATE FLUX;array;FLUX_ARRAY' out=time_series_arrays.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Keep only the first 50 rows, then export the table to a Parquet file.",
        "response": "stilts tpipe in=data.fits cmd='head 50' ofmt=parquet out=head50.parquet",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Generate a million synthetic sky sources, and select only a random 0.01% subset for analysis.",
        "response": "stilts tpipe in=:skysim:1000000 cmd='random 0.0001' out=tiny_sim_sample.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.0001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.0001\n\nUsage: random\n    (Unused arguments: '0.0001'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Replace a column 'X_OLD' with the result of 'X_OLD + 10.0' and set the column unit to 'parsec'.",
        "response": "stilts tpipe in=coords.fits cmd='replacecol -units parsec X_OLD X_OLD + 10.0' out=shifted_coords.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' '10.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol -units parsec X_OLD X_OLD + 10.0\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '+' '10.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert a large integer column 'SOURCE_ID' to a string, padded with leading zeros up to 19 digits.",
        "response": "stilts tpipe in=cat.fits cmd='addcol ID_STR padWithZeros(SOURCE_ID, 19)' out=padded_ids.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '19)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol ID_STR padWithZeros(SOURCE_ID, 19)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '19)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Collapse four magnitude columns (M1, M2, M3, M4) into a single 4-element array column named 'M_ARRAY' and remove the originals.",
        "response": "stilts tpipe in=phot.fits cmd='collapsecols M_ARRAY M1 4' out=phot_collapsed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, convert the string column 'DATE_TIME' (ISO 8601) to Unix seconds, and explicitly set the output column type to 64-bit integer.",
        "response": "stilts tpipe in=log.csv ifmt=csv cmd='addcol -type long UNIX_TIME isoToUnixSec(DATE_TIME)' out=unix_time.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'UNIX_TIME' 'isoToUnixSec(DATE_TIME)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type long UNIX_TIME isoToUnixSec(DATE_TIME)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'UNIX_TIME' 'isoToUnixSec(DATE_TIME)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Apply a sequence of filters: ensure random access by caching, select rows where 'FLAG' is true, and shuffle the result.",
        "response": "stilts tpipe in=data.fits cmd=cache cmd='select FLAG' cmd=shuffle out=cached_filtered_shuffled.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a column 'MAG_ABS' using the distance modulus formula with parallax in mas: 5 * log10(100 / PLX) - 5.",
        "response": "stilts tpipe in=gaia_plx.fits cmd='addcol MAG_ABS 5 * log10(100.0 / PARALLAX) - 5' out=abs_mag_calc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' 'log10(100.0' '/' 'PARALLAX)' '-' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_ABS 5 * log10(100.0 / PARALLAX) - 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'log10(100.0' '/' 'PARALLAX)' '-' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group the table by the 'CLUSTER_ID' column and concatenate all 'MEMBER_NAME' strings into a single column joined by a pipe delimiter.",
        "response": "stilts tpipe in=members.fits cmd='group CLUSTER_ID MEMBER_NAME;array;NAMES' cmd='addcol MEMBER_LIST join(NAMES, \"|\")' out=cluster_list.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Extract only rows 1000 to 1999 (inclusive, 1-based index) and output the result in Feather format.",
        "response": "stilts tpipe in=large_file.fits cmd='rowrange 1000 +1000' ofmt=feather out=mid_slice.feather",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Find all rows where the total flux (F_G + F_R + F_I) is greater than 1.0, and calculate the checksum of the resulting table.",
        "response": "stilts tpipe in=phot.fits cmd='select F_G + F_R + F_I > 1.0' omode=checksum",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' 'F_R' '+' 'F_I' '>' '1.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select F_G + F_R + F_I > 1.0\n\nUsage: select <expr>\n    (Unused arguments: '+' 'F_R' '+' 'F_I' '>' '1.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the conditional operator to set 'IS_QSO' to true if 'TYPE' equals 'QSO', and false otherwise.",
        "response": "stilts tpipe in=data.fits cmd='addcol IS_QSO equals(TYPE, \"QSO\")' out=qso_flagged.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'QSO' ')'\n\nCommand was: addcol IS_QSO equals(TYPE, \"QSO\")\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'QSO' ')')\n"
    },
    {
        "prompt": "Remove all columns except those with UCDs starting with 'pos.eq.' and 'phot.mag'.",
        "response": "stilts tpipe in=data.fits cmd='keepcols ucd$pos_eq_* ucd$phot_mag_*' out=ucd_subset.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ucd$phot_mag_*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ucd$pos_eq_* ucd$phot_mag_*\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$phot_mag_*'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Split a string column 'PAIRS' based on a semicolon delimiter, and store the resulting array.",
        "response": "stilts tpipe in=list.fits cmd='addcol PAIR_ARRAY split(PAIRS, \";\")' out=array_from_split.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ';' ')'\n\nCommand was: addcol PAIR_ARRAY split(PAIRS, \";\")\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: ';' ')')\n"
    },
    {
        "prompt": "Transpose the table, but do not use an input column to name the output columns.",
        "response": "stilts tpipe in=long_table.fits cmd='transpose' out=transposed_noname.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove duplicate rows based only on the 'RA' column, assuming the table is already sorted by RA.",
        "response": "stilts tpipe in=duplicates.fits cmd='uniq RA' out=ra_unique.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Add a new column 'LOG_ABS_VAL' that calculates log10(abs(VALUE)) for a potentially negative value column 'VALUE'.",
        "response": "stilts tpipe in=data.fits cmd='addcol LOG_ABS_VAL log10(abs(VALUE))' out=log_abs.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Generate an HTM pixel index at level 20 for sources with coordinates RA and DEC.",
        "response": "stilts tpipe in=coords.fits cmd='addcol HTM20 htmIndex(20, RA, DEC)' out=htm_indexed.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'RA,' 'DEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol HTM20 htmIndex(20, RA, DEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'RA,' 'DEC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read an external VOTable from a URL, convert the flux from Jy to AB magnitude in a new column, and output the table metadata only.",
        "response": "stilts tpipe in=http://example.com/flux.vot cmd='addcol MAG_AB janskyToAb(FLUX_JY)' omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter rows to include only those where both magnitude 'MAG_A' and 'MAG_B' are non-null.",
        "response": "stilts tpipe in=phot.fits cmd='select !NULL_MAG_A && !NULL_MAG_B' out=phot_complete.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '&&' '!NULL_MAG_B'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select !NULL_MAG_A && !NULL_MAG_B\n\nUsage: select <expr>\n    (Unused arguments: '&&' '!NULL_MAG_B'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Group the table by 'FIELD_ID' and, for each group, calculate the median 'TEFF' and the 95th percentile of 'LOGG'.",
        "response": "stilts tpipe in=stars.fits cmd='group FIELD_ID TEFF;median;MED_TEFF LOGG;Q.95;Q95_LOGG' out=field_stats.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: median\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Convert a column of degrees, minutes, and seconds (DEG, MIN, SEC) into a single decimal degree column, replacing the original columns.",
        "response": "stilts tpipe in=dms.fits cmd='replacecol DEG dmsToDegrees(DEG, MIN, SEC)' cmd='delcols MIN SEC' out=decimal_dms.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'MIN,' 'SEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol DEG dmsToDegrees(DEG, MIN, SEC)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: 'MIN,' 'SEC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the `head` filter to select the first 100 rows, then apply the `tail` filter to keep the last 10 rows of that selection (rows 91-100).",
        "response": "stilts tpipe in=data.fits cmd='head 100' cmd='tail 10' out=rows_91_100.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, convert the integer column 'AGE' to a string, and pad it with leading zeros to 4 characters.",
        "response": "stilts tpipe in=objects.fits cmd='replacecol AGE padWithZeros(AGE, 4)' out=padded_age.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol AGE padWithZeros(AGE, 4)\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '4)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Apply an assertion check that the maximum value of 'FLUX' in the filtered table is less than 1e-10, discarding the output.",
        "response": "stilts tpipe in=high_flux.fits cmd='select FLUX>1e-10' cmd='assert $nrow==0 \"Flux limit exceeded\"' omode=discard",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by 'DATE' and, for each date, collect all non-null 'ID' strings into an array, separated by a semicolon.",
        "response": "stilts tpipe in=log.fits cmd='group DATE ID;array;IDS' cmd='replacecol IDS join(IDS, \";\")' out=date_id_join.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "In a table of astrometric measurements, propagate the RA and DEC to a new epoch, setting the epoch difference to 5.0 years.",
        "response": "stilts tpipe in=astrom.fits cmd='addcol RA_NEW epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))' cmd='addcol DEC_NEW epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))[6]' out=propagated_pos.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol RA_NEW epochProp(5.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a table containing an array column 'FLUX_ARRAY' and calculate the array's sum and mean into two new scalar columns.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol SUM_FLUX sum(FLUX_ARRAY)' cmd='addcol MEAN_FLUX mean(FLUX_ARRAY)' out=spectral_moments.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read input from a named pipe in CSV format, and output the total row count.",
        "response": "stilts tpipe in=\"< pipe.csv\" ifmt=csv omode=count",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Sort the table by the logical expression 'MAG_G < 15' (brighter stars first), then output the entire table, displaying all its metadata.",
        "response": "stilts tpipe in=stars.fits cmd='sort MAG_G < 15' omode=meta",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sort MAG_G < 15\n\nUsage: sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n    (Unused arguments: '<' '15'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a table, convert a column 'TEMP_K' from Kelvin to Celsius, replacing the column and setting the unit to 'degC'.",
        "response": "stilts tpipe in=phys.fits cmd='replacecol -units degC TEMP_K TEMP_K - 273.15' out=temp_celsius.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' '273.15'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol -units degC TEMP_K TEMP_K - 273.15\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' '273.15'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Select only the columns with names 'ID' and those that are Boolean type (ucd$meta.code.qual).",
        "response": "stilts tpipe in=data.fits cmd='keepcols ID ucd$meta_code_qual_*' out=id_and_flags.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'ucd$meta_code_qual_*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: keepcols ID ucd$meta_code_qual_*\n\nUsage: keepcols <colid-list>\n    (Unused arguments: 'ucd$meta_code_qual_*'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the distance modulus (`DM`) from the luminosity distance (`DL_Mpc`) using a cosmology function, assuming `DM = 5 * log10(DL_Mpc) + 25`.",
        "response": "stilts tpipe in=cosmo.fits cmd='addcol DM distanceToModulus(MpcToPc(DL_Mpc))' out=dist_modulus.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Remove columns by UCD: remove all columns related to 'error' (ucd$stat.error).",
        "response": "stilts tpipe in=data.fits cmd='delcols ucd$stat_error_*' out=no_errors.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Find rows where the total flux (sum of 'F1', 'F2', 'F3') is negative and replace the individual flux values with null for those rows.",
        "response": "stilts tpipe in=fluxes.fits cmd='addcol IS_NEGATIVE (F1+F2+F3 < 0)' cmd='replaceval IS_NEGATIVE ? NULL : F1 F1' cmd='replaceval IS_NEGATIVE ? NULL : F2 F2' cmd='replaceval IS_NEGATIVE ? NULL : F3 F3' cmd='delcols IS_NEGATIVE' out=negative_flux_null.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '0)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol IS_NEGATIVE (F1+F2+F3 < 0)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '<' '0)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the `group` filter to identify groups with fewer than 5 members and output only those rows, keeping original columns.",
        "response": "stilts tpipe in=data.fits cmd='tgroup 1;count;COUNT' cmd='addcol COUNT COUNT' cmd='delcols COUNT' cmd='select COUNT < 5' out=small_groups.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: tgroup\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Read a table, convert the string column 'ERROR_STR' to a double array using `parseDoubles`, then calculate the mean error for each array.",
        "response": "stilts tpipe in=error_log.fits cmd='addcol ERROR_ARRAY parseDoubles(ERROR_STR)' cmd='addcol MEAN_ERROR mean(ERROR_ARRAY)' out=mean_errors.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Generate a table where the single column is the square root of the row index (starting from 1) for 100 rows, forcing float type.",
        "response": "stilts tpipe in=:loop:1,101,1 forcefloat=true cmd='replacecol i sqrt(i)' out=sqrt_index.fits",
        "chat.jar": "failed",
        "error": "\nUnused arguments: forcefloat=true\n\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n"
    },
    {
        "prompt": "Sort the table by RA in ascending order, ensure the output table name is 'Sorted Catalog', and output the metadata only.",
        "response": "stilts tpipe in=cat.fits cmd='sort RA' cmd='tablename \"Sorted Catalog\"' omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the expression language to test if the string column 'STATUS' contains either 'Error' or 'Failure' (case-insensitive) using regular expressions.",
        "response": "stilts tpipe in=log.fits cmd='select matches(STATUS, \".*(error|failure).*\", \"i\" )' out=status_match.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '.*(error|failure).*' ',' 'i' ')'\n\nCommand was: select matches(STATUS, \".*(error|failure).*\", \"i\" )\n\nUsage: select <expr>\n    (Unused arguments: '.*(error|failure).*' ',' 'i' ')')\n"
    },
    {
        "prompt": "Extract rows 500 to the end of a long file, and then apply a random permutation to these rows.",
        "response": "stilts tpipe in=long_list.fits cmd='rowrange 500 -' cmd=shuffle out=tail_shuffled.fits",
        "chat.jar": "failed",
        "error": "Error: Arg \"iStr\" not <int> or +<int>\n\nCommand was: rowrange 500 -\n\nUsage: rowrange <first> <last>|+<count>\n    (Arg \"iStr\" not <int> or +<int>)\n"
    },
    {
        "prompt": "Replace null values in magnitude columns named 'MAG_*' with the numerical value 99.0.",
        "response": "stilts tpipe in=phot.fits cmd='replaceval NULL 99.0 MAG_*' out=mag_imputed.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert coordinates from Equatorial (RA, DEC) to Supergalactic (SGL, SGB) and output the first 10 rows to standard output.",
        "response": "stilts tpipe in=gals.fits cmd='addskycoords icrs supergalactic RA DEC SGL SGB' cmd='head 10' ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, and perform a horizontal reflection of the coordinates: `RA_NEW = 360 - RA`.",
        "response": "stilts tpipe in=coords.fits cmd='replacecol RA 360.0 - RA' out=reflected_ra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' 'RA'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: replacecol RA 360.0 - RA\n\nUsage: replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n                  [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n                  <col-id> <expr>\n    (Unused arguments: '-' 'RA'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert a column of fractional years (`FRAC_YEAR`) to MJD.",
        "response": "stilts tpipe in=log.fits cmd='replacecol FRAC_YEAR decYearToMjd(FRAC_YEAR)' out=mjd_from_frac.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Find all unique values in the 'SPECTRUM_ID' column and output the resulting table (containing only one column of unique IDs).",
        "response": "stilts tpipe in=spectra.fits cmd='keepcols SPECTRUM_ID' cmd='sort SPECTRUM_ID' cmd='uniq SPECTRUM_ID' out=unique_spectra.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, use `colmeta` to change the unit of 'FLUX' from Jy to 'mJy', and change the unit of 'TIME' to 's'.",
        "response": "stilts tpipe in=data.fits cmd='colmeta -units mJy FLUX' cmd='colmeta -units s TIME' out=units_adjusted.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate a custom proper motion magnitude column (PM_TOTAL) using `hypot(PMRA, PMDEC)` and explicitly assign it a UCD.",
        "response": "stilts tpipe in=gaia_dr3.fits cmd='addcol -ucd veloc.proper PM_TOTAL hypot(PMRA, PMDEC)' out=gaia_pm_ucd.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -ucd veloc.proper PM_TOTAL hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows to keep only those where the celestial separation between the two positions (RA1, DEC1) and (RA2, DEC2) is exactly 0.0 arcseconds.",
        "response": "stilts tpipe in=pairs.fits cmd='select skyDistanceDegrees(RA1, DEC1, RA2, DEC2) * 3600.0 == 0.0' out=exact_pos_pairs.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'DEC1,' 'RA2,' 'DEC2)' '*' '3600.0' '==' '0.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select skyDistanceDegrees(RA1, DEC1, RA2, DEC2) * 3600.0 == 0.0\n\nUsage: select <expr>\n    (Unused arguments: 'DEC1,' 'RA2,' 'DEC2)' '*' '3600.0' '==' '0.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Set a new table parameter 'PROCESSING_DATE' to the current MJD.",
        "response": "stilts tpipe in=data.fits cmd='setparam PROCESSING_DATE mjd()' out=data_with_mjd_param.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert a column of integer status flags into an array of booleans representing the bits set in the flag.",
        "response": "stilts tpipe in=flags.fits cmd='addcol BIT_ARRAY bitvector(STATUS_FLAG)' out=bit_arrays.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by the two columns 'COLOR_ID' and 'FIELD_ID', then calculate the geometric mean of 'MASS' in each group.",
        "response": "stilts tpipe in=data.fits cmd='group COLOR_ID FIELD_ID MASS;array;MASSES' cmd='addcol GEOM_MEAN exp(mean(log(MASSES)))' out=geometric_mean.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Read a table, delete columns by index starting from $5 up to the end of the table.",
        "response": "stilts tpipe in=wide_cat.fits cmd='delcols 5-' out=narrow_cat.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Ensure random access to the table data using disk storage cache, and save the result as a compressed FITS file.",
        "response": "stilts tpipe in=stream.fits cmd=cache storage=disk compress=true out=cached_disk.fits.gz",
        "chat.jar": "failed",
        "error": "Error: Can't guess output format for cached_disk.fits.gz\n    (No handler specified for writing table.\nKnown formats: jdbc, fits, colfits, votable, fits-healpix, ECSV, parquet, text, ascii, CSV, IPAC, HTML, LaTeX, TST, feather, mirage)\nUsage: tpipe ifmt=<in-format> istream=true|false cmd=<cmds>\n             omode=out|meta|stats|count|checksum|cgi|discard|topcat|samp|plastic|tosql|gui\n             out=<out-table> ofmt=<out-format>\n             [in=]<table>\n\n"
    },
    {
        "prompt": "Remove rows that fall outside the MOC footprint defined by the file 'footprint.fits'.",
        "response": "stilts tpipe in=data.fits cmd='select inMoc(\"footprint.fits\", RA, DEC)' out=data_in_moc.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: ',' 'RA,' 'DEC)'\n\nCommand was: select inMoc(\"footprint.fits\", RA, DEC)\n\nUsage: select <expr>\n    (Unused arguments: ',' 'RA,' 'DEC)')\n"
    },
    {
        "prompt": "Simulate 500 rows, generate a random Gaussian value for each, and output the first 10 rows in IPAC format.",
        "response": "stilts tpipe in=:loop:500 cmd='addcol GAUSS randomGaussian($0)' cmd='head 10' ofmt=ipac out=gaussian_sample.tbl",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group by the string column 'OBSERVATORY', calculate the array of all 'EXPTIME' values in each group, and output the resulting table to a CSV file.",
        "response": "stilts tpipe in=obs_log.fits cmd='group OBSERVATORY EXPTIME;array;EXPTIMES' ofmt=csv out=obs_exptimes.csv",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Read an external ASCII file using a pipe delimiter, assuming the first row is data, not a header.",
        "response": "stilts tpipe in=pipe_data.txt ifmt='ascii(header=false,delimiter=|)' out=pipe_processed.fits",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter ifmt: Unknown format ascii(header=false,delimiter=|)\n    (Handler configuration failed: uk.ac.starlink.util.LoadException: Failed setting \"header=false\" - Options are maxSample=<int>, decoders=<Decoder[]>, notypes=<type>[;<type>...]\n        (Failed setting \"header=false\" - Options are maxSample=<int>, decoders=<Decoder[]>, notypes=<type>[;<type>...]\n            (No method setHeader in uk.ac.starlink.table.formats.AsciiTableBuilder)))\nUsage: ifmt=<in-format>\n\n"
    },
    {
        "prompt": "Replace all numerical values 99.0 with null in the entire table, and then output only the metadata.",
        "response": "stilts tpipe in=full_table.fits cmd='replaceval 99.0 NULL *' omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the celestial proper motion vector propagation function (`epochPropErr`) to calculate the astrometric parameters at J1950.0 (epoch difference of -50 years).",
        "response": "stilts tpipe in=gaia_22.fits cmd='addcol J1950_PROP epochPropErr(-50.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV, RAE, DECE, PLXE, PMRAE, PMDECE, RVE, RAC, RAPLX, RAPMRA, RAPMDEC, DECPLX, DECPMRA, DECPMDEC, PLXPMRA, PLXPMDEC, PMRAPMDEC))' out=j1950_astrom.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV,' 'RAE,' 'DECE,' 'PLXE,' 'PMRAE,' 'PMDECE,' 'RVE,' 'RAC,' 'RAPLX,' 'RAPMRA,' 'RAPMDEC,' 'DECPLX,' 'DECPMRA,' 'DECPMDEC,' 'PLXPMRA,' 'PLXPMDEC,' 'PMRAPMDEC))'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol J1950_PROP epochPropErr(-50.0, array(RA, DEC, PARALLAX, PMRA, PMDEC, RV, RAE, DECE, PLXE, PMRAE, PMDECE, RVE, RAC, RAPLX, RAPMRA, RAPMDEC, DECPLX, DECPMRA, DECPMDEC, PLXPMRA, PLXPMDEC, PMRAPMDEC))\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'array(RA,' 'DEC,' 'PARALLAX,' 'PMRA,' 'PMDEC,' 'RV,' 'RAE,' 'DECE,' 'PLXE,' 'PMRAE,' 'PMDECE,' 'RVE,' 'RAC,' 'RAPLX,' 'RAPMRA,' 'RAPMDEC,' 'DECPLX,' 'DECPMRA,' 'DECPMDEC,' 'PLXPMRA,' 'PLXPMDEC,' 'PMRAPMDEC))'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Use the `head` filter to select the first 10 rows, then explicitly set the output format to VOTable with FITS serialization.",
        "response": "stilts tpipe in=data.fits cmd='head 10' ofmt='votable(format=FITS)' out=head10_fits.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, convert the string column 'BIBCODE' to an ADS URL and output the list of URLs to standard output.",
        "response": "stilts tpipe in=pubs.fits cmd='addcol ADS_URL bibcodeUrl(BIBCODE)' cmd='keepcols ADS_URL' ofmt=text out=-",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read an external Parquet file, apply a magnitude correction (MAG_CORR = MAG - 0.1), and save it in FITS format.",
        "response": "stilts tpipe in=input.parquet ifmt=parquet cmd='addcol MAG_CORR MAG - 0.1' out=corrected.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '-' '0.1'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol MAG_CORR MAG - 0.1\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '-' '0.1'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a FITS file, find rows where the 'DATE_OBS' column contains the string '2025', and display the count of matching rows.",
        "response": "stilts tpipe in=obs_log.fits cmd='select contains(DATE_OBS, \"2025\")' omode=count",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '2025' ')'\n\nCommand was: select contains(DATE_OBS, \"2025\")\n\nUsage: select <expr>\n    (Unused arguments: '2025' ')')\n"
    },
    {
        "prompt": "Read a file, use the `group` filter to calculate the 90th percentile (Q.90) of 'FLUX' for every unique value in 'ID_CAT'.",
        "response": "stilts tpipe in=multi_cat.fits cmd='group ID_CAT FLUX;Q.90;FLUX_Q90' out=grouped_q90.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: Q.90\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Read a local CSV table, convert RA/DEC from decimal degrees to radians for new columns, and output the result in ECSV format.",
        "response": "stilts tpipe in=targets.csv ifmt=csv cmd='addcol RA_RAD degreesToRadians(RA)' cmd='addcol DEC_RAD degreesToRadians(DEC)' ofmt=ecsv out=targets_rad.ecsv",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Generate 1000 synthetic stars, calculate the total proper motion vector magnitude (PM_MAG), and find the statistical minimum and maximum of that new column.",
        "response": "stilts tpipe in=:skysim:1000 cmd='addcol PM_MAG hypot(pmra, pmdec)' cmd='keepcols PM_MAG' omode=stats",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_MAG hypot(pmra, pmdec)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'pmdec)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a table, rename the column 'OBS_TIME_STR' to 'OBS_MJD', converting its ISO-8601 string content to MJD numeric values.",
        "response": "stilts tpipe in=log.fits cmd='replacecol OBS_TIME_STR isoToMjd(OBS_TIME_STR)' cmd='colmeta -name OBS_MJD OBS_TIME_STR' out=mjd_log.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter a table to keep rows 10 to 19 (inclusive), and then duplicate each remaining row once.",
        "response": "stilts tpipe in=data.fits cmd='rowrange 10 19' cmd='repeat -row 2' out=duplicated_slice.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, assert that the 'Z' column is always positive, and discard the table data afterward.",
        "response": "stilts tpipe in=quasars.fits cmd='assert Z > 0' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert Z > 0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Load a large FITS catalogue, select a random 0.001% subset of the rows, and output the coordinates to standard output in plain text.",
        "response": "stilts tpipe in=huge_cat.fits cmd='random 0.00001' cmd='keepcols RA DEC' ofmt=text out=-",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '0.00001'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: random 0.00001\n\nUsage: random\n    (Unused arguments: '0.00001'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Find the checksum of a table after removing all columns whose names start with 'ERR' or 'FLAG'.",
        "response": "stilts tpipe in=survey.fits cmd='delcols ERR* FLAG*' omode=checksum",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'FLAG*'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: delcols ERR* FLAG*\n\nUsage: delcols <colid-list>\n    (Unused arguments: 'FLAG*'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter a table to keep rows where magnitude 'MAG' is greater than 25, and use the result for plotting/inspection in the GUI mode.",
        "response": "stilts tpipe in=deep.fits cmd='select MAG <= 25' omode=topcat",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<=' '25'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG <= 25\n\nUsage: select <expr>\n    (Unused arguments: '<=' '25'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Convert a table from FITS to LaTeX format, explicitly setting the output to be a standalone document.",
        "response": "stilts tpipe in=report.fits ofmt='latex(standalone=true)' out=report.tex",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, filter rows to keep those where the value of 'FLAG' is not 0, and shuffle the resulting rows randomly.",
        "response": "stilts tpipe in=data.fits cmd='select FLAG != 0' cmd=shuffle out=filtered_shuffled.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select FLAG != 0\n\nUsage: select <expr>\n    (Unused arguments: '!=' '0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the average and standard deviation of 'TEFF' for a table, but first filter out any rows where 'TEFF' is null.",
        "response": "stilts tpipe in=stars.fits cmd='select !NULL_TEFF' cmd='keepcols TEFF' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Explode an array column 'FLUXES' and locally rename the resulting scalar columns to 'F0', 'F1', 'F2', etc.",
        "response": "stilts tpipe in=spec.fits cmd='explodecols FLUXES' cmd='colmeta -name F0 FLUXES_0; colmeta -name F1 FLUXES_1; colmeta -name F2 FLUXES_2' out=scalar_flux.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, calculate the proper motion vector magnitude (PM_MAG) using hypot, and assert that PM_MAG is never negative.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol PM_MAG hypot(PMRA, PMDEC)' cmd='assert PM_MAG >= 0' out=pm_asserted.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol PM_MAG hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read an ASCII table (space-separated, no header) from standard input, and output the first 5 rows to standard output.",
        "response": "stilts tpipe in=- ifmt='ascii(header=false)' cmd='head 5' out=-",
        "chat.jar": "failed",
        "error": "Error: Bad value for parameter ifmt: Unknown format ascii(header=false)\n    (Handler configuration failed: uk.ac.starlink.util.LoadException: Failed setting \"header=false\" - Options are maxSample=<int>, decoders=<Decoder[]>, notypes=<type>[;<type>...]\n        (Failed setting \"header=false\" - Options are maxSample=<int>, decoders=<Decoder[]>, notypes=<type>[;<type>...]\n            (No method setHeader in uk.ac.starlink.table.formats.AsciiTableBuilder)))\nUsage: ifmt=<in-format>\n\n"
    },
    {
        "prompt": "Find the row index of the row with the minimum value of the 'ENERGY' column, and return only the calculated statistics (MinPos, indicating row index).",
        "response": "stilts tpipe in=events.fits cmd='keepcols ENERGY' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the `constcol` filter to identify constant columns and promote their values to table parameters.",
        "response": "stilts tpipe in=const_data.fits cmd=constcol out=data_with_params.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a VOTable, replace all instances of the text 'quasar' in the 'TYPE' column with 'QSO'.",
        "response": "stilts tpipe in=objects.vot cmd='replaceval \"quasar\" \"QSO\" TYPE' out=qso_renamed.vot",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Generate 50 rows using the loop scheme, add a column `LOG_INDEX` using `log10(i+1)`, and save the result in Feather format.",
        "response": "stilts tpipe in=:loop:50 cmd='addcol LOG_INDEX log10(i + 1)' ofmt=feather out=indexed_log.feather",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol LOG_INDEX log10(i + 1)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '+' '1)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Sort a large catalog by 'FLUX' and keep only the top 50 brightest sources efficiently using `sorthead`.",
        "response": "stilts tpipe in=deep.fits cmd='sorthead 50 -down FLUX' out=top_50_brightest.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, calculate the proper motion vector magnitude (PM_MAG) using hypot, and explicitly set the output data type for the new column to 32-bit float.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol -type float PM_TOTAL hypot(PMRA, PMDEC)' out=pm_float.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PM_TOTAL' 'hypot(PMRA,' 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type float PM_TOTAL hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PM_TOTAL' 'hypot(PMRA,' 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Filter rows where 'MAG_G' is between 18.0 and 20.0, and calculate the checksum of the resulting table.",
        "response": "stilts tpipe in=survey.fits cmd='select MAG_G BETWEEN 18.0 AND 20.0' omode=checksum",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'BETWEEN' '18.0' 'AND' '20.0'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select MAG_G BETWEEN 18.0 AND 20.0\n\nUsage: select <expr>\n    (Unused arguments: 'BETWEEN' '18.0' 'AND' '20.0'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a compressed FITS file from a remote URL, remove the 'MAG_ERROR' column, and save it locally.",
        "response": "stilts tpipe in=http://example.com/cat.fits.gz cmd='delcols MAG_ERROR' out=local_cat.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Group the table by 'FIELD_ID' and calculate the mean and standard deviation of 'SNR' for each field.",
        "response": "stilts tpipe in=obs.fits cmd='group FIELD_ID SNR;mean;MEAN_SNR SNR;stdev;STDEV_SNR' out=field_snr_stats.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: mean\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    },
    {
        "prompt": "Use the `badval` filter to replace the value 99.0 with null in all columns starting with 'MAG_'.",
        "response": "stilts tpipe in=phot.fits cmd='badval 99.0 MAG_*' out=phot_null_cleaned.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, keep only columns with UCD starting with 'phot.', and output the result to TOPCAT.",
        "response": "stilts tpipe in=full_cat.fits cmd='keepcols ucd$phot_*' omode=topcat",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, calculate the column 'FLUX_JY' from 'MAG_AB' using `abToJansky`, and output the table metadata only.",
        "response": "stilts tpipe in=phot.fits cmd='addcol FLUX_JY abToJansky(MAG_AB)' omode=meta",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use a filter chain to remove columns, sort the result, and restrict output to the first 5 rows.",
        "response": "stilts tpipe in=data.fits cmd='delcols ERRORS; sort ID; head 5' out=processed_subset.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, rename the original table name to 'InitialData', and explicitly set a table parameter 'VERSION' to 3.2.",
        "response": "stilts tpipe in=raw.fits cmd='tablename InitialData' cmd='setparam VERSION 3.2' out=versioned_data.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter a table to keep rows where 'V_MAG' < 10, then duplicate the entire resulting selection three times using `repeat`.",
        "response": "stilts tpipe in=bright.fits cmd='select V_MAG < 10' cmd='repeat 3' out=tripled_bright.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: select V_MAG < 10\n\nUsage: select <expr>\n    (Unused arguments: '<' '10'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a table, set the column unit of 'MASS' to 'solMass' and the UCD to 'phys.mass'.",
        "response": "stilts tpipe in=gals.fits cmd='colmeta -units solMass -ucd phys.mass MASS' out=mass_ucd.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Generate a table of 100 rows, add a random number column 'WEIGHTS', and output the total row count.",
        "response": "stilts tpipe in=:loop:100 cmd='addcol WEIGHTS random($0)' omode=count",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table and check that the row index ($0) is always less than the total number of rows ($nrow).",
        "response": "stilts tpipe in=data.fits cmd='assert $0 <= $nrow' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '$nrow'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: assert $0 <= $nrow\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '$nrow'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a table, convert the string array column 'VERTICES_STR' into a numeric array column 'VERTICES_NUM' using `parseDoubles`.",
        "response": "stilts tpipe in=polygons.fits cmd='addcol VERTICES_NUM parseDoubles(VERTICES_STR)' out=numeric_vertices.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use the `every` filter to select every 1000th row from a large table (starting with the first row).",
        "response": "stilts tpipe in=huge_data.fits cmd='every 1000' out=every_thousandth.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Calculate the distance modulus (DIST_MOD) from parallax (PLX) in mas, assuming a simple inversion, and apply a select filter to keep only objects with DM > 10.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol DIST_MOD 5 * log10(100.0 / PLX) - 5' cmd='select DIST_MOD > 10' out=dm_far.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '*' 'log10(100.0' '/' 'PLX)' '-' '5'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol DIST_MOD 5 * log10(100.0 / PLX) - 5\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: '*' 'log10(100.0' '/' 'PLX)' '-' '5'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a table, keep only the rows that have identical values in the 'SOURCE_ID' column and the 'RA' column.",
        "response": "stilts tpipe in=duplicates.fits cmd='uniq SOURCE_ID RA' out=unique_id_ra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'RA'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: uniq SOURCE_ID RA\n\nUsage: uniq [-count] [<colid-list>]\n    (Unused arguments: 'RA'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read a table, calculate the total proper motion using `hypot(PMRA, PMDEC)`, and explicitly set the output data type for the new column to 32-bit float.",
        "response": "stilts tpipe in=gaia.fits cmd='addcol -type float PM_TOTAL hypot(PMRA, PMDEC)' out=pm_float.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PM_TOTAL' 'hypot(PMRA,' 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: addcol -type float PM_TOTAL hypot(PMRA, PMDEC)\n\nUsage: addcol [-after <col-id> | -before <col-id>]\n              [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n              [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n              <col-name> <expr>\n    (Unused arguments: 'PM_TOTAL' 'hypot(PMRA,' 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Read an external file and apply an assertion that the 'SNR' column is greater than 10 for all rows, using a custom error message that includes the row index.",
        "response": "stilts tpipe in=signals.fits cmd='assert SNR > 10 \"Low SNR at row \" + $0' omode=discard",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '10' 'Low SNR at row ' '+' '$0'\n\nCommand was: assert SNR > 10 \"Low SNR at row \" + $0\n\nUsage: assert <test-expr> [<msg-expr>]\n    (Unused arguments: '10' 'Low SNR at row ' '+' '$0')\n"
    },
    {
        "prompt": "Read a table, calculate the 1st and 3rd quartiles (Q1, Q3) of 'MAG' for the whole dataset, and output the result using `omode=stats`.",
        "response": "stilts tpipe in=phot.fits cmd='keepcols MAG' omode=stats",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Filter a catalog to keep rows where the string column 'SPECTRUM_ID' contains a numerical index greater than 50, using regex matching.",
        "response": "stilts tpipe in=spectra.fits cmd='select matches(SPECTRUM_ID, \".*5[4-12]\\|.*[9-12][4-12]\\|.*[4-12][4-12]{2,}.*\")' out=high_index_spectra.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: '.*5[4-12]|.*[9-12][4-12]|.*[4-12][4-12]{2,}.*' ')'\n\nCommand was: select matches(SPECTRUM_ID, \".*5[4-12]\\|.*[9-12][4-12]\\|.*[4-12][4-12]{2,}.*\")\n\nUsage: select <expr>\n    (Unused arguments: '.*5[4-12]|.*[9-12][4-12]|.*[4-12][4-12]{2,}.*' ')')\n"
    },
    {
        "prompt": "Read a table, sort it by 'TIME' descending, and output the calculated checksum of the sorted data.",
        "response": "stilts tpipe in=series.fits cmd='sort -down TIME' omode=checksum",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table and convert the 'UCD' string column to uppercase using `toUpperCase` for uniformity.",
        "response": "stilts tpipe in=meta.fits cmd='replacecol UCD toUpperCase(UCD)' out=ucd_upper.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, calculate the total length of the 'COMMENT_ARRAY' array column, and ensure the resulting table is random-access by caching.",
        "response": "stilts tpipe in=data.fits cmd='addcol COMMENT_LENGTH size(COMMENT_ARRAY)' cmd=cache out=cached_lengths.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Use `sorthead` filter to efficiently find the 10 rows with the smallest proper motion magnitude (`hypot(PMRA, PMDEC)`).",
        "response": "stilts tpipe in=gaia.fits cmd='sorthead 10 hypot(PMRA, PMDEC)' out=lowest_pm.fits",
        "chat.jar": "failed",
        "error": "Error: Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted)\n\nCommand was: sorthead 10 hypot(PMRA, PMDEC)\n\nUsage: sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n    (Unused arguments: 'PMDEC)'\n(Hint: arguments containing spaces must be quoted))\n"
    },
    {
        "prompt": "Calculate the length of the string array column 'BAND_NAMES' into a scalar column 'NBANDS'.",
        "response": "stilts tpipe in=spectra.fits cmd='addcol NBANDS size(BAND_NAMES)' out=band_count.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Convert input ICRS coordinates in radians to degrees, replacing the existing columns.",
        "response": "stilts tpipe in=rad_coords.fits cmd='replacecol RA radiansToDegrees(RA); replacecol DEC radiansToDegrees(DEC)' out=deg_coords.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Read a table, use the `group` filter to calculate the geometric mean of the 'FLUX' column by grouping by 'FILTER'.",
        "response": "stilts tpipe in=phot.fits cmd='group FILTER FLUX;array;FLUX_ARR' cmd='addcol GEOM_MEAN exp(mean(ln(FLUX_ARR)))' out=geom_mean_flux.fits",
        "chat.jar": "failed",
        "error": "Error: Unknown processing command: array\n\nAvailable filters:\n   addcol [-after <col-id> | -before <col-id>]\n          [-units <units>] [-ucd <ucd>] [-utype <utype>] [-xtype <xtype>]\n          [-desc <descrip>] [-shape <n>[,<n>...][,*]] [-elsize <n>]\n          <col-name> <expr>\n   addpixsample [-radius <expr-rad>] [-systems <in-sys> <pix-sys>]\n                <expr-lon> <expr-lat> <healpix-file>\n   addresolve <col-id-objname> <col-name-ra> <col-name-dec>\n   addskycoords [-epoch <expr>] [-inunit deg|rad|sex] [-outunit deg|rad|sex]\n                <insys> <outsys> <col-id1> <col-id2> <col-name1> <col-name2>\n   assert <test-expr> [<msg-expr>]\n   badval <bad-val> <colid-list>\n   cache\n   check\n   clearparams <pname> ...\n   collapsecols [-[no]keepscalars] <array-colname> <col-id0> <ncol>\n   colmeta [-name <name>] [-units <units>] [-ucd <ucd>]\n           [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n           [-shape <n>[,<n>...][,*]] [-elsize <n>]\n           <colid-list>\n   constcol [-noparam] [-acceptnull] [-[no]parallel] [<colid-list>]\n   delcols <colid-list>\n   every [-exact|-approx] <step>\n   explodecols <colid-list>\n   explodeall [-ifndim <ndim>] [-ifshape <dims>]\n   fixcolnames \n   group [-[no]parallel] <key> [<key> ...] [<aggcol> ...]\n   head <nrows>\n   healpixmeta [-level <n>] [-implicit|-column <col-id>] [-csys C|G|E] [-nested|-ring]\n   keepcols <colid-list>\n   meta [<item> ...]\n   progress\n   random\n   randomview\n   repeat [-row|-table] <count>\n   replacecol [-name <name>] [-units <units>] [-ucd <ucd>]\n              [-utype <utype>] [-xtype <xtype>] [-desc <descrip>]\n              <col-id> <expr>\n   replaceval <old-val> <new-val> <colid-list>\n   rowrange <first> <last>|+<count>\n   select <expr>\n   seqview\n   setparam [-type byte|short|int|long|float|double|boolean|string]\n            [-desc <descrip>] [-unit <units>] [-ucd <ucd>]\n            [-utype <utype>] [-xtype <xtype>]\n            <pname> <pexpr>\n   shuffle [-seed <int>]\n   sort [-down] [-nullsfirst] [-[no]parallel] <key-list>\n   sorthead [-tail] [-down] [-nullsfirst] <nrows> <key-list>\n   stats [-[no]parallel] [-qapprox|-qexact] [<item> ...]\n   tablename <name>\n   tail <nrows>\n   transpose [-namecol <col-id>]\n   uniq [-count] [<colid-list>]\n\n"
    }
]