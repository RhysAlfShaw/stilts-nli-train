[
    {
        "prompt": "My working directory looks like this:\n- survey_data.fits\n- output/\nI want to filter the 'survey_data.fits' file to only include sources with a magnitude less than 20 and save the result as 'bright_sources.fits' inside the 'output' directory.",
        "response": "stilts tpipe in=survey_data.fits out=output/bright_sources.fits cmd='select \"mag < 20\"'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Here's my file structure:\n/home/user/astro/\n  - gaia_cat.fits\n  - 2mass_cat.fits\n  - results/\nI need to cross-match 'gaia_cat.fits' and '2mass_cat.fits' using a 1.5 arcsecond sky match. The output file should be named 'gai_2mass_match.fits' and placed in the 'results' folder.",
        "response": "stilts tmatch2 in1=/home/user/astro/gaia_cat.fits in2=/home/user/astro/2mass_cat.fits out=/home/user/astro/results/gai_2mass_match.fits matcher=sky params=1.5 values1='ra dec' values2='ra dec'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have the following files in my current folder:\n- tile_1.fits\n- tile_2.fits\n- tile_3.fits\n- tile_4.fits\nHow can I combine all these tile files into a single catalogue named 'full_survey.fits'?",
        "response": "stilts tcat in='tile_1.fits tile_2.fits tile_3.fits tile_4.fits' out=full_survey.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "My project directory is '/data/project_x/'. Inside, I have:\n- raw_data.csv\n- clean_data.fits\nI need to process 'raw_data.csv'. First, rename the column 'sourceID' to 'ID', then add a new column named 'const' with a value of 1, and save the result as 'processed.fits' in the same directory.",
        "response": "stilts tpipe in=/data/project_x/raw_data.csv out=/data/project_x/processed.fits cmd='colmeta -name sourceID ID; addcol const \\\"1\\\"'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have three catalogues:\n- cat_a.fits\n- cat_b.fits\n- cat_c.fits\nI want to perform a 3-way match between them on their sky coordinates ('RA', 'DEC') with a tolerance of 0.8 arcseconds. The output should be 'matched_abc.fits'.",
        "response": "stilts tmatchn nin=3 in1=cat_a.fits in2=cat_b.fits in3=cat_c.fits out=matched_abc.fits matcher=sky params=0.8 values1='RA DEC' values2='RA DEC' values3='RA DEC'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "My files are organized as follows:\n- data/\n  - observations.fits\n  - bad_pixels.dat\nI want to remove the 'QUALITY' and 'FLAG' columns from 'observations.fits' and save the new table as 'observations_clean.fits' in the same 'data' directory.",
        "response": "stilts tpipe in=data/observations.fits out=data/observations_clean.fits cmd='delcols \"QUALITY FLAG\"'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "In my folder, I have 'catalogue.fits'. I want to sort it by the 'phot_g_mean_mag' column in ascending order and overwrite the original file with the sorted version.",
        "response": "stilts tpipe in=catalogue.fits out=catalogue.fits cmd='sort phot_g_mean_mag'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "My working directory looks like this:\n- survey_data.fits\n- output/\nI want to filter the 'survey_data.fits' file to only include sources with a magnitude less than 20 and save the result as 'bright_sources.fits' inside the 'output' directory.",
        "response": "stilts tpipe in=survey_data.fits out=output/bright_sources.fits cmd='select \"mag < 20\"'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Here's my file structure:\n/home/user/astro/\n  - gaia_cat.fits\n  - 2mass_cat.fits\n  - results/\nI need to cross-match 'gaia_cat.fits' and '2mass_cat.fits' using a 1.5 arcsecond sky match. The output file should be named 'gai_2mass_match.fits' and placed in the 'results' folder.",
        "response": "stilts tmatch2 in1=/home/user/astro/gaia_cat.fits in2=/home/user/astro/2mass_cat.fits out=/home/user/astro/results/gai_2mass_match.fits matcher=sky params=1.5 values1='ra dec' values2='ra dec'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have the following files in my current folder:\n- tile_1.fits\n- tile_2.fits\n- tile_3.fits\n- tile_4.fits\nHow can I combine all these tile files into a single catalogue named 'full_survey.fits'?",
        "response": "stilts tcat in='tile_1.fits tile_2.fits tile_3.fits tile_4.fits' out=full_survey.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "My project directory is '/data/project_x/'. Inside, I have:\n- raw_data.csv\n- clean_data.fits\nI need to process 'raw_data.csv'. First, rename the column 'sourceID' to 'ID', then add a new column named 'const' with a value of 1, and save the result as 'processed.fits' in the same directory.",
        "response": "stilts tpipe in=/data/project_x/raw_data.csv out=/data/project_x/processed.fits cmd='colmeta -name sourceID ID; addcol const \\\"1\\\"'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have three catalogues:\n- cat_a.fits\n- cat_b.fits\n- cat_c.fits\nI want to perform a 3-way match between them on their sky coordinates ('RA', 'DEC') with a tolerance of 0.8 arcseconds. The output should be 'matched_abc.fits'.",
        "response": "stilts tmatchn nin=3 in1=cat_a.fits in2=cat_b.fits in3=cat_c.fits out=matched_abc.fits matcher=sky params=0.8 values1='RA DEC' values2='RA DEC' values3='RA DEC'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "My files are organized as follows:\n- data/\n  - observations.fits\n  - bad_pixels.dat\nI want to remove the 'QUALITY' and 'FLAG' columns from 'observations.fits' and save the new table as 'observations_clean.fits' in the same 'data' directory.",
        "response": "stilts tpipe in=data/observations.fits out=data/observations_clean.fits cmd='delcols \"QUALITY FLAG\"'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "In my folder, I have 'catalogue.fits'. I want to sort it by the 'phot_g_mean_mag' column in ascending order and overwrite the original file with the sorted version.",
        "response": "stilts tpipe in=catalogue.fits out=catalogue.fits cmd='sort phot_g_mean_mag'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have a directory named 'tiles/' that is full of .fits files. How can I concatenate all of them into a single file named 'mosaic.fits'?",
        "response": "stilts tcat in='tiles/*.fits' out=mosaic.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "My 'data_v1/' directory contains dozens of FITS files. For every .fits file in there, I want to run a tpipe command to add a new column 'VERSION' with the value '1.0' and save the processed files to a new 'data_v2/' directory, keeping the original filenames.",
        "response": "for f in data_v1/*.fits; do stilts tpipe in=$f out=data_v2/$(basename $f) cmd='addcol VERSION \"1.0\"'; done",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: Syntax error: \"do\" unexpected\n"
    },
    {
        "prompt": "I have a master source list called 'master.fits'. I need to match it against every single FITS file in the 'field_data/' directory. For each match, a new file should be created in the 'matches/' directory.",
        "response": "for field_file in field_data/*.fits; do out_file=matches/$(basename $field_file .fits)_match.fits; stilts tmatch2 in1=master.fits in2=$field_file out=$out_file matcher=sky params=2 values1='RA DEC' values2='RA DEC'; done",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: Syntax error: \"do\" unexpected\n"
    },
    {
        "prompt": "My working directory looks like this:\n- survey_data.fits\n- output/\nI want to filter the 'survey_data.fits' file to only include sources with a magnitude less than 20 and save the result as 'bright_sources.fits' inside the 'output' directory.",
        "response": "stilts tpipe in=survey_data.fits out=output/bright_sources.fits cmd='select \"mag < 20\"'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "Here's my file structure:\n/home/user/astro/\n  - gaia_cat.fits\n  - 2mass_cat.fits\n  - results/\nI need to cross-match 'gaia_cat.fits' and '2mass_cat.fits' using a 1.5 arcsecond sky match. The output file should be named 'gai_2mass_match.fits' and placed in the 'results' folder.",
        "response": "stilts tmatch2 in1=/home/user/astro/gaia_cat.fits in2=/home/user/astro/2mass_cat.fits out=/home/user/astro/results/gai_2mass_match.fits matcher=sky params=1.5 values1='ra dec' values2='ra dec'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have the following files in my current folder:\n- tile_1.fits\n- tile_2.fits\n- tile_3.fits\n- tile_4.fits\nHow can I combine all these tile files into a single catalogue named 'full_survey.fits'?",
        "response": "stilts tcat in='tile_1.fits tile_2.fits tile_3.fits tile_4.fits' out=full_survey.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "My project directory is '/data/project_x/'. Inside, I have:\n- raw_data.csv\n- clean_data.fits\nI need to process 'raw_data.csv'. First, rename the column 'sourceID' to 'ID', then add a new column named 'const' with a value of 1, and save the result as 'processed.fits' in the same directory.",
        "response": "stilts tpipe in=/data/project_x/raw_data.csv out=/data/project_x/processed.fits cmd='colmeta -name sourceID ID; addcol const \\\"1\\\"'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have three catalogues:\n- cat_a.fits\n- cat_b.fits\n- cat_c.fits\nI want to perform a 3-way match between them on their sky coordinates ('RA', 'DEC') with a tolerance of 0.8 arcseconds. The output should be 'matched_abc.fits'.",
        "response": "stilts tmatchn nin=3 in1=cat_a.fits in2=cat_b.fits in3=cat_c.fits out=matched_abc.fits matcher=sky params=0.8 values1='RA DEC' values2='RA DEC' values3='RA DEC'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "My files are organized as follows:\n- data/\n  - observations.fits\n  - bad_pixels.dat\nI want to remove the 'QUALITY' and 'FLAG' columns from 'observations.fits' and save the new table as 'observations_clean.fits' in the same 'data' directory.",
        "response": "stilts tpipe in=data/observations.fits out=data/observations_clean.fits cmd='delcols \"QUALITY FLAG\"'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "In my folder, I have 'catalogue.fits'. I want to sort it by the 'phot_g_mean_mag' column in ascending order and overwrite the original file with the sorted version.",
        "response": "stilts tpipe in=catalogue.fits out=catalogue.fits cmd='sort phot_g_mean_mag'",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "I have a directory named 'tiles/' that is full of .fits files. How can I concatenate all of them into a single file named 'mosaic.fits'?",
        "response": "stilts tcat in='tiles/*.fits' out=mosaic.fits",
        "chat.jar": "executed successfully"
    },
    {
        "prompt": "My 'data_v1/' directory contains dozens of FITS files. For every .fits file in there, I want to run a tpipe command to add a new column 'VERSION' with the value '1.0' and save the processed files to a new 'data_v2/' directory, keeping the original filenames.",
        "response": "for f in data_v1/*.fits; do stilts tpipe in=$f out=data_v2/$(basename $f) cmd='addcol VERSION \"1.0\"'; done",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: Syntax error: \"do\" unexpected\n"
    },
    {
        "prompt": "I have a master source list called 'master.fits'. I need to match it against every single FITS file in the 'field_data/' directory. For each match, a new file should be created in the 'matches/' directory.",
        "response": "for field_file in field_data/*.fits; do out_file=matches/$(basename $field_file .fits)_match.fits; stilts tmatch2 in1=master.fits in2=$field_file out=$out_file matcher=sky params=2 values1='RA DEC' values2='RA DEC'; done",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: Syntax error: \"do\" unexpected\n"
    },
    {
        "prompt": "I have a directory 'raw_data/' with many .csv files. How can I convert every .csv file to the FITS format and place them in a parallel directory called 'fits_data/'?",
        "response": "mkdir -p fits_data; for file in raw_data/*.csv; do stilts tcopy in=$file out=fits_data/$(basename $file .csv).fits; done",
        "chat.jar": "failed",
        "error": "\nNo such task: mkdir\n\nUsage:\n   stilts [-help] [-version] [-verbose] [-allowunused] [-prompt] [-bench]\n          [-debug] [-batch] [-memory] [-disk] [-memgui]\n          [-checkversion <vers>] [-stdout <file>] [-stderr <file>]\n          <task-name> <task-args>\n\n   stilts <task-name> help[=<param-name>|*]\n\n   Known tasks:\n      arrayjoin\n      calc\n      cdsskymatch\n      cone\n      coneskymatch\n      datalinklint\n      funcs\n      mocshape\n      parqlint\n      parqlook\n      pixfoot\n      pixsample\n      plot2d\n      plot3d\n      plothist\n      regquery\n      server\n      sqlclient\n      sqlskymatch\n      sqlupdate\n      taplint\n      tapquery\n      tapresume\n      tapskymatch\n      tcat\n      tcatn\n      tcopy\n      tcube\n      tgridmap\n      tgroup\n      tjoin\n      tloop\n      tmatch1\n      tmatch2\n      tmatchn\n      tmulti\n      tmultin\n      tpipe\n      tskymap\n      tskymatch2\n      votcopy\n      votlint\n      xsdvalidate\n      plot2plane\n      plot2sky\n      plot2cube\n      plot2sphere\n      plot2corner\n      plot2time\n\n/bin/sh: 1: tcopy: not found\n"
    },
    {
        "prompt": "My folder structure is:\n- observations/\n  - night1.fits\n  - night2.fits\n  - ...\n- plots/\nFor each FITS file in 'observations/', I want to create a color-magnitude diagram plotting 'g_mag' vs 'g_mag - r_mag' and save it as a PNG in the 'plots/' directory with a corresponding name.",
        "response": "for obs in observations/*.fits; do plot_name=plots/$(basename $obs .fits).png; stilts plot2d in=$obs xdata='g_mag - r_mag' ydata='g_mag' out=$plot_name; done",
        "chat.jar": "failed",
        "error": "/bin/sh: 1: Syntax error: \"do\" unexpected\n"
    },
    {
        "prompt": "There's a directory 'uncalibrated/' full of FITS files. For each file, I need to apply a magnitude correction by adding 0.05 to the 'MAG_INST' column and save the corrected files to a 'calibrated/' directory.",
        "response": "mkdir -p calibrated; for f in uncalibrated/*.fits; do stilts tpipe in=$f out=calibrated/$(basename $f) cmd='replacecol MAG_INST \"MAG_INST + 0.05\"'; done",
        "chat.jar": "failed",
        "error": "\nNo such task: mkdir\n\nUsage:\n   stilts [-help] [-version] [-verbose] [-allowunused] [-prompt] [-bench]\n          [-debug] [-batch] [-memory] [-disk] [-memgui]\n          [-checkversion <vers>] [-stdout <file>] [-stderr <file>]\n          <task-name> <task-args>\n\n   stilts <task-name> help[=<param-name>|*]\n\n   Known tasks:\n      arrayjoin\n      calc\n      cdsskymatch\n      cone\n      coneskymatch\n      datalinklint\n      funcs\n      mocshape\n      parqlint\n      parqlook\n      pixfoot\n      pixsample\n      plot2d\n      plot3d\n      plothist\n      regquery\n      server\n      sqlclient\n      sqlskymatch\n      sqlupdate\n      taplint\n      tapquery\n      tapresume\n      tapskymatch\n      tcat\n      tcatn\n      tcopy\n      tcube\n      tgridmap\n      tgroup\n      tjoin\n      tloop\n      tmatch1\n      tmatch2\n      tmatchn\n      tmulti\n      tmultin\n      tpipe\n      tskymap\n      tskymatch2\n      votcopy\n      votlint\n      xsdvalidate\n      plot2plane\n      plot2sky\n      plot2cube\n      plot2sphere\n      plot2corner\n      plot2time\n\n/bin/sh: 1: tpipe: not found\n"
    }
]